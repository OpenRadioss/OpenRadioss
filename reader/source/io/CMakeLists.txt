# CMake project file for CMake

cmake_minimum_required (VERSION 3.15)
project (io) 
enable_language (CXX)

set (library_name "io_${arch}" )

#set source directory
set (source_directory ${CMAKE_CURRENT_SOURCE_DIR})

#Include the CMake configuration file
include ( CMake_arch/CMake_${arch}.cmake )

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${open_reader_root_dir}/${build_dir}/libopen_reader/${arch}" )
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${open_reader_root_dir}/${build_dir}/libopen_reader/${arch}" )

# Add includes for project
set ( Build_includes_directory ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/includes_${arch} )
file(MAKE_DIRECTORY ${Build_includes_directory} )

include ( ${open_reader_root_dir}/CMake_arch/CMake_includes.cmake )
list (APPEND include_dir_list ${source_directory}/cbuild_${compile}/includes/ )
list(APPEND include_dir_list ${Build_includes_directory} )


#CPP source files
file(GLOB_RECURSE cpp_source_files ${source_directory}/*.cpp  ${source_directory}/*.cxx )


#
# compiler Flags
# --------------
set (CMAKE_Fortran_FLAGS_DEBUG " " )
set (CMAKE_Fortran_FLAGS_RELEASE " " )
set (CMAKE_Fortran_FLAGS " " )

set (CMAKE_C_FLAGS_DEBUG " " )
set (CMAKE_C_FLAGS_RELEASE " " )
set (CMAKE_C_FLAGS " " )

set (CMAKE_CPP_FLAGS_DEBUG " " )
set (CMAKE_CPP_FLAGS_RELEASE " " )
set (CMAKE_CPP_FLAGS " " )

set (CMAKE_CXX_FLAGS_DEBUG " " )
set (CMAKE_CXX_FLAGS_RELEASE " " )
set (CMAKE_CXX_FLAGS " " )


#Windows Porting modify here the Makefiles
set ( cpp_flags "${CXX_FLAGS} ${PRECOM_DEFINITION}" )
set_source_files_properties(${cpp_source_files} PROPERTIES COMPILE_FLAGS "${cpp_flags}")


message ( STATUS "io module: ${libp}${library_name}.${lib}")



#add_library(hm_reader/libs_${arch}/libhm_reader_rd_${arch} STATIC ${cpp_source_files} )
add_library(${library_name} STATIC ${cpp_source_files} ${c_source_files})
target_include_directories(${library_name} PRIVATE ${include_dir_list}  )



