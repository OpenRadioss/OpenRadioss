//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// CONTROL_MPP_DECOMPOSITION_PARTS_DISTRIBUTE - CONTROL_MPP_DECOMPOSITION_PARTS_DISTRIBUTE_LOCAL
//

ATTRIBUTES(COMMON)
{
    KEYWORD_STR                             = VALUE(STRING,    "Solver Keyword");
    
    LOCALOpt                                = VALUE(INT,       "Local");

    ID_1                                    = VALUE(INT,       "SID TYPE");
    ID_2                                    = VALUE(INT,       "SID TYPE");
    ID_3                                    = VALUE(INT,       "SID TYPE");
    ID_4                                    = VALUE(INT,       "SID TYPE");
    ID_5                                    = VALUE(INT,       "SID TYPE");
    ID_6                                    = VALUE(INT,       "SID TYPE");
    ID_7                                    = VALUE(INT,       "SID TYPE");
    ID_8                                    = VALUE(INT,       "SID TYPE");
    ID_9                                    = VALUE(INT,       "SID TYPE");
    ID_10                                   = VALUE(INT,       "SID TYPE");
    ID_11                                   = VALUE(INT,       "SID TYPE");
    ID_12                                   = VALUE(INT,       "SID TYPE");
    ID_13                                   = VALUE(INT,       "SID TYPE");
    ID_14                                   = VALUE(INT,       "SID TYPE");
    ID_15                                   = VALUE(INT,       "SID TYPE");
    ID_16                                   = VALUE(INT,       "SID TYPE");

    ID_PID1                                 = VALUE(COMPONENT, "Part ID to be distributed");
    ID_PID2                                 = VALUE(COMPONENT, "Part ID to be distributed");
    ID_PID3                                 = VALUE(COMPONENT, "Part ID to be distributed");
    ID_PID4                                 = VALUE(COMPONENT, "Part ID to be distributed");
    ID_PID5                                 = VALUE(COMPONENT, "Part ID to be distributed");
    ID_PID6                                 = VALUE(COMPONENT, "Part ID to be distributed");
    ID_PID7                                 = VALUE(COMPONENT, "Part ID to be distributed");
    ID_PID8                                 = VALUE(COMPONENT, "Part ID to be distributed");
    ID_PID9                                 = VALUE(COMPONENT, "Part ID to be distributed");
    ID_PID10                                = VALUE(COMPONENT, "Part ID to be distributed");
    ID_PID11                                = VALUE(COMPONENT, "Part ID to be distributed");
    ID_PID12                                = VALUE(COMPONENT, "Part ID to be distributed");
    ID_PID13                                = VALUE(COMPONENT, "Part ID to be distributed");
    ID_PID14                                = VALUE(COMPONENT, "Part ID to be distributed");
    ID_PID15                                = VALUE(COMPONENT, "Part ID to be distributed");
    ID_PID16                                = VALUE(COMPONENT, "Part ID to be distributed");

    ID_PSID1                                = VALUE(SETS,      "Part Set ID to be distributed") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    ID_PSID2                                = VALUE(SETS,      "Part Set ID to be distributed") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    ID_PSID3                                = VALUE(SETS,      "Part Set ID to be distributed") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    ID_PSID4                                = VALUE(SETS,      "Part Set ID to be distributed") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    ID_PSID5                                = VALUE(SETS,      "Part Set ID to be distributed") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    ID_PSID6                                = VALUE(SETS,      "Part Set ID to be distributed") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    ID_PSID7                                = VALUE(SETS,      "Part Set ID to be distributed") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    ID_PSID8                                = VALUE(SETS,      "Part Set ID to be distributed") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    ID_PSID9                                = VALUE(SETS,      "Part Set ID to be distributed") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    ID_PSID10                               = VALUE(SETS,      "Part Set ID to be distributed") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    ID_PSID11                               = VALUE(SETS,      "Part Set ID to be distributed") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    ID_PSID12                               = VALUE(SETS,      "Part Set ID to be distributed") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    ID_PSID13                               = VALUE(SETS,      "Part Set ID to be distributed") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    ID_PSID14                               = VALUE(SETS,      "Part Set ID to be distributed") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    ID_PSID15                               = VALUE(SETS,      "Part Set ID to be distributed") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    ID_PSID16                               = VALUE(SETS,      "Part Set ID to be distributed") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }

    IO_FLAG                                 = VALUE(INT,       "Import/Export flag");
    DUMMY1                                  = VALUE(INT,       "ID1");
    DUMMY2                                  = VALUE(INT,       "ID2");
    DUMMY3                                  = VALUE(INT,       "ID3");
    DUMMY4                                  = VALUE(INT,       "ID4");
    DUMMY5                                  = VALUE(INT,       "ID5");
    DUMMY6                                  = VALUE(INT,       "ID6");
    DUMMY7                                  = VALUE(INT,       "ID7");
    DUMMY8                                  = VALUE(INT,       "ID8");
    DUMMY9                                  = VALUE(INT,       "ID9");
    DUMMY10                                 = VALUE(INT,       "ID10");
    DUMMY11                                 = VALUE(INT,       "ID11");
    DUMMY12                                 = VALUE(INT,       "ID12");
    DUMMY13                                 = VALUE(INT,       "ID13");
    DUMMY14                                 = VALUE(INT,       "ID14");
    DUMMY15                                 = VALUE(INT,       "ID15");
    DUMMY16                                 = VALUE(INT,       "ID16");

    option                                  = VALUE(STRING,    "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;

    LOCALOpt                                = 2796;

    ID_1                                    = 8719;
    ID_2                                    = 8720;
    ID_3                                    = 8721;
    ID_4                                    = 8722;
    ID_5                                    = 8723;
    ID_6                                    = 8724;
    ID_7                                    = 8725;
    ID_8                                    = 8726;
    ID_9                                    = 8727;
    ID_10                                   = 8728;
    ID_11                                   = 8729;
    ID_12                                   = 8730;
    ID_13                                   = 8731;
    ID_14                                   = 8732;
    ID_15                                   = 8733;
    ID_16                                   = 8734;

    ID_PID1                                 = 8735;
    ID_PID2                                 = 8736;
    ID_PID3                                 = 8737;
    ID_PID4                                 = 8738;
    ID_PID5                                 = 8739;
    ID_PID6                                 = 8740;
    ID_PID7                                 = 8741;
    ID_PID8                                 = 8742;
    ID_PID9                                 = 8743;
    ID_PID10                                = 8744;
    ID_PID11                                = 8745;
    ID_PID12                                = 8746;
    ID_PID13                                = 8747;
    ID_PID14                                = 8748;
    ID_PID15                                = 8749;
    ID_PID16                                = 8750;

    ID_PSID1                                = 8751;
    ID_PSID2                                = 8752;
    ID_PSID3                                = 8753;
    ID_PSID4                                = 8754;
    ID_PSID5                                = 8755;
    ID_PSID6                                = 8756;
    ID_PSID7                                = 8757;
    ID_PSID8                                = 8758;
    ID_PSID9                                = 8759;
    ID_PSID10                               = 8760;
    ID_PSID11                               = 8761;
    ID_PSID12                               = 8762;
    ID_PSID13                               = 8763;
    ID_PSID14                               = 8764;
    ID_PSID15                               = 8765;
    ID_PSID16                               = 8766;

    IO_FLAG                                 = -1;
    DUMMY1                                  = -1;
    DUMMY2                                  = -1;
    DUMMY3                                  = -1;
    DUMMY4                                  = -1;
    DUMMY5                                  = -1;
    DUMMY6                                  = -1;
    DUMMY7                                  = -1;
    DUMMY8                                  = -1;
    DUMMY9                                  = -1;
    DUMMY10                                 = -1;
    DUMMY11                                 = -1;
    DUMMY12                                 = -1;
    DUMMY13                                 = -1;
    DUMMY14                                 = -1;
    DUMMY15                                 = -1;
    DUMMY16                                 = -1;

    option                                  = -1;
}

DEFAULTS(COMMON)
{
}

GUI(COMMON)
{
  FLAG(LOCALOpt);
  if(LOCALOpt==0) {
      ASSIGN(KEYWORD_STR, "*CONTROL_MPP_DECOMPOSITION_PARTS_DISTRIBUTE");
  } else {
      ASSIGN(KEYWORD_STR, "*CONTROL_MPP_DECOMPOSITION_PARTS_DISTRIBUTE_LOCAL");
  }

mandatory:
  RADIO(ID_1) {
      ADD(1, "Part ID");
      ADD(2, "Part Set ID");
  }
optional:
  if (ID_1 == 1) {
      DATA(ID_PID1);
  }
  else {
      DATA(ID_PSID1) { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
  }

mandatory:
  RADIO(ID_2) {
      ADD(1, "Part ID");
      ADD(2, "Part Set ID");
  }
optional:
  if (ID_2 == 1) {
      DATA(ID_PID2);
  }
  else {
      DATA(ID_PSID2) { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
  }

mandatory:
  RADIO(ID_3) {
      ADD(1, "Part ID");
      ADD(2, "Part Set ID");
  }
optional:
  if (ID_3 == 1) {
      DATA(ID_PID3);
  }
  else {
      DATA(ID_PSID3) { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
  }

mandatory:
  RADIO(ID_4) {
      ADD(1, "Part ID");
      ADD(2, "Part Set ID");
  }
optional:
  if (ID_4 == 1) {
      DATA(ID_PID4);
  }
  else {
      DATA(ID_PSID4) { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
  }

mandatory:
  RADIO(ID_5) {
      ADD(1, "Part ID");
      ADD(2, "Part Set ID");
  }
optional:
  if (ID_5 == 1) {
      DATA(ID_PID5);
  }
  else {
      DATA(ID_PSID5) { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
  }

mandatory:
  RADIO(ID_6) {
      ADD(1, "Part ID");
      ADD(2, "Part Set ID");
  }
optional:
  if (ID_6 == 1) {
      DATA(ID_PID6);
  }
  else {
      DATA(ID_PSID6) { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
  }

mandatory:
  RADIO(ID_7) {
      ADD(1, "Part ID");
      ADD(2, "Part Set ID");
  }
optional:
  if (ID_7 == 1) {
      DATA(ID_PID7);
  }
  else {
      DATA(ID_PSID7) { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
  }

mandatory:
  RADIO(ID_8) {
      ADD(1, "Part ID");
      ADD(2, "Part Set ID");
  }
optional:
  if (ID_8 == 1) {
      DATA(ID_PID8);
  }
  else {
      DATA(ID_PSID8) { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
  }

mandatory:
  RADIO(ID_9) {
      ADD(1, "Part ID");
      ADD(2, "Part Set ID");
  }
optional:
  if (ID_9 == 1) {
      DATA(ID_PID9);
  }
  else {
      DATA(ID_PSID9) { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
  }

mandatory:
  RADIO(ID_10) {
      ADD(1, "Part ID");
      ADD(2, "Part Set ID");
  }
optional:
  if (ID_10 == 1) {
      DATA(ID_PID10);
  }
  else {
      DATA(ID_PSID10) { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
  }

mandatory:
  RADIO(ID_11) {
      ADD(1, "Part ID");
      ADD(2, "Part Set ID");
  }
optional:
  if (ID_11 == 1) {
      DATA(ID_PID11);
  }
  else {
      DATA(ID_PSID11) { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
  }

mandatory:
  RADIO(ID_12) {
      ADD(1, "Part ID");
      ADD(2, "Part Set ID");
  }
optional:
  if (ID_12 == 1) {
      DATA(ID_PID12);
  }
  else {
      DATA(ID_PSID12) { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
  }

mandatory:
  RADIO(ID_13) {
      ADD(1, "Part ID");
      ADD(2, "Part Set ID");
  }
optional:
  if (ID_13 == 1) {
      DATA(ID_PID13);
  }
  else {
      DATA(ID_PSID13) { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
  }

mandatory:
  RADIO(ID_14) {
      ADD(1, "Part ID");
      ADD(2, "Part Set ID");
  }
optional:
  if (ID_14 == 1) {
      DATA(ID_PID14);
  }
  else {
      DATA(ID_PSID14) { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
  }

mandatory:
  RADIO(ID_15) {
      ADD(1, "Part ID");
      ADD(2, "Part Set ID");
  }
optional:
  if (ID_15 == 1) {
      DATA(ID_PID15);
  }
  else {
      DATA(ID_PSID15) { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
  }

mandatory:
  RADIO(ID_16) {
      ADD(1, "Part ID");
      ADD(2, "Part Set ID");
  }
optional:
  if (ID_16 == 1) {
      DATA(ID_PID16);
  }
  else {
      DATA(ID_PSID16) { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
  }
}

// File format
FORMAT(Keyword971_R6.1)
{
  ASSIGN(IO_FLAG,1,IMPORT);
  ASSIGN(IO_FLAG,0,EXPORT);

  HEADER("*CONTROL_MPP_DECOMPOSITION_PARTS_DISTRIBUTE");
  
  COMMENT("$      ID1       ID2       ID3       ID4       ID5       ID6       ID7       ID8");
  if(IO_FLAG==0)
  {
      if(ID_1==2 && ID_PSID1 != NONE) {ASSIGN(DUMMY1,-1*ID_PSID1,EXPORT);}
      if(ID_2==2 && ID_PSID2 != NONE) {ASSIGN(DUMMY2,-1*ID_PSID2,EXPORT);}
      if(ID_3==2 && ID_PSID3 != NONE) {ASSIGN(DUMMY3,-1*ID_PSID3,EXPORT);}
      if(ID_4==2 && ID_PSID4 != NONE) {ASSIGN(DUMMY4,-1*ID_PSID4,EXPORT);}
      if(ID_5==2 && ID_PSID5 != NONE) {ASSIGN(DUMMY5,-1*ID_PSID5,EXPORT);}
      if(ID_6==2 && ID_PSID6 != NONE) {ASSIGN(DUMMY6,-1*ID_PSID6,EXPORT);}
      if(ID_7==2 && ID_PSID7 != NONE) {ASSIGN(DUMMY7,-1*ID_PSID7,EXPORT);}
      if(ID_8==2 && ID_PSID8 != NONE) {ASSIGN(DUMMY8,-1*ID_PSID8,EXPORT);}

      CARD("%10d%10d%10d%10d%10d%10d%10d%10d",CELL_COND(if(ID_1==1) ID_PID1; else DUMMY1;),
                                              CELL_COND(if(ID_2==1) ID_PID2; else DUMMY2;),
                                              CELL_COND(if(ID_3==1) ID_PID3; else DUMMY3;),
                                              CELL_COND(if(ID_4==1) ID_PID4; else DUMMY4;),
                                              CELL_COND(if(ID_5==1) ID_PID5; else DUMMY5;),
                                              CELL_COND(if(ID_6==1) ID_PID6; else DUMMY6;),
                                              CELL_COND(if(ID_7==1) ID_PID7; else DUMMY7;),
                                              CELL_COND(if(ID_8==1) ID_PID8; else DUMMY8;));
  } else {
    ASSIGN(ID_1,ID_1-1,IMPORT);
    ASSIGN(ID_2,ID_2-1,IMPORT);
    ASSIGN(ID_3,ID_3-1,IMPORT);
    ASSIGN(ID_4,ID_4-1,IMPORT);
    ASSIGN(ID_5,ID_5-1,IMPORT);
    ASSIGN(ID_6,ID_6-1,IMPORT);
    ASSIGN(ID_7,ID_7-1,IMPORT);
    ASSIGN(ID_8,ID_8-1,IMPORT);
      CARD("%10d%10d%10d%10d%10d%10d%10d%10d",SCALAR_OR_OBJECT(ID_1, DUMMY1, ID_PSID1),
                                              SCALAR_OR_OBJECT(ID_2, DUMMY2, ID_PSID2),
                                              SCALAR_OR_OBJECT(ID_3, DUMMY3, ID_PSID3),
                                              SCALAR_OR_OBJECT(ID_4, DUMMY4, ID_PSID4),
                                              SCALAR_OR_OBJECT(ID_5, DUMMY5, ID_PSID5),
                                              SCALAR_OR_OBJECT(ID_6, DUMMY6, ID_PSID6),
                                              SCALAR_OR_OBJECT(ID_7, DUMMY7, ID_PSID7),
                                              SCALAR_OR_OBJECT(ID_8, DUMMY8, ID_PSID8));

      if(ID_1==1) {ASSIGN(ID_PID1,DUMMY1,IMPORT);}
      if(ID_2==1) {ASSIGN(ID_PID2,DUMMY2,IMPORT);}
      if(ID_3==1) {ASSIGN(ID_PID3,DUMMY3,IMPORT);}
      if(ID_4==1) {ASSIGN(ID_PID4,DUMMY4,IMPORT);}
      if(ID_5==1) {ASSIGN(ID_PID5,DUMMY5,IMPORT);}
      if(ID_6==1) {ASSIGN(ID_PID6,DUMMY6,IMPORT);}
      if(ID_7==1) {ASSIGN(ID_PID7,DUMMY7,IMPORT);}
      if(ID_8==1) {ASSIGN(ID_PID8,DUMMY8,IMPORT);}
  }

  COMMENT("$      ID9      ID10      ID11      ID12      ID13      ID14      ID15      ID16");
  if(IO_FLAG==0)
  {
      if(ID_9==2  && ID_PSID9  != NONE) {ASSIGN(DUMMY9, -1*ID_PSID9,EXPORT);}
      if(ID_10==2 && ID_PSID10 != NONE) {ASSIGN(DUMMY10,-1*ID_PSID10,EXPORT);}
      if(ID_11==2 && ID_PSID11 != NONE) {ASSIGN(DUMMY11,-1*ID_PSID11,EXPORT);}
      if(ID_12==2 && ID_PSID12 != NONE) {ASSIGN(DUMMY12,-1*ID_PSID12,EXPORT);}
      if(ID_13==2 && ID_PSID13 != NONE) {ASSIGN(DUMMY13,-1*ID_PSID13,EXPORT);}
      if(ID_14==2 && ID_PSID14 != NONE) {ASSIGN(DUMMY14,-1*ID_PSID14,EXPORT);}
      if(ID_15==2 && ID_PSID15 != NONE) {ASSIGN(DUMMY15,-1*ID_PSID15,EXPORT);}
      if(ID_16==2 && ID_PSID16 != NONE) {ASSIGN(DUMMY16,-1*ID_PSID16,EXPORT);}
      
      CARD("%10d%10d%10d%10d%10d%10d%10d%10d",CELL_COND(if(ID_9==1)  ID_PID9;  else DUMMY9;),
                                              CELL_COND(if(ID_10==1) ID_PID10; else DUMMY10;),
                                              CELL_COND(if(ID_11==1) ID_PID11; else DUMMY11;),
                                              CELL_COND(if(ID_12==1) ID_PID12; else DUMMY12;),
                                              CELL_COND(if(ID_13==1) ID_PID13; else DUMMY13;),
                                              CELL_COND(if(ID_14==1) ID_PID14; else DUMMY14;),
                                              CELL_COND(if(ID_15==1) ID_PID15; else DUMMY15;),
                                              CELL_COND(if(ID_16==1) ID_PID16; else DUMMY16;));
  } else {
    ASSIGN(ID_9,ID_9-1,IMPORT);
    ASSIGN(ID_10,ID_10-1,IMPORT);
    ASSIGN(ID_11,ID_11-1,IMPORT);
    ASSIGN(ID_12,ID_12-1,IMPORT);
    ASSIGN(ID_13,ID_13-1,IMPORT);
    ASSIGN(ID_14,ID_14-1,IMPORT);
    ASSIGN(ID_15,ID_15-1,IMPORT);
    ASSIGN(ID_16,ID_16-1,IMPORT);
      CARD("%10d%10d%10d%10d%10d%10d%10d%10d",SCALAR_OR_OBJECT(ID_9,  DUMMY9,  ID_PSID9),
                                              SCALAR_OR_OBJECT(ID_10, DUMMY10, ID_PSID10),
                                              SCALAR_OR_OBJECT(ID_11, DUMMY11, ID_PSID11),
                                              SCALAR_OR_OBJECT(ID_12, DUMMY12, ID_PSID12),
                                              SCALAR_OR_OBJECT(ID_13, DUMMY13, ID_PSID13),
                                              SCALAR_OR_OBJECT(ID_14, DUMMY14, ID_PSID14),
                                              SCALAR_OR_OBJECT(ID_15, DUMMY15, ID_PSID15),
                                              SCALAR_OR_OBJECT(ID_16, DUMMY16, ID_PSID16));  
      
      if(ID_9==1)  {ASSIGN(ID_PID9, DUMMY9, IMPORT);}
      if(ID_10==1) {ASSIGN(ID_PID10,DUMMY10,IMPORT);}
      if(ID_11==1) {ASSIGN(ID_PID11,DUMMY11,IMPORT);}
      if(ID_12==1) {ASSIGN(ID_PID12,DUMMY12,IMPORT);}
      if(ID_13==1) {ASSIGN(ID_PID13,DUMMY13,IMPORT);}
      if(ID_14==1) {ASSIGN(ID_PID14,DUMMY14,IMPORT);}
      if(ID_15==1) {ASSIGN(ID_PID15,DUMMY15,IMPORT);}
      if(ID_16==1) {ASSIGN(ID_PID16,DUMMY16,IMPORT);}
  }
}

FORMAT(Keyword971_R9.3)
{
  ASSIGN(IO_FLAG,1,IMPORT);
  ASSIGN(IO_FLAG,0,EXPORT);

  if(IO_FLAG==0 && LOCALOpt==0) {
      HEADER("*CONTROL_MPP_DECOMPOSITION_PARTS_DISTRIBUTE");
  } else if(IO_FLAG==0 && LOCALOpt==1) {
      HEADER("*CONTROL_MPP_DECOMPOSITION_PARTS_DISTRIBUTE_LOCAL");
  } else {
      // IO_FLAG == 1
      HEADER("*CONTROL_MPP_DECOMPOSITION_PARTS_DISTRIBUTE%s",option);

      if(option=="") {
          ASSIGN(LOCALOpt,0,IMPORT);
      } else {
          ASSIGN(LOCALOpt,1,IMPORT);
      }
  }
  
  COMMENT("$      ID1       ID2       ID3       ID4       ID5       ID6       ID7       ID8");
  if(IO_FLAG==0)
  {
      if(ID_1==2 && ID_PSID1 != NONE) {ASSIGN(DUMMY1,-1*ID_PSID1,EXPORT);}
      if(ID_2==2 && ID_PSID2 != NONE) {ASSIGN(DUMMY2,-1*ID_PSID2,EXPORT);}
      if(ID_3==2 && ID_PSID3 != NONE) {ASSIGN(DUMMY3,-1*ID_PSID3,EXPORT);}
      if(ID_4==2 && ID_PSID4 != NONE) {ASSIGN(DUMMY4,-1*ID_PSID4,EXPORT);}
      if(ID_5==2 && ID_PSID5 != NONE) {ASSIGN(DUMMY5,-1*ID_PSID5,EXPORT);}
      if(ID_6==2 && ID_PSID6 != NONE) {ASSIGN(DUMMY6,-1*ID_PSID6,EXPORT);}
      if(ID_7==2 && ID_PSID7 != NONE) {ASSIGN(DUMMY7,-1*ID_PSID7,EXPORT);}
      if(ID_8==2 && ID_PSID8 != NONE) {ASSIGN(DUMMY8,-1*ID_PSID8,EXPORT);}

      CARD("%10d%10d%10d%10d%10d%10d%10d%10d",CELL_COND(if(ID_1==1) ID_PID1; else DUMMY1;),
                                              CELL_COND(if(ID_2==1) ID_PID2; else DUMMY2;),
                                              CELL_COND(if(ID_3==1) ID_PID3; else DUMMY3;),
                                              CELL_COND(if(ID_4==1) ID_PID4; else DUMMY4;),
                                              CELL_COND(if(ID_5==1) ID_PID5; else DUMMY5;),
                                              CELL_COND(if(ID_6==1) ID_PID6; else DUMMY6;),
                                              CELL_COND(if(ID_7==1) ID_PID7; else DUMMY7;),
                                              CELL_COND(if(ID_8==1) ID_PID8; else DUMMY8;));
  } else {
    ASSIGN(ID_1,ID_1-1,IMPORT);
    ASSIGN(ID_2,ID_2-1,IMPORT);
    ASSIGN(ID_3,ID_3-1,IMPORT);
    ASSIGN(ID_4,ID_4-1,IMPORT);
    ASSIGN(ID_5,ID_5-1,IMPORT);
    ASSIGN(ID_6,ID_6-1,IMPORT);
    ASSIGN(ID_7,ID_7-1,IMPORT);
    ASSIGN(ID_8,ID_8-1,IMPORT);
      CARD("%10d%10d%10d%10d%10d%10d%10d%10d",SCALAR_OR_OBJECT(ID_1, DUMMY1, ID_PSID1),
                                              SCALAR_OR_OBJECT(ID_2, DUMMY2, ID_PSID2),
                                              SCALAR_OR_OBJECT(ID_3, DUMMY3, ID_PSID3),
                                              SCALAR_OR_OBJECT(ID_4, DUMMY4, ID_PSID4),
                                              SCALAR_OR_OBJECT(ID_5, DUMMY5, ID_PSID5),
                                              SCALAR_OR_OBJECT(ID_6, DUMMY6, ID_PSID6),
                                              SCALAR_OR_OBJECT(ID_7, DUMMY7, ID_PSID7),
                                              SCALAR_OR_OBJECT(ID_8, DUMMY8, ID_PSID8));

      if(ID_1==1) {ASSIGN(ID_PID1,DUMMY1,IMPORT);}
      if(ID_2==1) {ASSIGN(ID_PID2,DUMMY2,IMPORT);}
      if(ID_3==1) {ASSIGN(ID_PID3,DUMMY3,IMPORT);}
      if(ID_4==1) {ASSIGN(ID_PID4,DUMMY4,IMPORT);}
      if(ID_5==1) {ASSIGN(ID_PID5,DUMMY5,IMPORT);}
      if(ID_6==1) {ASSIGN(ID_PID6,DUMMY6,IMPORT);}
      if(ID_7==1) {ASSIGN(ID_PID7,DUMMY7,IMPORT);}
      if(ID_8==1) {ASSIGN(ID_PID8,DUMMY8,IMPORT);}
  }

  COMMENT("$      ID9      ID10      ID11      ID12      ID13      ID14      ID15      ID16");
  if(IO_FLAG==0)
  {
      if(ID_9==2  && ID_PSID9  != NONE) {ASSIGN(DUMMY9, -1*ID_PSID9, EXPORT);}
      if(ID_10==2 && ID_PSID10 != NONE) {ASSIGN(DUMMY10,-1*ID_PSID10,EXPORT);}
      if(ID_11==2 && ID_PSID11 != NONE) {ASSIGN(DUMMY11,-1*ID_PSID11,EXPORT);}
      if(ID_12==2 && ID_PSID12 != NONE) {ASSIGN(DUMMY12,-1*ID_PSID12,EXPORT);}
      if(ID_13==2 && ID_PSID13 != NONE) {ASSIGN(DUMMY13,-1*ID_PSID13,EXPORT);}
      if(ID_14==2 && ID_PSID14 != NONE) {ASSIGN(DUMMY14,-1*ID_PSID14,EXPORT);}
      if(ID_15==2 && ID_PSID15 != NONE) {ASSIGN(DUMMY15,-1*ID_PSID15,EXPORT);}
      if(ID_16==2 && ID_PSID16 != NONE) {ASSIGN(DUMMY16,-1*ID_PSID16,EXPORT);}
      
      CARD("%10d%10d%10d%10d%10d%10d%10d%10d",CELL_COND(if(ID_9==1)  ID_PID9;  else DUMMY9;),
                                              CELL_COND(if(ID_10==1) ID_PID10; else DUMMY10;),
                                              CELL_COND(if(ID_11==1) ID_PID11; else DUMMY11;),
                                              CELL_COND(if(ID_12==1) ID_PID12; else DUMMY12;),
                                              CELL_COND(if(ID_13==1) ID_PID13; else DUMMY13;),
                                              CELL_COND(if(ID_14==1) ID_PID14; else DUMMY14;),
                                              CELL_COND(if(ID_15==1) ID_PID15; else DUMMY15;),
                                              CELL_COND(if(ID_16==1) ID_PID16; else DUMMY16;));
  } else {
    ASSIGN(ID_9,ID_9-1,IMPORT);
    ASSIGN(ID_10,ID_10-1,IMPORT);
    ASSIGN(ID_11,ID_11-1,IMPORT);
    ASSIGN(ID_12,ID_12-1,IMPORT);
    ASSIGN(ID_13,ID_13-1,IMPORT);
    ASSIGN(ID_14,ID_14-1,IMPORT);
    ASSIGN(ID_15,ID_15-1,IMPORT);
    ASSIGN(ID_16,ID_16-1,IMPORT);
      CARD("%10d%10d%10d%10d%10d%10d%10d%10d",SCALAR_OR_OBJECT(ID_9,  DUMMY9,  ID_PSID9),
                                              SCALAR_OR_OBJECT(ID_10, DUMMY10, ID_PSID10),
                                              SCALAR_OR_OBJECT(ID_11, DUMMY11, ID_PSID11),
                                              SCALAR_OR_OBJECT(ID_12, DUMMY12, ID_PSID12),
                                              SCALAR_OR_OBJECT(ID_13, DUMMY13, ID_PSID13),
                                              SCALAR_OR_OBJECT(ID_14, DUMMY14, ID_PSID14),
                                              SCALAR_OR_OBJECT(ID_15, DUMMY15, ID_PSID15),
                                              SCALAR_OR_OBJECT(ID_16, DUMMY16, ID_PSID16));  
      
      if(ID_9==1)  {ASSIGN(ID_PID9, DUMMY9, IMPORT);}
      if(ID_10==1) {ASSIGN(ID_PID10,DUMMY10,IMPORT);}
      if(ID_11==1) {ASSIGN(ID_PID11,DUMMY11,IMPORT);}
      if(ID_12==1) {ASSIGN(ID_PID12,DUMMY12,IMPORT);}
      if(ID_13==1) {ASSIGN(ID_PID13,DUMMY13,IMPORT);}
      if(ID_14==1) {ASSIGN(ID_PID14,DUMMY14,IMPORT);}
      if(ID_15==1) {ASSIGN(ID_PID15,DUMMY15,IMPORT);}
      if(ID_16==1) {ASSIGN(ID_PID16,DUMMY16,IMPORT);}
  }
}
