//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// *CONTROL_FORMING_AUTOCHECK
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    LSD_ICHECK                              = VALUE(INT,    "Tool mesh checking/correcting flag");
    LSD_IGD                                 = VALUE(INT,    "Not used");
    LSD_IOFFSET                             = VALUE(INT,    "Tool mesh offset flag");
    LSD_IOUTPUT                             = VALUE(INT,    "Output option flag");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    LSD_ICHECK                              = 8235;
    LSD_IGD                                 = 8236;
    LSD_IOFFSET                             = 8237;
    LSD_IOUTPUT                             = 8238;

}

CHECK(COMMON)
{


}

DEFAULTS(COMMON)
{

    LSD_ICHECK    = 0;
    LSD_IOFFSET   = 0;

}

GUI(COMMON)
{

    ASSIGN(KEYWORD_STR, "*CONTROL_FORMING_AUTOCHECK");
    RADIO(LSD_ICHECK)
    {
       ADD(0, "0: Do not activate mesh checking/correcting feature");
       ADD(1, "1: Activate comprehensive mesh check and correct problematic tool meshes");
    }
    SCALAR(LSD_IGD);
    RADIO(LSD_IOFFSET)
    {
        ADD(0, "0: Do not offset rigid tool mesh");
        ADD(1, "1: Perform rigid tool mesh offset");
    }
    RADIO(LSD_IOUTPUT)
    {
        ADD(1, "1: Output offset rigid tool meshes into a keyword file rigid_offset.inc, and terminate the simulation");
        ADD(2, "2: Output offset rigid tool meshes as well as nodes used to define draw beads into a keyword file rigid_offset.inc, and terminate the simulation");
        ADD(3, "3: Output checked/corrected tool meshes as well as offset rigid tool meshes into two separate keyword files, rigid_offset_before.inc, and rigid_offset.inc, respectively, and terminate the simulation");
        ADD(4, "4: Output checked/corrected tool meshes, offset rigid tool meshes as well as the nodes used to define draw beads into two separate keyword files, rigid_offset_before.inc, and rigid_offset.inc, respectively, and terminate the simulation");
    }

}

// File format
FORMAT(Keyword971_R8.0)
{
  HEADER("*CONTROL_FORMING_AUTOCHECK");
  COMMENT("$   ICHECK");
  CARD("%10d",LSD_ICHECK);
}

FORMAT(Keyword971_R9.3)
{
  HEADER("*CONTROL_FORMING_AUTOCHECK");
  COMMENT("$   ICHECK       IGD   IOFFSET   IOUTPUT");
  CARD("%10d%10d%10d%10d",LSD_ICHECK,LSD_IGD,LSD_IOFFSET,LSD_IOUTPUT);
}
