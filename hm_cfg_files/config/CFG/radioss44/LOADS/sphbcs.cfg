//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// SPH slide boundary condition Setup File
// 

// MCDS attributes description
ATTRIBUTES(COMMON) {
  // Data
  rad_sphbcs_type    = VALUE(STRING, "Symmetry condition type");
  rad_dir            = VALUE(STRING,  "Direction"); 
  inputsystem        = VALUE(SYSTEM, "Frame");
  rad_sphbcs_ilev    = VALUE(INT,  "Formulation level"); 
  // Support
  entityid           = VALUE(SETS,"Node group") { SUBTYPES = (/SETS/GRNOD); }
  displayname     = VALUE(STRING, "Title");
}

// Default values
DEFAULTS {
  rad_dir = "X";
}

// GUI description (Common domain)
GUI(COMMON) {
 mandatory:
  //FLAG(ILEVEL,"Rebound");
  graphical RADIO(rad_dir) {
    ADD("X","X");
    ADD("Y","Y");
    ADD("Z","Z");
  }
  //
 mandatory:
  graphical TOOL(inputsystem) { ORIGIN=MANDATORY; }
  //
  /*
 mandatory:
  graphical SUPPORT("Support") {
    OBJECTS=(NODE,QUAD,BRICK,TETRA4,TETRA10,BRIC20,SHEL16,SHELL,SH3N,BEAM,SPRING,TRUSS,COMPONENT);
    ADD(entityid,"Node Group");
  }
  */
  optional:
  graphical RADIO(rad_sphbcs_ilev) {
     ADD(0,"0: (Real) particles crossing symmetry plane will progressively not be taken into account anymore in the computation");
     ADD(1,"1: (Real) particles will rebound on the symmetry plane");
  }   
}

// File format
FORMAT(radioss44) {
  HEADER("/SPHBCS/%s/%d",rad_sphbcs_type,_ID_);
  CARD("%-100s", displayname);
  COMMENT("#    dir   frame   grnod          ilevel");
  CARD("%8s%8d%8d        %8d",rad_dir,inputsystem,entityid,rad_sphbcs_ilev);
}
