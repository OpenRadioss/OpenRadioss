//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Fixed velocity Setup File
// 

ATTRIBUTES(COMMON) {
  // Lagrange multipliers
  //ILAGMUL     = VALUE(INT,   "Flag for Lagrange multipliers");
  empty_string  = VALUE(STRING, "empty string");
  // Data
  rad_dir       = VALUE(STRING,"Direction"); 
  DIR_RADIO     = VALUE(INT,   "Direction"); 
  rad_system_input_type = VALUE(INT, "Input system type Skew/Frame");
  inputsystem   = VALUE(SYSTEM,  "Skew");
  FRAME         = VALUE(SYSTEM,  "Frame");
  curveid       = VALUE(FUNCT, "Time function");
  //if(ILAGMUL  ==  FALSE) {
  rad_sensor_id = VALUE(SENSOR,"Sensor"); 
 // }
  magnitude     = VALUE(FLOAT, "Y-Scale factor"); 
 // if(ILAGMUL  ==  FALSE) {
    rad_tstart  = VALUE(FLOAT, "Start time");
    rad_tstop   = VALUE(FLOAT, "Stop time");
  //}
  // Support
  entityid      = VALUE(SETS, "Node group") { SUBTYPES = (/SETS/GRNOD); }
  NB_NODES      = SIZE("Number of additional nodes");
  NODE          = ARRAY[NB_NODES](NODE,"Additional nodes");
  displayname= VALUE(STRING, "Title");
}

DEFINITIONS(COMMON) {
 // MAINS=(NODE);
}

PARAMETERS(PARAMETERS) {
  magnitude  = INPUT_SCALAR(magnitude,"Scale factor");   
  rad_tstart = INPUT_SCALAR(rad_tstart,"Start time");   
  rad_tstop  = INPUT_SCALAR(rad_tstop,"Stop time");   
}

SKEYWORDS_IDENTIFIER(COMMON)
{
   empty_string = -1;
}

DEFAULTS(COMMON) {
  DIR_RADIO     = 1;
  magnitude     = 1.;
  rad_dir       = "X";
  empty_string  = "";
}
/*
GUI(COMMON) {
 optional:
  FLAG(ILAGMUL,"Lagrange multipliers");
  if(ILAGMUL==FALSE) {
    TOOL(rad_sensor_id);
    SCALAR(rad_tstart) { DIMENSION="t"; }
    SCALAR(rad_tstop)  { DIMENSION="t"; }
  }
  //
 mandatory:
  graphical RADIO(rad_dir) {
     ADD("X"  ,  "X  (translation)");
     ADD("Y"  ,  "Y  (translation)");
     ADD("Z"  ,  "Z  (translation)");
     ADD("XX" ,  "XX (rotation)");
     ADD("YY" ,  "YY (rotation)");
     ADD("ZZ" ,  "ZZ (rotation)");
  }
  //
 mandatory:
  graphical FUNCTION(curveid) {
    SCALING(magnitude); 
    X_TITLE     = "Time"; Y_TITLE     = "Velocity";
    X_DIMENSION="t"; Y_DIMENSION="velocity";
    X_CAN_BE_NEGATIVE = FALSE;
  }
  //
 optional:
  if((FRAME == NONE) || ((FRAME != NONE) && (SYSTEM != NONE)))
  {
    graphical TOOL(inputsystem) {ORIGIN=UNALLOWED;}
  }
  if ((ILAGMUL==FALSE) && ((SYSTEM == NONE) || ((FRAME != NONE) && (SYSTEM != NONE))))
  {
     graphical TOOL(inputsystem) {ORIGIN=MANDATORY;}
  }
  //
 mandatory:
  graphical SUPPORT("Support") {
    OBJECTS=(entityid,ELEMENTS,COMPONENT);
    ADD(GR_NODE,"Node Group");
    ADD(NODE   ,"Additional nodes");
  }
}
*/

FORMAT(radioss44) {
  HEADER("/IMPVEL/%-d",_ID_);
  CARD("%s", displayname);
  COMMENT("# Ifunct     DIR   Iskew Isensor Gnod_id  Iframe");
  if(rad_system_input_type == 1)
  {
    CARD("%8d%8s%8d%8d%8d%8s",curveid,rad_dir,inputsystem,rad_sensor_id,entityid,empty_string);
  }
  else if(rad_system_input_type == 2)
  {
    CARD("%8d%8s%8s%8d%8d%8d",curveid,rad_dir,empty_string,rad_sensor_id,entityid,inputsystem);
  }
  COMMENT("#          Scale          Tstart           Tstop");
  CARD("%16lg%16lg%16lg",magnitude,rad_tstart,rad_tstop);
  
  
  /*
  if(ILAGMUL==FALSE) {
    COMMENT("# Ifunct     DIR   Iskew Isensor Gnod_id  Iframe");
    CARD("%8d%8s%8d%8d%8d%8d",FUNC,DIR,SYSTEM,SENSOR,GR_NODE,FRAME);
  } else {
    COMMENT("# Ifunct     DIR   Iskew         Gnod_id");
    CARD("%8d%8s%8d        %8d",FUNC,DIR,SYSTEM,GR_NODE);
  }
  if(DIR=="X")
  {
     ASSIGN(DIR_RADIO, 1);  
  }
  else if(DIR=="Y")
  {
     ASSIGN(DIR_RADIO, 2);  
  }
  else if(DIR=="Z")
  {
     ASSIGN(DIR_RADIO, 3);  
  }
  else if(DIR=="XX")
  {
     ASSIGN(DIR_RADIO, 11);  
  }
  else if(DIR=="YY")
  {
     ASSIGN(DIR_RADIO, 22);  
  }  
  else if(DIR=="ZZ")
  {
     ASSIGN(DIR_RADIO, 33);  
  }    
  //
  if(ILAGMUL==FALSE) {
    COMMENT("#          Scale          Tstart           Tstop");
    CARD("%16lg%16lg%16lg",SCALE,TSTART,TSTOP);
  } else {
    COMMENT("#          Scale");
    CARD("%16lg",SCALE);
  }
  //
  COMMENT("#  Node1   Node2   Node3   Node4   Node5   Node6   Node7   Node8   Node9  Node10");
  FREE_CELL_LIST(NB_NODES,"%8d",NODE,80);
  */
}