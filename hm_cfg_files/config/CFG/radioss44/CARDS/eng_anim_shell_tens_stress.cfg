//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /VERS
//

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    ENG_ANIM_SHELL_TENS_STRESS_MEMB         = VALUE(INT, "Membrane", "MEMB");
    ENG_ANIM_SHELL_TENS_STRESS_BEND         = VALUE(INT, "Bending", "BEND");
    ENG_ANIM_SHEL_TENS_STRES_UPPER          = VALUE(INT, "Upper Integration point or Layer for composites properties", "UPPER");
    ENG_ANIM_SHEL_TENS_STRES_LOWER          = VALUE(INT, "Lower Integration point or Layer for composites properties.", "LOWER");
    ENG_ANIM_SHELL_TENS_STRESS_ALL          = VALUE(INT, "All Integration points or Layers for composites properties", "ALL");
    NIP                                     = SIZE("Number of Integration point");
    NUM3_arr                                = ARRAY[NIP](INT,"Integration point number or Layer number for composites properties.","N");
    OPTION_ARRAY                            = ARRAY[NIP](STRING,"Integration point location","Keyword6");
    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    ENG_ANIM_SHELL_TENS_STRESS_N            = VALUE(INT, "Integration point number flag");
    IO_FLAG                                 = VALUE(INT, "IOFLAG");
    _opt1                                   = VALUE(STRING, "_opt");
    _opt2                                   = VALUE(STRING, "_opt");
    temp                                    = VALUE(INT,"");
    temp1                                   = VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    ENG_ANIM_SHELL_TENS_STRESS_MEMB         = 4878;
    ENG_ANIM_SHELL_TENS_STRESS_BEND         = 4927;
    ENG_ANIM_SHEL_TENS_STRES_UPPER          = 4928;
    ENG_ANIM_SHEL_TENS_STRES_LOWER          = 4929;
    ENG_ANIM_SHELL_TENS_STRESS_N            = 4930;
    ENG_ANIM_SHELL_TENS_STRESS_ALL          = 4931;
    NIP                                     = 427;
    NUM3_arr                                = 333;
    OPTION_ARRAY                            = 1464;
    //HM INTERNAL
    KEYWORD_STR                             = -1;
    IO_FLAG                                  = -1;
    _opt1                                   = -1;
    _opt2                                   = -1;
    temp                                    = -1;
    temp1                                   = -1;
}

GUI(COMMON)
{
}

// File format
// starting from FORMAT(radioss51) to avoid   tool -> "Unrecognized option"
FORMAT(radioss51)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 0 && ENG_ANIM_SHELL_TENS_STRESS_MEMB == 1)
    {
        CARD("/ANIM/SHELL/TENS/STRESS/MEMB");
    }
    if(IO_FLAG == 0 && ENG_ANIM_SHELL_TENS_STRESS_BEND == 1)
    {
        CARD("/ANIM/SHELL/TENS/STRESS/BEND");
    }
    if(IO_FLAG == 0 && ENG_ANIM_SHEL_TENS_STRES_UPPER == 1)
    {
        CARD("/ANIM/SHELL/TENS/STRESS/UPPER");
    }
    if(IO_FLAG == 0 && ENG_ANIM_SHEL_TENS_STRES_LOWER == 1)
    {
        CARD("/ANIM/SHELL/TENS/STRESS/LOWER");
    }
    if(IO_FLAG == 0 && NIP > 0)
    {
        CARD_LIST(NIP)
        {
            CARD("/ANIM/SHELL/TENS/STRESS/%d/%-s",NUM3_arr,OPTION_ARRAY);
        }
    }
    if(IO_FLAG == 0 && ENG_ANIM_SHELL_TENS_STRESS_ALL == 1)
    {
        CARD("/ANIM/SHELL/TENS/STRESS/ALL");
    }

    if(IO_FLAG == 1)
    {
        HEADER("/ANIM/SHELL/TENS/STRESS/%s/%s",_opt1,_opt2);
        if(_opt1 == "MEMB")
        {
            ASSIGN(ENG_ANIM_SHELL_TENS_STRESS_MEMB, 1, IMPORT);
        }
        else if(_opt1 == "BEND")
        {
            ASSIGN(ENG_ANIM_SHELL_TENS_STRESS_BEND, 1, IMPORT);
        }
        else if(_opt1 == "UPPER")
        {
            ASSIGN(ENG_ANIM_SHEL_TENS_STRES_UPPER, 1, IMPORT);
        }
        else if(_opt1 == "LOWER")
        {
            ASSIGN(ENG_ANIM_SHEL_TENS_STRES_LOWER, 1, IMPORT);
        }
        else if(_opt1 == "ALL")
        {
            ASSIGN(ENG_ANIM_SHELL_TENS_STRESS_ALL, 1, IMPORT);
        }
        else
        {
            FREE_CARD_LIST(NIP)
            {
                CARD("%d%s",NUM3_arr,OPTION_ARRAY);
            }
            ASSIGN(ENG_ANIM_SHELL_TENS_STRESS_N, 1, IMPORT);
        }
    }
}
