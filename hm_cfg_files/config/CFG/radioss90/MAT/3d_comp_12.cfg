//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 12 (3D_COMP) Setup File
// 

ATTRIBUTES(COMMON) {
  // Support
 // NB_PARTS       = SIZE("Number of connected parts"); 
 // COMPONENT           = ARRAY[NB_PARTS](COMPONENT,"Connected parts");
  NUM_COMMENTS  = SIZE("NUM_COMMENTS");
  COMMENT_ENUM_FIELD = VALUE(INT,"User Comments");
  COMMENTS      = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
  // Common attributes
  RHO_I          = VALUE(FLOAT,"Initial density");
  REF_RHO        = VALUE(INT,"RefRho_Option");
  RHO_0          = VALUE(FLOAT,"Reference density");
  REF_RHO_OPTION = VALUE(INT, "RefRho_Option");
  DUMMY    = VALUE(STRING,"Dummy variable for Ref_Rho flag");
  E11            = VALUE(FLOAT,"Young's modulus dir. 1");
  E22            = VALUE(FLOAT,"Young's modulus dir. 2");
  E33            = VALUE(FLOAT,"Young's modulus dir. 3");
  NU12           = VALUE(FLOAT,"Poisson's ratio dir. 12");
  NU23           = VALUE(FLOAT,"Poisson's ratio dir. 23");
  NU31           = VALUE(FLOAT,"Poisson's ratio dir. 31");
  G12            = VALUE(FLOAT,"Shear modulus 12");
  G23            = VALUE(FLOAT,"Shear modulus 23");
  G31            = VALUE(FLOAT,"Shear modulus 31");
  SIGMA_T1       = VALUE(FLOAT,"Composite tensile strength in dir. 1");
  SIGMA_T2       = VALUE(FLOAT,"Composite tensile strength in dir. 2");
  SIGMA_T3       = VALUE(FLOAT,"Composite tensile strength in dir. 3");
  DELTA          = VALUE(FLOAT,"Composite tensile damage parameter");
  B              = VALUE(FLOAT,"Composite plasticity hardening parameter");
  N              = VALUE(FLOAT,"Composite plasticity hardening exponent");
  F_MAX          = VALUE(FLOAT,"Composite plasticity hardening law maximum value of yield function");
  SIGMA_1YT      = VALUE(FLOAT,"Composite yield stress in traction in direction 1");
  SIGMA_2YT      = VALUE(FLOAT,"Composite yield stress in traction in directions 2 and 3");
  SIGMA_1YC      = VALUE(FLOAT,"Composite yield stress in compression in direction 1");
  SIGMA_2YC      = VALUE(FLOAT,"Composite yield stress in compression in directions 2 and 3");
  SIGMA_12YT     = VALUE(FLOAT,"Composite yield stress in shear traction in direction 12");
  SIGMA_12YC     = VALUE(FLOAT,"Composite yield stress in shear compression in direction 12");
  SIGMA_23YT     = VALUE(FLOAT,"Composite yield stress in shear traction in direction 23");
  SIGMA_23YC     = VALUE(FLOAT,"Composite yield stress in shear compression in direction 23");
  SIGMA_3YT      = VALUE(FLOAT,"Composite yield stress in traction in direction 3");
  SIGMA_3YC      = VALUE(FLOAT,"Composite yield stress in compression in direction 3");
  SIGMA_13YT     = VALUE(FLOAT,"Composite yield stress in shear traction in direction 13");
  SIGMA_13YC     = VALUE(FLOAT,"Composite yield stress in shear compression in direction 13");
  ALPHA          = VALUE(FLOAT,"Fiber volume fraction");
  EF             = VALUE(FLOAT,"Fiber Young's modulus");
  C              = VALUE(FLOAT,"Strain rate coefficient");
  EPS_RATE_0     = VALUE(FLOAT,"Reference strain rate");
  ICC            = VALUE(INT,  "Strain rate computation flag");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

//  KEYWORD_STR                             = 9000;
    COMMENTS                                = 5109;
    COMMENT_ENUM_FIELD                      = 7951;
    NUM_COMMENTS                            = 5110;
	REF_RHO                                 = 4285;
	RHO_I                                   = 118;
	RHO_0                                   = 4229;
    E11                                     = 126;
    E22                                     = 127;
    E33                                     = 128;
    NU12                                    = 129;
    NU23                                    = 130;
    NU31                                    = 131;
    G12                                     = 132;
    G23                                     = 133;
    G31                                     = 134;
	SIGMA_T1                                = 5042;
	SIGMA_T2                                = 5043;
	SIGMA_T3                                = 5044;
	DELTA                                   = 5045;
	B                                       = 148;
	N                                       = 71;
	F_MAX                                   = 5038;
	SIGMA_1YT                               = 346;
    SIGMA_2YT                               = 347;
    SIGMA_1YC                               = 1126;
    SIGMA_2YC                               = 348;
    SIGMA_12YT                              = 345;
    SIGMA_12YC                              = 5047;
    SIGMA_23YT                              = 5046;
    SIGMA_23YC                              = 5048;
    SIGMA_3YT                               = 2015;
    SIGMA_3YC                               = 2016;
    SIGMA_13YT                              = 2017;
    SIGMA_13YC                              = 2018;
    ALPHA                                   = 349;
    EF                                      = 363;
    C                                       = 155;
    EPS_RATE_0                              = 156;
    ICC                                     = 5039;
	DUMMY                                   = -1;
	REF_RHO_OPTION                          = 4285;
}

DRAWABLES(COMMON) {
    private:
    MAT_EA                  = SCALAR(E11);     
    MAT_EB                  = SCALAR(E22);     
    MAT_EC                  = SCALAR(E33);
    MAT_PRAB                = SCALAR(NU12);    
    MAT_PRBC                = SCALAR(NU23);    
    MAT_PRCA                = SCALAR(NU31);
    C11                     = EVAL(1./MAT_EA);    
    C22                     = EVAL(1./MAT_EB);    
    C33                     = EVAL(1./MAT_EC);
    C12                     = EVAL(-MAT_PRAB/MAT_EA); 
    C23                     = EVAL(-MAT_PRBC/MAT_EB); 
    C13                     = EVAL(-MAT_PRCA/MAT_EC);
    MAT_DAMAGE              = EVAL(C11*C22*C33-C11*C23*C23-C12*C12*C33+C12*C13*C23+C13*C12*C23-C13*C22*C13);
    D11                     = EVAL((C22*C33-C23*C23)/MAT_DAMAGE);
    D22                     = EVAL((C11*C33-C13*C13)/MAT_DAMAGE);
    D33                     = EVAL((C11*C22-C12*C12)/MAT_DAMAGE);
    C1                      = MAX(D11,D22,D33);
public:
    INITIAL_DENSITY         = SCALAR(MAT_RHO);
    SOUND_SPEED_SOLID       = EVAL((C1/INITIAL_DENSITY)^0.5);
    //Sound speed for Shell
    YOUNG_MODULUS           = MAX(MAT_EA,MAT_EB,MAT_EC);
    SOUND_SPEED             = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
}


CHECK(COMMON)
{

    E11                                   >0.0;
    E22                                   >0.0;
    E33                                   >0.0;
    G12                                   >0.0;
    G23                                   >0.0;
    G31                                   >0.0;
    N                                     >=0.0;
    N                                     <=1.0;
    RHO_I                                 >0.0;
    C                                     >=0.0;
    EPS_RATE_0                            >=0.0;
}

DEFAULTS(COMMON)
{

    DELTA       = 0.05;
    N           = 1.0;
    F_MAX       = 1.0e10;
    SIGMA_T1    = 1.0e30;
    ICC         = 1;

}

GUI(COMMON) {
 RADIO(COMMENT_ENUM_FIELD)
    {
       ENUM_VALUE_FLAG=TRUE;
       ADD(1, "Hide in Menu/Export");
       ADD(2, "Show in Menu/Export");
       ADD(3, "Do not export");
    }
    if(COMMENT_ENUM_FIELD == 2)
       {  
         SIZE(NUM_COMMENTS);
         ARRAY(NUM_COMMENTS,"")
          {
             SCALAR(COMMENTS);
          }   
        }
		
 optional:
  FLAG(REF_RHO);
  if(REF_RHO!=FALSE){
   SCALAR(RHO_0) {  DIMENSION="density";      }
   }
 mandatory:
  SCALAR(RHO_I)  { DIMENSION="density";       }
 
  // 
  SCALAR(E11)            { DIMENSION="pressure";      }
  SCALAR(E22)            { DIMENSION="pressure";      }
  SCALAR(E33)            { DIMENSION="pressure";      }
  SCALAR(NU12)           { DIMENSION="DIMENSIONLESS"; }
  SCALAR(NU23)           { DIMENSION="DIMENSIONLESS"; }
  SCALAR(NU31)           { DIMENSION="DIMENSIONLESS"; }
  //
  SCALAR(G12)            { DIMENSION="pressure"; }
  SCALAR(G23)            { DIMENSION="pressure"; }
  SCALAR(G31)            { DIMENSION="pressure"; }

  SCALAR(SIGMA_T1)     	 { DIMENSION="pressure"; }
  SCALAR(SIGMA_T2)     	 { DIMENSION="pressure"; }
  SCALAR(SIGMA_T3)   		 { DIMENSION="pressure"; }
  SCALAR(DELTA)   			 { DIMENSION="pressure"; }
  //
  SCALAR(B)              { DIMENSION="DIMENSIONLESS"; }
  SCALAR(N)              { DIMENSION="DIMENSIONLESS"; }
  SCALAR(F_MAX)          { DIMENSION="DIMENSIONLESS"; }

  SCALAR(SIGMA_1YT)      { DIMENSION="pressure"; }
  SCALAR(SIGMA_2YT)      { DIMENSION="pressure"; }
  SCALAR(SIGMA_1YC)   	 { DIMENSION="pressure"; }
  SCALAR(SIGMA_2YC)   	 { DIMENSION="pressure"; }

  SCALAR(SIGMA_12YT)     { DIMENSION="pressure"; }
  SCALAR(SIGMA_12YC)     { DIMENSION="pressure"; }
  SCALAR(SIGMA_23YT)     { DIMENSION="pressure"; }
  SCALAR(SIGMA_23YC)     { DIMENSION="pressure"; }
  //
  SCALAR(SIGMA_3YT)      { DIMENSION="pressure"; }
  SCALAR(SIGMA_3YC)      { DIMENSION="pressure"; }
  SCALAR(SIGMA_13YT)     { DIMENSION="pressure"; }
  SCALAR(SIGMA_13YC)     { DIMENSION="pressure"; }
  //
  SCALAR(ALPHA)          { DIMENSION="DIMENSIONLESS"; }
  SCALAR(EF)             { DIMENSION="pressure"; }
  SCALAR(C)              { DIMENSION="pressure"; }
  SCALAR(EPS_RATE_0)     { DIMENSION="f"; }
  
  RADIO(ICC,"Strain rate computation") {
      ADD(0,"0: Default set to 1");
      ADD(1,"1: Strain rate effect on fmax");
      ADD(2,"2: No strain rate effect on fmax");
    }
  //
  /*
 mandatory:
  graphical SUPPORT("Support") {
    OBJECTS=(/COMPONENT/SOLID,/COMPONENT/TETRA4,/COMPONENT/3D_LIN, /COMPONENT/TETRA10);
    ADD(COMPONENT,"Parts");
  }*/
}

// File format
FORMAT(radioss90) {
  CARD_PREREAD("                    %20s",DUMMY);
  if(DUMMY!="")
  {
      ASSIGN(REF_RHO_OPTION,1,IMPORT);
  }
  else
  {
      ASSIGN(REF_RHO_OPTION,0,IMPORT);
  }
  if(REF_RHO_OPTION!=FALSE)
  {
      COMMENT("#              RHO_I               RHO_O");
      CARD("%20lg%20lg",RHO_I,RHO_0);
  }
  else{
      COMMENT("#              RHO_I");
      CARD("%20lg",RHO_I);
  }
  //
  COMMENT("#                E11                 E22                 E33");
  CARD("%20lg%20lg%20lg",E11,E22,E33);
  //
  COMMENT("#               NU12                NU23                NU31");
  CARD("%20lg%20lg%20lg",NU12,NU23,NU31);
  //
  COMMENT("#                G12                 G23                 G31");
  CARD("%20lg%20lg%20lg",G12,G23,G31);
  //
  COMMENT("#           sigma_t1            sigma_t2            sigma_t3               delta");
  CARD("%20lg%20lg%20lg%20lg",SIGMA_T1,SIGMA_T2,SIGMA_T3,DELTA);
  //
  COMMENT("#                  B                   n                fmax");
  CARD("%20lg%20lg%20lg",B,N,F_MAX);
  //
  COMMENT("#          sigma_1yt           sigma_2yt           sigma_1yc           sigma_2yc");
  CARD("%20lg%20lg%20lg%20lg",SIGMA_1YT,SIGMA_2YT,SIGMA_1YC,SIGMA_2YC);
  //
  COMMENT("#         sigma_12yt          sigma_12yc          sigma_23yt         sigma_23yc");
  CARD("%20lg%20lg%20lg%20lg",SIGMA_12YT,SIGMA_12YC,SIGMA_23YT,SIGMA_23YC);
  //
  COMMENT("#          sigma_3yt           sigma_3yc          sigma_13yt          sigma_13yc");
  CARD("%20lg%20lg%20lg%20lg",SIGMA_3YT,SIGMA_3YC,SIGMA_13YT,SIGMA_13YC);
  //
  COMMENT("#              alpha                  Ef                   c          EPS_RATE_0       ICC");
  CARD("%20lg%20lg%20lg%20lg%10d",ALPHA,EF,C,EPS_RATE_0,ICC);
  //
}
