//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Property NSTRAND Type28
//

ATTRIBUTES(COMMON)
{
    MASS                                    = VALUE(FLOAT,  " Mass Per Unit Length");
    STIFF2                                  = VALUE(FLOAT,  " Stiffness for a Length of a Unitary Length");
    DAMP2                                   = VALUE(FLOAT,  " Damping Coefficient of a Unitary Length");
    FUN_A1                                  = VALUE(FUNCT,  " Function identifier defining F = f(Epsilon )");
    FUN_B1                                  = VALUE(FUNCT,  " Function identifier defining G = f(Epsilon)");
    STRAIN1                                 = VALUE(FLOAT,  " Compression Failure Strain");
    STRAIN2                                 = VALUE(FLOAT,  " Tension Failure Strain");
    FScale11                                = VALUE(FLOAT,  " Coefficient for the Force(homogeneous to a force)");
    FScale22                                = VALUE(FLOAT,  " Coefficient for the Strain Rate(homogeneous to a force)");
    MAT_MUE1                                = VALUE(FLOAT,  " Pulley General Friction Coefficient");
    MAT_MUE2                                = VALUE(FLOAT,  " Strand General Friction Coefficient");
    NIP                                     = SIZE(" Number of Layers");
    NAME_ARRAY                              = ARRAY[NIP](STRING,  " Keyword PULLEY or STRAND");
    Nb1_arr                                 = ARRAY[NIP](INT,  " Pulley or Strand Number");
    Mu_arr                                  = ARRAY[NIP](FLOAT,  " Friction Coefficient at Pulley or Along Strand");
    
    //Attributes for HM usage 
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING,  "Entity_Comments");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Prop_Name_OR_Type                       = VALUE(INT, "");
    IO_FLAG                                 = VALUE(INT, "");
    TYPE_NO                                 = VALUE(STRING, "");
    TITLE                                   = VALUE(STRING, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    NUM_COMMENTS                            = 5110;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    DAMP2                                   = 5179;
    FUN_A1                                  =   45;
    FUN_B1                                  =  168;
    MASS                                    =  167;
    MAT_MUE1                                = 8014;
    MAT_MUE2                                = 8015;
    Mu_arr                                  = 4421;
    NAME_ARRAY                              = 7043;
    NIP                                     =  427;
    Nb1_arr                                  = 4815;
    STIFF2                                  = 5178;
    STRAIN1                                 = 4914;
    STRAIN2                                 = 4915;
    FScale11                                = 4050;
    FScale22                                = 4051;
    Prop_Name_OR_Type                       = 4537;
    TITLE                                   =   -1;
    TYPE_NO                                 =   -1;
    IO_FLAG                                 =   -1;
}

CHECK(COMMON)
{
    NIP                                     >=  0;
    NIP                                     <= 15;
}

DEFAULTS(COMMON)
{
    STRAIN1                                 = -1.0e30;
    STRAIN2                                 =  1.0e30;
    FScale22                                =     1.0;
    FScale11                                =     1.0;
    Prop_Name_OR_Type                       = 0;
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
       ENUM_VALUE_FLAG=TRUE;
       ADD(1, "1:Hide in Menu/Export");
       ADD(2, "2:Show in Menu/Export");
       ADD(3, "3:Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Prop_Name_OR_Type == 2)
    {
        ASSIGN(KEYWORD_STR, "/PROP");
        ASSIGN(KEYWORD_STR, "/TYPE28/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/PROP");
        ASSIGN(KEYWORD_STR, "/NSTRAND/");
    }
    SCALAR(MASS)        { DIMENSION="lineic_mass"; }
    SCALAR(STIFF2)      { DIMENSION="force"; }
    SCALAR(DAMP2)       { DIMENSION="QUANTITY OF MOVEMENT";}
    FUNCTION(FUN_A1){
        X_DIMENSION="DIMENSIONLESS";
        Y_DIMENSION="force";
        /FILTER/groupEnumField/1/EQ;
    }
    FUNCTION(FUN_B1){
        X_DIMENSION="f";
        if(FUN_A1 == NONE)
        {
          Y_DIMENSION="force";
        }
        else
        {
          Y_DIMENSION="DIMENSIONLESS";
        }
        /FILTER/groupEnumField/1/EQ;
    }
    SCALAR(STRAIN1);
    SCALAR(STRAIN2);
    SCALAR(FScale11)    {  DIMENSION="force"; }
    SCALAR(FScale22)    {  DIMENSION="f"; }
    SCALAR(MAT_MUE1);
    SCALAR(MAT_MUE2);
    SIZE(NIP);
    ARRAY(NIP,"Layers")
    {
        RADIO(NAME_ARRAY)
        {
            ADD("PULLEY", "PULLEY");
            ADD("STRAND", "STRAND");
        }
        SCALAR(Nb1_arr);
        SCALAR(Mu_arr);
    }
}

// File format for Radioss 130
FORMAT(radioss130) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE28/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/NSTRAND/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    COMMENT("#               Mass                   K                   C");
    CARD("%20lg%20lg%20lg",MASS,STIFF2,DAMP2);
    //
    COMMENT("#  fun_ID1   fun_ID2         Epsilon_Min         Epsilon_Max              Yscale              Xscale");
    CARD("%10d%10d%20lg%20lg%20lg%20lg",FUN_A1,FUN_B1,STRAIN1,STRAIN2,FScale11,FScale22);
    //
    COMMENT("#                Mu1                 Mu2");
    CARD("%20lg%20lg",MAT_MUE1,MAT_MUE2);
    //
    COMMENT("#     Type         k                  Mu");
    FREE_CARD_LIST(NIP)
    {
    CARD("%-10s%10d%20lg",NAME_ARRAY,Nb1_arr,Mu_arr);
    }  
}

// File format for Radioss 120
FORMAT(radioss51) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE28/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/NSTRAND/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    COMMENT("#               Mass                   K                   C");
    CARD("%20lg%20lg%20lg",MASS,STIFF2,DAMP2);
    //
    COMMENT("#  fun_ID1   fun_ID2         Epsilon_Min         Epsilon_Max");
    CARD("%10d%10d%20lg%20lg",FUN_A1,FUN_B1,STRAIN1,STRAIN2);
    //
    COMMENT("#                Mu1                 Mu2");
    CARD("%20lg%20lg",MAT_MUE1,MAT_MUE2);
    //
    COMMENT("#     Type         k                  Mu");
    FREE_CARD_LIST(NIP)
    {
    CARD("%-10s%10d%20lg",NAME_ARRAY,Nb1_arr,Mu_arr);
    }  
}
FORMAT(radioss42) {
  COMMENT("#           mass               K               C");
  CARD("%16lg%16lg%16lg",MASS,STIFF2,DAMP2);
  //
  COMMENT("#     N1      N2        epsi_min        epsi_max");
  CARD("%8d%8d%16lg%16lg",FUN_A1,FUN_B1,STRAIN1,STRAIN2);
  //
  COMMENT("#            Mu1             Mu2");
  CARD("%16lg%16lg",MAT_MUE1,MAT_MUE2);
  //
  COMMENT("#   TYPE       k              Mu");
  FREE_CARD_LIST(NIP)
  {
    CARD("%-8s%8d%16lg",NAME_ARRAY,Nb1_arr,Mu_arr);
  }
}
