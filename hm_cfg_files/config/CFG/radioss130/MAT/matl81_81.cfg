//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.

// Material law 81 (DPRAG with Cap) Setup File


ATTRIBUTES(COMMON) {
    KEYWORD_STR             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS            = SIZE("NUM_COMMENTS");
    CommentEnumField        = VALUE(INT,"User Comments");
    COMMENTS                = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    MAT_RHO                 = VALUE(FLOAT,"Initial Density");
    Refer_Rho               = VALUE(FLOAT,"Reference Density (for lower than 14.0 version)");
    DUMMY                   = VALUE(STRING,"Dummy variable for Ref_Rho flag");
    MAT_REFRHO_Option       = VALUE(INT, "RefRho_Option");
    K0                      = VALUE(FLOAT, "Scale Factor for Bulk Modulus");
    MAT_G0                  = VALUE(FLOAT, "Scale factor for Shear Modulus");
    MAT_Beta                = VALUE(FLOAT, "Friction Angle");
    Psi                     = VALUE(FLOAT, "Plastic Flow Angle");
    MAT_ALPHA               = VALUE(FLOAT, "Ratio pa/pb");
    MAT_EPS                 = VALUE(FLOAT, "Maximum Dilatancy");
    MAT_SRP                 = VALUE(FLOAT, "Initial Value of the Plastic Volumetric Strain");
    FUN_A1                  = VALUE(FUNCT, "Function Defining the Evolution of Bulk Modulus Vs the Plastic Volumetric Strain");
    FUN_A2                  = VALUE(FUNCT, "Function Defining the Evolution of Shear Modulus Vs the Plastic Volumetric Strain");
    FUN_A3                  = VALUE(FUNCT, "Function Defining C Vs the Plastic Volumetric Strain");
    FUN_A4                  = VALUE(FUNCT, "Function Defining pb Vs the Plastic Volumetric Strain");
    Iflag                   = VALUE(INT, "Cap Softening Flag");
    Heat_Inp_opt            = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT         = VALUE(SUBOBJECT, "");
    THERM_STRESS            = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS     = VALUE(SUBOBJECT, "");
    IO_FLAG                 = VALUE(INT, "");
    TITLE                   = VALUE(STRING,"");

}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR             = 9000;
    COMMENTS                = 5109;
    CommentEnumField        = 7951;
    MAT_REFRHO_Option       = 4285;
    MAT_RHO                 = 118;
    Refer_Rho               = 4229;
    FUN_A1                  = 45;
    FUN_A2                  = 170;
    FUN_A3                  = 172;
    FUN_A4                  = 200;
    Iflag                   = 4869;
    K0                      = 4461;
    MAT_ALPHA               = 349;
    MAT_Beta                = 5007;
    MAT_EPS                 = 195;
    MAT_G0                  = 304;
    MAT_SRP                 = 156;
    Psi                     = 822;
    NUM_COMMENTS            = 5110;
    DUMMY                   = -1;
    Heat_Inp_opt            = 4346;
    SUBGRP_HEAT_MAT         = -1;
    THERM_STRESS            = 4555;
    SUBGRP_THERM_STRESS     = -1;
    IO_FLAG                 = -1;
    TITLE                   = -1;
}

CHECK(COMMON)
{
    MAT_RHO                 >0.0;
    K0                      >=0 ;
    MAT_G0                  >=0 ;
}
DEFAULTS(COMMON) {
    Iflag                   = 0;
    MAT_ALPHA               = 0.5;
    MAT_EPS                 = -1.0e30;
}
DRAWABLES(COMMON) {
public:
    INITIAL_DENSITY   = SCALAR(MAT_RHO);
}
GUI(COMMON) 
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    ASSIGN(KEYWORD_STR, "/MAT");
    ASSIGN(KEYWORD_STR, "/LAW81/");
    
    FLAG(MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)      { DIMENSION="density";       }
    }
mandatory:
    SCALAR(MAT_RHO)      { DIMENSION="density";            }
    SCALAR(K0)           { DIMENSION="pressure";            }
    SCALAR(MAT_G0)       { DIMENSION="pressure";            }
optional:
    SCALAR(MAT_Beta)     { DIMENSION="a";      }
    SCALAR(Psi)     { DIMENSION="a";      }
    SCALAR(MAT_ALPHA) ;
    SCALAR(MAT_EPS); 
    SCALAR(MAT_SRP);
optional:
    DATA(FUN_A1);
    /*
    {
    X_TITLE     = "Plastic Volumetric Strain";
    Y_TITLE     = "Bulk Modulus";
    X_DIMENSION = "DIMENSIONLESS"; 
    Y_DIMENSION="pressure";
    }
    */
    DATA(FUN_A2);
    /*  
    {
    X_TITLE     = "Plastic Volumetric Strain";
    Y_TITLE     = "Shear Modulus";
    X_DIMENSION = "DIMENSIONLESS"; 
    Y_DIMENSION="pressure";
    }
    */
    DATA(FUN_A3);
    /*
    {
    X_TITLE     = "Plastic Volumetric Strain";            Y_TITLE     = "c";
    X_DIMENSION = "DIMENSIONLESS"; Y_DIMENSION="pressure";
    }
    */
    DATA(FUN_A4);
    /*
    {
    X_TITLE     = "Plastic Volumetric Strain";            Y_TITLE     = "Pb";
    X_DIMENSION = "DIMENSIONLESS"; Y_DIMENSION="pressure";
    }
    */
    RADIO(Iflag)
    {
        ADD(0, "0: Cap Softening is Allowed");
        ADD(1, "1: Imposes that Plastic Volumetric Strain and Pb cannot Decrease");
    }
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    } 
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    }
    /*
    mandatory:
    graphical SUPPORT("Support") {
    OBJECTS=(/COMPONENT/QUAD,/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D,/COMPONENT/PENTA6,/COMPONENT/LINEAR_THICK,
    /COMPONENT/TETRA10,/COMPONENT/SHEL16,/COMPONENT/BRIC20,/COMPONENT/SPHCEL);
    ADD(COMPONENT,"Parts");
    }
    */
}

FORMAT(radioss130) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/MAT/LAW81/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                 K0                  G0");
    CARD("%20lg%20lg",K0,MAT_G0);
    COMMENT("#               BETA                 PSI");
    CARD("%20lg%20lg",MAT_Beta,Psi);
    COMMENT("#              ALPHA             EPS_MAX               EPS_0");
    CARD("%20lg%20lg%20lg",MAT_ALPHA,MAT_EPS,MAT_SRP);
    COMMENT("#  Fct_IDK   Fct_IDG   Fct_IDc  Fct_IDPb     Isoft");
    CARD("%10d%10d%10d%10d%10d",FUN_A1,FUN_A2,FUN_A3,FUN_A4,Iflag);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
