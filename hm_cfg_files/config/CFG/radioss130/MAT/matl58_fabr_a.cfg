//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.

// Mater_file (USER) Setup File

ATTRIBUTES(COMMON) {
    KEYWORD_STR                 = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                = SIZE("NUM_COMMENTS");
    CommentEnumField            = VALUE(INT,"User Comments");
    COMMENTS                    = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    MAT_RHO                     = VALUE(FLOAT,"Initial Density");
    Refer_Rho                   = VALUE(FLOAT,"Reference Density (for lower than 14.0 version)");
    DUMMY                       = VALUE(STRING,"Dummy variable for Ref_Rho flag");
    MAT_REFRHO_Option           = VALUE(INT, "RefRho_Option");
    MAT_E1                      = VALUE(FLOAT,"Young's Modulus in Warp Direction");
    MAT_B1                      = VALUE(FLOAT,"Softening Coef. in Warp Direction");
    MAT_E2                      = VALUE(FLOAT,"Young's Modulus in Weft Direction");
    MAT_B2                      = VALUE(FLOAT,"Softening Coef. in Weft Direction");
    MAT_F                       = VALUE(FLOAT,"Fiber Flexion Modulus Reduction Fact.");
    MAT_G0                      = VALUE(FLOAT,"Initial Shear Modulus");
    MAT_GI                      = VALUE(FLOAT,"Tangent Shear Modulus");
    MAT_ALPHA                   = VALUE(FLOAT,"Shear Lock Angle");
    ISENSOR                     = VALUE(SENSOR,"Sensor Identifier") { SUBTYPES = (/SENSOR/SENSOR_DEFINE) ; }
    MAT_Df                      = VALUE(FLOAT,"Fiber Damping Coef.");
    MAT_dS                      = VALUE(FLOAT,"Friction Coefficient in Shear");
    Friction_phi                = VALUE(FLOAT,"Friction Modulus");
    a_r                         = VALUE(FLOAT,"Arel:Zero Stress Relative Area");
    M58_Zerostress              = VALUE(FLOAT,"Zerostress:Zero Stress Relative Area");
    N1_warp                     = VALUE(INT,  "Fiber Density in Warp Direction");
    N2_weft                     = VALUE(INT,  "Fiber Density in Weft Direction");
    S1                          = VALUE(FLOAT,"Nominal Stretch in Warp Direction");
    S2                          = VALUE(FLOAT,"Nominal Stretch in Weft Direction");
    MAT_C4                      = VALUE(FLOAT,"Fiber Bending Modulus Reduction Factor in Warp Direction");
    MAT_C5                      = VALUE(FLOAT,"Fiber Bending Modulus Reduction Factor in Weft Direction");
    stress_strain_curve_opt     = VALUE(INT,   "Stress/Strain is Defined by Curve");
    FUN_A1                      = VALUE(FUNCT, "Function Defining Stress Vs Strain in Warp Direction");
    MAT_C1                      = VALUE(FLOAT,"Scale Factor for Ordinate of FUN_A1");
    FUN_A2                      = VALUE(FUNCT, "Function Defining Stress Vs Strain in Weft Direction");
    MAT_C2                      = VALUE(FLOAT,"Scale Factor for Ordinate of FUN_A2");
    FUN_A3                      = VALUE(FUNCT, "Function Defining Shear Stress Vs the Angle Between Fiber Directions (axes of anisotropy)");
    MAT_C3                      = VALUE(FLOAT,"Scale Factor for Ordinate of FUN_A3");
    IO_FLAG                     = VALUE(INT, "");
    LAW_NO                      = VALUE(STRING, "");
    Mat_Name_OR_LawNo           = VALUE(INT, "");
    TITLE                       = VALUE(STRING,"");
    Heat_Inp_opt                = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT             = VALUE(SUBOBJECT, "");
    THERM_STRESS                = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS         = VALUE(SUBOBJECT, "");
    LEAK_MAT_INPUT              = VALUE(INT,  "LEAK_MAT_INPUT");
    SUBGRP_LEAK_MAT             = VALUE(SUBOBJECT,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                 = 9000;
    COMMENTS                    = 5109;
    CommentEnumField            = 7951;
    MAT_REFRHO_Option           = 4285;
    MAT_RHO                     = 118;
    Refer_Rho                   = 4229;
    FUN_A1                      = 45;
    FUN_A2                      = 170;
    FUN_A3                      = 172;
    Friction_phi                = 4586;
    ISENSOR                     = 5157;
    M58_Zerostress              = 4579;
    MAT_ALPHA                   = 349;
    MAT_B1                      = 6134;
    MAT_B2                      = 6135;
    MAT_C1                      = 1501;
    MAT_C2                      = 1502;
    MAT_C3                      = 1503;
    MAT_C4                      = 1504;
    MAT_C5                      = 1505;
    MAT_Df                      = 123;
    MAT_E1                      = 1127;
    MAT_E2                      = 1129;
    MAT_F                       = 6136;
    MAT_G0                      = 304;
    MAT_GI                      = 305;
    MAT_dS                      = 4273;
    N1_warp                     = 4375;
    N2_weft                     = 4376;
    S1                          = 4377;
    S2                          = 4378;
    stress_strain_curve_opt     = 828;
    a_r                         = 4390;
    NUM_COMMENTS                = 5110;
    Heat_Inp_opt                = 4346;
    SUBGRP_HEAT_MAT             = -1;
    THERM_STRESS                = 4555;
    SUBGRP_THERM_STRESS         = -1;
    LEAK_MAT_INPUT              = 2900;
    SUBGRP_LEAK_MAT             = -1;
    DUMMY                       = -1;
    Mat_Name_OR_LawNo           = 4538;
    LAW_NO                      = -1;
    IO_FLAG                     = -1;
    TITLE                       = -1;
}
DRAWABLES(COMMON) {
    public:
    INITIAL_DENSITY         = SCALAR(MAT_RHO);
    MAT_E1                  = SCALAR(MAT_E1);
    MAT_E2                  = SCALAR(MAT_E2);
    YOUNG_MODULUS           = MAX(MAT_E1,MAT_E2);
    public:
    SOUND_SPEED             = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
    private:
    G                 = EVAL(YOUNG_MODULUS/2);
    C1                = EVAL(YOUNG_MODULUS/3);
public:
    SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/INITIAL_DENSITY)^0.5);
}

CHECK(COMMON)
{
    MAT_Df                      >0.0;
    MAT_Df                      <1.0;
    MAT_E1                      >0.0;
    MAT_E2                      >0.0;
    MAT_RHO                     >0.0;
}

DEFAULTS(COMMON)
{
    MAT_B1                      = 0.00;
    MAT_B2                      = 0.00;
    MAT_C1                      = 1.0;
    MAT_C2                      = 1.0;
    MAT_C3                      = 1.0;
    MAT_Df                      = 0.05;
    MAT_F                       = 0.01;
    MAT_dS                      = 0.00;
    N1_warp                     = 1;
    N2_weft                     = 1;
    S1                          = 0.1;
    S2                          = 0.1;
    Mat_Name_OR_LawNo           = 0;
}

GUI(COMMON) {
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Mat_Name_OR_LawNo ==2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW58/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/FABR_A/");

    }   
    FLAG(MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)      { DIMENSION="density";       }
    }
mandatory:
    SCALAR(MAT_RHO)     { DIMENSION="density";            }
optional:
    SCALAR(MAT_E1)      { DIMENSION="pressure";      }
    SCALAR(MAT_B1)      { DIMENSION="pressure"; }
    SCALAR(MAT_E2)      { DIMENSION="pressure";      }
    SCALAR(MAT_B2)      { DIMENSION="pressure"; }
    SCALAR(MAT_F)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_G0)      { DIMENSION="pressure";      }
    SCALAR(MAT_GI)      { DIMENSION="pressure";      }
    SCALAR(MAT_ALPHA)   { DIMENSION="a";   }
    DATA(ISENSOR);
    SCALAR(MAT_Df)      { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_dS)      { DIMENSION="DIMENSIONLESS"; }
    SCALAR(Friction_phi){ DIMENSION="pressure";      }
    // a_r suppressed in 11.0
    //SCALAR(a_r)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(M58_Zerostress) { DIMENSION="DIMENSIONLESS"; }
    SCALAR(N1_warp)     { DIMENSION="DIMENSIONLESS"; }
    SCALAR(N2_weft)     { DIMENSION="DIMENSIONLESS"; }
    SCALAR(S1)          { DIMENSION="DIMENSIONLESS"; }
    SCALAR(S2)          { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_C4)      { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_C5)      { DIMENSION="DIMENSIONLESS"; }
    FLAG(stress_strain_curve_opt);
    if(stress_strain_curve_opt ==  TRUE)
    {
        DATA(FUN_A1);
        SCALAR(MAT_C1)     { DIMENSION="pressure"; }
        DATA(FUN_A2);
        SCALAR(MAT_C2)     { DIMENSION="pressure"; }
        DATA(FUN_A3);
        SCALAR(MAT_C3)     { DIMENSION="pressure"; }
    }
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }

    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    } 
    graphical FLAG(LEAK_MAT_INPUT);
    if(LEAK_MAT_INPUT != 0){
        SUBOBJECT(SUBGRP_LEAK_MAT) {SUBTYPES = (/SUBOBJECT/LEAK);}
    }
    /*
    graphical SUPPORT("Support") {
    OBJECTS=(/COMPONENT/SHELL);
    ADD(COMPONENT,"Parts");
    } 
    */  
}  

FORMAT(radioss130) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if (IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW58/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/FABR_A/%d", _ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                 E1                  B1                  E2                  B2                Flex");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_E1,MAT_B1,MAT_E2,MAT_B2,MAT_F);
    COMMENT("#                 G0                  GT              AlphaT                               sensor_ID");
    CARD("%20lg%20lg%20lg                              %10d",MAT_G0,MAT_GI,MAT_ALPHA,ISENSOR);
    COMMENT("#                 Df                  Ds               GFROT                             ZERO_STRESS");
    CARD("%20lg%20lg%20lg                    %20lg",MAT_Df,MAT_dS,Friction_phi,M58_Zerostress);
    COMMENT("#       N1        N2                  S1                  S2               FLEX1               FLEX2");
    CARD("%10d%10d%20lg%20lg%20lg%20lg",N1_warp,N2_weft,S1,S2,MAT_C4,MAT_C5);
    if(IO_FLAG == 0 && stress_strain_curve_opt == TRUE)
    {
        COMMENT("#  FCT_ID1                       Fscale1");
        CARD("%10d          %20lg",FUN_A1,MAT_C1);
        COMMENT("#  FCT_ID2                       Fscale2");
        CARD("%10d          %20lg",FUN_A2,MAT_C2);
        COMMENT("#  FCT_ID3                       Fscale3");
        CARD("%10d          %20lg",FUN_A3,MAT_C3);
    }
    else if(IO_FLAG == 1)
    {
        COMMENT("#  FCT_ID1                       Fscale1");
        FREE_CARD(stress_strain_curve_opt,"%10d          %20lg",FUN_A1,MAT_C1);
        COMMENT("#  FCT_ID2                       Fscale2");
        FREE_CARD(stress_strain_curve_opt,"%10d          %20lg",FUN_A2,MAT_C2);
        COMMENT("#  FCT_ID3                       Fscale3");
        FREE_CARD(stress_strain_curve_opt,"%10d          %20lg",FUN_A3,MAT_C3);
    }
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(LEAK_MAT_INPUT != 0)
    {
        SUBOBJECTS(SUBGRP_LEAK_MAT, /SUBOBJECT/LEAK);
    }
}
FORMAT(radioss110) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if (IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW58/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/FABR_A/%d", _ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                 E1                  B1                  E2                  B2                FLEX");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_E1,MAT_B1,MAT_E2,MAT_B2,MAT_F);
    COMMENT("#                 G0                  GT              AlphaT                               sensor_ID");
    CARD("%20lg%20lg%20lg                              %10d",MAT_G0,MAT_GI,MAT_ALPHA,ISENSOR);
    COMMENT("#                 Df                  Ds               GFROT                             ZERO_STRESS");
    CARD("%20lg%20lg%20lg                    %20lg",MAT_Df,MAT_dS,Friction_phi,M58_Zerostress);
    COMMENT("#       N1        N2                  S1                  S2");
    CARD("%10d%10d%20lg%20lg",N1_warp,N2_weft,S1,S2);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(LEAK_MAT_INPUT != 0)
    {
        SUBOBJECTS(SUBGRP_LEAK_MAT, /SUBOBJECT/LEAK);
    }
}
FORMAT(radioss100) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if (IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW58/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/FABR_A/%d", _ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                 E1                  B1                  E2                  B2                FLEX");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_E1,MAT_B1,MAT_E2,MAT_B2,MAT_F);
    COMMENT("#                 G0                  GT              AlphaT                               sensor_ID");
    CARD("%20lg%20lg%20lg                              %10d",MAT_G0,MAT_GI,MAT_ALPHA,ISENSOR);
    COMMENT("#                 Df                  Ds                Arel                             ZERO_STRESS");
    CARD("%20lg%20lg                    %20lg%20lg",MAT_Df,MAT_dS,a_r,M58_Zerostress);
    COMMENT("#       N1        N2                  S1                  S2");
    CARD("%10d%10d%20lg%20lg",N1_warp,N2_weft,S1,S2);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(LEAK_MAT_INPUT != 0)
    {
        SUBOBJECTS(SUBGRP_LEAK_MAT, /SUBOBJECT/LEAK);
    }
}
FORMAT(radioss90) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if (IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW58/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/FABR_A/%d", _ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                 E1                  B1                  E2                  B2                FLEX");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_E1,MAT_B1,MAT_E2,MAT_B2,MAT_F);
    COMMENT("#                 G0                  GT              AlphaT");
    CARD("%20lg%20lg%20lg",MAT_G0,MAT_GI,MAT_ALPHA);
    COMMENT("#                 Df                  Ds                                    AREL         ZERO_STRESS");
    CARD("%20lg%20lg                    %20lg%20lg",MAT_Df,MAT_dS,a_r,M58_Zerostress);
    COMMENT("#       N1        N2                  S1                  S2");
    CARD("%10d%10d%20lg%20lg",N1_warp,N2_weft,S1,S2);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(LEAK_MAT_INPUT != 0)
    {
        SUBOBJECTS(SUBGRP_LEAK_MAT, /SUBOBJECT/LEAK);
    }
}
FORMAT(radioss51) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if (IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW58/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/FABR_A/%d", _ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#        Init. dens.          Ref. dens.");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#        Init. dens.");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                 E1                  B1                  E2                  B2                FLEX");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_E1,MAT_B1,MAT_E2,MAT_B2,MAT_F);
    COMMENT("#                 G0                  GT              AlphaT");
    CARD("%20lg%20lg%20lg",MAT_G0,MAT_GI,MAT_ALPHA);
    COMMENT("#                 Df                  Ds");
    CARD("%20lg%20lg",MAT_Df,MAT_dS);
    COMMENT("#       N1        N2                  S1                  S2");
    CARD("%10d%10d%20lg%20lg",N1_warp,N2_weft,S1,S2);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
FORMAT(radioss44) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if (IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW58/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/FABR_A/%d", _ID_);
        CARD("%-100s", TITLE);
    }
    COMMENT("#    Init. dens.");
    CARD("%16lg",MAT_RHO);
    COMMENT("#             E1              B1              E2              B2            FLEX");
    CARD("%16lg%16lg%16lg%16lg%16lg",MAT_E1,MAT_B1,MAT_E2,MAT_B2,MAT_F);
    COMMENT("#             G0              GT          AlphaT");
    CARD("%16lg%16lg%16lg",MAT_G0,MAT_GI,MAT_ALPHA);
    COMMENT("#             Df              Ds");
    CARD("%16lg%16lg",MAT_Df,MAT_dS);
    COMMENT("#     N1      N2              S1              S2");
    CARD("%8d%8d%16lg%16lg",N1_warp,N2_weft,S1,S2);
}