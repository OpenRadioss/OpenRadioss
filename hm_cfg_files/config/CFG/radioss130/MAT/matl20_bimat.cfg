//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material law 20 (BIMAT) Setup File
ATTRIBUTES(COMMON) {
    KEYWORD_STR                     = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                    = SIZE("NUM_COMMENTS");
    CommentEnumField                = VALUE(INT,"User Comments");
    COMMENTS                        = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    // Initial volumic mass
    MAT_RHO                         = VALUE(FLOAT, "Initial Density");
    Refer_Rho                       = VALUE(FLOAT, "Reference Density (Used in Equation of State)");
    // Other values
    MAT1                            = VALUE(MAT,"1st Material (ALE or Euler Material)");
    MAT2                            = VALUE(MAT,"2nd Material (ALE or Euler Material)");
    MAT_ALPHA1                      = VALUE(FLOAT,"Ratio of 1st Material");
    MAT_ALPHA2                      = VALUE(FLOAT,"Ratio of 2nd Material");
    IC1                             = VALUE(INT,"Optional Flag for Incoming mat_ID1 Control"); 
    IC2                             = VALUE(INT,"Optional Flag for Incoming mat_ID2 Control"); 
    IDISCRETE                       = VALUE(INT,"Optional Flag for Discrete Filling"); 
    // HEAT
    Heat_Inp_opt                    = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT                 = VALUE(SUBOBJECT, "");
    // THERM_STRESS
    THERM_STRESS                    = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS             = VALUE(SUBOBJECT, "");
    ALE_Form                        = VALUE(INT, "Flag for Heat Transfer Formulation");
    SUBGRP_ALE_MAT                  = VALUE(SUBOBJECT, "");
    SUBGRP_EULER_MAT                = VALUE(SUBOBJECT, "");
    Mat_Name_OR_LawNo               = VALUE(INT, "");
    TITLE                           = VALUE(STRING,"");
    IO_FLAG                         = VALUE(INT, "");
    LAW_NO                          = VALUE(STRING, "");
}
DRAWABLES(COMMON) {
public:
    INITIAL_DENSITY         = SCALAR(MAT_RHO);
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                     = 9000;
    COMMENTS                        = 5109;
    CommentEnumField                = 7951;
    MAT_RHO                         = 118;
    Refer_Rho                       = 4229;
    NUM_COMMENTS                    = 5110;
    IC1                             = 308;
    IC2                             = 309;
    IDISCRETE                       = 310;
    MAT1                            = 5277;
    MAT2                            = 5278;
    MAT_ALPHA1                      = 375;
    MAT_ALPHA2                      = 377;
    Mat_Name_OR_LawNo               = 4538;
    LAW_NO                          = -1;
    IO_FLAG                         = -1;
    TITLE                           = -1;
    //HEAT
    Heat_Inp_opt                    = 4346;
    SUBGRP_HEAT_MAT                 = -1;
    // THERM_STRESS
    THERM_STRESS                    = 4555;
    SUBGRP_THERM_STRESS             = -1;
    ALE_Form                        = 4336;
    SUBGRP_ALE_MAT                  = -1;
    SUBGRP_EULER_MAT                = -1;
}

CHECK(COMMON) {
    MAT_ALPHA1                      >=0;
    MAT_ALPHA1                      <=1;
    MAT_ALPHA2                      >=0;
    MAT_ALPHA2                      <=1;
}

DEFAULTS(COMMON) {
}

GUI(COMMON) {
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Mat_Name_OR_LawNo ==2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW20/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/BIMAT/");
    }
    mandatory:
        graphical DATA(MAT1);
        graphical DATA(MAT2); 
    optional:
        //FLAG(IC1);
        //FLAG(IC2);
        //FLAG(IDISCRETE);
        RADIO(IC1)
        {
            ADD(0,"");
            ADD(1,"");
        }
        RADIO(IC2)
        {
            ADD(0,"");
            ADD(1,"");
        }
        RADIO(IDISCRETE)
        {
            ADD(0,"");
            ADD(1,"");
        }
        SCALAR(MAT_ALPHA1);
        SCALAR(MAT_ALPHA2);
        // HEAT data
        graphical FLAG(Heat_Inp_opt);
        if (Heat_Inp_opt!= 0) {
            SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
        } 
        // THERM_STRESS
        graphical FLAG(THERM_STRESS);
        if (THERM_STRESS!= 0) {
            SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
        }
    /*
    optional:
    graphical SUPPORT("Support") {
    OBJECTS=(/COMPONENT/QUAD);
    ADD(COMPONENT,"Parts");
    }
    */
}

GUI(ALE) {
    optional:
        graphical RADIO(ALE_Form) 
        {
            ADD(1,"NONE");
            ADD(2,"ALE");
            ADD(3,"EULER");
        }
        if(ALE_Form == 2)
        {    
            SUBOBJECT(SUBGRP_ALE_MAT) {SUBTYPES = (/SUBOBJECT/ALE_MAT);}
        }
        else if(ALE_Form == 3)
        {
            SUBOBJECT(SUBGRP_EULER_MAT) {SUBTYPES = (/SUBOBJECT/EULER);}
        }
}
FORMAT(radioss130) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW20/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/BIMAT/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    COMMENT("#        BLANK CARD                     ");
    BLANK ;
    COMMENT("#  mat_ID1   mat_ID2                                     IC1       IC2 Idiscrete");
    CARD("%10d%10d                              %10d%10d%10d", MAT1, MAT2,IC1,IC2,IDISCRETE);
    COMMENT("#             Alpha1              Alpha2");
    CARD("%20lg%20lg", MAT_ALPHA1, MAT_ALPHA2);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(ALE_Form == 2)
    {
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
    }
}
FORMAT(radioss90) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW20/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/BIMAT/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    COMMENT("#              RHO_I               RHO_0");
    CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    COMMENT("#  mat_ID1   mat_ID2");
    CARD("%10d%10d", MAT1, MAT2);
    COMMENT("#             Alpha1              Alpha2");
    CARD("%20lg%20lg", MAT_ALPHA1, MAT_ALPHA2);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(ALE_Form == 2)
    {
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
    }
}
FORMAT(radioss51) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW20/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/BIMAT/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    COMMENT("#        Init. dens.          Ref. dens.");
    CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    COMMENT("#     Mat1      Mat2");
    CARD("%10d%10d", MAT1, MAT2);
    COMMENT("#             Alpha1              Alpha2");
    CARD("%20lg%20lg", MAT_ALPHA1, MAT_ALPHA2);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(ALE_Form == 2)
    {
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
    }
}
