//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Detonation load Setup File
// 

ATTRIBUTES(COMMON) {
  // Data
  magnitude                = VALUE(FLOAT,       "Laser intensity scale factor");
  _EXPAND_SET              = VALUE(INT,         "Expand set");
  
  distribution_table_count = SIZE("Number of plasma elements between laser and target");
  
  curveid                  = VALUE(FUNCT,       "Laser intensity time function number");
  rad_det_s_target         = VALUE(FLOAT,       "Target absorption scale factor");
  rad_det_fct_id_target    = VALUE(FUNCT,       "Target absorption temperature function number");
  rad_det_hn               = VALUE(FLOAT,       "Plasma parameter");
  rad_det_vcp              = VALUE(FLOAT,       "Enthalpy of vaporization");
  rad_det_k0               = VALUE(FLOAT,       "Inverse bremsstrahlung coefficient K0");
  rad_det_rd               = VALUE(FLOAT,       "Inverse bremsstrahlung coefficient Rd/KB");
  rad_det_ks               = VALUE(FLOAT,       "Compliment absorption in vapor");
  rad_det_nc               = VALUE(MULTIOBJECT, "Target element number") { SUBTYPES = (  /ELEMS  );}
  location_unit_element    = ARRAY[distribution_table_count](MULTIOBJECT,  "List of plasma elements (i=1,..., Np)") { SUBTYPES = (  /ELEMS );}
}

DEFINITIONS(COMMON) 
{
    MAINS               = (location_unit_element);
}

DEFAULTS(COMMON)
{
    _EXPAND_SET                  = 1; 
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    _EXPAND_SET                  = -1; 
}

GUI(COMMON) {
  SCALAR(magnitude, "SLAS")                 { DIMENSION = "DIMENSIONLESS"; }
 mandatory:
  FUNCTION(curveid) {
    X_TITLE="TIME";        X_DIMENSION="t";
    Y_TITLE="LASER INTENSITY";
  }
  SCALAR(rad_det_s_target)     { DIMENSION="k"; } 
  FUNCTION(rad_det_fct_id_target) {
    X_SCALING(rad_det_s_target);
    X_TITLE="TEMPERATURE";        X_DIMENSION="k";
    Y_TITLE="LASER INTENSITY";
  }

 /* mandatory:
 graphical SUPPORT("Plasma elements") {
    OBJECTS=(QUAD);
    ADD(ADD_ELTS);
  }*/

 mandatory:
  SCALAR(rad_det_hn, "Hn")      { DIMENSION="k"; }
  SCALAR(rad_det_vcp, "VCp")    { DIMENSION="thermal_massic_capacity"; }
  SCALAR(rad_det_k0, "K0")      { DIMENSION="length_x_5"; }
  SCALAR(rad_det_rd, "Rd")      { DIMENSION="k"; }
  SCALAR(rad_det_ks, "KS")      { DIMENSION="compliment_absorption"; }
  SCALAR(rad_det_nc, "Nc")      { DIMENSION="DIMENSIONLESS"; }

  SIZE(distribution_table_count);
  ARRAY(distribution_table_count, "Np")
  {
      DATA(location_unit_element, "IEL");
  }
}

// File format
FORMAT(radioss130) {
  HEADER("/DFS/LASER/%-d",_ID_);
  COMMENT("#               SLAS fct_IDLAS                          STAR fct_IDTAR");
  CARD("%20lg%10d          %20lg%10d",magnitude,curveid,rad_det_s_target,rad_det_fct_id_target);
  
  COMMENT("#                 Hn                 VCp                  K0                  Rd                  Ks");
  CARD("%20lg%20lg%20lg%20lg%20lg",rad_det_hn,rad_det_vcp,rad_det_k0,rad_det_rd,rad_det_ks);
  
  COMMENT("#       Np        Nc");
  CARD("%10d%10d",distribution_table_count,rad_det_nc);
  
  COMMENT("#      IEL       IEL       IEL       IEL       IEL       IEL       IEL       IEL       IEL       IEL");
  FREE_CELL_LIST(distribution_table_count,"%10d",location_unit_element,100) ;
}


