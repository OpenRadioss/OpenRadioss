//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /INIBRI/FAIL  subobject file
//

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    // Card 1
    brick_ID                                  = VALUE(ELEMS, "Element identifier");
    Nlay                                      = SIZE("Number of layers");
    nptr                                      = VALUE(INT, "Number of integration points in direction r");
    npts                                      = VALUE(INT, "Number of integration points in direction s");
    nptt                                      = VALUE(INT, "Number of integration points in direction t");
    lay_ID                                    = VALUE(PLY, "Layer to initialize identifier");
    fail_ID                                   = VALUE(FAIL, "Failure criteria to initialize identifier");
    Ifail_typ                                 = VALUE(INT, "Failure criteria to initialize type");
    Nvar                                      = SIZE("Number of failure criteria variables to initialize");
    mat_ID                                    = VALUE(MATERIAL, "Material identifier to initialize");

    // Card 2
    num_lines                                 = SIZE("Number of lines");
    V                                         = ARRAY [num_lines][Nvar](FLOAT, "N^th failure criteria variable value");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    // Card 1
    brick_ID                                  = -1;
    Nlay                                      = -1;
    nptr                                      = -1;
    npts                                      = -1;
    nptt                                      = -1;
    lay_ID                                    = -1;
    fail_ID                                   = -1;
    Ifail_typ                                 = -1;
    Nvar                                      = -1;
    mat_ID                                    = -1;

    // Card 2
    num_lines                                 = -1;
    V                                         = -1;
}

CHECK(COMMON)
{
/*    Nvar                                      >= 0;
    Nvar                                      <= 5;*/
}

DEFAULTS(COMMON)
{
}

GUI(COMMON)
{
    // Card 1
    DATA(brick_ID, "brick_ID");
    SCALAR(Nlay);
    SCALAR(nptr, "nptr")                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(npts, "npts")                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(nptt, "nptt")                      { DIMENSION = "DIMENSIONLESS"; }
    DATA(lay_ID, "lay_ID");
    DATA(fail_ID, "fail_ID");
    SCALAR(Ifail_typ, "Ifail_typ")            { DIMENSION = "DIMENSIONLESS"; }
    DATA(mat_ID, "mat_ID");
    
    // Card 2
    SIZE(Nvar);
    ASSIGN(num_lines, nptr*npts*nptt);
    SIZE(num_lines,  "num_lines");
    ARRAY(num_lines, "num_lines")
    {
        SCALAR(V, "V")                 { DIMENSION = "DIMENSIONLESS" ; }
    }
}

// File format
FORMAT(radioss130)
{
    // Card 1
    COMMENT("# brick_ID      Nlay      nptr      npts      nptt    lay_ID   fail_ID Ifail_typ      Nvar    mat_ID");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10d%10d%10d", brick_ID, Nlay, nptr, npts, nptt, lay_ID, fail_ID, Ifail_typ, Nvar, mat_ID);

    // Card 2
    ASSIGN(num_lines, nptr*npts*nptt);
    COMMENT("#                 Vi                  Vj                  Vk");
    CARD_LIST(num_lines)
    {
        CELL_LIST(Nvar,"%20lg", V,60);
    }
    // Card 2
//    LIST("%20lg", V, Nvar); //  Nvar values needs to be written for each integration point of the elements as a block of Nvar variable Vi with 3 variables per line
}
