//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//  *ELEMENT_SEATBELT_SENSOR subobject file
//

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    // Card 1
    SBSTYP                                  = VALUE(INT, "Sensor type");
    SBSFL                                   = VALUE(INT, "Sensor Flag");

    // Card 2a: Additional card for SBSTYP = 1
    NID                                     = VALUE(NODE, "Node ID of sensor");
    DOF                                     = VALUE(INT, "Degree of freedom");
    ACC                                     = VALUE(FLOAT, "Activating acceleration");
    ATIME                                   = VALUE(FLOAT, "Time over which acceleration must be exceeded");

    // Card 2b: Additional card for SBSTYP = 2
    ESS_SBRID                               = VALUE(RETRACTOR, "Retractor ID", "SBRID");
    PULRAT                                  = VALUE(FLOAT, "Rate of pull-out (length/time units)");
    PULTIM                                  = VALUE(FLOAT, "Time over which rate of pull-out must be exceeded");

    // Card 2c: Additional card for SBSTYP = 3
    TIME                                    = VALUE(FLOAT, "Time at which sensor triggers");

    // Card 2d: Additional card for SBSTYP = 4
    NID1                                    = VALUE(NODE, "Node 1 ID");
    NID2                                    = VALUE(NODE, "Node 2 ID");
    DMX                                     = VALUE(FLOAT, "Maximum distance");
    DMN                                     = VALUE(FLOAT, "Minimum distance");

    // Card 2e: Additional card for SBSTYP = 5
    LSD_Seatbelt_SBRID                      = VALUE(RETRACTOR, "Retractor ID", "SBRID");
    LSD_PULMX                               = VALUE(FLOAT, "Maximum pull-out", "PULMX");
    LSD_PULMN                               = VALUE(FLOAT, "Minimum pull-out", "PULMN");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    // Card 1
    SBSTYP                                  = 2771;
    SBSFL                                   = 2772;

    // Card 2a
    NID                                     = 2773;
    DOF                                     = 2774;
    ACC                                     = 2775;
    ATIME                                   = 2776;

    // Card 2b
    ESS_SBRID                               = 2896;
    PULRAT                                  = 2777;
    PULTIM                                  = 2778;

    // Card 2c
    TIME                                    = 2779;

    // Card 2d
    NID1                                    = 2780;
    NID2                                    = 2781;
    DMX                                     = 2782;
    DMN                                     = 2783;

    // Card 2e
    LSD_Seatbelt_SBRID                      = 2833;
    LSD_PULMX                               = 11744;
    LSD_PULMN                               = 11745;
}

DEFAULTS(COMMON)
{
    // Card
    SBSFL                                   = 0;
    ACC                                     = 0.0;
    ATIME                                   = 0.0;
    PULRAT                                  = 0.0;
    PULTIM                                  = 0.0;
    TIME                                    = 0.0;
    DMX                                     = 0.0;
    DMN                                     = 0.0;
    LSD_PULMX                               = 10e16;
    LSD_PULMN                               = -10e16;
}

CHECK(COMMON)
{

}

GUI(COMMON)
{

  // Card 1
  RADIO(SBSTYP, "SBSTYP")
  {
      ADD(1, "1: Acceleration of node");
      ADD(2, "2: Retractor pull-out rate");
      ADD(3, "3: Time");
      ADD(4, "4: Distance between nodes");
      ADD(5, "5: Reatractor pull-out");
  }

  RADIO(SBSFL, "SBSFL")
  {
      ADD(0,"0: Sensor is not active during dynamic relaxation");
      ADD(1,"1: Sensor can be triggered during dynamic relaxation");
  }

  // Card 2a: Additional card for SBSTYP = 1
  if(SBSTYP == 1)
  {
    DATA(NID, "NID");

    RADIO(DOF, "DOF")
    {
      ADD(1, "1: x");
      ADD(2, "2: y");
      ADD(3, "3: z");
    }

    SCALAR(ACC, "ACC")                      { DIMENSION = "acceleration"; }
    SCALAR(ATIME, "ATIME")                  { DIMENSION = "t"; }
  }


  // Card 2b: Additional card for SBSTYP = 2
  if(SBSTYP == 2)
  {
    DATA(ESS_SBRID, "SBRID");
    SCALAR(PULRAT, "PULRAT")                { DIMENSION = "velocity"; }
    SCALAR(PULTIM, "PULTIM")                { DIMENSION = "t"; }
  }

  // Card 2c: Additional card for SBSTYP = 3
  if(SBSTYP == 3)
  {
    SCALAR(TIME, "TIME")                    { DIMENSION = "t"; }
  }

  // Card 2d: Additional card for SBSTYP = 4
  if(SBSTYP == 4)
  {
    DATA(NID1, "NID1");
    DATA(NID2, "NID2");

    SCALAR(DMX, "DMX")                      { DIMENSION = "l"; }
    SCALAR(DMN, "DMN")                      { DIMENSION = "l"; }
  }

  // Card 2e: Additional card for SBSTYP = 5
  if(SBSTYP == 5)
  {
    DATA(LSD_Seatbelt_SBRID, "SBRID");

    SCALAR(LSD_PULMX, "PULMX")              { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(LSD_PULMN, "PULMN")              { DIMENSION = "DIMENSIONLESS"; }
  }
}

// File format
FORMAT(Keyword971_R6.1)
{
    // Card 1
    COMMENT("$    SBSID    SBSTYP     SBSFL");
    CARD("%10d%10d%10d", _ID_, SBSTYP, SBSFL);

    // Card 2a: Additional card for SBSTYP = 1
    if(SBSTYP == 1)
    {
      COMMENT("$      NID       DOF       ACC     ATIME");
      CARD("%10d%10d%10lg%10lg", NID, DOF, ACC, ATIME);
    }
    else if(SBSTYP == 2)  // Card 2b: Additional card for SBSTYP = 2
    {
      COMMENT("$    SBRID    PULRAT    PULTIM");
      CARD("%10d%10lg%10lg", ESS_SBRID, PULRAT, PULTIM);
    }
    else if(SBSTYP == 3)  // Card 2c: Additional card for SBSTYP = 3
    {
      COMMENT("$     TIME");
      CARD("%10lg", TIME);
    }
    else if(SBSTYP == 4)  // Card 2d: Additional card for SBSTYP = 4
    {
      COMMENT("$     NID1      NID2       DMX       DMN");
      CARD("%10d%10d%10lg%10lg", NID1, NID2, DMX, DMN);
    }
}

FORMAT(Keyword971_R12.0)
{
    // Card 1
    COMMENT("$    SBSID    SBSTYP     SBSFL");
    CARD("%10d%10d%10d", _ID_, SBSTYP, SBSFL);

    // Card 2a: Additional card for SBSTYP = 1
    if(SBSTYP == 1)
    {
      COMMENT("$      NID       DOF       ACC     ATIME");
      CARD("%10d%10d%10lg%10lg", NID, DOF, ACC, ATIME);
    }
    else if(SBSTYP == 2)  // Card 2b: Additional card for SBSTYP = 2
    {
      COMMENT("$    SBRID    PULRAT    PULTIM");
      CARD("%10d%10lg%10lg", ESS_SBRID, PULRAT, PULTIM);
    }
    else  if(SBSTYP == 3)  // Card 2c: Additional card for SBSTYP = 3
    {
      COMMENT("$     TIME");
      CARD("%10lg", TIME);
    }
    else if(SBSTYP == 4)  // Card 2d: Additional card for SBSTYP = 4
    {
      COMMENT("$     NID1      NID2       DMX       DMN");
      CARD("%10d%10d%10lg%10lg", NID1, NID2, DMX, DMN);
    }
    else  if(SBSTYP == 5) // Card 2e: Additional card for SBSTYP = 5
    {
      COMMENT("$    SBRID     PULMX     PULMN");
      CARD("%10d%10lg%10lg", LSD_Seatbelt_SBRID, LSD_PULMX, LSD_PULMN);
    }
}