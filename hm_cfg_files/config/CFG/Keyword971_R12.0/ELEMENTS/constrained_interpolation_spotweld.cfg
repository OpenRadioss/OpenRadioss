//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//  *CONSTRAINED_INTERPOLATION_SPOTWELD
//

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    // Card 1
    LSD_PID1         = VALUE(COMPONENT, "Part ID of first sheet", "PID1");
    LSD_PID2         = VALUE(COMPONENT, "Part ID of second sheet", "PID2");
    LSD_NSID         = VALUE(SETS, "Node set ID of spotweld location nodes", "NSID") { SUBTYPES = (/SETS/SET_NODE_IDPOOL) ; }
    LSD_THICK        = VALUE(FLOAT, "Total thickness of both sheets", "THICK");
    LSD_R            = VALUE(FLOAT, "Spotweld radius", "R");
    LSD_STIFF        = VALUE(FLOAT, "Elastic stiffness", "STIFF");
    LSD_ALPHA1       = VALUE(FLOAT, "Scaling factor alpha1", "ALPHA1");
    LSD_MODEL        = VALUE(FLOAT, "Material behavior and damage model", "MODEL");

    // Card 2
    LSD_RN           = VALUE(FLOAT, "Tensile strength factor, Rn", "RN");
    LSD_RS           = VALUE(FLOAT, "Shear strength factor, Rs", "RS");
    LSD_BETA1        = VALUE(FLOAT, "Exponent for plastic potential Beta1", "BETA");
    LSD_LCF          = VALUE(CURVE, "Load curve or table ID", "LCF");
    LSD_LCUPF        = VALUE(CURVE, "Load curve ID describing plastic initiation displacement", "LCUPF");
    LSD_LCUPR        = VALUE(CURVE, "Load curve ID describing plastic rupture displacement", "LCUPR");
    LSD_DENS         = VALUE(FLOAT, "Spotweld density", "DENS");
    LSD_INTP         = VALUE(FLOAT, "Flag for interpolation", "INTP");

    // Card 3 This card is included when MODEL = 2, 12, or 22.
    LSD_UPFN         = VALUE(FLOAT, "Plastic initiation displacement in normal direction", "UPFN");
    LSD_UPFS         = VALUE(FLOAT, "Plastic initiation displacement in shear direction", "UPFS");
    LSD_ALPHA2       = VALUE(FLOAT, "Plastic initiation displacement scaling factor", "ALPHA2");
    LSD_BETA2        = VALUE(FLOAT, "Exponent for plastic initiation displacement", "BETA2");
    LSD_UPRN         = VALUE(FLOAT, "Plastic rupture displacement in normal direction", "UPRN");
    LSD_UPRS         = VALUE(FLOAT, "Plastic rupture displacement in shear direction", "UPRS");
    LSD_ALPHA3       = VALUE(FLOAT, "Plastic rupture displacement scaling factor", "ALPHA3");
    LSD_BETA3        = VALUE(FLOAT, "Exponent for plastic rupture displacement", "BETA3");

    // Card 4 This card is included when MODEL = 2, 12, or 22
    LSD_MRN          = VALUE(FLOAT, "Proportionality factor for dependency", "MRN");
    LSD_MRS          = VALUE(FLOAT, "Proportionality factor for dependency", "MRS");

    // Card 5 This card is read only when MODEL = 1, 11, or 21. It is optional
    LSD_STIFF2       = VALUE(FLOAT, "Elastic shear stiffness", "STIFF2");
    LSD_STIFF3       = VALUE(FLOAT, "Elastic bending stiffness", "STIFF3");
    LSD_STIFF4       = VALUE(FLOAT, "Elastic torsional stiffness", "STIFF4");
    LSD_LCDEXP       = VALUE(FLOAT, "Load curve for damage exponent as a function of mode mixity", "LCDEXP");
    LSD_GAMMA        = VALUE(FLOAT, "Scaling factor", "GAMMA");
    LSD_SROPT        = VALUE(FLOAT, "Shear rotation option that defines local kinematics system", "SROPT");
    LSD_PIDVB        = VALUE(FLOAT, "Part ID for beams used to represent SPR3 in post-processing", "PIDVB");

    // HM INTERNAL
    KEYWORD_STR      = VALUE(STRING, "Solver Keyword");
    optional_card_5  = SIZE("Optional Card 5 for MODEL = 1, 11, or 21");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    // INPUT ATTRIBUTE

    // Card 1
    LSD_PID1         = -1;
    LSD_PID2         = -1;
    LSD_NSID         = -1;
    LSD_THICK        = -1;
    LSD_R            = -1;
    LSD_STIFF        = -1;
    LSD_ALPHA1       = -1;
    LSD_MODEL        = -1;

    // Card 2 
    LSD_RN           = -1;
    LSD_RS           = -1;
    LSD_BETA1        = -1;
    LSD_LCF          = -1;
    LSD_LCUPF        = -1;
    LSD_LCUPR        = -1;
    LSD_DENS         = -1;
    LSD_INTP         = -1;

    // Card 3  
    LSD_UPFN         = -1;
    LSD_UPFS         = -1;
    LSD_ALPHA2       = -1;
    LSD_BETA2        = -1;
    LSD_UPRN         = -1;
    LSD_UPRS         = -1;
    LSD_ALPHA3       = -1;
    LSD_BETA3        = -1;

    // Card 4 
    LSD_MRN          = -1;
    LSD_MRS          = -1;

    // Card 5 
    LSD_STIFF2       = -1;
    LSD_STIFF3       = -1;
    LSD_STIFF4       = -1;
    LSD_LCDEXP       = -1;
    LSD_GAMMA        = -1;
    LSD_SROPT        = -1;
    LSD_PIDVB        = -1;

    // HM INTERNAL
    KEYWORD_STR      = 9000;
    optional_card_5  = -1;
}

DEFAULTS(COMMON)
{
    LSD_MODEL        = 1.0;
    LSD_INTP         = 0.0;
    LSD_LCDEXP       = 0.0;
    LSD_GAMMA        = 0.0;
    LSD_SROPT        = 0.0;
    LSD_PIDVB        = 0.0;
}

CHECK(COMMON)
{

}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*CONSTRAINED_INTERPOLATION_SPOTWELD");
    DATA(LSD_PID1,"PID1");
    DATA(LSD_PID2,"PID2");
    DATA(LSD_NSID,"NSID");
    SCALAR(LSD_THICK, "THICK")   {DIMENSION="l";} //check dim
    SCALAR(LSD_R, "R")           {DIMENSION="l";} //check dim
    SCALAR(LSD_STIFF, "STIFF")   {DIMENSION="stiffness";} //check dim
    SCALAR(LSD_ALPHA1, "ALPHA1") {DIMENSION="DIMENSIONLESS";}
    RADIO(LSD_MODEL, "MODEL")
    {
        ADD(1.0, "SPR3 (default)");
        ADD(2.0, "SPR4");
        ADD(11.0, "Same as 1 with selected material parameters as functions");
        ADD(12.0, "Same as 2 with selected material parameters as functions");
        ADD(21.0, "Same as 11 with slight modification");
        ADD(22.0, "Same as 12 with slight modification");
    }
    SCALAR(LSD_RN, "RN") {DIMENSION="pressure";} //check dim
    SCALAR(LSD_RS, "RS") {DIMENSION="pressure";} //check dim
    SCALAR(LSD_BETA1, "BETA1") {DIMENSION="DIMENSIONLESS";}
    DATA(LSD_LCF, "LCF");
    DATA(LSD_LCUPF, "LCUPF");
    DATA(LSD_LCUPR, "LCUPR");
    SCALAR(LSD_DENS, "DENS") {DIMENSION="DIMENSIONLESS";} //check dim
    RADIO(LSD_INTP, "INTP")
    {
        ADD(0.0, "Linear (default)");
        ADD(1.0, "Uniform");
        ADD(2.0, "Inverse distance weighting");
    }
    if(LSD_MODEL== 2.0 || LSD_MODEL== 12.0 || LSD_MODEL== 22.0)
    {
        SCALAR(LSD_UPFN, "UPFN")   {DIMENSION="DIMENSIONLESS";} //check dim
        SCALAR(LSD_UPFS, "UPFS")   {DIMENSION="DIMENSIONLESS";} //check dim
        SCALAR(LSD_ALPHA2, "ALPHA2") {DIMENSION="DIMENSIONLESS";} //check dim
        SCALAR(LSD_BETA2, "BETA2")  {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_UPRN, "UPRN")   {DIMENSION="DIMENSIONLESS";} //check dim
        SCALAR(LSD_UPRS, "UPRS")   {DIMENSION="DIMENSIONLESS";} //check dim
        SCALAR(LSD_ALPHA3, "ALPHA3") {DIMENSION="DIMENSIONLESS";} //check dim
        SCALAR(LSD_BETA3, "BETA3")  {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MRN, "MRN")  {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MRS, "MRS")  {DIMENSION="DIMENSIONLESS";}
    }
    if(LSD_MODEL== 1.0 || LSD_MODEL== 11.0 || LSD_MODEL== 21.0)
    {
        SCALAR(LSD_STIFF2, "STIFF2")  {DIMENSION="DIMENSIONLESS";} //check dim
        SCALAR(LSD_STIFF3, "STIFF3")  {DIMENSION="DIMENSIONLESS";} //check dim
        SCALAR(LSD_STIFF4, "STIFF2")  {DIMENSION="DIMENSIONLESS";} //check dim
        SCALAR(LSD_LCDEXP, "LCDEXP")  {DIMENSION="DIMENSIONLESS";} //check dim
        SCALAR(LSD_GAMMA, "GAMMA")    {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_SROPT, "SROPT")    {DIMENSION="DIMENSIONLESS";} //check dim
        SCALAR(LSD_PIDVB, "PIDVB")    {DIMENSION="DIMENSIONLESS";} //check dim
    }
}

// File format
FORMAT(Keyword971_R6.1)
{
  HEADER("*CONSTRAINED_INTERPOLATION_SPOTWELD");

  //  Card 1
  COMMENT("$     PID1      PID2      NSID     THICK         R     STIFF    ALPHA1");
  CARD("%10d%10d%10d%10lg%10lg%10lg%10lg", LSD_PID1, LSD_PID2, LSD_NSID, LSD_THICK, LSD_R, LSD_STIFF, LSD_ALPHA1);

  //  Card 2
  COMMENT("$       RN        RS      BETA       LCF     LCUPF     LCUPR      DENS      INTP");
  CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg", LSD_RN, LSD_RS, LSD_BETA1, LSD_LCF, LSD_LCUPF, LSD_LCUPR, LSD_DENS, LSD_INTP);
}

FORMAT(Keyword971_R8.0)
{
  HEADER("*CONSTRAINED_INTERPOLATION_SPOTWELD");

  //  Card 1
  COMMENT("$     PID1      PID2      NSID     THICK         R     STIFF    ALPHA1     MODEL");
  CARD("%10d%10d%10d%10lg%10lg%10lg%10lg%10lg", LSD_PID1, LSD_PID2, LSD_NSID, LSD_THICK, LSD_R, LSD_STIFF, LSD_ALPHA1, LSD_MODEL);

  //  Card 2
  COMMENT("$       RN        RS      BETA       LCF     LCUPF     LCUPR      DENS      INTP");
  CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg", LSD_RN, LSD_RS, LSD_BETA1, LSD_LCF, LSD_LCUPF, LSD_LCUPR, LSD_DENS, LSD_INTP);

  //  Additional Card for MODEL = 2, 12, or 22
  if(LSD_MODEL == 2 || LSD_MODEL == 12 || LSD_MODEL == 22)
  {
    //  Card 3
    COMMENT("$     UPFN      UPFS    ALPHA2     BETA2      UPRN      UPRS    ALPHA3     BETA3");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg", LSD_UPFN, LSD_UPFS, LSD_ALPHA2, LSD_BETA2, LSD_UPRN, LSD_UPRS, LSD_ALPHA3, LSD_BETA3);

    //  Card 4
    COMMENT("$      MRN       MRS");
    CARD("%10lg%10lg", LSD_MRN, LSD_MRS);
  }
}

FORMAT(Keyword971_R11.1)
{
  HEADER("*CONSTRAINED_INTERPOLATION_SPOTWELD");

  //  Card 1
  COMMENT("$     PID1      PID2      NSID     THICK         R     STIFF    ALPHA1     MODEL");
  CARD("%10d%10d%10d%10lg%10lg%10lg%10lg%10lg", LSD_PID1, LSD_PID2, LSD_NSID, LSD_THICK, LSD_R, LSD_STIFF, LSD_ALPHA1, LSD_MODEL);

  //  Card 2
  COMMENT("$       RN        RS     BETA1       LCF     LCUPF     LCUPR      DENS      INTP");
  CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg", LSD_RN, LSD_RS, LSD_BETA1, LSD_LCF, LSD_LCUPF, LSD_LCUPR, LSD_DENS, LSD_INTP);

  //  Additional Card for MODEL = 2, 12, or 22
  if(LSD_MODEL == 2 || LSD_MODEL == 12 || LSD_MODEL == 22)
  {
    //  Card 3
    COMMENT("$     UPFN      UPFS    ALPHA2     BETA2      UPRN      UPRS    ALPHA3     BETA3");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg", LSD_UPFN, LSD_UPFS, LSD_ALPHA2, LSD_BETA2, LSD_UPRN, LSD_UPRS, LSD_ALPHA3, LSD_BETA3);

    //  Card 4
    COMMENT("$      MRN       MRS");
    CARD("%10lg%10lg", LSD_MRN, LSD_MRS);
  }

  //  Additional Card for MODEL = 1, 11, or 21
  if(LSD_MODEL == 1 || LSD_MODEL == 11 || LSD_MODEL == 21)
  {
    //  Card 5
    COMMENT("$   STIFF2    STIFF3    STIFF4    LCDEXP     GAMMA     SROPT");
    FREE_CARD_LIST(optional_card_5)
    {
      CARD("%10lg%10lg%10lg%10lg%10lg%10lg", LSD_STIFF2, LSD_STIFF3, LSD_STIFF4, LSD_LCDEXP, LSD_GAMMA, LSD_SROPT);
    }
  }
}

FORMAT(Keyword971_R12.0)
{
  HEADER("*CONSTRAINED_INTERPOLATION_SPOTWELD");

  //  Card 1
  COMMENT("$     PID1      PID2      NSID     THICK         R     STIFF    ALPHA1     MODEL");
  CARD("%10d%10d%10d%10lg%10lg%10lg%10lg%10lg", LSD_PID1, LSD_PID2, LSD_NSID, LSD_THICK, LSD_R, LSD_STIFF, LSD_ALPHA1, LSD_MODEL);

  //  Card 2
  COMMENT("$       RN        RS     BETA1       LCF     LCUPF     LCUPR      DENS      INTP");
  CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg", LSD_RN, LSD_RS, LSD_BETA1, LSD_LCF, LSD_LCUPF, LSD_LCUPR, LSD_DENS, LSD_INTP);

  //  Additional Card for MODEL = 2, 12, or 22
  if(LSD_MODEL == 2 || LSD_MODEL == 12 || LSD_MODEL == 22)
  {
    //  Card 3
    COMMENT("$     UPFN      UPFS    ALPHA2     BETA2      UPRN      UPRS    ALPHA3     BETA3");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg", LSD_UPFN, LSD_UPFS, LSD_ALPHA2, LSD_BETA2, LSD_UPRN, LSD_UPRS, LSD_ALPHA3, LSD_BETA3);

    //  Card 4
    COMMENT("$      MRN       MRS");
    CARD("%10lg%10lg", LSD_MRN, LSD_MRS);
  }

  //  Additional Card for MODEL = 1, 11, or 21
  if(LSD_MODEL == 1 || LSD_MODEL == 11 || LSD_MODEL == 21)
  {
    //  Card 5
    COMMENT("$   STIFF2    STIFF3    STIFF4    LCDEXP     GAMMA     SROPT     PIDVB");
    FREE_CARD_LIST(optional_card_5)
    {
      CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg", LSD_STIFF2, LSD_STIFF3, LSD_STIFF4, LSD_LCDEXP, LSD_GAMMA, LSD_SROPT, LSD_PIDVB);
    }
  }
}