//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
ATTRIBUTES(COMMON)
{
    
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    EncTypeEnumField                        = VALUE(INT,  "Type");
    RegTypeEnumField                        = VALUE(INT,  "Type");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    IO_FLAG                                 = VALUE(INT, "io flag");
    _HMCOMMENTSFLAG                         = VALUE(INT, "Write HM Comments");
    TITLE                                   = VALUE(STRING, "Title");

    Rho                                     = VALUE(FLOAT,  "Mass density");
    E                                       = VALUE(FLOAT,  "Youngs modulus");
    Nu                                      = VALUE(FLOAT,  "Poissons ratio");
    LSD_MAT_SIGY                            = VALUE(FLOAT,  "Initial yield stress");
    LSD_MAT_A                               = VALUE(FLOAT,  "Exponent of Hershey yield criterion");
    LSD_KSI                                 = VALUE(FLOAT,  "Coefficient governing critical strain increment for substepping");
    LSD_THETA1                              = VALUE(FLOAT,  "Initial hardening modulus of R1");
    LSD_Q1                                  = VALUE(FLOAT,  "Saturation value of R1");
    LSD_THETA2                              = VALUE(FLOAT,  "Initial hardening modulus of R2");
    LSD_Q2                                  = VALUE(FLOAT,  "Saturation value of R2");
    LSD_THETA3                              = VALUE(FLOAT,  "Initial hardening modulus of R3");
    LSD_Q3                                  = VALUE(FLOAT,  "Saturation value of R3");
    LSD_CS                                  = VALUE(FLOAT, "Rate sensitivity of flow stress");
    LSD_PDOTS                               = VALUE(FLOAT, "Reference strain rate");
    LSD_DCRIT                               = VALUE(FLOAT,"Critical damage");
    LSD_WCB                                 = VALUE(FLOAT, "Constant defining the damage evolution");
    LSD_WCL                                 = VALUE(FLOAT, "Constant defining the damage evolution");
    LSD_WCS                                 = VALUE(FLOAT, "Constant defining the damage evolution");
    LSD_CC                                  = VALUE(FLOAT, "Constant defining the damage evolution");
    LSD_MAT_PHI                             = VALUE(FLOAT, "Constant defining the damage evolution");
    LSD_GAMMA                               = VALUE(FLOAT, "Constant defining the damage evolution");
    LSD_THICK                               = VALUE(FLOAT, "Element thickness if using shell formulation 16");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    EncTypeEnumField                        = 5828;
    Num_Comments                            = 3101;
    RegTypeEnumField                        = 5827;
    Rho                                     = 118;
    E                                       = 119;
    LSD_TitleOpt                            = 90;
    Nu                                      = 120;
    LSD_MAT_SIGY                            = 307;
    LSD_MAT_A                               = 310;
    LSD_KSI                                 = 9119;
    LSD_THETA1                              = 4818;
    LSD_Q1                                  = 2101;
    LSD_THETA2                              = 4821;
    LSD_Q2                                  = 2102;
    LSD_THETA3                              = 9120;
    LSD_Q3                                  = 9121;
    LSD_CS                                  = 9122;
    LSD_PDOTS                               = 9123;
    LSD_DCRIT                               = 6089;
    LSD_WCB                                 = 9124;
    LSD_WCL                                 = 9125;
    LSD_WCS                                 = 9126;
    LSD_CC                                  = 3189;
    LSD_MAT_PHI                             = 1123;
    LSD_GAMMA                               = 4336;
    LSD_THICK                               = 7976;
    IO_FLAG                                 = -1;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*MAT_NON_QUADRATIC_FAILURE");
    RADIO(CommentEnumField)
    {
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do not export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
            SCALAR(Comments);
        }
    }
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == TRUE)
    {
        ASSIGN(KEYWORD_STR, "_TITLE");
    }
mandatory:
    SCALAR(Rho)        {DIMENSION="density";}
    SCALAR(E)          {DIMENSION="pressure";}
    SCALAR(Nu)         {DIMENSION="DIMENSIONLESS";}
optional:

    SCALAR(LSD_MAT_SIGY)    {DIMENSION="pressure";}
    SCALAR(LSD_MAT_A)       {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_KSI)         {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_THETA1)      {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_Q1)          {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_THETA2)      {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_Q2)          {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_THETA3)      {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_Q3)          {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_CS)          {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_PDOTS)       {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_DCRIT)       {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_WCB)         {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_WCL)         {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_WCS)         {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_CC)          {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT_PHI)     {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_GAMMA)       {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_THICK)       {DIMENSION="DIMENSIONLESS";}
}

FORMAT(Keyword971_R12.0)
{
    COMMENT("$      MID       RHO         E        PR      SIGY         A       KSI");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,Nu,LSD_MAT_SIGY,LSD_MAT_A,LSD_KSI);

    COMMENT("$   THETA1        Q1    THETA2        Q2    THETA3        Q3");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_THETA1,LSD_Q1,LSD_THETA2,LSD_Q2,LSD_THETA3,LSD_Q3);

    COMMENT("$       CS     PDOTS");
    CARD("%10lg%10lg",LSD_CS,LSD_PDOTS);

    COMMENT("$    DCRIT       WCB       WCL       WCS        CC       PHI     GAMMA     THICK");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_DCRIT,LSD_WCB,LSD_WCL,LSD_WCS,LSD_CC,LSD_MAT_PHI,LSD_GAMMA,LSD_THICK);
}
