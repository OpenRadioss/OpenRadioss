//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law SB_MAT
//

ATTRIBUTES(COMMON)
{
    LSD_LCID                                = VALUE(FUNCT,  "Curve or table ID for loading");
    LSD_LCID2                               = VALUE(FUNCT,  "force vs. engineering strain");
    LSD_MAT_CSE                             = VALUE(FLOAT,  "Optional compressive stress elimination option");
    LSD_MAT_DAMP                            = VALUE(FLOAT,  "Optional Rayleigh damping coefficient");
    LSD_MIN                                 = VALUE(FLOAT,  "Minimum length");
    LSD_MPUL                                = VALUE(FLOAT,  "Mass per unit length");
    LSD_MAT_SEATBELT_A                      = VALUE(FLOAT,  "Cross sectional area for bending/compression stiffness");
    LSD_MAT_SEATBELT_AS                     = VALUE(FLOAT,  "Shear area for bending/compression stiffness");
    LSD_MAT_SEATBELT_E                      = VALUE(FLOAT,  "Young’s modulus for bending/compression stiffness");
    LSD_MAT_SEATBELT_F                      = VALUE(FLOAT,  "Maximum force in compression/tension");
    LSD_MAT_SEATBELT_I                      = VALUE(FLOAT,  "Area moment of inertia for bending/compression stiffness");
    LSD_MAT_SEATBELT_J                      = VALUE(FLOAT,  "Torsional constant for bending/compression stiffness");
    LSD_MAT_SEATBELT_M                      = VALUE(FLOAT,  "Maximum torque");
    LSD_MAT_SEATBELT_P1D0FF                 = VALUE(INT,  "Part ID offset for internally created 1D");
    LSD_MAT_SEATBELT_R                      = VALUE(FLOAT,  "Rotational mass scaling factor");
    LSD_MAT_SEATBELT_FORM                   = VALUE(INT,  "Formulation of the translated frabic material");
    LSD_MATL34_ECOAT                        = VALUE(FLOAT, "Youngs modulus of coat material");
    LSD_MATL34_SCOAT                        = VALUE(FLOAT, "Yield stress of coat material");
    LSD_MATL34_TCOAT                        = VALUE(FLOAT, "Thickness of coat material");
    LSDYNA_EB                               = VALUE(FLOAT, "EB Young’s modulus along a transverse direction");
    LSD_MAT_PRBA                            = VALUE(FLOAT, "Minor Poisson's ratio ba direction");
    LSD_MAT_PRAB                            = VALUE(FLOAT, "Major Poissons ratio ab direction");
    LSD_MAT_GAB                             = VALUE(FLOAT, "Shear modulus in the ab direction"); 
    
    LSD_MAT_SEATBELT_2D                     = VALUE(INT,  "2Doption");
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    IO_FLAG                                 = VALUE(INT, "io flag");
    OPT_TYPE_STR                            = VALUE(STRING, "OPT");
    TITLE                                   = VALUE(STRING, "Title");
    _HAS_HEADER                             = VALUE(BOOL,"Has Header Card");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSD_LCID                                = 45;
    LSD_LCID2                               = 168;
    LSD_MAT_CSE                             = 1117;
    LSD_MAT_DAMP                            = 1121;
    LSD_MAT_SEATBELT_2D                     = 8106;
    LSD_MAT_SEATBELT_A                      = 8099;
    LSD_MAT_SEATBELT_AS                     = 8102;
    LSD_MAT_SEATBELT_E                      = 8098;
    LSD_MAT_SEATBELT_F                      = 8103;
    LSD_MAT_SEATBELT_I                      = 8100;
    LSD_MAT_SEATBELT_J                      = 8101;
    LSD_MAT_SEATBELT_M                      = 8104;
    LSD_MAT_SEATBELT_P1D0FF                 = 8107;
    LSD_MAT_SEATBELT_R                      = 8105;
    LSD_MIN                                 = 1653;
    LSD_MPUL                                = 1652;
    LSD_MAT_SEATBELT_FORM                   = 6329;
    LSD_MATL34_ECOAT                        = 6194;
    LSD_MATL34_SCOAT                        = 6195;
    LSD_MATL34_TCOAT                        = 6196;
    LSDYNA_EB                               = 127;
    LSD_MAT_PRBA                            = 329;
    LSD_MAT_PRAB                            = 6328;
    LSD_MAT_GAB                             = 332;  
    LSD_TitleOpt                            = 90;
    Num_Comments                            = 3101;
    IO_FLAG                                 = -1;
    OPT_TYPE_STR                            = -1;
    TITLE                                   = -1;
    _HAS_HEADER                             = -1;
}

DEFAULTS(COMMON)
{
    LSD_MAT_DAMP            = 0.0;
    LSD_MAT_SEATBELT_A      = 0.0;
    LSD_MAT_SEATBELT_AS     = 0.0;
    LSD_MAT_SEATBELT_E      = 0.0;
    LSD_MAT_SEATBELT_F      = 1.0e+20;
    LSD_MAT_SEATBELT_I      = 0.0;
    LSD_MAT_SEATBELT_J      = 0.0;
    LSD_MAT_SEATBELT_M      = 1.0e+20;
    LSD_MAT_SEATBELT_P1D0FF    = 0;
    LSD_MAT_SEATBELT_R      = 0.05;
    _HAS_HEADER             = TRUE;
}

DRAWABLES(COMMON) {
public:
  MASS_PER_UNIT_LENGTH=SCALAR(LSD_MPUL);
  MINIMUM_LENGTH=SCALAR(LSD_MIN);
}

GUI(COMMON)
{
     ASSIGN(KEYWORD_STR, "*MAT_SEATBELT");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }
     FLAG(LSD_MAT_SEATBELT_2D);
     if(LSD_MAT_SEATBELT_2D == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_2D");
     }
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
        ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(LSD_MPUL)                   {DIMENSION="lineic_mass";}
    FUNCTION(LSD_LCID)
    {
      X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
      Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
      Z_TITLE = "Strain Rate"; Z_DIMENSION = "strain_rate";
    }
    FUNCTION(LSD_LCID2)
    {
      X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
      Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
    }
     SCALAR(LSD_MIN)                    {DIMENSION="l";}
 optional:
     RADIO(LSD_MAT_CSE)
     {
        ADD(0.0, "0.0: Eliminate compressive stresses in shell fabric");
        ADD(1.0, "1.0: Dont eliminate compressive stresses, dont use if retractors and sliprings are present");
        ADD(2.0, "2.0: Whether or not compressive stresses is eliminated its decided by LS-DYNA automatically");
     }
     SCALAR(LSD_MAT_DAMP);
     SCALAR(LSD_MAT_SEATBELT_E)                   {DIMENSION="pressure";}
     if(LSD_MAT_SEATBELT_E > 0)
     {
         SCALAR(LSD_MAT_SEATBELT_A)                   {DIMENSION="area";}
         SCALAR(LSD_MAT_SEATBELT_I);
         SCALAR(LSD_MAT_SEATBELT_J);
         SCALAR(LSD_MAT_SEATBELT_AS)                   {DIMENSION="area";}
         SCALAR(LSD_MAT_SEATBELT_F)                   {DIMENSION="force";}
         SCALAR(LSD_MAT_SEATBELT_M)                   {DIMENSION="moment";}
         SCALAR(LSD_MAT_SEATBELT_R);
     }
     if(LSD_MAT_SEATBELT_2D == TRUE)
     {
        SCALAR(LSD_MAT_SEATBELT_P1D0FF);
        SCALAR(LSD_MAT_SEATBELT_FORM);                        
        SCALAR(LSD_MATL34_ECOAT)                   {DIMENSION="pressure";}               
        SCALAR(LSD_MATL34_SCOAT)                   {DIMENSION="pressure";}                
        SCALAR(LSD_MATL34_TCOAT)                   {DIMENSION="l";}               
        SCALAR(LSDYNA_EB)                   {DIMENSION="pressure";}                      
        SCALAR(LSD_MAT_PRBA);  
        SCALAR(LSD_MAT_PRAB);
        SCALAR(LSD_MAT_GAB)                   {DIMENSION="pressure";}              
     }
/*
 optional:
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/TRUSS,/COMPONENT/SHELL);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);

    if(IO_FLAG == 2 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_SEATBELT");
    }   
    else if(IO_FLAG == 2 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_SEATBELT_TITLE");
        CARD("%-80s", TITLE);
    }

    COMMENT("$      MID      MPUL     LLCID     ULCID      LMIN       CSE      DAMP");
    CARD("%10d%10lg%10d%10d%10lg%10lg%10lg",_ID_,LSD_MPUL,LSD_LCID,LSD_LCID2,LSD_MIN,LSD_MAT_CSE,LSD_MAT_DAMP);
}

FORMAT(Keyword971_R6.1)
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);

    if(IO_FLAG == 2 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_SEATBELT");
    }   
    else if(IO_FLAG == 2 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_SEATBELT_TITLE");
        CARD("%-80s", TITLE);
    }

    COMMENT("$      MID      MPUL     LLCID     ULCID      LMIN       CSE      DAMP");
    CARD("%10d%10lg%10d%10d%10lg%10lg%10lg",_ID_,LSD_MPUL,LSD_LCID,LSD_LCID2,LSD_MIN,LSD_MAT_CSE,LSD_MAT_DAMP);
}

FORMAT(Keyword971_R8.0) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);

    if(IO_FLAG == 1)
    {
        HEADER("*MAT_B01%9s",OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR != "_2D" || OPT_TYPE_STR != "_2D_TITLE"))
    {
         HEADER("*MAT_SEATBELT%9s", OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "_2D" || OPT_TYPE_STR == "_2D_TITLE"))
    {
        ASSIGN(LSD_MAT_SEATBELT_2D, 1);
    }
    if(IO_FLAG == 2 && LSD_MAT_SEATBELT_2D == 0 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_SEATBELT");
    }   
    else if(IO_FLAG == 2 && LSD_MAT_SEATBELT_2D == 0 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_SEATBELT_TITLE");
        CARD("%-80s", TITLE);
    }
    else if(IO_FLAG == 2 && LSD_MAT_SEATBELT_2D == 1 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_SEATBELT_2D");
    }   
    else if(IO_FLAG == 2 && LSD_MAT_SEATBELT_2D == 1 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_SEATBELT_2D_TITLE");
        CARD("%-80s", TITLE);
    }

    COMMENT("$      MID      MPUL     LLCID     ULCID      LMIN       CSE      DAMP         E");
    CARD("%10d%10lg%10d%10d%10lg%10lg%10lg%10lg",_ID_,LSD_MPUL,LSD_LCID,LSD_LCID2,LSD_MIN,LSD_MAT_CSE,LSD_MAT_DAMP,LSD_MAT_SEATBELT_E);

    if(LSD_MAT_SEATBELT_E > 0)
    {
        COMMENT("$        A         I         J        AS         F         M         R");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_SEATBELT_A,LSD_MAT_SEATBELT_I,LSD_MAT_SEATBELT_J,LSD_MAT_SEATBELT_AS,LSD_MAT_SEATBELT_F,LSD_MAT_SEATBELT_M,LSD_MAT_SEATBELT_R);
    }
    if(LSD_MAT_SEATBELT_2D == TRUE)
    {
        COMMENT("$   P1DOFF");
        CARD("%10d",LSD_MAT_SEATBELT_P1D0FF);
    }
}
FORMAT(Keyword971_R12.0) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    if(IO_FLAG == 1)
    {
        HEADER("*MAT_B01%9s",OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR != "_2D" || OPT_TYPE_STR != "_2D_TITLE"))
    {
         HEADER("*MAT_SEATBELT%9s", OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "_2D" || OPT_TYPE_STR == "_2D_TITLE"))
    {
        ASSIGN(LSD_MAT_SEATBELT_2D, 1);
    }
    if(IO_FLAG == 2 && LSD_MAT_SEATBELT_2D == 0 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_SEATBELT");
    }   
    else if(IO_FLAG == 2 && LSD_MAT_SEATBELT_2D == 0 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_SEATBELT_TITLE");
        CARD("%-80s", TITLE);
    }
    else if(IO_FLAG == 2 && LSD_MAT_SEATBELT_2D == 1 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_SEATBELT_2D");
    }   
    else if(IO_FLAG == 2 && LSD_MAT_SEATBELT_2D == 1 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_SEATBELT_2D_TITLE");
        CARD("%-80s", TITLE);
    }
    COMMENT("$      MID      MPUL     LLCID     ULCID      LMIN       CSE      DAMP         E");
    CARD("%10d%10lg%10d%10d%10lg%10lg%10lg%10lg",_ID_,LSD_MPUL,LSD_LCID,LSD_LCID2,LSD_MIN,LSD_MAT_CSE,LSD_MAT_DAMP,LSD_MAT_SEATBELT_E);
    if(LSD_MAT_SEATBELT_E > 0)
    {
        COMMENT("$        A         I         J        AS         F         M         R");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_SEATBELT_A,LSD_MAT_SEATBELT_I,LSD_MAT_SEATBELT_J,LSD_MAT_SEATBELT_AS,LSD_MAT_SEATBELT_F,LSD_MAT_SEATBELT_M,LSD_MAT_SEATBELT_R);
    }
    if(LSD_MAT_SEATBELT_2D == TRUE)
    {
        COMMENT("$   P1DOFF      FORM     ECOAT     TCOAT     SCOAT        EB      PRBA      PRAB");
        CARD("%10d%10d%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_SEATBELT_P1D0FF,LSD_MAT_SEATBELT_FORM,LSD_MATL34_ECOAT,LSD_MATL34_TCOAT,LSD_MATL34_SCOAT,LSDYNA_EB,LSD_MAT_PRBA,LSD_MAT_PRAB);
        COMMENT("$      GAB");
        CARD("%10lg",LSD_MAT_GAB);
    } 
}

