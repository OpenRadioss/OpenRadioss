//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /ANIM/SPRING/FORC
//

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    ENG_ANIM_SPRING_FORC    = VALUE(INT, "Forces", "FORC");//HM INTERNAL
    KEYWORD_STR             = VALUE(STRING, "Solver Keyword");

    IOFLAG                  = VALUE(INT, "IOFLAG");
    _opt                    = VALUE(STRING, "_opt");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    ENG_ANIM_SPRING_FORC    = -1;
    //HM INTERNAL
    KEYWORD_STR             = 9000;

    IOFLAG                  = -1;
    _opt                    = -1;
}

DEFAULTS(COMMON)
{
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/ANIM/SPRING");
    FLAG(ENG_ANIM_SPRING_FORC);
}

FORMAT(radioss2017)
{
    ASSIGN(IOFLAG, 0, EXPORT);
    ASSIGN(IOFLAG, 1, IMPORT);

    if(IOFLAG == 0)
    {
        if(ENG_ANIM_SPRING_FORC == 1)
        {
            HEADER("/ANIM/SPRING/FORC");
        }
    }
    else //IMPORT
    {
        HEADER("/ANIM/SPRING/%s",_opt);
    }
}
