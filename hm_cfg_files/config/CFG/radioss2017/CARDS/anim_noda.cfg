//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//  anim_noda_dt.cfg    
// CARD anim  110 7387
// 27
ATTRIBUTES(COMMON) 
{
  // INPUT ATTRIBUTES
    ENG_ANIM_NODA_DT            = VALUE(INT, "Nodal time step", "DT");
    ENG_ANIM_NODA_DMAS          = VALUE(INT, "Mass variation (see time step control", "DMAS");
    ENG_ANIM_NODA_DINER         = VALUE(INT, "Output of added inertia per nodes", "DINER");
    ENG_ANIM_NODA_NDMAS         = VALUE(INT, "Non-diagonal mass variation", "NDMAS");
    ENG_ANIM_NODA_DAMA2         = VALUE(INT, "Damage for TYPE2 interface", "DAMA2");
    ENG_ANIM_NODA_DENS          = VALUE(INT, "Nodal density", "DENS");
    ENG_ANIM_NODA_P             = VALUE(INT, "Nodal pressure", "P");
    ENG_ANIM_NODA_TEMP          = VALUE(INT, "Nodal temperature", "TEMP");
    ENG_ANIM_NODA_VFRAC         = VALUE(INT, "Nodal volumetric fraction, used with LAW37 and LAW51", "VFRAC");
    ENG_ANIM_NODA_SSP           = VALUE(INT, "Nodal sound speed", "SSP");

    // HM INTERNAL
    KEYWORD_STR                 = VALUE(STRING, "Solver Keyword");
    dummy_str                   = VALUE(STRING,"");
    IO_FLAG                     = VALUE(INT,"");
    _has_kw                     = VALUE(INT,"");
     _HAS_HEADER                = VALUE(BOOL,"Has Header Card");
}

DEFAULTS(COMMON)
{
    _HAS_HEADER = TRUE;
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                   = 9000;
    ENG_ANIM_NODA_DT              = 7388;
    ENG_ANIM_NODA_DMAS            = 4884;
    ENG_ANIM_NODA_DINER           = 7390;
    ENG_ANIM_NODA_NDMAS           = 7391;
    ENG_ANIM_NODA_DAMA2           = 7473;
    ENG_ANIM_NODA_DENS            = 7474;
    ENG_ANIM_NODA_P               = 7475;
    ENG_ANIM_NODA_TEMP            = 7476;
    ENG_ANIM_NODA_VFRAC           = 1762;
    ENG_ANIM_NODA_SSP             = 2769;

    dummy_str                     = -1;
    IO_FLAG                       = -1;
    _has_kw                       = -1;
    _HAS_HEADER                   = -1;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/ANIM/NODA");
    FLAG(ENG_ANIM_NODA_DT);
    FLAG(ENG_ANIM_NODA_DMAS);
    FLAG(ENG_ANIM_NODA_DINER); 
    FLAG(ENG_ANIM_NODA_NDMAS); 
    FLAG(ENG_ANIM_NODA_DAMA2); 
    FLAG(ENG_ANIM_NODA_DENS); 
    FLAG(ENG_ANIM_NODA_P);   
    FLAG(ENG_ANIM_NODA_TEMP);   
    FLAG(ENG_ANIM_NODA_VFRAC);  
    FLAG(ENG_ANIM_NODA_SSP);  
    
}

// File format
FORMAT(radioss2017)
{
    ASSIGN(IO_FLAG,1,IMPORT);
    ASSIGN(IO_FLAG,0,EXPORT);

    if(IO_FLAG == 1) // import
    {
      HEADER("/ANIM/NODA/%10s",dummy_str);
      if(dummy_str == "DT")
      {
        ASSIGN(ENG_ANIM_NODA_DT,1,IMPORT);
      }
      if(dummy_str == "DMAS")
      {
        ASSIGN(ENG_ANIM_NODA_DMAS,1,IMPORT);
      }
      if(dummy_str == "DINER")
      {
        ASSIGN(ENG_ANIM_NODA_DINER,1,IMPORT);
      }
      if(dummy_str == "NDMAS")
      {
        ASSIGN(ENG_ANIM_NODA_NDMAS,1,IMPORT);
      }
      if(dummy_str == "DAMA2")
      {
        ASSIGN(ENG_ANIM_NODA_DAMA2,1,IMPORT);
      }
      if(dummy_str == "DENS")
      {
        ASSIGN(ENG_ANIM_NODA_DENS,1,IMPORT);
      }
      if(dummy_str == "P")
      {
        ASSIGN(ENG_ANIM_NODA_P,1,IMPORT);
      }       
      if(dummy_str == "SSP")
      {
        ASSIGN(ENG_ANIM_NODA_SSP,1,IMPORT);
      }
      if(dummy_str == "TEMP")
      {
        ASSIGN(ENG_ANIM_NODA_TEMP,1,IMPORT);
      }
      if(dummy_str == "VFRAC")
      {
        ASSIGN(ENG_ANIM_NODA_VFRAC,1,IMPORT);
      }
    }  
    else
    {     
      if(ENG_ANIM_NODA_DT == 1)
      {
        CARD("/ANIM/NODA/DT");
      } 
      if( ENG_ANIM_NODA_DMAS == 1)
      {
        CARD("/ANIM/NODA/DMAS");
      }
      if( ENG_ANIM_NODA_DINER == 1)
      {
        CARD("/ANIM/NODA/DINER");
      }
      if( ENG_ANIM_NODA_NDMAS == 1)
      {
        CARD("/ANIM/NODA/NDMAS");
      }
      if( ENG_ANIM_NODA_DAMA2 == 1)
      {
        CARD("/ANIM/NODA/DAMA2");
      }      
      if( ENG_ANIM_NODA_DENS == 1)
      {
        CARD("/ANIM/NODA/DENS");
      }     
      if( ENG_ANIM_NODA_P == 1)
      {
        CARD("/ANIM/NODA/P");
      }      
      if( ENG_ANIM_NODA_SSP == 1)
      {
        CARD("/ANIM/NODA/SSP");
      }    
      if( ENG_ANIM_NODA_TEMP == 1)
      {
        CARD("/ANIM/NODA/TEMP");
      }           
      if( ENG_ANIM_NODA_VFRAC == 1)
      {
        CARD("/ANIM/NODA/VFRAC");
      }
    }    
}

FORMAT(radioss41)
{
    ASSIGN(IO_FLAG,1,IMPORT);
    ASSIGN(IO_FLAG,0,EXPORT);

    if(IO_FLAG == 1) // import
    {
      HEADER("/ANIM/NODA/%10s",dummy_str);
      if(dummy_str == "DT")
      {
        ASSIGN(ENG_ANIM_NODA_DT,1,IMPORT);
      }
      if(dummy_str == "DMAS")
      {
        ASSIGN(ENG_ANIM_NODA_DMAS,1,IMPORT);
      }
    }  
    else
    {     
      if(ENG_ANIM_NODA_DT == 1)
      {
        CARD("/ANIM/NODA/DT");
      } 
      if( ENG_ANIM_NODA_DMAS == 1)
      {
        CARD("/ANIM/NODA/DMAS");
      }
    }    
}

FORMAT(radioss51)
{
    ASSIGN(IO_FLAG,1,IMPORT);
    ASSIGN(IO_FLAG,0,EXPORT);

    if(IO_FLAG == 1) // import
    {
      HEADER("/ANIM/NODA/%10s",dummy_str);
      if(dummy_str == "DT")
      {
        ASSIGN(ENG_ANIM_NODA_DT,1,IMPORT);
      }
      if(dummy_str == "DMAS")
      {
        ASSIGN(ENG_ANIM_NODA_DMAS,1,IMPORT);
      }
      if(dummy_str == "DINER")
      {
        ASSIGN(ENG_ANIM_NODA_DINER,1,IMPORT);
      }  
    }  
    else
    {     
      if(ENG_ANIM_NODA_DT == 1)
      {
        CARD("/ANIM/NODA/DT");
      } 
      if( ENG_ANIM_NODA_DMAS == 1)
      {
        CARD("/ANIM/NODA/DMAS");
      }
      if( ENG_ANIM_NODA_DINER == 1)
      {
        CARD("/ANIM/NODA/DINER");
      }
    }    
}


FORMAT(radioss90)
{
    ASSIGN(IO_FLAG,1,IMPORT);
    ASSIGN(IO_FLAG,0,EXPORT);

    if(IO_FLAG == 1) // import
    {
      HEADER("/ANIM/NODA/%10s",dummy_str);
      if(dummy_str == "DT")
      {
        ASSIGN(ENG_ANIM_NODA_DT,1,IMPORT);
      }
      if(dummy_str == "DMAS")
      {
        ASSIGN(ENG_ANIM_NODA_DMAS,1,IMPORT);
      }
      if(dummy_str == "DINER")
      {
        ASSIGN(ENG_ANIM_NODA_DINER,1,IMPORT);
      }
      if(dummy_str == "NDMAS")
      {
        ASSIGN(ENG_ANIM_NODA_NDMAS,1,IMPORT);
      }
     
    }  
    else
    {     
      if(ENG_ANIM_NODA_DT == 1)
      {
        CARD("/ANIM/NODA/DT");
      } 
      if( ENG_ANIM_NODA_DMAS == 1)
      {
        CARD("/ANIM/NODA/DMAS");
      }
      if( ENG_ANIM_NODA_DINER == 1)
      {
        CARD("/ANIM/NODA/DINER");
      }
      if( ENG_ANIM_NODA_NDMAS == 1)
      {
        CARD("/ANIM/NODA/NDMAS");
      }     
    }    
}


FORMAT(radioss110)
{
    ASSIGN(IO_FLAG,1,IMPORT);
    ASSIGN(IO_FLAG,0,EXPORT);

    if(IO_FLAG == 1) // import
    {
      HEADER("/ANIM/NODA/%10s",dummy_str);
      if(dummy_str == "DT")
      {
        ASSIGN(ENG_ANIM_NODA_DT,1,IMPORT);
      }
      if(dummy_str == "DMAS")
      {
        ASSIGN(ENG_ANIM_NODA_DMAS,1,IMPORT);
      }
      if(dummy_str == "DINER")
      {
        ASSIGN(ENG_ANIM_NODA_DINER,1,IMPORT);
      }
      if(dummy_str == "NDMAS")
      {
        ASSIGN(ENG_ANIM_NODA_NDMAS,1,IMPORT);
      }
      if(dummy_str == "DAMA2")
      {
        ASSIGN(ENG_ANIM_NODA_DAMA2,1,IMPORT);
      }

    }  
    else
    {     
      if(ENG_ANIM_NODA_DT == 1)
      {
        CARD("/ANIM/NODA/DT");
      } 
      if( ENG_ANIM_NODA_DMAS == 1)
      {
        CARD("/ANIM/NODA/DMAS");
      }
      if( ENG_ANIM_NODA_DINER == 1)
      {
        CARD("/ANIM/NODA/DINER");
      }
      if( ENG_ANIM_NODA_NDMAS == 1)
      {
        CARD("/ANIM/NODA/NDMAS");
      }
      if( ENG_ANIM_NODA_DAMA2 == 1)
      {
        CARD("/ANIM/NODA/DAMA2");
      }      

    }    
}

FORMAT(radioss120)
{
    ASSIGN(IO_FLAG,1,IMPORT);
    ASSIGN(IO_FLAG,0,EXPORT);

    if(IO_FLAG == 1) // import
    {
      HEADER("/ANIM/NODA/%10s",dummy_str);
      if(dummy_str == "DT")
      {
        ASSIGN(ENG_ANIM_NODA_DT,1,IMPORT);
      }
      if(dummy_str == "DMAS")
      {
        ASSIGN(ENG_ANIM_NODA_DMAS,1,IMPORT);
      }
      if(dummy_str == "DINER")
      {
        ASSIGN(ENG_ANIM_NODA_DINER,1,IMPORT);
      }
      if(dummy_str == "NDMAS")
      {
        ASSIGN(ENG_ANIM_NODA_NDMAS,1,IMPORT);
      }
      if(dummy_str == "DAMA2")
      {
        ASSIGN(ENG_ANIM_NODA_DAMA2,1,IMPORT);
      }
      if(dummy_str == "DENS")
      {
        ASSIGN(ENG_ANIM_NODA_DENS,1,IMPORT);
      }
      if(dummy_str == "P")
      {
        ASSIGN(ENG_ANIM_NODA_P,1,IMPORT);
      }       
      if(dummy_str == "TEMP")
      {
        ASSIGN(ENG_ANIM_NODA_TEMP,1,IMPORT);
      }
    }  
    else
    {     
      if(ENG_ANIM_NODA_DT == 1)
      {
        CARD("/ANIM/NODA/DT");
      } 
      if( ENG_ANIM_NODA_DMAS == 1)
      {
        CARD("/ANIM/NODA/DMAS");
      }
      if( ENG_ANIM_NODA_DINER == 1)
      {
        CARD("/ANIM/NODA/DINER");
      }
      if( ENG_ANIM_NODA_NDMAS == 1)
      {
        CARD("/ANIM/NODA/NDMAS");
      }
      if( ENG_ANIM_NODA_DAMA2 == 1)
      {
        CARD("/ANIM/NODA/DAMA2");
      }      
      if( ENG_ANIM_NODA_DENS == 1)
      {
        CARD("/ANIM/NODA/DENS");
      }     
      if( ENG_ANIM_NODA_P == 1)
      {
        CARD("/ANIM/NODA/P");
      }  
      if( ENG_ANIM_NODA_TEMP == 1)
      {
        CARD("/ANIM/NODA/TEMP");
      }
    }    
}