//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /DEFAULT/INTER/TYPE24 - Defines default values for all /INTER/TYPE24.
// 



ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "/DEFAULT/INTER/TYPE24");
    Istf                                    = VALUE(INT, "Interface stiffness definition flag");
    TYPE24_Idel                             = VALUE(INT, "Node and segment deletion flag");
    TYPE24_Iedge                            = VALUE(INT, "Edge definition flag");
    Itied                                   = VALUE(INT, "Gap modification flag for slave shell nodes on the free edges");
    Ipen                                    = VALUE(INT, "Initial penetration detection flag");
    Irs                                     = VALUE(INT, "Initial penetration flag");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    Istf                                    = 8044;
    TYPE24_Idel                             = 2598;
    TYPE24_Iedge                            = 2599;
    Itied                                   = 5322;
    Ipen                                    = 802;
    Irs                                     = 7023;
}

DEFAULTS(COMMON)
{
    Istf                                    = 1000;
    TYPE24_Idel                             = 1000;
    TYPE24_Iedge                            = 1000;
    Itied                                   = 1000;
    Ipen                                    = 1000;
    Irs                                     = 1000;
}

GUI(COMMON)
{

    ASSIGN(KEYWORD_STR, "/DEFAULT/INTER/TYPE24");

    RADIO(Istf)
    {
        ADD(2, "2: Stfac is a stiffness scale factor and the interface stiffness is computed from both master and slave characteristics");
        ADD(3, "3: Stfac is a stiffness scale factor and the interface stiffness is computed from both master and slave characteristics");
        ADD(4, "4: Stfac is a stiffness scale factor and the interface stiffness is computed from both master and slave characteristics");
        ADD(5, "5: Stfac is a stiffness scale factor and the interface stiffness is computed from both master and slave characteristics");
        ADD(6, "6: Stfac is a stiffness scale factor and the interface stiffness is computed from both master and slave characteristics");
        ADD(1000, "1000: Stfac is a stiffness scale factor and interface stiffness is computed based only on the master side characteristics");
    }

    RADIO(TYPE24_Idel)
    {
        ADD(1,"1: When all the elements (4-node shells, 3-node shells, solids) associated to one segment are deleted, the segment is removed from the master side of the interface");
        ADD(2,"2: When a 4-node shell, a 3-node shell or a solid element is deleted, the corresponding segment is removed from the master side of the interface");
        ADD(1000,"1000: No deletion (default if /DEFAULT/INTER/TYPE24 is not defined)");
    }

    RADIO(TYPE24_Iedge)
    {
        ADD(1, "1: Edge to edge contact is activated using the external border edges from surf_ID1 and surf_ID2 and sharp edges between contact segments");
        ADD(1000, "1000: No edge to edge contact");
    }

    RADIO(Itied)
    {
        ADD(1, "1: Set gap to zero for the slave shell nodes");
        ADD(1000, "1000: No change");
    }

    RADIO(Ipen)
    {
        ADD(1, "1: Including self-impact in each part");
        ADD(1000, "1000: Excluding self-impact in each part");
    }

    RADIO(Irs)
    {
        ADD(-1, "-1: All initial penetrations are taken into account");
        ADD(5, "5: Gap is adjusted with initial gap, as follows: gap0 = gap = P0, where P0 is the initial penetration");
        ADD(1000, "1000: Only tiny initial penetrations (1.0e-08) will be taken into account");
    }
}

// File format
FORMAT(radioss2017)
{
    HEADER("/DEFAULT/INTER/TYPE24");
    BLANK;
    COMMENT("#                         Istf                                              Idel");
    CARD("                    %10d                                        %10d", Istf,TYPE24_Idel);
    COMMENT("#                                  Iedge");
    CARD("                              %10d", TYPE24_Iedge);
    COMMENT("#                                            Igap0     Ipen0");
    CARD("                                        %10d%10d", Itied, Ipen);
    BLANK;
    COMMENT("#                                 Inacti");
    CARD("                              %10d", Irs);
    BLANK;
}

FORMAT(radioss140)
{
    HEADER("/DEFAULT/INTER/TYPE24");
    BLANK;
    COMMENT("#                         Istf");
    CARD("                    %10d", Istf);
    BLANK;
    COMMENT("#                                            Igap0     Ipen0");
    CARD("                                        %10d%10d", Itied, Ipen);
    BLANK;
    COMMENT("#                                 Inacti");
    CARD("                              %10d", Irs);
    BLANK;
}