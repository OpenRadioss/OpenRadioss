//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Failure model, Spalling (SPALLING) Setup File
// 

ATTRIBUTES(COMMON){ 

	_HMCOMMENTSFLAG  		= VALUE(INT, "Write HM Comments");
	mat_id           		= VALUE(MAT,  "Material");

	D1						= VALUE(FLOAT,"1st parameter");
	D2						= VALUE(FLOAT,"2nd parameter");
	D3						= VALUE(FLOAT,"3rd parameter");
	D4						= VALUE(FLOAT,"4th parameter");
	D5						= VALUE(FLOAT,"5th parameter");
	
	Epsilon_Dot_0			= VALUE(FLOAT,"Reference strain rate");
	P_min					= VALUE(FLOAT,"Pressure cutoff");
	Ifail_so  				= VALUE(INT,  "Flag for solid failure model");
	
	ID_CARD_EXIST			= VALUE(BOOL, "Give an Id");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
	_HMCOMMENTSFLAG=-1;
}
/*


DEFINITIONS(COMMON) {
  SUPPORTING=(MAT);
}

GUI(COMMON) {
  DATA(MAT) {SUBTYPES=(/MAT/COWPER,
                       /MAT/DAMA,
                       /MAT/HILL,
                       /MAT/HILL_TAB,
                       /MAT/HYD_JCOOK,
                       /MAT/HYDPLA,
                       /MAT/LAW23,
                       /MAT/PLAS_BRIT,
                       /MAT/PLAS_JOHNS,
                       /MAT/PLAS_TAB,
                       /MAT/PLAS_T3,
                       /MAT/PLAS_ZERIL,
                       /MAT/STEINB,
                       /MAT/ZHAO,
                       /MAT/BARLAT2000); }

  SCALAR(D1)         { DIMENSION = "DIMENSIONLESS"; }
  SCALAR(D2)         { DIMENSION = "DIMENSIONLESS"; }
  SCALAR(D3)         { DIMENSION = "DIMENSIONLESS"; }
  SCALAR(D4)         { DIMENSION = "DIMENSIONLESS"; }
  SCALAR(D5)         { DIMENSION = "DIMENSIONLESS"; }  
  SCALAR(EPS_RATE_0) { DIMENSION="f";     }
  SCALAR(P_MIN)      { DIMENSION="pressure";      } 
  //
  RADIO(ISOLID) {
    ADD(0,"0: Default");
    ADD(1,"1: Spalling allowed, deviatoric stress is set to 0 and pressure is required to be compressive");
    ADD(2,"2: Spalling allowed and solid element is deleted cond.reached for 1 integ. point or layer");
    ADD(3,"3: Spalling allowed, deviatoric stress tensor is vanished if damage cond. reached for 1 integ. point");
    ADD(4,"4: Solid element is deleted if cond. reached or P=Pmin for 1 integ. point");
  }
  FLAG(ID_CARD_EXIST);
 
}



*/
FORMAT(radioss130) {
	HEADER("/FAIL/SPALLING/%d",mat_id); 

	COMMENT("#                 D1                  D2                  D3                  D4                  D5");
	CARD("%20lg%20lg%20lg%20lg%20lg",D1,D2,D3,D4,D5);
	COMMENT("#      EPSILON_DOT_0               P_MIN  IFAIL_SO");
	CARD("%20lg%20lg%10d",Epsilon_Dot_0,P_min,Ifail_so);   
	
	if (ID_CARD_EXIST==TRUE)
	{
	 COMMENT("#  FAIL_ID") ;
	}
	FREE_CARD(ID_CARD_EXIST,"%10d", _ID_);
}

FORMAT(radioss120) {
	HEADER("/FAIL/SPALLING/%d",mat_id); 

	COMMENT("#                 D1                  D2                  D3                  D4                  D5");
	CARD("%20lg%20lg%20lg%20lg%20lg",D1,D2,D3,D4,D5);
	COMMENT("#      EPSILON_DOT_0               P_MIN  IFAIL_SO");
	CARD("%20lg%20lg%10d",Epsilon_Dot_0,P_min,Ifail_so);   
}
FORMAT(radioss51) {
	HEADER("/FAIL/SPALLING/%d",mat_id); 

	COMMENT("#                 D1                  D2                  D3                  D4                  D5");
	CARD("%20lg%20lg%20lg%20lg%20lg",D1,D2,D3,D4,D5);
	COMMENT("#      EPSILON_DOT_0               P_MIN    ISOLID");
	CARD("%20lg%20lg%10d",Epsilon_Dot_0,P_min,Ifail_so);   
}