//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /DRAPE
//

ATTRIBUTES(COMMON)
{
// INPUT ATTRIBUTES
    drapelistmax                               = SIZE("Number of card");
    entity_type                                = ARRAY[drapelistmax](STRING,"");
    elem_sh_n4                                 = ARRAY[drapelistmax](ELEMS,"The entity is a 4 nodes shell element")  { SUBTYPES = (/ELEMS/SHELL) ; }
    elem_sh_n3                                 = ARRAY[drapelistmax](ELEMS,"The entity is a 3 nodes shell element")  { SUBTYPES = (/ELEMS/SH3N) ; }
    grshel_id                                  = ARRAY[drapelistmax](SETS,"The entity is a group of 4 nodes shell element")  { SUBTYPES = (/SETS/GRSHEL) ; }
    grtria_id                                  = ARRAY[drapelistmax](SETS,"The entity is a group of 3 nodes shell element")  { SUBTYPES = (/SETS/GRSH3N) ; }
    thinning                                   = ARRAY[drapelistmax](FLOAT,"Ply thinning factor");
    theta_drope                                = ARRAY[drapelistmax](FLOAT,"Ply orientation change");
// HM INTERNAL
    KEYWORD_STR                                = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                               = SIZE("NUM_COMMENTS");
    CommentEnumField                           = VALUE(INT,"User Comments");
    COMMENTS                                   = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    TITLE                                      = VALUE(STRING,"Drape title");
    IO_FLAG                                    = VALUE(INT, "");
    // In the following SUBTYPES, the sets are commented out so that they don't disturb the used/unused scan.
    // If they need to be uncommented, the attribute should be cleared at the end of the import.
    tmp                                        = VALUE(MULTIOBJECT,"temp") { SUBTYPES = (/ELEMS/SHELL, /ELEMS/SH3N /*, /SETS/GRSHEL, /SETS/GRSH3N*/) ; }
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                                = 9000;
    COMMENTS                                   = 5109;
    CommentEnumField                           = 7951;
    NUM_COMMENTS                               = 5110;
    entity_type                                = -1;
    elem_sh_n4                                 = -1;
    elem_sh_n3                                 = -1;
    thinning                                   = -1;
    theta_drope                                = -1;
    IO_FLAG                                    = -1;
    drapelistmax                               = -1;
    tmp                                        = -1;
}


GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }

    }

    ASSIGN(KEYWORD_STR,"/DRAPE/");
    SIZE(drapelistmax, "");
    ARRAY(drapelistmax, "")
    {

        RADIO(entity_type)
        {
            ADD("SHELL","SHELL");
            ADD("SH3N","SH3N");
            ADD("GRSHEL","GRSHEL");
            ADD("GRSH3N","GRSH3N");
        }
        if (entity_type=="SHELL")
        {
            DATA(elem_sh_n4);
        }
        else if (entity_type=="SH3N")
        {
            DATA(elem_sh_n3);
        }
        else if (entity_type=="GRSHEL")
        {
            DATA(grshel_id);
        }
        else if (entity_type=="GRSH3N")
        {
            DATA(grtria_id);
        }

        SCALAR(thinning)               { DIMENSION = "DIMENSIONLESS"; }
        SCALAR(theta_drope)            { DIMENSION = "a"; }
    }
}

FORMAT(radioss2017)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);

    HEADER("/DRAPE/%-d",_ID_);
    CARD("%-s",TITLE);
    if(IO_FLAG==0)
    {
        COMMENT("#   Entity Entity_ID            Thinning          thetaDrape");
        CARD_LIST(drapelistmax)
        {
            if(entity_type=="SHELL")
            {
                CARD("%-10s%10d%20lg%20lg",entity_type,elem_sh_n4,thinning,theta_drope);
            }
            else if(entity_type=="SH3N")
            {
                CARD("%-10s%10d%20lg%20lg",entity_type,elem_sh_n3,thinning,theta_drope);
            }
            else if(entity_type=="GRSHEL")
            {
                CARD("%-10s%10d%20lg%20lg",entity_type,grshel_id,thinning,theta_drope);
            }
            else if(entity_type=="GRSH3N")
            {
                CARD("%-10s%10d%20lg%20lg",entity_type,grtria_id,thinning,theta_drope);
            }
        }
    }
    else
    {
        FREE_CARD_LIST(drapelistmax)
        {
            CARD("%-10s%10d%20lg%20lg",entity_type,tmp,thinning,theta_drope);
            if(entity_type=="SHELL")
            {
               ASSIGN(elem_sh_n4,tmp,IMPORT);
            }
            else if(entity_type=="SH3N")
            {
                ASSIGN(elem_sh_n3,tmp,IMPORT);
            }
            else if(entity_type=="GRSHEL")
            {
                ASSIGN(grshel_id,tmp,IMPORT);
            }
            else if(entity_type=="GRSH3N")
            {
                ASSIGN(grtria_id,tmp,IMPORT);
            }
        }
    }
}