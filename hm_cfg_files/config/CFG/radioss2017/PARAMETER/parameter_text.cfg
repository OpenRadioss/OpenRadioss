//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// RADIOSS PARAMETER


ATTRIBUTES(COMMON) { 
  PARAM_NAME    = VALUE(STRING,"Name of the parameter");
  IS_NEGATED    = VALUE(INT, "Is used with negative sign");
  PARAM_VALUE   = VALUE(STRING, "Parameter text");
  PARAM_LENGTH  = VALUE(INT, "Length of character parameter");
  PARAM_VALUE_TYPE = VALUE(INT,"Value Type");

  IS_LOCAL = VALUE(INT, "Local");
  PARAM_SCOPE        = VALUE(STRING, ""); 
}

DEFAULTS(COMMON) 
{
}

DRAWABLES(COMMON)
{
     _PARAM_NAME         = SCALAR(PARAM_NAME);
     _PARAM_SCOPE        = SCALAR(PARAM_SCOPE);
     _PARAM_VALUE_STRING = SCALAR(PARAM_VALUE);
     _PARAM_TYPE         = SCALAR(PARAM_VALUE_TYPE);
}

GUI(COMMON) {
  SCALAR(PARAM_NAME);
  FLAG(IS_LOCAL);
  SCALAR(PARAM_VALUE);

}

FORMAT(radioss2017) {


  CARD("%-10s%10d",PARAM_NAME,PARAM_LENGTH);
  if(PARAM_LENGTH !=0)
  {
     CARD("%10s", PARAM_VALUE);  
  }
  else
  {
     CARD("%100s", PARAM_VALUE);    
  }
  ASSIGN(PARAM_VALUE_TYPE, 2); //string type
}
