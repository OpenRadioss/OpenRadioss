//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material law 5 (LAW5) Setup File
ATTRIBUTES(COMMON) {
	KEYWORD_STR             = VALUE(STRING, "Solver Keyword");
	NUM_COMMENTS  			= SIZE("NUM_COMMENTS");
	CommentEnumField 		= VALUE(INT,"User Comments");
	COMMENTS      			= ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
	// Initial and reference densities
	MAT_RHO    				= VALUE(FLOAT,"Initial Density");
	Refer_Rho   	 		= VALUE(FLOAT,"Reference Density (for lower than 14.0 version)");
	MAT_REFRHO_Option 		= VALUE(INT, "RefRho_Option");
	DUMMY    				= VALUE(STRING,"Dummy variable for Ref_Rho flag");
	// Other values
	MAT_A        			= VALUE(FLOAT,"A Parameter of Equation of State");
	MAT_B        			= VALUE(FLOAT,"B Parameter of Equation of State");
	MAT_PDIR1       		= VALUE(FLOAT,"R1 Parameter of Equation of State");
	MAT_PDIR2       		= VALUE(FLOAT,"R2 Parameter of Equation of State");
	Omega    				= VALUE(FLOAT,"OMEGA Parameter of Equation of State");
	MAT_D        			= VALUE(FLOAT,"Detonation Velocity");
	MAT_PC       			= VALUE(FLOAT,"Chapman Jouguet Pressure");
	MAT_E0       			= VALUE(FLOAT,"Detonation Energy Per Unit Volume");  
	MAT_E     				= VALUE(FLOAT,"Additional Energy Per Unit Volume");
	MAT_IBFRAC   			= VALUE(INT, "Burn Fraction Calculation Flag");
	TSTART   				= VALUE(FLOAT,"Start Time for Additional Energy");
	TSTOP    				= VALUE(FLOAT,"Stop Time for Additional Energy");
	LAW5_P0       			= VALUE(FLOAT,"Initial Pressure");
	LAW5_PSH     			= VALUE(FLOAT,"Pressure Shift");
	// HEAT
	Heat_Inp_opt        	= VALUE(INT,   "Heat");  
	SUBGRP_HEAT_MAT			= VALUE(SUBOBJECT, "");
	// THERM_STRESS
	THERM_STRESS			= VALUE(INT,"Therm Stress");
	SUBGRP_THERM_STRESS		= VALUE(SUBOBJECT, "");
	ALE_Form				= VALUE(INT, "Flag for Heat Transfer Formulation");
	SUBGRP_ALE_MAT			= VALUE(SUBOBJECT, "");
	SUBGRP_EULER_MAT		= VALUE(SUBOBJECT, "");
	Mat_Name_OR_LawNo		= VALUE(INT, "");
	TITLE					= VALUE(STRING,"");
	IO_FLAG 				= VALUE(INT, "");
	LAW_NO 					= VALUE(STRING, "");
}
SKEYWORDS_IDENTIFIER(COMMON)
{
	KEYWORD_STR                            	= 9000;
	COMMENTS                               	= 5109;
	CommentEnumField                     	= 7951;
	MAT_A                                   = 6056;
	MAT_B                                   = 995;
	MAT_D                                   = 997;
	MAT_E                                   = 119;
	MAT_E0                                  = 1507;
	MAT_IBFRAC                              = 1415;
	MAT_PC                                  = 282;
	MAT_PDIR1                               = 5066;
	MAT_PDIR2                               = 5067;
	MAT_RHO                                 = 118;
	NUM_COMMENTS                           	= 5110;
	Omega                                  	= 4382;
	TSTART                                 	= 11;
	TSTOP                                  	= 12;
	MAT_REFRHO_Option                       = 4285;
	Refer_Rho                               = 4229;
	DUMMY                                  	= -1;
	LAW5_P0                                 = 2564;
	LAW5_PSH                                = 2565;
	Mat_Name_OR_LawNo						= 4538;
	LAW_NO									= -1;
	IO_FLAG									= -1;
	TITLE   								= -1;
	//HEAT
	Heat_Inp_opt                            = 4346;
	SUBGRP_HEAT_MAT						   	= -1;
	// THERM_STRESS
	THERM_STRESS					       	= 4555;
	SUBGRP_THERM_STRESS				       	= -1;
	ALE_Form								= 4336;
	SUBGRP_ALE_MAT							= -1;
	SUBGRP_EULER_MAT						= -1;
}
DRAWABLES(COMMON) {
public:
    INITIAL_DENSITY         = SCALAR(MAT_RHO);
}
CHECK(COMMON)
{
	MAT_D                                     >=0.0;
	MAT_E									  >=0.0;
	MAT_E0                                    >=0.0;
	MAT_PC                                    >=0.0;
	MAT_RHO                                   >0.0;
}

DEFAULTS(COMMON) 
{
}
GUI(COMMON) {
	RADIO(CommentEnumField)
	{
		ENUM_VALUE_FLAG=TRUE;
		ADD(1, "Hide in Menu/Export");
		ADD(2, "Show in Menu/Export");
		ADD(3, "Do Not Export");
	}
	if(CommentEnumField == 2)
	{  
		SIZE(NUM_COMMENTS);
		ARRAY(NUM_COMMENTS,"")
		{
			SCALAR(COMMENTS);
		}   
	}
	if( Mat_Name_OR_LawNo ==2)
	{
		ASSIGN(KEYWORD_STR, "/MAT");
		ASSIGN(KEYWORD_STR, "/LAW5/");
	}
	else
	{
		ASSIGN(KEYWORD_STR, "/MAT");
		ASSIGN(KEYWORD_STR, "/JWL/");
	}
	FLAG(MAT_REFRHO_Option);
	if(MAT_REFRHO_Option!=FALSE)
	{
		SCALAR(Refer_Rho)      { DIMENSION="density";}
	}
	mandatory:
		SCALAR(MAT_RHO)        { DIMENSION="density";}
		SCALAR(MAT_A)  		   { DIMENSION="pressure"; }
		SCALAR(MAT_B)		   { DIMENSION="pressure"; }
		SCALAR(MAT_PDIR1);
		SCALAR(MAT_PDIR2);
		SCALAR(Omega);
		SCALAR(MAT_D)      { DIMENSION="velocity"; }
		SCALAR(MAT_PC)     { DIMENSION="pressure"; }
		SCALAR(MAT_E0)     { DIMENSION="energydensity"; }       
		SCALAR(MAT_E)      { DIMENSION="energydensity"; }       
		RADIO(MAT_IBFRAC)
		{
			ADD(0, "0: Volumetric Compression + Burning Time");
			ADD(1, "1: Volumetric Compression Only");
			ADD(2, "2: Burning Time Only");
		}
		if (MAT_E > 0)
		{
			SCALAR(TSTART) {DIMENSION="t";}
			SCALAR(TSTOP) {DIMENSION="t";}
		}
		SCALAR(LAW5_P0)     { DIMENSION="pressure"; }
		SCALAR(LAW5_PSH)     { DIMENSION="pressure"; }
		// HEAT data
		graphical FLAG(Heat_Inp_opt);
		if (Heat_Inp_opt!= 0) {
			SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
		}
		// THERM_STRESS
		graphical FLAG(THERM_STRESS);
		if (THERM_STRESS!= 0) {
			SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
		}
	/*
	mandatory:
	graphical SUPPORT("Support") {
	OBJECTS=(/PART/QUAD,/PART/BRICK,/PART/SPHCEL);
	ADD(PART,"Parts");
	}
	*/
}
GUI(ALE) {
	optional:
		graphical RADIO(ALE_Form) 
		{
			ADD(1,"NONE") ;
			ADD(2,"ALE") ;
			ADD(3,"EULER");
		}
		if(ALE_Form == 2)
		{
            SUBOBJECT(SUBGRP_ALE_MAT) {SUBTYPES = (/SUBOBJECT/ALE_MAT);}
		}
		else if(ALE_Form == 3)
		{
			SUBOBJECT(SUBGRP_EULER_MAT) {SUBTYPES = (/SUBOBJECT/EULER);}
		}
}

FORMAT(radioss2017) {
	ASSIGN(IO_FLAG, 0, EXPORT);
	ASSIGN(IO_FLAG, 1, IMPORT);
	if(IO_FLAG == 1)
	{
        HEADER("/MAT/%3s",LAW_NO);
		if(LAW_NO == "LAW" )
		{
			ASSIGN(Mat_Name_OR_LawNo,2);
		}
	}
	else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
	{
		HEADER("/MAT/LAW5/%d",_ID_);
		CARD("%-100s", TITLE);
	}
	else
	{
		HEADER("/MAT/JWL/%d",_ID_);
		CARD("%-100s", TITLE);
	}
	CARD_PREREAD("                    %20s",DUMMY);
	if(DUMMY!="")
	{
		ASSIGN(MAT_REFRHO_Option,1,IMPORT);
	}
	else
	{
		ASSIGN(MAT_REFRHO_Option,0,IMPORT);
	}
	if(MAT_REFRHO_Option!=FALSE)
	{
		COMMENT("#              RHO_I               RHO_O");
		CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
	}
	else{
		COMMENT("#              RHO_I");
		CARD("%20lg",MAT_RHO);
	}
	COMMENT("#                  A                   B                  R1                  R2               OMEGA");
	CARD("%20lg%20lg%20lg%20lg%20lg",MAT_A,MAT_B,MAT_PDIR1,MAT_PDIR2,Omega);
	COMMENT("#                  D                P_CJ                  E0                Eadd   I_BFRAC");
	CARD("%20lg%20lg%20lg%20lg%10d",MAT_D,MAT_PC,MAT_E0,MAT_E,MAT_IBFRAC);
	COMMENT("#                 P0                 PSH");
	CARD("%20lg%20lg",LAW5_P0,LAW5_PSH);
	if (MAT_E>0)
	{
		COMMENT("#             TSTART               TSTOP");
		CARD("%20lg%20lg",TSTART,TSTOP);
	}
	if(Heat_Inp_opt!=0)
	{
		SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
	} 
	if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
	{
		SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
	}
	if(ALE_Form == 2)
	{
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
	}
	else if(ALE_Form == 3)
	{
		SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
	}
}
FORMAT(radioss140) {
	ASSIGN(IO_FLAG, 0, EXPORT);
	ASSIGN(IO_FLAG, 1,IMPORT);
	if(IO_FLAG == 1)
	{
        HEADER("/MAT/%3s",LAW_NO);
		CARD("%-100s", TITLE);
		if(LAW_NO == "LAW" )
		{
			ASSIGN(Mat_Name_OR_LawNo,2);
		}		
	}
	else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
	{
		HEADER("/MAT/LAW5/%d",_ID_);
		CARD("%-100s", TITLE);
	}
	else
	{
		HEADER("/MAT/JWL/%d",_ID_);
		CARD("%-100s", TITLE);
	}
	CARD_PREREAD("                    %20s",DUMMY);
	if(DUMMY!="")
	{
		ASSIGN(MAT_REFRHO_Option,1,IMPORT);
	}
	else
	{
		ASSIGN(MAT_REFRHO_Option,0,IMPORT);
	}
	if(MAT_REFRHO_Option!=FALSE)
	{
		COMMENT("#              RHO_I               RHO_O");
		CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
	}
	else{
		COMMENT("#              RHO_I");
		CARD("%20lg",MAT_RHO);
	}
	COMMENT("#                  A                   B                  R1                  R2               OMEGA");
	CARD("%20lg%20lg%20lg%20lg%20lg",MAT_A,MAT_B,MAT_PDIR1,MAT_PDIR2,Omega);
	COMMENT("#                  D                P_CJ                  E0                Eadd   I_BFRAC");
	CARD("%20lg%20lg%20lg%20lg%10d",MAT_D,MAT_PC,MAT_E0,MAT_E, MAT_IBFRAC);
	if (MAT_E>0)
	{
		COMMENT("#             TSTART               TSTOP");
		CARD("%20lg%20lg",TSTART,TSTOP);
	}
	if(Heat_Inp_opt!=0)
	{
		SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
	} 
	if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
	{
		SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
	}
	if(ALE_Form == 2)
	{
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
	}
	else if(ALE_Form == 3)
	{
		SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
	}
}
FORMAT(radioss120) {
	ASSIGN(IO_FLAG, 0, EXPORT);
	ASSIGN(IO_FLAG, 1,IMPORT);
	if(IO_FLAG == 1)
	{
        HEADER("/MAT/%3s",LAW_NO);
		if(LAW_NO == "LAW" )
		{
			ASSIGN(Mat_Name_OR_LawNo,2);
		}
	}
	else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
	{
		HEADER("/MAT/LAW5/%d",_ID_);
		CARD("%-100s", TITLE);
	}
	else
	{
		HEADER("/MAT/JWL/%d",_ID_);
		CARD("%-100s", TITLE);
	}
	CARD_PREREAD("                    %20s",DUMMY);
	if(DUMMY!="")
	{
		ASSIGN(MAT_REFRHO_Option,1,IMPORT);
	}
	else
	{
		ASSIGN(MAT_REFRHO_Option,0,IMPORT);
	}
	if(MAT_REFRHO_Option!=FALSE)
	{
		COMMENT("#              RHO_I               RHO_O");
		CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
	}
	else{
		COMMENT("#              RHO_I");
		CARD("%20lg",MAT_RHO);
	}
	COMMENT("#                  A                   B                  R1                  R2               OMEGA");
	CARD("%20lg%20lg%20lg%20lg%20lg",MAT_A,MAT_B,MAT_PDIR1,MAT_PDIR2,Omega);
	COMMENT("#                  D                P_CJ                  E0                Eadd");
	CARD("%20lg%20lg%20lg%20lg",MAT_D,MAT_PC,MAT_E0,MAT_E);
	if (MAT_E>0)
	{
		COMMENT("#             TSTART               TSTOP");
		CARD("%20lg%20lg",TSTART,TSTOP);
	}
	if(Heat_Inp_opt!=0)
	{
		SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
	} 
	if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
	{
		SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
	}
	if(ALE_Form == 2)
	{
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
	}
	else if(ALE_Form == 3)
	{
		SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
	}
}

FORMAT(radioss90) {
	ASSIGN(IO_FLAG, 0, EXPORT);
	ASSIGN(IO_FLAG, 1,IMPORT);
	if(IO_FLAG == 1)
	{
        HEADER("/MAT/%3s",LAW_NO);
		if(LAW_NO == "LAW" )
		{
			ASSIGN(Mat_Name_OR_LawNo,2);
		}	
	}
	else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
	{
		HEADER("/MAT/LAW5/%d",_ID_);
		CARD("%-100s", TITLE);
	}
	else
	{
		HEADER("/MAT/JWL/%d",_ID_);
		CARD("%-100s", TITLE);
	}
	CARD_PREREAD("                    %20s",DUMMY);
	if(DUMMY!="")
	{
		ASSIGN(MAT_REFRHO_Option,1,IMPORT);
	}
	else
	{
		ASSIGN(MAT_REFRHO_Option,0,IMPORT);
	}
	if(MAT_REFRHO_Option!=FALSE)
	{
		COMMENT("#              RHO_I               RHO_O");
		CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
	}
	else{
		COMMENT("#              RHO_I");
		CARD("%20lg",MAT_RHO);
	}
	COMMENT("#                  A                   B                  R1                  R2               OMEGA");
	CARD("%20lg%20lg%20lg%20lg%20lg",MAT_A,MAT_B,MAT_PDIR1,MAT_PDIR2,Omega);
	COMMENT("#                  D                P_CJ                  E0");
	CARD("%20lg%20lg%20lg",MAT_D,MAT_PC,MAT_E0);
	if(Heat_Inp_opt!=0)
	{
		SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
	} 
	if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
	{
		SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
	}
	if(ALE_Form == 2)
	{
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
	}
	else if(ALE_Form == 3)
	{
		SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
	}
}
FORMAT(radioss51) {
	ASSIGN(IO_FLAG, 0, EXPORT);
	ASSIGN(IO_FLAG, 1,IMPORT);
	if(IO_FLAG == 1)
	{
        HEADER("/MAT/%3s",LAW_NO);
		if(LAW_NO == "LAW" )
		{
			ASSIGN(Mat_Name_OR_LawNo,2);
		}
	}
	else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
	{
		HEADER("/MAT/LAW5/%d",_ID_);
		CARD("%-100s", TITLE);
	}
	else
	{
		HEADER("/MAT/JWL/%d",_ID_);
		CARD("%-100s", TITLE);
	}
	CARD_PREREAD("                    %20s",DUMMY);
	if(DUMMY!="")
	{
		ASSIGN(MAT_REFRHO_Option,1,IMPORT);
	}
	else
	{
		ASSIGN(MAT_REFRHO_Option,0,IMPORT);
	}
	if(MAT_REFRHO_Option!=FALSE)
	{
		COMMENT("#        Init. dens.          Ref. dens.");
		CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
	}
	else{
		COMMENT("#        Init. dens.");
		CARD("%20lg",MAT_RHO);
	}
	COMMENT("#                  A                   B                  R1                  R2               OMEGA");
	CARD("%20lg%20lg%20lg%20lg%20lg",MAT_A,MAT_B,MAT_PDIR1,MAT_PDIR2,Omega);
	COMMENT("#                  D                P_CJ                  E0");
	CARD("%20lg%20lg%20lg",MAT_D,MAT_PC,MAT_E0);
	if(Heat_Inp_opt!=0)
	{
		SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
	} 
	if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
	{
		SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
	}
	if(ALE_Form == 2)
	{
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
	}
	else if(ALE_Form == 3)
	{
		SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
	}
}