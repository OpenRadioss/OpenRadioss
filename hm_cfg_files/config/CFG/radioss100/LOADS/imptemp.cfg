//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Thermal Stress Setup File
// 

ATTRIBUTES(COMMON) {
 
 curveid    = VALUE(FUNCT,"Time function identifier");
 rad_sensor_id = VALUE(SENSOR, "Sensor identifier");
 entityid = VALUE(SETS,"Node group to which the imposed temperature is applied");
 xscale  = VALUE(FLOAT, "Abscissa scale factor for funct_IDT");
 magnitude  = VALUE(FLOAT, "Ordinate scale factor for funct_IDT");
 rad_tstart = VALUE(FLOAT, "Start time");
 rad_tstop = VALUE(FLOAT, "Stop time");
 displayname    = VALUE(STRING, "Title","TITLE");
 
    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
}

CHECK(COMMON) {
  curveid != NONE;
}

DEFAULTS(COMMON)
{
    // Card
    xscale                                  = 1.0;
    magnitude                               = 1.0;

    rad_tstop                               = 10e30;
}

GUI(COMMON) {
  
  ASSIGN(KEYWORD_STR, "/IMPTEMP");

  // Card
  FUNCTION(curveid) {
    Y_TITLE     = "Temperature (K)";       X_TITLE     = "Time";
    Y_DIMENSION="k"; X_DIMENSION="t";
  }
  DATA(rad_sensor_id, "sens_ID");
  DATA(entityid, "grnd_ID");
  
  SCALAR(xscale) {DIMENSION = "t";}     
  SCALAR(magnitude) {DIMENSION = "k";}     
  
  SCALAR(rad_tstart) {DIMENSION = "t";}     
  SCALAR(rad_tstop) {DIMENSION = "t";}      
 
 


}

FORMAT(radioss100) {
  HEADER("/IMPTEMP/%d",_ID_);
  CARD("%-100s", displayname);
  
  COMMENT("# func_IDT sensor_ID  grnod_ID");
  CARD("%10d%10d%10d",curveid,rad_sensor_id,entityid);
  
  COMMENT("#           Ascale_x            Fscale_y             T_start              T_stop");
  CARD("%20lf%20lf%20lf%20lf",xscale,magnitude,rad_tstart,rad_tstop);

}
