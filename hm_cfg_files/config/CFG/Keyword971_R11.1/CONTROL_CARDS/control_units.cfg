//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// CONTROL_UNITS
//

ATTRIBUTES(COMMON)
{
// INPUT ATTRIBUTES
    LSD_LENGTH_S                            = VALUE(STRING, "Length units");
    LSD_TIME_S                              = VALUE(STRING, "Time units");
    LSD_MASS_S                              = VALUE(STRING, "Mass units");
    LSD_TEMP_S                              = VALUE(STRING, "Temperature units");
    optionalCards                           = VALUE(INT,    "OptionalCard");
    LSD_LENGTH                              = VALUE(FLOAT,  "Number of meters in the length unit for the input deck");
    LSD_SBP_TIME                            = VALUE(FLOAT,  "Number of seconds in the time unit for the input deck");
    LSD_MASS                                = VALUE(FLOAT,  "Number of kilograms in the mass unit for the input deck");

// HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    IO_FLAG                                 = VALUE(INT,    "Import/Export flag");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
// INPUT ATTRIBUTES
    LSD_LENGTH_S                            = 11081;
    LSD_TIME_S                              = 11082;
    LSD_MASS_S                              = 11083;
    LSD_TEMP_S                              = 11084;
    optionalCards                           = 4772;
    LSD_LENGTH                              = 8703;
    LSD_SBP_TIME                            = 2844;
    LSD_MASS                                = 76;

// HM INTERNAL
    KEYWORD_STR                             = 9000;
    IO_FLAG                                 = -1;
}

DEFAULTS(COMMON)
{
    LSD_LENGTH_S                            = "m";
    LSD_TIME_S                              = "sec";
    LSD_MASS_S                              = "kg";
    LSD_TEMP_S                              = "K";
    LSD_LENGTH                              = 1.0;
    LSD_SBP_TIME                            = 1.0;
    LSD_MASS                                = 1.0;
}

GUI(COMMON)
{
  ASSIGN(KEYWORD_STR, "*CONTROL_UNITS");

// mandatory:  // not available for STRING!!!
  RADIO(LSD_LENGTH_S)
  {
      ADD("m",  "m: meter (default)");
      ADD("mm", "mm: millimeter");
      ADD("cm", "cm: centimeter");
      ADD("in", "in: inch");
      ADD("ft", "ft: foot");
  }
  RADIO(LSD_TIME_S)
  {
      ADD("sec",     "sec: second (default)");
      ADD("ms",      "ms: millisecond");
      ADD("micro_s", "micro_s: microsecond");
  }
  RADIO(LSD_MASS_S)
  {
      ADD("kg",       "kg: kilogram (default)");
      ADD("g",        "g: gram");
      ADD("mg",       "mg: milligram");
      ADD("lb",       "lb: pound");
      ADD("slug",     "slug: pound x second2/foot");
      ADD("slinch",   "slinch: pound x second2/inch");
      ADD("mtrc_ton", "mtrc_ton: metric ton");
  }
  RADIO(LSD_TEMP_S)
  {
      ADD("K", "K: Kelvin (default)");
      ADD("C", "C: Celsius");
      ADD("F", "F: Fahrenheit");
      ADD("R", "R: Rankine");
  }

// optional:
  FLAG(optionalCards,"OptionalCard");
  if (optionalCards == 1) {
      SCALAR(LSD_LENGTH)   {DIMENSION="l";}
      SCALAR(LSD_SBP_TIME) {DIMENSION="t";}
      SCALAR(LSD_MASS)     {DIMENSION="m";}
  }
}

// File format
FORMAT(Keyword971_R6.1)
{
  ASSIGN(IO_FLAG,0,EXPORT);
  ASSIGN(IO_FLAG,1,IMPORT);

  HEADER("*CONTROL_UNITS");
  
  COMMENT("$LENGTH   TIME      MASS      TEMP      ");
  CARD("%-10s%-10s%-10s%-10s",LSD_LENGTH_S,LSD_TIME_S,LSD_MASS_S,LSD_TEMP_S);

  if (IO_FLAG == 1) {
      COMMENT("$       LENGTH_SCALE          TIME_SCALE          MASS_SCALE");
      FREE_CARD(optionalCards,"%20lg%20lg%20lg",LSD_LENGTH,LSD_SBP_TIME,LSD_MASS);
  } else if (optionalCards == 1) {
      COMMENT("$       LENGTH_SCALE          TIME_SCALE          MASS_SCALE");
      CARD("%20lg%20lg%20lg",LSD_LENGTH,LSD_SBP_TIME,LSD_MASS);
  }
}
