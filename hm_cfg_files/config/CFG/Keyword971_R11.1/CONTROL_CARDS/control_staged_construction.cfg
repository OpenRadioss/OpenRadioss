//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//CONTROL_STAGED_CONSTRUCTION
//

ATTRIBUTES(COMMON) {
// INPUT ATTRIBUTES
    LSD_TSTART                              = VALUE(FLOAT,"Time at start of analysis(normally leave blank");
    LSD_STGS                                = VALUE(INT,"Construction stage at start of analysis");
    LSD_STGE                                = VALUE(INT,"Construction stage at start of analysis");
    LSD_ACCEL                               = VALUE(FLOAT,"Default acceleration for gravity loading");
    CD_FACT                                 = VALUE(FLOAT,"Default stiffness and gravity factor for parts before they are added");
    LSD_STREF                               = VALUE(INT,"Reference stage for displacements in d3plot file");
    LSD_DORDEL                              = VALUE(INT,"Dormant part treatment in d3plot file") ;
    LSD_NOPDEL                              = VALUE(INT, "Treatment of pressure loads on deleted elements") ;

    //Optional card 1
    LSD_AddITime                            = VALUE(INT, "Optional card 1");
    LSD_ITIME                               = VALUE(INT, "Treatment of Real Time on *DEFINE_CONSTRUCTION_STAGES");

// HM INTERNAL
    KEYWORD_STR                               = VALUE(STRING,"Solver Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    LSD_TSTART                              = 4481;
    LSD_STGS                                = 8788;
    LSD_STGE                                = 8789;
    LSD_ACCEL                               = 7917;
    CD_FACT                                 = 4307;
    LSD_STREF                               = 8790;
    LSD_DORDEL                              = 8791;
    LSD_NOPDEL                              = 8792;
    LSD_AddITime                            = 11300;
    LSD_ITIME                               = 11301;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    LSD_TSTART                              = 0.0;
    LSD_STGS                                = 0;
    LSD_STGE                                = 0;
    LSD_ACCEL                               = 0.0;
    CD_FACT                                 = 1e-06;
    LSD_STREF                               = 0;
    LSD_DORDEL                              = 0;
    LSD_NOPDEL                              = 0;
    LSD_ITIME                               = 0;  
}


GUI(COMMON)
{
  ASSIGN(KEYWORD_STR, "*CONTROL_STAGED_CONSTRUCTION");

  SCALAR(LSD_TSTART)  {DIMENSION="DIMENSIONLESS";}
  SCALAR(LSD_STGS)    {DIMENSION="DIMENSIONLESS";}
  SCALAR(LSD_STGE)    {DIMENSION="DIMENSIONLESS";}
  SCALAR(LSD_ACCEL)   {DIMENSION="DIMENSIONLESS";}
  SCALAR(CD_FACT)     {DIMENSION="DIMENSIONLESS";}
  SCALAR(LSD_STREF)   {DIMENSION="DIMENSIONLESS";}
  RADIO(LSD_DORDEL)
  {
    ADD(0,"0: Parts not shown when dormant (flagged as deleted)") ;
    ADD(1,"1: Parts shown normally when dormant") ;
  }
  RADIO(LSD_NOPDEL)
  {
    ADD(0,"0: Pressure loads automatically deleted") ;
    ADD(1,"1: No automatic deletion") ;
  }
  
  //Optional card 
  SEPARATOR("Optionl Card");
  FLAG(LSD_AddITime);  
  if (LSD_AddITime != FALSE)
  {
    RADIO(LSD_ITIME) 
    {
        ADD(0,"0: Real Time is ignored") ;
        ADD(1,"1: Time in output files (d3plot, d3thdt, binout…) is converted to Real Time") ;
    }
  }
}

//File format
FORMAT(Keyword971)
{
  HEADER("*CONTROL_STAGED_CONSTRUCTION");
  COMMENT("$   TSTART      STGS      STGE     ACCEL      FACT     STREF");
  CARD("%10lg%10d%10d%10lg%10lg%10d",LSD_TSTART,LSD_STGS,LSD_STGE,LSD_ACCEL,CD_FACT,LSD_STREF);
}

FORMAT(Keyword971_R6.1)
{
  HEADER("*CONTROL_STAGED_CONSTRUCTION");
  COMMENT("$   TSTART      STGS      STGE     ACCEL      FACT     STREF    DORDEL    NOPDEL");
  CARD("%10lg%10d%10d%10lg%10lg%10d%10d%10d",LSD_TSTART,LSD_STGS,LSD_STGE,LSD_ACCEL,CD_FACT,LSD_STREF,LSD_DORDEL,LSD_NOPDEL);
}

FORMAT(Keyword971_R11.1)
{
//  ASSIGN(IO_FLAG, 0, IMPORT);
//  ASSIGN(IO_FLAG, 1, EXPORT);
  HEADER("*CONTROL_STAGED_CONSTRUCTION");
  COMMENT("$   TSTART      STGS      STGE     ACCEL      FACT     STREF    DORDEL    NOPDEL");
  CARD("%10lg%10d%10d%10lg%10lg%10d%10d%10d",LSD_TSTART,LSD_STGS,LSD_STGE,LSD_ACCEL,CD_FACT,LSD_STREF,LSD_DORDEL,LSD_NOPDEL);
  
  //Optional Card
  if(LSD_AddITime != FALSE)
    COMMENT("$    ITIME");   
  FREE_CARD(LSD_AddITime,"%10d",LSD_ITIME);
}
