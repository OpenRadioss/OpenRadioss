//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 240
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    LSD_EMOD                                = VALUE(FLOAT,  "Youngs modulus of the material");
    LSD_EMOD_CURVEID                        = VALUE(FUNCT, "Youngs modulus of the material.Curve ID for Thermal keyword option");
    LSD_GMOD                                = VALUE(FLOAT,  "shear modulus of the material");
    LSD_GMOD_CURVEID                        = VALUE(FUNCT,  "shear modulus of the material.Curve ID for Thermal keyword option");
    LSD_INTFAIL                             = VALUE(FLOAT,  "no. of integration points required");
    LSD_MAT240_EDOT_G1                      = VALUE(FLOAT,  "strain rate at yield initiation");
    LSD_MAT240_EDOT_G2                      = VALUE(FLOAT,  "Equivalent strain rate at yield initiation");
    LSD_MAT240_EDOT_S                       = VALUE(FLOAT,  "Equivalent strain rate at yield initiation");
    LSD_MAT240_EDOT_T                       = VALUE(FLOAT,  "Equivalent strain rate at yield initiation");
    LSD_MAT240_FG1                          = VALUE(FLOAT,  "Parameter to describe the tri-linear shape");
    LSD_MAT240_FG1_CURVEID                  = VALUE(FUNCT,  "Parameter to describe the tri-linear shape.Curve ID for Thermal keyword option");
    LSD_MAT240_FG2                          = VALUE(FLOAT,  "Parameter to describe the tri-linear shape");
    LSD_MAT240_FG2_CURVEID                  = VALUE(FUNCT,  "Parameter to describe the tri-linear shape.Curve ID for Thermal keyword option");
    LSD_MAT240_G1C_0                        = VALUE(FLOAT,  "Energy release rate");
    LSD_MAT240_G1C_0_CURVEID                = VALUE(FUNCT,  "Energy release rate.Curve ID for Thermal keyword option");
    LSD_MAT240_G1C_INF                      = VALUE(FLOAT,  "Upper bound value of rate-dependent G1C");
    LSD_MAT240_G2C_0                        = VALUE(FLOAT,  "Energy release rate Mode2");
    LSD_MAT240_G2C_0_CURVEID                = VALUE(FUNCT,  "Energy release rate Mode2.Curve ID for Thermal keyword option");
    LSD_MAT240_G2C_INF                      = VALUE(FLOAT,  "Upper bound value of G2C");
    LSD_MAT240_OUTPUT                       = VALUE(FLOAT,  "Time interval at which output is written");
    LSD_MAT240_S0                           = VALUE(FLOAT,  "Yield stress in Mode II");
    LSD_MAT240_S0_CURVEID                   = VALUE(FUNCT,  "Yield stress in Mode II.Curve ID for Thermal keyword option");
    LSD_MAT240_S1                           = VALUE(FLOAT,  "Type of logarithmic model");
    LSD_MAT240_T0                           = VALUE(FLOAT,  "Yield stress in Mode I");
    LSD_MAT240_T0_CURVEID                   = VALUE(FUNCT,  "Yield stress in Mode I.Curve ID for Thermal keyword option");
    LSD_MAT240_T1                           = VALUE(FLOAT,  "Type of logarithmic model");
    LSD_MAT240_THICK                        = VALUE(FLOAT,  "Cohesive thickness");
    LSD_ROFLG                               = VALUE(FLOAT,  "Flag for density units");
    LSD_MAT240_LCG1C                        = VALUE(FUNCT, "fracture energy vs cohesive element thickness");
    LSD_MAT240_LCG2C                        = VALUE(FUNCT, "fracture energy vs element thickness");
    LSD_THERMAL_MAT240                      = VALUE(INT, "Thermal");
    LSD_3MODES_MAT240                       = VALUE(INT, "3Modes");
    LSD_G3C_0                               = VALUE(FLOAT, "Energy release rate Mode3");
    LSD_G3C_0_CURVEID                       = VALUE(FUNCT, "Energy release rate Mode3.Curve ID for Thermal keyword option ");
    LSD_G3C_INF                             = VALUE(FLOAT,"Upper bound value of G3C");
    LSD_EDOT_G3                             = VALUE(FLOAT,"Equivalent strain rate at yield initiation");
    LSD_R0_MAT240                           = VALUE(FLOAT,"Yield stress in Mode3");
    LSD_R0_MAT240_CURVEID                   = VALUE(FUNCT,"Yield stress in Mode3.Curve ID for Thermal keyword option");
    LSD_R1_MAT240                           = VALUE(FLOAT,"Parameter R1");
    LSD_EDOT_R                              = VALUE(FLOAT,"Equivalent strain rate at yield initiation");
    LSD_FG3                                 = VALUE(FLOAT,"Parameter to describe the tri-linear shape");
    LSD_FG3_CURVEID                         = VALUE(FUNCT,"Parameter to describe the tri-linear shape. Curve ID for Thermal keyword option");
    LSD_LCG3C                               = VALUE(FUNCT,"fracture energy vs element thichness");
    LSD_GM0D3                               = VALUE(FLOAT,"shear modulus of the material Mode3.");
    LSD_GM0D3_CURVEID                       = VALUE(FUNCT,"shear modulus of the material Mode3. Curve ID for Thermal keyword option");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    IO_FLAG                                 = VALUE(INT, "io flag");
    _HMCOMMENTSFLAG                         = VALUE(INT, "Write HM Comments");
    TITLE                                   = VALUE(STRING, "Title");
    EncTypeEnumField                        = VALUE(INT,  "Type");
    RegTypeEnumField                        = VALUE(INT,  "Type");
    HAS_OPTIONS                             = VALUE(STRING, "Check for Thermal,3Modes and Title option");
    //empty_string                       = VALUE(STRING, "Used as a local variable for free format case");
    _HAS_HEADER                             = VALUE(BOOL,"Has Header Card");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSD_EMOD                                = 813;
    LSD_GMOD                                = 812;
    LSD_INTFAIL                             = 4998;
    LSD_MAT240_EDOT_G1                      = 1269;
    LSD_MAT240_EDOT_G2                      = 1276;
    LSD_MAT240_EDOT_S                       = 1279;
    LSD_MAT240_EDOT_T                       = 1272;
    LSD_MAT240_FG1                          = 1273;
    LSD_MAT240_FG2                          = 1280;
    LSD_MAT240_G1C_0                        = 1267;
    LSD_MAT240_G1C_INF                      = 1268;
    LSD_MAT240_G2C_0                        = 1274;
    LSD_MAT240_G2C_INF                      = 1275;
    LSD_MAT240_OUTPUT                       = 1266;
    LSD_MAT240_S0                           = 1277;
    LSD_MAT240_S1                           = 1278;
    LSD_MAT240_T0                           = 1270;
    LSD_MAT240_T1                           = 1271;
    LSD_MAT240_THICK                        = 1265;
    LSD_ROFLG                               = 4997;
    LSD_THERMAL_MAT240                      = 11144;
    LSD_3MODES_MAT240                       = 11153;
    LSD_TitleOpt                            = 90;
    Num_Comments                            = 3101;
    LSD_MAT240_LCG1C                        = 8341;
    LSD_MAT240_LCG2C                        = 8342;
    LSD_EMOD_CURVEID                        = 11145;
    LSD_GMOD_CURVEID                        = 11146;
    LSD_MAT240_FG1_CURVEID                  = 11151;
    LSD_MAT240_FG2_CURVEID                  = 11152;
    LSD_MAT240_G1C_0_CURVEID                = 11147;
    LSD_MAT240_G2C_0_CURVEID                = 11148;
    LSD_MAT240_S0_CURVEID                   = 11150;
    LSD_MAT240_T0_CURVEID                   = 11149;
    LSD_G3C_0                               = 11154;
    LSD_G3C_0_CURVEID                       = 11163;
    LSD_G3C_INF                             = 11155;
    LSD_EDOT_G3                             = 11156;
    LSD_R0_MAT240                           = 11157;
    LSD_R0_MAT240_CURVEID                   = 11164;
    LSD_R1_MAT240                           = 11158;
    LSD_EDOT_R                              = 11159;
    LSD_FG3                                 = 11160;
    LSD_FG3_CURVEID                         = 11165;
    LSD_LCG3C                               = 11161;
    LSD_GM0D3                               = 11162;
    LSD_GM0D3_CURVEID                       = 11166;
    Rho                                     = 118;
    EncTypeEnumField                        = 5828;
    RegTypeEnumField                        = 5827;
    TITLE                                   = -1;
    IO_FLAG                                 = -1;
    HAS_OPTIONS                             = -1;
    //empty_string                       = -1;
    _HAS_HEADER                             = -1;
}

DEFAULTS(COMMON)
{
    _HAS_HEADER     = TRUE;
    LSD_INTFAIL     = 1.0;
}

CHECK(COMMON)
{}

DRAWABLES(COMMON) {
  public:
  MASS_DENSITY = SCALAR(Rho);
  YOUNG_MODULUS = SCALAR(LSD_EMOD);
  SHEAR_MODULUS = SCALAR(LSD_GMOD);
  BULK_MODULUS=EVAL(YOUNG_MODULUS/(3*0.074));
    POISSON_RATIO     = EVAL((3.*BULK_MODULUS-2.*SHEAR_MODULUS)/(6.*BULK_MODULUS+2.*SHEAR_MODULUS));
       //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
  SOUND_SPEED_SOLID = EVAL(((4*SHEAR_MODULUS/3+BULK_MODULUS)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_COHESIVE_MIXED_MODE_ELASTOPLASTIC_RATE");
     RADIO(CommentEnumField)
     {
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }
     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
     
     FLAG(LSD_THERMAL_MAT240);
     if(LSD_THERMAL_MAT240 == TRUE)
     {
            ASSIGN(KEYWORD_STR, "_THERMAL");
     }
     
     FLAG(LSD_3MODES_MAT240);
     if(LSD_3MODES_MAT240 == TRUE)
     {
            ASSIGN(KEYWORD_STR, "_3MODES");
     }
     
 mandatory:
     SCALAR(Rho)                        {DIMENSION="density";}
 optional:
     RADIO(LSD_ROFLG)
     {
        ADD(0.0, "0.0: Density per unit volume");
        ADD(1.0, "1.0: Density per unit area");
     }
     RADIO(LSD_INTFAIL)
     {
        ADD(0.0, "0.0");
        ADD(1.0, "1.0");
        ADD(2.0, "2.0");
        ADD(3.0, "3.0");
        ADD(4.0, "4.0");
     }

     if(LSD_THERMAL_MAT240 == TRUE)
     {
        DATA(LSD_EMOD_CURVEID);
        DATA(LSD_GMOD_CURVEID);
        DATA(LSD_MAT240_G1C_0_CURVEID);
        DATA(LSD_MAT240_T0_CURVEID);
        DATA(LSD_MAT240_FG1_CURVEID);
        DATA(LSD_MAT240_G2C_0_CURVEID);
        DATA(LSD_MAT240_S0_CURVEID);
        DATA(LSD_MAT240_FG2_CURVEID);
        
        
     }
     else
     {
        SCALAR(LSD_EMOD)                   {DIMENSION="pressure";}
        SCALAR(LSD_GMOD)                   {DIMENSION="pressure";}
        SCALAR(LSD_MAT240_G1C_0);
        SCALAR(LSD_MAT240_T0)              {DIMENSION="pressure";}
        SCALAR(LSD_MAT240_FG1);
        SCALAR(LSD_MAT240_G2C_0);
        SCALAR(LSD_MAT240_S0)              {DIMENSION="pressure";}
        SCALAR(LSD_MAT240_FG2);
     }

     SCALAR(LSD_MAT240_THICK)           {DIMENSION="l";}
     SCALAR(LSD_MAT240_OUTPUT);
     SCALAR(LSD_MAT240_G1C_INF);
     SCALAR(LSD_MAT240_EDOT_G1);
     SCALAR(LSD_MAT240_T1);
     SCALAR(LSD_MAT240_EDOT_T)          {DIMENSION="strain_rate";}     
     DATA(LSD_MAT240_LCG1C);
     SCALAR(LSD_MAT240_G2C_INF);
     SCALAR(LSD_MAT240_EDOT_G2);    
     SCALAR(LSD_MAT240_S1);
     SCALAR(LSD_MAT240_EDOT_S)          {DIMENSION="strain_rate";}
     DATA(LSD_MAT240_LCG2C);
     
     if(LSD_3MODES_MAT240 == TRUE)
     {   
        SCALAR(LSD_G3C_INF);
        SCALAR(LSD_EDOT_G3)          {DIMENSION="strain_rate";}
        SCALAR(LSD_R1_MAT240);
        SCALAR(LSD_EDOT_R)          {DIMENSION="strain_rate";}
        DATA(LSD_LCG3C);
     }
     if(LSD_3MODES_MAT240 == TRUE && LSD_THERMAL_MAT240 == TRUE )
     {
        DATA(LSD_G3C_0_CURVEID);
        DATA(LSD_R0_MAT240_CURVEID);
        DATA(LSD_FG3_CURVEID);
        DATA(LSD_GM0D3_CURVEID);
     }
     
     if(LSD_3MODES_MAT240 == TRUE && LSD_THERMAL_MAT240 == FALSE)
     {
        SCALAR(LSD_G3C_0);
        SCALAR(LSD_R0_MAT240)              {DIMENSION="pressure";}
        SCALAR(LSD_FG3);
        SCALAR(LSD_GM0D3)              {DIMENSION="pressure";}
     }   
/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/PART/BRICK,/PART/TETRA4,/PART/LINEAR_3D,/PART/TETRA10);
      ADD(PART,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    //
    COMMENT("$      MID        RO     ROFLG   INTFAIL      EMOD      GMOD     THICK    OUTPUT") ;
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_ROFLG,LSD_INTFAIL,LSD_EMOD,LSD_GMOD,LSD_MAT240_THICK,LSD_MAT240_OUTPUT);
    //
    COMMENT("$    G1C_0   G1C_INF   EDOT_G1        T0        T1    EDOT_T       FG1     ") ;
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT240_G1C_0,LSD_MAT240_G1C_INF,LSD_MAT240_EDOT_G1,LSD_MAT240_T0,LSD_MAT240_T1,LSD_MAT240_EDOT_T,LSD_MAT240_FG1);
    //
    COMMENT("$    G2C_0   G2C_INF   EDOT_G2        S0        S1    EDOT_S       FG2     ") ;
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT240_G2C_0,LSD_MAT240_G2C_INF,LSD_MAT240_EDOT_G2,LSD_MAT240_S0,LSD_MAT240_S1,LSD_MAT240_EDOT_S,LSD_MAT240_FG2);
    //

}

FORMAT(Keyword971_R9.0) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    //
    COMMENT("$      MID        RO     ROFLG   INTFAIL      EMOD      GMOD     THICK    OUTPUT") ;
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_ROFLG,LSD_INTFAIL,LSD_EMOD,LSD_GMOD,LSD_MAT240_THICK,LSD_MAT240_OUTPUT);
    //
    COMMENT("$    G1C_0   G1C_INF   EDOT_G1        T0        T1    EDOT_T       FG1     LCG1C") ;
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",LSD_MAT240_G1C_0,LSD_MAT240_G1C_INF,LSD_MAT240_EDOT_G1,LSD_MAT240_T0,LSD_MAT240_T1,LSD_MAT240_EDOT_T,LSD_MAT240_FG1,LSD_MAT240_LCG1C);
    //
    COMMENT("$    G2C_0   G2C_INF   EDOT_G2        S0        S1    EDOT_S       FG2     LCG2C") ;
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",LSD_MAT240_G2C_0,LSD_MAT240_G2C_INF,LSD_MAT240_EDOT_G2,LSD_MAT240_S0,LSD_MAT240_S1,LSD_MAT240_EDOT_S,LSD_MAT240_FG2,LSD_MAT240_LCG2C);
    //

}

FORMAT(Keyword971_R11.1) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    
    if(IO_FLAG == 2 && LSD_THERMAL_MAT240 == 0 && LSD_3MODES_MAT240 == 0 && LSD_TitleOpt == 0)
    {
       HEADER("*MAT_COHESIVE_MIXED_MODE_ELASTOPLASTIC_RATE");
    }
    else if(IO_FLAG == 2 && LSD_THERMAL_MAT240 == 0 && LSD_3MODES_MAT240 == 0 && LSD_TitleOpt == 1)
    {
       HEADER("*MAT_COHESIVE_MIXED_MODE_ELASTOPLASTIC_RATE_TITLE");
    }  
    else if(IO_FLAG == 2 && LSD_THERMAL_MAT240 == 0 && LSD_3MODES_MAT240 == 1 && LSD_TitleOpt == 0)
    {
       HEADER("*MAT_COHESIVE_MIXED_MODE_ELASTOPLASTIC_RATE_3MODES");
    }  
    else if(IO_FLAG == 2 && LSD_THERMAL_MAT240 == 0 && LSD_3MODES_MAT240 == 1 && LSD_TitleOpt == 1)
    {
       HEADER("*MAT_COHESIVE_MIXED_MODE_ELASTOPLASTIC_RATE_3MODES_TITLE");
    }
    else if(IO_FLAG == 2 && LSD_THERMAL_MAT240 == 1 && LSD_3MODES_MAT240 == 0 && LSD_TitleOpt == 0)
    {
       HEADER("*MAT_COHESIVE_MIXED_MODE_ELASTOPLASTIC_RATE_THERMAL");
    }  
    else if(IO_FLAG == 2 && LSD_THERMAL_MAT240 == 1 && LSD_3MODES_MAT240 == 0 && LSD_TitleOpt == 1)
    {
       HEADER("*MAT_COHESIVE_MIXED_MODE_ELASTOPLASTIC_RATE_THERMAL_TITLE");
    }  
    else if(IO_FLAG == 2 && LSD_THERMAL_MAT240 == 1 && LSD_3MODES_MAT240 == 1 && LSD_TitleOpt == 0)
    {
       HEADER("*MAT_COHESIVE_MIXED_MODE_ELASTOPLASTIC_RATE_THERMAL_3MODES");
    }
    else if(IO_FLAG == 2 && LSD_THERMAL_MAT240 == 1 && LSD_3MODES_MAT240 == 1 && LSD_TitleOpt == 1)
    {
       HEADER("*MAT_COHESIVE_MIXED_MODE_ELASTOPLASTIC_RATE_THERMAL_3MODES_TITLE");
    }
    
    if(IO_FLAG == 2 && LSD_TitleOpt == 1)  
    {
        CARD("%-80s", TITLE);
    }
    
    if(IO_FLAG == 1)
    {
        HEADER("*MAT_COHESIVE_MIXED_MODE_ELASTOPLASTIC_RATE%22s", HAS_OPTIONS);
    }
    
    if(IO_FLAG == 1 && HAS_OPTIONS == "")
    {
        ASSIGN(LSD_THERMAL_MAT240,0);
        ASSIGN(LSD_3MODES_MAT240,0);
        ASSIGN(LSD_TitleOpt,0);
    }
    else if(IO_FLAG == 1 && HAS_OPTIONS == "_TITLE")
    {
        ASSIGN(LSD_THERMAL_MAT240,0);
        ASSIGN(LSD_3MODES_MAT240,0);
        ASSIGN(LSD_TitleOpt,1);
    }
    else if(IO_FLAG == 1 && HAS_OPTIONS == "_3MODES")
    {
        ASSIGN(LSD_THERMAL_MAT240,0);
        ASSIGN(LSD_3MODES_MAT240,1);
        ASSIGN(LSD_TitleOpt,0);
    }
    else if(IO_FLAG == 1 && HAS_OPTIONS == "_3MODES_TITLE")
    {
        ASSIGN(LSD_THERMAL_MAT240,0);
        ASSIGN(LSD_3MODES_MAT240,1);
        ASSIGN(LSD_TitleOpt,1);
    }
    else if(IO_FLAG == 1 && HAS_OPTIONS == "_THERMAL")
    {
        ASSIGN(LSD_THERMAL_MAT240,1);
        ASSIGN(LSD_3MODES_MAT240,0);
        ASSIGN(LSD_TitleOpt,0);
    }
    else if(IO_FLAG == 1 && HAS_OPTIONS == "_THERMAL_TITLE")
    {
        ASSIGN(LSD_THERMAL_MAT240,1);
        ASSIGN(LSD_3MODES_MAT240,0);
        ASSIGN(LSD_TitleOpt,1);
    }
    else if(IO_FLAG == 1 && HAS_OPTIONS == "_THERMAL_3MODES" )
    {
        ASSIGN(LSD_THERMAL_MAT240,1);
        ASSIGN(LSD_3MODES_MAT240,1);
        ASSIGN(LSD_TitleOpt,0);
    }
    else if(IO_FLAG == 1 && HAS_OPTIONS == "_THERMAL_3MODES_TITLE")
    {
        ASSIGN(LSD_THERMAL_MAT240,1);
        ASSIGN(LSD_3MODES_MAT240,1);
        ASSIGN(LSD_TitleOpt,1);
    }

    //
    COMMENT("$      MID        RO     ROFLG   INTFAIL      EMOD      GMOD     THICK    OUTPUT");
    if(LSD_THERMAL_MAT240 == 1)
    {
        CARD("%10d%10lg%10lg%10lg%10d%10d%10lg%10lg",_ID_,Rho,LSD_ROFLG,LSD_INTFAIL,LSD_EMOD_CURVEID,LSD_GMOD_CURVEID,LSD_MAT240_THICK,LSD_MAT240_OUTPUT);
    }
    else
    {
        CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_ROFLG,LSD_INTFAIL,LSD_EMOD,LSD_GMOD,LSD_MAT240_THICK,LSD_MAT240_OUTPUT);
    }
    //
    COMMENT("$    G1C_0   G1C_INF   EDOT_G1        T0        T1    EDOT_T       FG1     LCG1C");
    if(LSD_THERMAL_MAT240 == 1)
    {
        CARD("%10d%10lg%10lg%10d%10lg%10lg%10d%10d",LSD_MAT240_G1C_0_CURVEID,LSD_MAT240_G1C_INF,LSD_MAT240_EDOT_G1,LSD_MAT240_T0_CURVEID,LSD_MAT240_T1,LSD_MAT240_EDOT_T,LSD_MAT240_FG1_CURVEID,LSD_MAT240_LCG1C);
    }
    else
    {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",LSD_MAT240_G1C_0,LSD_MAT240_G1C_INF,LSD_MAT240_EDOT_G1,LSD_MAT240_T0,LSD_MAT240_T1,LSD_MAT240_EDOT_T,LSD_MAT240_FG1,LSD_MAT240_LCG1C);
    }
    //
    COMMENT("$    G2C_0   G2C_INF   EDOT_G2        S0        S1    EDOT_S       FG2     LCG2C");
    if(LSD_THERMAL_MAT240 == 1)
    {
        CARD("%10d%10lg%10lg%10d%10lg%10lg%10d%10d",LSD_MAT240_G2C_0_CURVEID,LSD_MAT240_G2C_INF,LSD_MAT240_EDOT_G2,LSD_MAT240_S0_CURVEID,LSD_MAT240_S1,LSD_MAT240_EDOT_S,LSD_MAT240_FG2_CURVEID,LSD_MAT240_LCG2C);
    }
    else
    {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",LSD_MAT240_G2C_0,LSD_MAT240_G2C_INF,LSD_MAT240_EDOT_G2,LSD_MAT240_S0,LSD_MAT240_S1,LSD_MAT240_EDOT_S,LSD_MAT240_FG2,LSD_MAT240_LCG2C);
    }
    //
    if(LSD_3MODES_MAT240 == 1 && LSD_THERMAL_MAT240 == 1)
    {
        COMMENT("$    G3C_0   G3C_INF   EDOT_G3        R0        R1    EDOT_R       FG3     LCG3C") ;
        CARD("%10d%10lg%10lg%10d%10lg%10lg%10d%10d",LSD_G3C_0_CURVEID,LSD_G3C_INF,LSD_EDOT_G3,LSD_R0_MAT240_CURVEID,LSD_R1_MAT240,LSD_EDOT_R,LSD_FG3_CURVEID,LSD_LCG3C);
        
        COMMENT("$    GMOD3") ;
        CARD("%10d",LSD_GM0D3_CURVEID);
    }
    else if(LSD_3MODES_MAT240 == 1 )
    {
        COMMENT("$    G3C_0   G3C_INF   EDOT_G3        R0        R1    EDOT_R       FG3     LCG3C") ;
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",LSD_G3C_0,LSD_G3C_INF,LSD_EDOT_G3,LSD_R0_MAT240,LSD_R1_MAT240,LSD_EDOT_R,LSD_FG3,LSD_LCG3C);
        
        COMMENT("$    GMOD3") ;
        CARD("%10lg",LSD_GM0D3);
    }
}