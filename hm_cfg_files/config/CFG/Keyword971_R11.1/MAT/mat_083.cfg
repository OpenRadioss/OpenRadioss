//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 083
// 

ATTRIBUTES(COMMON)
{
    KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
    CommentEnumField                  = VALUE(INT,  "User Comments");
    Num_Comments                      = SIZE("No. of comment lines");    
    Comments                          = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    EncTypeEnum83Field                = VALUE(INT,  "Type");
    Rho                               = VALUE(FLOAT,  "Mass density");
    E                                 = VALUE(FLOAT,  "Youngs modulus");
    LSD_MAT83_ED                      = VALUE(FLOAT,  "Optional Youngs modulus used in the computation of sound speed");
    LSDYNA_SHAPE                      = VALUE(FLOAT,  "Shape factor for unloading");
    LSD_MAT73_HU                      = VALUE(FLOAT,  "Hysteretic unloading factor between 0 and 1");
    LSD_MAT83_AIJ                     = VALUE(FLOAT,  "material constant");
    LSD_MAT83_BETAC                   = VALUE(FLOAT,  "Decay constant for damage in compression");
    LSD_MAT83_BETAT                   = VALUE(FLOAT,  "Decay constant for damage in tension");
    LSD_MAT83_BVFLAG                  = VALUE(FLOAT,  "Bulk viscosity activation flag");
    LSD_MAT83_C1                      = VALUE(FLOAT,  "material constant");
    LSD_MAT83_C2                      = VALUE(FLOAT,  "material constant");
    LSD_MAT83_C3                      = VALUE(FLOAT,  "material constant");
    LSD_MAT83_C4                      = VALUE(FLOAT,  "material constant");
    LSD_MAT83_C5                      = VALUE(FLOAT,  "material constant");
    LSD_MAT83_CO                      = VALUE(FLOAT,  "material constant");
    LSD_MAT83_DAMP                    = VALUE(FLOAT,  "Viscous coefficient to model damping effects");
    LSD_MAT83_DO                      = VALUE(FLOAT,  "material constant");
    LSD_MAT83_FAIL                    = VALUE(FLOAT,  "Failure option after cutoff stress is reached");
    LSD_MAT83_MAXR                    = VALUE(FLOAT,  "max strain rate of interest");
    LSD_MAT83_MINR                    = VALUE(FLOAT,  "minimum strain rate of interest");
    LSD_MAT83_N1                      = VALUE(FLOAT,  "material constant");
    LSD_MAT83_N2                      = VALUE(FLOAT,  "material constant");
    LSD_MAT83_N3                      = VALUE(FLOAT,  "material constant");
    LSD_MAT83_NO                      = VALUE(FLOAT,  "material constant");
    LSD_MAT83_PVID                    = VALUE(FUNCT,  "Optional load curve ID defining pressure versus volumetric strain");
    LSD_MAT83_SIJ                     = VALUE(FLOAT,  "material constant");
    LSD_MAT83_TBID                    = VALUE(FUNCT,  "nominal stress VS strain data as a function of strain rate");
    LSD_MAT83_TC                      = VALUE(FLOAT,  "Tension cut-off stress");
    LSD_MAT_REF                       = VALUE(FLOAT,  "Use reference geometry to initialize the stress tensor");
    LSD_RFLAG                         = VALUE(FLOAT,  "Strain rate evaluation flag");
    LSD_SFLAG                         = VALUE(FLOAT,  "Strain rate flag");
    LSD_SRAF                          = VALUE(FLOAT,  "Strain rate averaging flag");
    LSD_TFLAG                         = VALUE(FLOAT,  "Tensile stress evaluation");
    LSD_EXPON                         = VALUE(FLOAT,  "Exponent for unloading");
    LSD_RIULD                         = VALUE(FLOAT,  "Flag for rate independent unloading");
    Card5_Option_MATL83               = VALUE(INT, "Optional Card");
    LSD_TitleOpt                      = VALUE(INT,  "Title");
    RegTypeEnum83Field                = VALUE(INT,  "Type");
    UnloadingCurveOption              = VALUE(INT,  "Unloading Curve Option");
    OPT_TYPE_STR                      = VALUE(STRING, "OPT");
    TITLE                             = VALUE(STRING, "Title");
    IO_FLAG                           = VALUE(INT, "io flag");
    _HAS_HEADER                       = VALUE(BOOL,"Has Header Card");
    TBID_FLAG                         = VALUE(INT, "Title");
    SRAFOptfield                      = VALUE(INT,"SRAF");
    LSD_SRAF_Negative                 = VALUE(FLOAT,"SRAF");
    //empty_string                 = VALUE(STRING, "Used as a local variable for free format case");
    LOC_NU                            = VALUE(FLOAT, "Temp poisson ratio");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    EncTypeEnum83Field                      = 5869;
    LSDYNA_SHAPE                            = 255;
    LSD_MAT73_HU                            = 2510;
    LSD_MAT83_AIJ                           = 2620;
    LSD_MAT83_BETAC                         = 5871;
    LSD_MAT83_BETAT                         = 5870;
    LSD_MAT83_BVFLAG                        = 2608;
    LSD_MAT83_C1                            = 2615;
    LSD_MAT83_C2                            = 2616;
    LSD_MAT83_C3                            = 2617;
    LSD_MAT83_C4                            = 2618;
    LSD_MAT83_C5                            = 2619;
    LSD_MAT83_CO                            = 2614;
    LSD_MAT83_DAMP                          = 2606;
    LSD_MAT83_DO                            = 2609;
    E                                       = 119;
    LSD_MAT83_ED                            = 2603;
    LSD_MAT83_FAIL                          = 2605;
    LSD_MAT83_MAXR                          = 2623;
    LSD_MAT83_MINR                          = 2622;
    LSD_MAT83_N1                            = 2611;
    LSD_MAT83_N2                            = 2612;
    LSD_MAT83_N3                            = 2613;
    LSD_MAT83_NO                            = 2610;
    LSD_MAT83_PVID                          = 835;
    Rho                                     = 118;
    LSD_MAT83_SIJ                           = 2621;
    LSD_MAT83_TBID                          = 2607;
    LSD_MAT83_TC                            = 2604;
    LSD_MAT_REF                             = 359;
    LSD_RFLAG                               = 4720;
    LSD_SFLAG                               = 4719;
    LSD_SRAF                                = 4722;
    LSD_TFLAG                               = 727;
    LSD_EXPON                               = 8488;
    LSD_RIULD                               = 8794;
    Card5_Option_MATL83                     = 8938;
    LSD_TitleOpt                            = 90;
    Num_Comments                            = 3101;
    RegTypeEnum83Field                      = 5868;
    UnloadingCurveOption                    = 5872;
    IO_FLAG                                 = -1;
    OPT_TYPE_STR                            = -1;
    TITLE                                   = -1;
    _HAS_HEADER                             = -1;
    TBID_FLAG                               = -1;
    SRAFOptfield                            = 11690;
    //empty_string                       = -1;
    LSD_SRAF_Negative                       = 11691;
    LOC_NU                                  = -1;
}

DEFAULTS(COMMON)
{
    LSD_MAT83_TC            = 1E+20;
    LSD_MAT83_BVFLAG        = 1.0;
    LSD_MAT73_HU            = 1.0;
    LSD_EXPON               = 1.0;
    _HAS_HEADER             = TRUE;
    LOC_NU                  = 0.0;
}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  EA=SCALAR(E);
  YOUNG_RELAXATION_MODULUS=SCALAR(LSD_MAT83_ED);
  TENSION_CUT-OFF_STRESS=SCALAR(LSD_MAT83_TC);
  FAILURE_OPTION=SCALAR(LSD_MAT83_FAIL);
  VISCOUS_COEFFICIENT_TO_MODEL_DAMPING_EFFECTS=SCALAR(LSD_MAT83_DAMP);
  BULK_VISCOSITY_ACTIVATION_FLAG=SCALAR(LSD_MAT83_BVFLAG);
  STRAIN_RATE_FLAG=SCALAR(LSD_SFLAG);
  STRAIN_RATE_EVALUATION_FLAG=SCALAR(LSD_RFLAG);
  TENSILE_STRESS_EVALUATION=SCALAR(LSD_TFLAG);
  STRAIN_RATE_AVERAGING_FLAG=SCALAR(LSD_SRAF);
  POISSON_RATIO=SCALAR(LOC_NU);
//SOUND_SPEED is speed for ISDO = 0 and 1
  YOUNG_MODULUS = MAX(EA,YOUNG_RELAXATION_MODULUS);
      SOUND_SPEED        = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
      SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
private:
  G                 = EVAL(YOUNG_MODULUS/(2));
  C1                = EVAL(YOUNG_MODULUS/(3));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON) 
{
    ASSIGN(KEYWORD_STR, "*MAT_FU_CHANG_FOAM");
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do not export");
    }
    if(CommentEnumField == 2)
    {  
    SIZE(Num_Comments);
    ARRAY(Num_Comments,"")
    {
        SCALAR(Comments);
    }
    }   
    RADIO(RegTypeEnum83Field)
    {
        ADD(1, "Regular");
        ADD(2, "DAMAGE_DECAY");
        ADD(3, "LOG_LOG_INTERPOLATION");
    }
    if(RegTypeEnum83Field == 2)
    {
    ASSIGN(KEYWORD_STR, "_DAMAGE_DECAY");
    }
    if(RegTypeEnum83Field == 3)
    {
    ASSIGN(KEYWORD_STR, "_LOG_LOG_INTERPOLATION");
    }
    RADIO(UnloadingCurveOption)
    {
        ADD(1, "Old");
        ADD(2, "New");
    }          
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == TRUE)
    {
        ASSIGN(KEYWORD_STR, "_TITLE");
    } 
 mandatory:
    SCALAR(Rho)                                {DIMENSION="density";}
 optional:
    SCALAR(E)                                  {DIMENSION="pressure";}
    SCALAR(LSD_MAT83_ED)                       {DIMENSION="pressure";}
    SCALAR(LSD_MAT83_TC)                       {DIMENSION="pressure";}
    RADIO(LSD_MAT83_FAIL)
    {
    ADD(0.0, "0.0: Tensile stress remains at cut-off value");
    ADD(1.0, "1.0: Tensile stress is reset to zero");
    ADD(2.0, "2.0: The element is reordered  ");
    }
    SCALAR(LSD_MAT83_DAMP)                     {DIMENSION="DIMENSIONLESS";}
 mandatory:
    if(UnloadingCurveOption == 1 || UnloadingCurveOption == 2)
    {
        FUNCTION(LSD_MAT83_TBID)
        {
          X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
          Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
          Z_TITLE = "Strain Rate"; Z_DIMENSION = "strain_rate";
        }
    }
    /*  need_to_check
    else if(UnloadingCurveOption == 1)
    {
        FUNCTION(LSD_MAT83_TBID)
        {
          X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
          Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
          Z_TITLE = "Strain Rate"; Z_DIMENSION = "strain_rate";
        }
    }
    */
 optional:    
    RADIO(LSD_MAT83_BVFLAG)
    {
    ADD(0.0, "0.0: No bulk viscosity (recommended)");
    ADD(1.0, "1.0: Bulk viscosity active");
    }
    RADIO(LSD_SFLAG)
    {
    ADD(0.0, "0.0: Engineering strain rate");
    ADD(1.0, "1.0: True constant strain rate");
    }
    RADIO(LSD_RFLAG)
    {
    ADD(0.0, "0.0: First principal direction");
    ADD(1.0, "1.0: Principal strain rates for each principal direction");
    ADD(2.0, "2.0: Volumetric strain rate");
    }
    RADIO(LSD_TFLAG)
    {
    ADD(0.0, "0.0: Linear in tension");
    ADD(1.0, "1.0: Input via load curves with the tensile response corresponds to negative values of stress and strain");
    }
     FUNCTION(LSD_MAT83_PVID)
     {
        X_TITLE = "Volumetric Strain"; X_DIMENSION = "DIMENSIONLESS";
        Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
     }
    RADIO(LSD_SRAF)
    {
    ADD(0.0, "0.0: Use weighted running average");
    ADD(1.0, "1.0: Average the last twelve values");
    ADD(2.0, "2.0: Use exponential moving average");    
    }     
    RADIO(LSD_MAT_REF)
    {
    ADD(0.0, "0.0: Off");
    ADD(1.0, "1.0: On");
    }    
    SCALAR(LSD_MAT73_HU)                        {DIMENSION="DIMENSIONLESS";}      
    if(RegTypeEnum83Field != 2)
    {
        SCALAR(LSD_MAT83_DO)                {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT83_NO)                {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT83_N1)                {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT83_N2)                {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT83_N3)                {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT83_CO)                {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT83_C1)                {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT83_C2)                {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT83_C3)                {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT83_C4)                {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT83_C5)                {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT83_AIJ)               {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT83_SIJ)               {DIMENSION="DIMENSIONLESS";}
    }
     SCALAR(LSD_MAT83_MINR)                     {DIMENSION="strain_rate";}
     SCALAR(LSD_MAT83_MAXR)                     {DIMENSION="strain_rate";}
     SCALAR(LSDYNA_SHAPE)                       {DIMENSION="DIMENSIONLESS";}
     if(RegTypeEnum83Field == 2)
     {
            SCALAR(LSD_MAT83_BETAT)             {DIMENSION="f";}
            SCALAR(LSD_MAT83_BETAC)             {DIMENSION="f";}
     }
/*
    graphical SUPPORT("Part(s) to which material is applied") {
    OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D,/COMPONENT/TSHELL,/COMPONENT/SPHCEL,/COMPONENT/TETRA10);
    ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    //
    if(IO_FLAG == 1)
    {
        HEADER("*MAT_083%19s",OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "" || OPT_TYPE_STR != "_TITLE" || OPT_TYPE_STR != "_DAMAGE_DECAY" || OPT_TYPE_STR != "_DAMAGE_DECAY_TITLE" ))
    {
         HEADER("*MAT_FU_CHANG_FOAM%19s", OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "" || OPT_TYPE_STR == "_TITLE"))
    {
        ASSIGN(RegTypeEnum83Field, 1);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "_DAMAGE_DECAY" || OPT_TYPE_STR == "_DAMAGE_DECAY_TITLE"))
    {
        ASSIGN(RegTypeEnum83Field, 2);
    }

    if(IO_FLAG == 2 && RegTypeEnum83Field == 1 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_FU_CHANG_FOAM");
    }   
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 1 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_TITLE");
        CARD("%-80s", TITLE);
    }
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 2 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_DAMAGE_DECAY");
    }   
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 2 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_DAMAGE_DECAY_TITLE");
        CARD("%-80s", TITLE);
    }
    //
    COMMENT("$      MID       RHO         E        ED        TC      FAIL      DAMP      TBID");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10d",_ID_,Rho,E,LSD_MAT83_ED,LSD_MAT83_TC,LSD_MAT83_FAIL,LSD_MAT83_DAMP,LSD_MAT83_TBID);
    //
    COMMENT("$   BVFLAG     SFLAG     RFLAG     TFLAG      PVID      SRAF       REF        HU");
    CARD("%10lg%10lg%10lg%10lg%10d%10lg%10lg%10lg",LSD_MAT83_BVFLAG,LSD_SFLAG,LSD_RFLAG,LSD_TFLAG,LSD_MAT83_PVID,LSD_SRAF,LSD_MAT_REF,LSD_MAT73_HU);
    //
    if(RegTypeEnum83Field == 2)
    {
        //
        COMMENT("$     MINR      MAXR     SHAPE     BETAT     BETAC");
        CARD("%10lg%10lg%10lg%10lg%10lg",LSD_MAT83_MINR,LSD_MAT83_MAXR,LSDYNA_SHAPE,LSD_MAT83_BETAT,LSD_MAT83_BETAC);
        //
    }
    if(RegTypeEnum83Field == 1)
    {
        //
        COMMENT("$       D0        N0        N1        N2        N3        C0        C1        C2");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT83_DO,LSD_MAT83_NO,LSD_MAT83_N1,LSD_MAT83_N2,LSD_MAT83_N3,LSD_MAT83_CO,LSD_MAT83_C1,LSD_MAT83_C2);
        //
        COMMENT("$       C3        C4        C5       AIJ       SIJ      MINR      MAXR     SHAPE");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT83_C3,LSD_MAT83_C4,LSD_MAT83_C5,LSD_MAT83_AIJ,LSD_MAT83_SIJ,LSD_MAT83_MINR,LSD_MAT83_MAXR,LSDYNA_SHAPE);
        //
    }
}

FORMAT(Keyword971_R7.1) 
{
    //
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    //
    if(IO_FLAG == 1)
    {
        HEADER("*MAT_083%28s",OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "" || OPT_TYPE_STR != "_TITLE" || OPT_TYPE_STR != "_DAMAGE_DECAY" || OPT_TYPE_STR != "_DAMAGE_DECAY_TITLE" || OPT_TYPE_STR != "_LOG_LOG_INTERPOLATION" || OPT_TYPE_STR != "_LOG_LOG_INTERPOLATION_TITLE" ))
    {
         HEADER("*MAT_FU_CHANG_FOAM%28s", OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "" || OPT_TYPE_STR == "_TITLE"))
    {
        ASSIGN(RegTypeEnum83Field, 1);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "_DAMAGE_DECAY" || OPT_TYPE_STR == "_DAMAGE_DECAY_TITLE"))
    {
        ASSIGN(RegTypeEnum83Field, 2);
    }
    else if(IO_FLAG == 1 && (OPT_TYPE_STR == "_LOG_LOG_INTERPOLATION" || OPT_TYPE_STR == "_LOG_LOG_INTERPOLATION_TITLE"))
    {
        ASSIGN(RegTypeEnum83Field, 3);
    }
    
    if(IO_FLAG == 2 && RegTypeEnum83Field == 1 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_FU_CHANG_FOAM");
    }   
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 1 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_TITLE");
        CARD("%-80s", TITLE);
    }
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 2 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_DAMAGE_DECAY");
    }   
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 2 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_DAMAGE_DECAY_TITLE");
        CARD("%-80s", TITLE);
    }
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 3 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_LOG_LOG_INTERPOLATION");
    }   
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 3 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_LOG_LOG_INTERPOLATION_TITLE");
        CARD("%-80s", TITLE);
    }
    //
    if(UnloadingCurveOption == 1)
    {
        ASSIGN(TBID_FLAG,0,EXPORT);
    }
    else if(UnloadingCurveOption == 2)
    {
        ASSIGN(TBID_FLAG,1,EXPORT);
    }
    //
    COMMENT("$      MID       RHO         E        ED        TC      FAIL      DAMP      TBID");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10d",_ID_,Rho,E,LSD_MAT83_ED,LSD_MAT83_TC,LSD_MAT83_FAIL,LSD_MAT83_DAMP,FLAGGED_OBJECT(LSD_MAT83_TBID,TBID_FLAG));
    //
    if(TBID_FLAG == 0)
    {
        ASSIGN(UnloadingCurveOption,1,IMPORT);
    }
    else if(TBID_FLAG == 1)
    {
        ASSIGN(UnloadingCurveOption,2,IMPORT);
    }
    //
    COMMENT("$   BVFLAG     SFLAG     RFLAG     TFLAG      PVID      SRAF       REF        HU");
    CARD("%10lg%10lg%10lg%10lg%10d%10lg%10lg%10lg",LSD_MAT83_BVFLAG,LSD_SFLAG,LSD_RFLAG,LSD_TFLAG,LSD_MAT83_PVID,LSD_SRAF,LSD_MAT_REF,LSD_MAT73_HU);
    //
    if(RegTypeEnum83Field == 2)
    {
        //
        COMMENT("$     MINR      MAXR     SHAPE     BETAT     BETAC");
        CARD("%10lg%10lg%10lg%10lg%10lg",LSD_MAT83_MINR,LSD_MAT83_MAXR,LSDYNA_SHAPE,LSD_MAT83_BETAT,LSD_MAT83_BETAC);
        //
    }
    if(RegTypeEnum83Field != 2)
    {
        //
        COMMENT("$       D0        N0        N1        N2        N3        C0        C1        C2");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT83_DO,LSD_MAT83_NO,LSD_MAT83_N1,LSD_MAT83_N2,LSD_MAT83_N3,LSD_MAT83_CO,LSD_MAT83_C1,LSD_MAT83_C2);
        //
        COMMENT("$       C3        C4        C5       AIJ       SIJ      MINR      MAXR     SHAPE");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT83_C3,LSD_MAT83_C4,LSD_MAT83_C5,LSD_MAT83_AIJ,LSD_MAT83_SIJ,LSD_MAT83_MINR,LSD_MAT83_MAXR,LSDYNA_SHAPE);
        //
    }
}

FORMAT(Keyword971_R8.0) 
{
    //
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    //
    if(IO_FLAG == 1)
    {
        HEADER("*MAT_083%28s",OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "" || OPT_TYPE_STR != "_TITLE" || OPT_TYPE_STR != "_DAMAGE_DECAY" || OPT_TYPE_STR != "_DAMAGE_DECAY_TITLE" || OPT_TYPE_STR != "_LOG_LOG_INTERPOLATION" || OPT_TYPE_STR != "_LOG_LOG_INTERPOLATION_TITLE" ))
    {
         HEADER("*MAT_FU_CHANG_FOAM%28s", OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "" || OPT_TYPE_STR == "_TITLE"))
    {
        ASSIGN(RegTypeEnum83Field, 1);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "_DAMAGE_DECAY" || OPT_TYPE_STR == "_DAMAGE_DECAY_TITLE"))
    {
        ASSIGN(RegTypeEnum83Field, 2);
    }
    else if(IO_FLAG == 1 && (OPT_TYPE_STR == "_LOG_LOG_INTERPOLATION" || OPT_TYPE_STR == "_LOG_LOG_INTERPOLATION_TITLE"))
    {
        ASSIGN(RegTypeEnum83Field, 3);
    }
    
    if(IO_FLAG == 2 && RegTypeEnum83Field == 1 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_FU_CHANG_FOAM");
    }   
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 1 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_TITLE");
        CARD("%-80s", TITLE);
    }
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 2 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_DAMAGE_DECAY");
    }   
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 2 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_DAMAGE_DECAY_TITLE");
        CARD("%-80s", TITLE);
    }
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 3 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_LOG_LOG_INTERPOLATION");
    }   
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 3 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_LOG_LOG_INTERPOLATION_TITLE");
        CARD("%-80s", TITLE);
    }
    //
    if(UnloadingCurveOption == 1)
    {
        ASSIGN(TBID_FLAG,0,EXPORT);
    }
    else if(UnloadingCurveOption == 2)
    {
        ASSIGN(TBID_FLAG,1,EXPORT);
    }
    //
    COMMENT("$      MID       RHO         E        ED        TC      FAIL      DAMP      TBID");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10d",_ID_,Rho,E,LSD_MAT83_ED,LSD_MAT83_TC,LSD_MAT83_FAIL,LSD_MAT83_DAMP,FLAGGED_OBJECT(LSD_MAT83_TBID,TBID_FLAG));
    //
    if(TBID_FLAG == 0)
    {
        ASSIGN(UnloadingCurveOption,1,IMPORT);
    }
    else if(TBID_FLAG == 1)
    {
        ASSIGN(UnloadingCurveOption,2,IMPORT);
    }
    //
    COMMENT("$   BVFLAG     SFLAG     RFLAG     TFLAG      PVID      SRAF       REF        HU");
    CARD("%10lg%10lg%10lg%10lg%10d%10lg%10lg%10lg",LSD_MAT83_BVFLAG,LSD_SFLAG,LSD_RFLAG,LSD_TFLAG,LSD_MAT83_PVID,LSD_SRAF,LSD_MAT_REF,LSD_MAT73_HU);
    //
    if(RegTypeEnum83Field == 2)
    {
        //
        COMMENT("$     MINR      MAXR     SHAPE     BETAT     BETAC");
        CARD("%10lg%10lg%10lg%10lg%10lg",LSD_MAT83_MINR,LSD_MAT83_MAXR,LSDYNA_SHAPE,LSD_MAT83_BETAT,LSD_MAT83_BETAC);
        //
    }
    if(RegTypeEnum83Field != 2)
    {
        //
        COMMENT("$       D0        N0        N1        N2        N3        C0        C1        C2");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT83_DO,LSD_MAT83_NO,LSD_MAT83_N1,LSD_MAT83_N2,LSD_MAT83_N3,LSD_MAT83_CO,LSD_MAT83_C1,LSD_MAT83_C2);
        //
        COMMENT("$       C3        C4        C5       AIJ       SIJ      MINR      MAXR     SHAPE");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT83_C3,LSD_MAT83_C4,LSD_MAT83_C5,LSD_MAT83_AIJ,LSD_MAT83_SIJ,LSD_MAT83_MINR,LSD_MAT83_MAXR,LSDYNA_SHAPE);
        //
    }
    //
    if(IO_FLAG == 2 && Card5_Option_MATL83 == 1)
    {
        COMMENT("$    EXPON     RIULD");
    }
    FREE_CARD(Card5_Option_MATL83,"%10lg%10lg",LSD_EXPON,LSD_RIULD);
}

FORMAT(Keyword971_R11.1) 
{
    //
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    //
    if(IO_FLAG == 1)
    {
        HEADER("*MAT_083%28s",OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "" || OPT_TYPE_STR != "_TITLE" || OPT_TYPE_STR != "_DAMAGE_DECAY" || OPT_TYPE_STR != "_DAMAGE_DECAY_TITLE" || OPT_TYPE_STR != "_LOG_LOG_INTERPOLATION" || OPT_TYPE_STR != "_LOG_LOG_INTERPOLATION_TITLE" ))
    {
         HEADER("*MAT_FU_CHANG_FOAM%28s", OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "" || OPT_TYPE_STR == "_TITLE"))
    {
        ASSIGN(RegTypeEnum83Field, 1);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "_DAMAGE_DECAY" || OPT_TYPE_STR == "_DAMAGE_DECAY_TITLE"))
    {
        ASSIGN(RegTypeEnum83Field, 2);
    }
    else if(IO_FLAG == 1 && (OPT_TYPE_STR == "_LOG_LOG_INTERPOLATION" || OPT_TYPE_STR == "_LOG_LOG_INTERPOLATION_TITLE"))
    {
        ASSIGN(RegTypeEnum83Field, 3);
    }
    
    if(IO_FLAG == 2 && RegTypeEnum83Field == 1 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_FU_CHANG_FOAM");
    }   
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 1 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_TITLE");
        CARD("%-80s", TITLE);
    }
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 2 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_DAMAGE_DECAY");
    }   
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 2 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_DAMAGE_DECAY_TITLE");
        CARD("%-80s", TITLE);
    }
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 3 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_LOG_LOG_INTERPOLATION");
    }   
    else if(IO_FLAG == 2 && RegTypeEnum83Field == 3 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_FU_CHANG_FOAM_LOG_LOG_INTERPOLATION_TITLE");
        CARD("%-80s", TITLE);
    }
    //
    if(UnloadingCurveOption == 1)
    {
        ASSIGN(TBID_FLAG,0,EXPORT);
    }
    else if(UnloadingCurveOption == 2)
    {
        ASSIGN(TBID_FLAG,1,EXPORT);
    }
    //
    COMMENT("$      MID       RHO         E        ED        TC      FAIL      DAMP      TBID");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10d",_ID_,Rho,E,LSD_MAT83_ED,LSD_MAT83_TC,LSD_MAT83_FAIL,LSD_MAT83_DAMP,FLAGGED_OBJECT(LSD_MAT83_TBID,TBID_FLAG));
    //
    if(TBID_FLAG == 0)
    {
        ASSIGN(UnloadingCurveOption,1,IMPORT);
    }
    else if(TBID_FLAG == 1)
    {
        ASSIGN(UnloadingCurveOption,2,IMPORT);
    }
    //
   CARD_PREREAD("%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_SRAF);
    
    if(IO_FLAG == 1 && (LSD_SRAF == 0.0 || LSD_SRAF == 1.0))
    {
        ASSIGN(SRAFOptfield, 0, IMPORT);
    }
    else if(IO_FLAG == 1 && (LSD_SRAF < 0.0 || LSD_SRAF  >= -1.0))
    {
        ASSIGN(SRAFOptfield, 1, IMPORT);
    }
    COMMENT("$   BVFLAG     SFLAG     RFLAG     TFLAG      PVID      SRAF       REF        HU");
    CARD("%10lg%10lg%10lg%10lg%10d%10lg%10lg%10lg",LSD_MAT83_BVFLAG,LSD_SFLAG,LSD_RFLAG,LSD_TFLAG,LSD_MAT83_PVID,CELL_COND(if(SRAFOptfield == 1)LSD_SRAF_Negative; else LSD_SRAF;),LSD_MAT_REF,LSD_MAT73_HU);
    //
    if(RegTypeEnum83Field == 2)
    {
        //
        COMMENT("$     MINR      MAXR     SHAPE     BETAT     BETAC");
        CARD("%10lg%10lg%10lg%10lg%10lg",LSD_MAT83_MINR,LSD_MAT83_MAXR,LSDYNA_SHAPE,LSD_MAT83_BETAT,LSD_MAT83_BETAC);
        //
    }
    if(RegTypeEnum83Field != 2)
    {
        //
        COMMENT("$       D0        N0        N1        N2        N3        C0        C1        C2");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT83_DO,LSD_MAT83_NO,LSD_MAT83_N1,LSD_MAT83_N2,LSD_MAT83_N3,LSD_MAT83_CO,LSD_MAT83_C1,LSD_MAT83_C2);
        //
        COMMENT("$       C3        C4        C5       AIJ       SIJ      MINR      MAXR     SHAPE");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT83_C3,LSD_MAT83_C4,LSD_MAT83_C5,LSD_MAT83_AIJ,LSD_MAT83_SIJ,LSD_MAT83_MINR,LSD_MAT83_MAXR,LSDYNA_SHAPE);
        //
    }
    //
    if(IO_FLAG == 2 && Card5_Option_MATL83 == 1)
    {
        COMMENT("$    EXPON     RIULD");
    }
    FREE_CARD(Card5_Option_MATL83,"%10lg%10lg",LSD_EXPON,LSD_RIULD);
}