//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Mater_file (USER) Setup File

ATTRIBUTES(COMMON) 
{
    KEYWORD_STR             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS            = SIZE("NUM_COMMENTS");
    CommentEnumField        = VALUE(INT,"User Comments");
    COMMENTS                = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    MAT_RHO                 = VALUE(FLOAT,"Initial Density");
    MAT_FLEX                = VALUE(FLOAT,"Fiber Coubling Modulus");
    MAT_FLX1                = VALUE(FLOAT,"Fiber Flexion Modulus Dir1");
    MAT_FLX2                = VALUE(FLOAT,"Fiber Flexion Modulus Dir2");
    ISENSOR                 = VALUE(SENSOR,"Sensor Identifier") { SUBTYPES = (/SENSOR/SENSOR_DEFINE) ; }
    Zerostress              = VALUE(FLOAT,"Zerostress:Zero  Stress Relative Area");
    S1                      = VALUE(FLOAT,"Nominal Stretch in Warp Direction");
    S2                      = VALUE(FLOAT,"Nominal Stretch in Weft Direction");
    FUN_A1                  = VALUE(FUNCT, "Function Defining Stress Vs Strain in Warp Direction");
    FUN_A2                  = VALUE(FUNCT, "Function Defining Stress Vs Strain in Weft Direction");
    FUN_A3                  = VALUE(FUNCT, "Function Defining Shear Stress Vs the Angle Between Fiber Directions (axes of anisotropy)");
    FUN_A4                  = VALUE(FUNCT, "Function Id for flex stress-strain in Warp Direction");
    FUN_A5                  = VALUE(FUNCT, "Function Id for flex stress-strain in Weft Direction");
    MAT_C1                  = VALUE(FLOAT,"Scale Factor for Ordinate of FUN_A1");
    MAT_C2                  = VALUE(FLOAT,"Scale Factor for Ordinate of FUN_A2");
    MAT_C3                  = VALUE(FLOAT,"Scale Factor for Ordinate of FUN_A3");
    IO_FLAG                 = VALUE(INT, "");
    LAW_NO                  = VALUE(STRING, "");
    Mat_Name_OR_LawNo       = VALUE(INT, "");
    TITLE                   = VALUE(STRING,"");
    Heat_Inp_opt            = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT         = VALUE(SUBOBJECT, "");
    THERM_STRESS            = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS     = VALUE(SUBOBJECT, "");
    LEAK_MAT_INPUT          = VALUE(INT,  "LEAK_MAT_INPUT");
    SUBGRP_LEAK_MAT         = VALUE(SUBOBJECT,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                         = 9000;
    COMMENTS                            = 5109;
    CommentEnumField                    = 7951;
    MAT_RHO                             = 118;
    FUN_A1                              = 45;
    FUN_A2                              = 170;
    FUN_A3                              = 172;
    FUN_A4                              = 200;
    FUN_A5                              = 1141;
    ISENSOR                             = 5157;
    Zerostress                          = 4579;
    MAT_C1                              = 1501;
    MAT_C2                              = 1502;
    MAT_C3                              = 1503;
    MAT_FLEX                            = 6136;
    MAT_FLX1                            = 1504;
    MAT_FLX2                            = 1505;
    S1                                  = 4377;
    S2                                  = 4378;

        NUM_COMMENTS                        = 5110;
    Heat_Inp_opt                        = 4346;
    SUBGRP_HEAT_MAT                     = -1;
    THERM_STRESS                        = 4555;
    SUBGRP_THERM_STRESS                 = -1;
    LEAK_MAT_INPUT                      = 2900;
    SUBGRP_LEAK_MAT                     = -1;
    Mat_Name_OR_LawNo                   = 4538;
    LAW_NO                              = -1;
    IO_FLAG                             = -1;
    TITLE                               = -1;
}


CHECK(COMMON)
{
    MAT_RHO         >0.0;
}

DEFAULTS(COMMON)
{
    MAT_C1          = 1.0;
    MAT_C2          = 1.0;
    MAT_C3          = 1.0;
    S1              = 0.1;
    S2              = 0.1;
    Mat_Name_OR_LawNo = 0;
}

GUI(COMMON) 
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Mat_Name_OR_LawNo ==2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW158/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/FABR_NL/");

    }  

    mandatory:
    SCALAR(MAT_RHO)    { DIMENSION="density";  }
    SCALAR(MAT_FLEX)   { DIMENSION="pressure"; }
    SCALAR(MAT_FLX1)   { DIMENSION="pressure"; }
    SCALAR(MAT_FLX2)   { DIMENSION="pressure"; }
    DATA(FUN_A1);
    DATA(FUN_A2);
    DATA(FUN_A3);
optional:
    DATA(FUN_A4);
    DATA(FUN_A5);
    DATA(ISENSOR);
    SCALAR(Zerostress) { DIMENSION="DIMENSIONLESS"; }
    SCALAR(S1)         { DIMENSION="DIMENSIONLESS"; }
    SCALAR(S2)         { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_C1)     { DIMENSION="pressure"; }
    SCALAR(MAT_C2)     { DIMENSION="pressure"; }
    SCALAR(MAT_C3)     { DIMENSION="pressure"; }

        graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    } 
    graphical FLAG(LEAK_MAT_INPUT);
    if(LEAK_MAT_INPUT != 0){
        SUBOBJECT(SUBGRP_LEAK_MAT) {SUBTYPES = (/SUBOBJECT/LEAK);}
    }
}  

FORMAT(radioss2023) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if (IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW158/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/FABR_NL/%d", _ID_);
        CARD("%-100s", TITLE);
    }

    COMMENT("#              RHO_I");
    CARD("%20lg",MAT_RHO);
    COMMENT("#       S1                  S2                FLEX               FLEX1               FLEX2");
    CARD("%20lg%20lg%20lg%20lg%20lg",S1,S2,MAT_FLEX,MAT_FLX1,MAT_FLX2);
    COMMENT("#         ZERO_STRESS           sensor_ID");
    CARD("%20lg          %10d",Zerostress,ISENSOR);
    COMMENT("#  FCT_ID1                       Fscale1");
    CARD("%10d          %20lg",FUN_A1,MAT_C1);
    COMMENT("#  FCT_ID2                       Fscale2");
    CARD("%10d          %20lg",FUN_A2,MAT_C2);
    COMMENT("#  FCT_ID3                       Fscale3");
    CARD("%10d          %20lg",FUN_A3,MAT_C3);
    COMMENT("#  FCT_ID4   FCT_ID5");
    CARD("%10d%10d",FUN_A4,FUN_A5);

    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(LEAK_MAT_INPUT != 0)
    {
        SUBOBJECTS(SUBGRP_LEAK_MAT, /SUBOBJECT/LEAK);
    }
}
