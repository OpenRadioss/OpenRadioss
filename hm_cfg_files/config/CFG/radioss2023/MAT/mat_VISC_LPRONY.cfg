//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material Visc_Large Prony
ATTRIBUTES(COMMON) 
{
    IO_FLAG         = VALUE(INT, "");
    Model_Order     = SIZE("Maxwell Model Order");
    FORM            = VALUE(INT,"Initial viscous rigidity formulation");
    FLAG_VISC       = VALUE(INT,"Viscous stress formulation");
    GAMAI           = ARRAY[Model_Order](FLOAT,"Shear Relaxation ratio");
    TAUI            = ARRAY[Model_Order](FLOAT,"Decay Shear Constant");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    IO_FLAG         = -1;
    Model_Order     = 2907;
    FORM            = -1;
    FLAG_VISC       = -1;
    GAMAI           = 4119;
    TAUI            = 4120;
}

DEFAULTS(COMMON)
{
    Model_Order     = 0;
}

CHECK(COMMON)
{
    Model_Order     >  0;
    Model_Order     <= 100;
}

GUI(COMMON) 
{
mandatory:
    SIZE(Model_Order);
    RADIO(FORM)
    {
        ADD(0, "Long-term rigidity");
        ADD(1, "Long-term rigidity");
        ADD(2, "Instantaneous rigidity");
    }
    RADIO(FLAG_VISC)
    {
        ADD(0, "Viscous stress the deviatoric and volumetric stress");
        ADD(1, "Viscous stress the deviatoric and volumetric stress");
        ADD(2, "Viscous stress the deviatoric stress only");
    }
    if( Model_Order > 0 && Model_Order <= 100)
    {
        ARRAY(Model_Order,"Strain rate") 
        {
            SCALAR(GAMAI)  {DIMENSION="DIMENSIONLESS"; }
            SCALAR(TAUI)   {DIMENSION = "t"; }
        }
    }
}

FORMAT(radioss2023) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/VISC/LPRONY/%d",_ID_);
    }
    COMMENT("#        M      form flag_visc");
    CARD("%10d%10d%10d",Model_Order,FORM,FLAG_VISC);
     
      if( Model_Order > 0 && Model_Order <= 100)
      {
          COMMENT("#            gamma_i               tau_i");
          CARD_LIST(Model_Order)
          {
              CARD("%20lg%20lg",GAMAI,TAUI);
          }
      }
    
}
