//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material law 190 setup config file
ATTRIBUTES(COMMON)
{
    NUM_COMMENTS            = SIZE("No. of Comment Lines");
    COMMENTS                = ARRAY[NUM_COMMENTS](STRING, "Entity_Comments");
    CommentEnumField        = VALUE(INT, "User Comments");
    KEYWORD_STR             = VALUE(STRING, "Solver Keyword");
    MAT_RHO                 = VALUE(FLOAT, "Initial Density");
    MAT_E                   = VALUE(FLOAT, "Initial Young's Modulus");    
    MAT_NU                  = VALUE(FLOAT, "Poisson's Ratio");
    MAT_HU                  = VALUE(FLOAT, "Hysteric unloading factor");
    MAT_SHAPE               = VALUE(FLOAT, "Shape Factor");
    MAT_TOL1                = VALUE(FLOAT, "Tolerance for second derivative");
    MAT_TOL2                = VALUE(FLOAT, "Tolerance for derivative");
    FUN_1                   = VALUE(FUNCT, "Table Identifier (dimension of table=3)");
//    FUN_DINT                = VALUE(FUNCT, "Function Id for compression");
    SCALE_1                 = VALUE(FLOAT, "Scale Factor for strain rate in table");
//    SCALE_INT               = VALUE(FLOAT, "Scale Factor for Ordinate of function dint");


    IO_FLAG                 = VALUE(INT, "");
    LAW_NO                  = VALUE(STRING, "");
    MAT_Bame_OR_LawNo       = VALUE(INT,  "RADIOSS_COMMENT_FLAG");
    TITLE                   = VALUE(STRING,"");
    Heat_Inp_opt            = VALUE(INT, "Heat");
    SUBGRP_HEAT_MAT         = VALUE(SUBOBJECT, "");
    THERM_STRESS            = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS     = VALUE(SUBOBJECT, "");
    VISC_PRONY_option       = VALUE(INT,"Visc Prony");
    SUBGRP_VISC_PRONY       = VALUE(SUBOBJECT, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR             = 9000;
    NUM_COMMENTS            = 5110;
    COMMENTS                = 5109;
    CommentEnumField        = 7951;
    MAT_RHO                 = 118;
    MAT_E                  = 1507;
    MAT_NU                  = 120;
    MAT_SHAPE               = 4580;
    IO_FLAG                 = -1;
    TITLE                   = -1;
    Heat_Inp_opt            = 4346;
    SUBGRP_HEAT_MAT         = -1;
    THERM_STRESS		    = 4555;
    SUBGRP_THERM_STRESS     = -1;
    VISC_PRONY_option       = 4707;
    SUBGRP_VISC_PRONY       = -1;
}
DRAWABLES(COMMON) {
public:
    INITIAL_DENSITY                 = SCALAR(MAT_RHO);
    YOUNG_MODULUS                   = SCALAR(MAT_E);
    POISSON_RATIO                   = SCALAR(MAT_NU);
public:
    SOUND_SPEED                     = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
}
CHECK(COMMON)
{
    MAT_RHO   > 0.0;

}
DEFAULTS(COMMON)
{
    MAT_HU              = 0.0;
    MAT_SHAPE           = 1.0;
}


GUI(COMMON){
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG = TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if (CommentEnumField == 2)
    {
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS, "")
        {
            SCALAR(COMMENTS);
        }
    }
    if(MAT_Bame_OR_LawNo == 2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW190/");
    }
    else 
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/FOAM_DUBOIS/");
    }

mandatory:

    SCALAR(MAT_RHO)                     { DIMENSION="density";  }
    SCALAR(MAT_E)                       { DIMENSION="pressure";      }
    SCALAR(SCALE_1)                     { DIMENSION="f";      }    
 
 
 optional:
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt != 0)
    {
        SUBOBJECT(SUBGRP_HEAT_MAT) { SUBTYPES = (/SUBOBJECT/HEAT); }
    }
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS != 0)
    {
        SUBOBJECT(SUBGRP_THERM_STRESS) { SUBTYPES = (/SUBOBJECT/THERM_STRESS); }
    }
    graphical FLAG(VISC_PRONY_option);
    if(VISC_PRONY_option!=0)
    {
        SUBOBJECT(SUBGRP_VISC_PRONY) {SUBTYPES = (/SUBOBJECT/VISC);}
    } 
}
//file format
FORMAT(radioss2023)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
   if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(MAT_Bame_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && MAT_Bame_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW190/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/FOAM_DUBOIS/%d",_ID_);
        CARD("%-100s", TITLE);
    }

    COMMENT("#                Rho");
    CARD("%20lg", MAT_RHO);
    COMMENT("#                 E0              MAT_NU");
    CARD("%20lg%20lg", MAT_E, MAT_NU);
    COMMENT("#                 HU               SHAPE                TOL1                TOL2");
//           #---1----|----2----|----3----|----4----|----5----|----6----|----7----|----8----|----9----|---10----|
    CARD("%20lg%20lg%20lg%20lg",MAT_HU, MAT_SHAPE,MAT_TOL1,MAT_TOL2);
//           #---1----|----2----|----3----|----4----|----5----|----6----|----7----|----8----|----9----|---10----|
    COMMENT("#     TAB1               SCALE");
    CARD("%10d%20lg",FUN_1,SCALE_1);
//           #---1----|----2----|----3----|----4----|----5----|----6----|----7----|----8----|----9----|---10----|
//     COMMENT("#  FUN_DI          SCALE_DINT");
//    CARD("%10d%20lg",FUN_DINT,SCALE_INT);
  
    if (Heat_Inp_opt != 0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT, /SUBOBJECT/HEAT);
    }
    if (Heat_Inp_opt != 0 && THERM_STRESS != 0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS, /SUBOBJECT/THERM_STRESS);
    }
    if(VISC_PRONY_option!=0)
    {
        SUBOBJECTS(SUBGRP_VISC_PRONY,/SUBOBJECT/VISC);
    }
}

