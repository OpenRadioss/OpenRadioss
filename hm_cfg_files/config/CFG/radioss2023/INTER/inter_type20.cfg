//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /INTER/TYPE20
// 

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    // Card 1
    secondaryentityids                        = VALUE(SETS, "Second surface identifier") { SUBTYPES = (/SETS/SURF) ; }
    mainentityids                             = VALUE(SETS, "First surface identifier")  { SUBTYPES = (/SETS/SURF) ; }
    I_sym                                     = VALUE(INT, "Symmetric contact treatment of the nodes and the surface flag");
    I_edge                                    = VALUE(INT, "Edge definition flag");
    GRNOD_ID                                  = VALUE(SETS, "Nodes group identifier used to add nodes to surface nodes")  { SUBTYPES = (/SETS/GRNOD); }
    Line1_set                                 = VALUE(SETS, "First line identifier")  { SUBTYPES = (/SETS/LINE); }
    Line2_set                                 = VALUE(SETS, "Second line identifier")  { SUBTYPES = (/SETS/LINE); }
    ANGLE2                                    = VALUE(FLOAT, "Edges angle");
    Igap                                      = VALUE(INT, "Gap/element option flag");
    Multimp                                   = VALUE(INT, "Maximum average number of impacted main segments per secondary node");
    Ibag                                      = VALUE(INT, "Airbag vent holes closure flag in case of contact");
    NodDel3                                   = VALUE(INT, "Node and segment deletion flag");
    FpenMax                                   = VALUE(FLOAT, "Maximum initial penetration factor (0 < Fpenmax <= 1)");
    STFAC                                     = VALUE(FLOAT, "Interface stiffness scale factor.");
    FRIC                                      = VALUE(FLOAT, "Coulomb friction");
    MINI                                      = VALUE(FLOAT, "Minimum gap for impact activation");
    TSTART                                    = VALUE(FLOAT, "Start time");
    TSTOP                                     = VALUE(FLOAT, "Time for temporary deactivation");
    Deactivate_X_BC                           = VALUE(INT, "Deactivation flag of boundary conditions at impact");
    Deactivate_Y_BC                           = VALUE(INT, "Deactivation flag of boundary conditions at impact");
    Deactivate_Z_BC                           = VALUE(INT, "Deactivation flag of boundary conditions at impact");
    INACTIV                                   = VALUE(INT, "Deactivation flag of stiffness in case of initial penetrations");
    STIFF_DC                                  = VALUE(FLOAT, "Critical damping coefficient on interface stiffness");
    FRIC_DC                                   = VALUE(FLOAT, "Critical damping coefficient on interface friction");
    Ifric                                     = VALUE(INT, "Friction formulation flag");
    Ifiltr                                    = VALUE(INT, "Friction filtering flag");
    Xfreq                                     = VALUE(FLOAT, "Filtering coefficient");
    IFORM                                     = VALUE(INT, "Friction penalty formulation type");

    // Card 4 (if Ifric > 0)
    C1                                        = VALUE(FLOAT, "Friction law coefficient");
    C2                                        = VALUE(FLOAT, "Friction law coefficient");
    C3                                        = VALUE(FLOAT, "Friction law coefficient");
    C4                                        = VALUE(FLOAT, "Friction law coefficient");
    C5                                        = VALUE(FLOAT, "Friction law coefficient");

    // Card 5 (if Ifric > 1)
    C6                                        = VALUE(FLOAT, "Friction law coefficient");

    // HM INTERNAL
    KEYWORD_STR                               = VALUE(STRING,"Solver Keyword");
    NUM_COMMENTS                              = SIZE("NUM_COMMENTS");
    CommentEnumField                          = VALUE(INT,"User Comments");
    COMMENTS                                  = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");

    TITLE                                     = VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    // INPUT ATTRIBUTES

    // Card 1
    I_sym                                     = 4689;
    I_edge                                    = 4690;
    GRNOD_ID                                  = 8056;
    Line1_set                                 = 4692;
    Line2_set                                 = 4695;
    ANGLE2                                    = 5218;
    Igap                                      = 8045;
    Multimp                                   = 8046;
    Ibag                                      = 6300;
    NodDel3                                   = 4013;
    FpenMax                                   = 4795;

    // Card 2
    STFAC                                     = 4253;
    FRIC                                      = 5;
    MINI                                      = 4109;
    TSTART                                    = 11;
    TSTOP                                     = 12;

    Deactivate_X_BC                           = 7020;
    Deactivate_Y_BC                           = 7021;
    Deactivate_Z_BC                           = 7022;
    INACTIV                                   = 94;
    STIFF_DC                                  = 6;
    FRIC_DC                                   = 8;

    Ifric                                     = 6303;
    Ifiltr                                    = 6304;
    Xfreq                                     = 6305;
    IFORM                                     = 4028;

    // Card 3
    C1                                        = 6306;
    C2                                        = 6307;
    C3                                        = 6308;
    C4                                        = 6309;
    C5                                        = 6310;

    // Card 4
    C6                                        = 6311;

    // HM INTERNAL
    KEYWORD_STR                               = 9000;
    COMMENTS                                  = 5109;
    CommentEnumField                          = 7951;
    NUM_COMMENTS                              = 5110;

    TITLE                                     = -1;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    // INPUT ATTRIBUTES

    ANGLE2                                    = 91.0;
    NodDel3                                   = 0;
    Ibag                                      = 0;
    FpenMax                                   = 1.0;
    STFAC                                     = 1.0;
    STIFF_DC                                  = 0.05;
    FRIC_DC                                   = 1.0;
    Ifric                                     = 0;
    Ifiltr                                    = 0;
    IFORM                                     = 2;
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }

    ASSIGN(KEYWORD_STR, "/INTER/TYPE20");

    DATA(secondaryentityids);
    DATA(mainentityids);

    RADIO(I_sym, "Isym")
    {
      ADD(0,"0: Set to 1");
      ADD(1,"1: Nodes from surfaces 1 and 2 and nodes from grnd_ID impact surfaces 1 and 2");
      ADD(2,"2: Nodes from surface 2 and nodes from grnd_ID impact surface 1");
    }

    RADIO(I_edge, "Iedge")
    {
      ADD(0,"0: No edge generation from surf_ID1 and surf_ID2");
      ADD(1,"1: Only external border edges from surf_ID1 and surf_ID2 are generated");
      ADD(1,"2: All segment edges from surf_ID1 and surf_ID2 are generated");
      ADD(1,"3: Same as 1 + sharp edges between segments");
    }

    DATA(GRNOD_ID, "grnd_ID");
    DATA(Line1_set, "line_ID1");
    DATA(Line2_set, "line_ID2");

    if (I_edge==3)
    {
      SCALAR(ANGLE2, "edge_angle")              { DIMENSION="a"; }
    }

    RADIO(Igap, "Igap")
    {
      ADD(0,"0: Gap is constant and equal to Gap0");
      ADD(1,"1: Gap varies (in space, not in time) according to the characteristics of the impacted surfaces and nodes");
    }

    RADIO(Ibag, "Ibag")
    {
      ADD(0,"0: (Default) No closure");
      ADD(1,"1: Closure");
    }

    RADIO(NodDel3, "Idel")
    {
      ADD(0,"0: No deletion (Default)");
      ADD(1,"1: When all the elements (4-node shells, 3-node shells, solids) associated to one segment are deleted, the segment is removed from the main side of the interface");
      ADD(2,"2: When a 4-node shell, a 3-node shell or a solid element is deleted, the corresponding segment is removed from the main side of the interface");
      ADD(-1,"-1: Same as = 1, except non-connected nodes are not removed from the secondary side of the interface");
      ADD(-2,"-2: Same as = 2, except non-connected nodes are not removed from the secondary side of the interface");
    }

    SCALAR(FpenMax, "Fpenmax")               { DIMENSION="DIMENSIONLESS"; }
    SCALAR(STFAC, "Stfac")                   { DIMENSION="DIMENSIONLESS"; }
    SCALAR(FRIC, "Fric")                     { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MINI, "Gap0")                     { DIMENSION="l"; }
    SCALAR(TSTART, "Tstart")                 { DIMENSION="t"; }
    SCALAR(TSTOP, "Tstop")                   { DIMENSION="t"; }

    FLAG(Deactivate_X_BC, "IBC_x");
    FLAG(Deactivate_Y_BC, "IBC_y");
    FLAG(Deactivate_Z_BC, "IBC_z");

    RADIO(INACTIV, "Inacti")
    {
      ADD(0,"0: No action");
      ADD(1,"1: Deactivation of stiffness on nodes");
      ADD(2,"2: Deactivation of stiffness on elements");
      ADD(3,"3: Change node coordinates to avoid initial penetrations");
      ADD(5,"5: Gap is variable with time but initial penetration is computed as follows (the node is slightly depenetrated): gap0 = Gap - P0 - 5 % (Gap - P0)");
    }

    SCALAR(STIFF_DC, "VIS_S")                 { DIMENSION="DIMENSIONLESS"; }
    SCALAR(FRIC_DC, "VIS_F")                  { DIMENSION="DIMENSIONLESS"; }

    RADIO(Ifric, "Ifric")
    {
      ADD(0,"0: (Default) Static Coulomb friction law");
      ADD(1,"1: Generalized viscous friction law");
      ADD(2,"2: Modified Darmstad friction law");
      ADD(3,"3: Renard friction law");
      ADD(4,"4: Exponential decay law");
    }

    RADIO(Ifiltr, "Ifiltr")
    {
      ADD(0,"0: (Default) No filter is used");
      ADD(1,"1: Simple numerical filter");
      ADD(2,"2: Standard -3dB filter with filtering period");
      ADD(3,"3: Standard -3dB filter with cutting frequency");
    }

    SCALAR(Xfreq, "Xfreq")                   { DIMENSION="f"; }

    RADIO(IFORM, "Iform")
    {
      ADD(1,"1: Viscous (total) formulation");
      ADD(2,"2: Stiffness (incremental) formulation");
    }

    if(Ifric>0) 
    {
      SCALAR(C1, "C1")
      {
        if (Ifric==1)      { TITLE = "Friction C1 (Viscous law)"  ; DIMENSION = "inverse_of_pressure"; }
        else if (Ifric==2) { TITLE = "Friction C1 (Darmstad law)" ; DIMENSION = "DIMENSIONLESS"; }
        else if (Ifric==3) { TITLE = "Friction C1 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
        else if (Ifric==4) { TITLE = "Friction C1 (Exponential decay model)" ; DIMENSION = "DIMENSIONLESS"; }
      }  
      SCALAR(C2, "C2")
      {
        if (Ifric==1)      { TITLE = "Friction C2 (Viscous law)"  ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==2) { TITLE = "Friction C2 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==3) { TITLE = "Friction C2 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
        else if (Ifric==4) { TITLE = "Friction C2 (Exponential decay model)" ; DIMENSION = "inverse_of_speed"; } 
      }  
      SCALAR(C3, "C3")
      {
        if (Ifric==1)      { TITLE = "Friction C3 (Viscous law)"  ; DIMENSION = "inverse_surfacic_power"; }
        else if (Ifric==2) { TITLE = "Friction C3 (Darmstad law)" ; DIMENSION = "DIMENSIONLESS"; }
        else if (Ifric==3) { TITLE = "Friction C3 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
      }  
      SCALAR(C4, "C4") {
        if (Ifric==1)      { TITLE = "Friction C4 (Viscous law)"  ; DIMENSION = "inverse_of_square_of_pressure"; }
        else if (Ifric==2) { TITLE = "Friction C4 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==3) { TITLE = "Friction C4 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
      }  
      SCALAR(C5, "C5") {
        if (Ifric==1)      { TITLE = "Friction C5 (Viscous law)"  ; DIMENSION = "inverse_of_square_of_speed"; }
        else if (Ifric==2) { TITLE = "Friction C5 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==3) { TITLE = "Friction C5 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
      }
    }
    if(Ifric>1)
    {
      SCALAR(C6, "C6")
      {
       if (Ifric==1)      { TITLE = "Friction C6 (Viscous law)"  ; DIMENSION = "inverse_of_square_of_pressure"; }
       else if (Ifric==2) { TITLE = "Friction C6 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
       else if (Ifric==3) { TITLE = "Friction C6 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
      }
    }
}

// File format
FORMAT(radioss100)
{
    HEADER("/INTER/TYPE20/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# surf_ID1  surf_ID2      Isym     Iedge  grnod_ID  line_ID1  line_ID2                    edge_angle");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10s%20lg", secondaryentityids, mainentityids, I_sym, I_edge, GRNOD_ID, Line1_set, Line2_set, _BLANK_, ANGLE2);

    COMMENT("#                                             Igap   Multimp      Ibag      Idel");
    CARD("%40s%10d%10d%10d%10d", _BLANK_, Igap, Multimp, Ibag, NodDel3);
   
    COMMENT("#                                                    Fpenmax                                        ");
    CARD("%40s%20lg%40s", _BLANK_, FpenMax, _BLANK_);

    COMMENT("#Blank Format");
    CARD("%100s", _BLANK_);

    COMMENT("#              Stfac                Fric              Gap0                Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", STFAC, FRIC, MINI, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs                VISf");
    CARD("%7s%1d%1d%1d%10s%10s%10d%20lg%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, _BLANK_, INACTIV, STIFF_DC, FRIC_DC);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform");
    CARD("%10d%10d%20lg%10d", Ifric, Ifiltr, Xfreq, IFORM);

    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);
    }
}

FORMAT(radioss120)
{
    HEADER("/INTER/TYPE20/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# surf_ID1  surf_ID2      Isym     Iedge  grnod_ID  line_ID1  line_ID2                    edge_angle");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10s%20lg", secondaryentityids, mainentityids, I_sym, I_edge, GRNOD_ID, Line1_set, Line2_set, _BLANK_, ANGLE2);

    COMMENT("#                                             Igap                Ibag      Idel");
    CARD("%40s%10d%10s%10d%10d", _BLANK_, Igap, _BLANK_, Ibag, NodDel3);
   
    COMMENT("#                                                    Fpenmax                                        ");
    CARD("%40s%20lg%40s", _BLANK_, FpenMax, _BLANK_);

    COMMENT("#Blank Format");
    CARD("%100s", _BLANK_);

    COMMENT("#              Stfac                Fric              Gap0                Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", STFAC, FRIC, MINI, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs                VISf");
    CARD("%7s%1d%1d%1d%10s%10s%10d%20lg%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, _BLANK_, INACTIV, STIFF_DC, FRIC_DC);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform");
    CARD("%10d%10d%20lg%10d", Ifric, Ifiltr, Xfreq, IFORM);

    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);
    }
}
