//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /INTER/TYPE19
// 

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    // Card 1
    secondaryentityids                        = VALUE(SETS, "Secondary surface identifier")  { SUBTYPES = (/SETS/SURF) ; }
    mainentityids                             = VALUE(SETS, "Main surface identifier")    { SUBTYPES = (/SETS/SURF) ; }
    type7_Istf                                = VALUE(INT, "Stiffness definition flag");
    Ithe                                      = VALUE(INT, "Heat contact flag");
    Igap                                      = VALUE(INT, "Gap/element option flag");
    Iedge_Type19                              = VALUE(INT, "Edges to edge contact flag");
    Ibag                                      = VALUE(INT, "Airbag vent holes closure flag in case of contact");
    Idel7                                     = VALUE(INT, "Node and segment deletion flag");
    Icurv                                     = VALUE(INT, "Secondary gap with curvature");

    GAPSCALE                                  = VALUE(FLOAT, "Gap scale factor (used only when Igap = 3)");
    GAPMAX                                    = VALUE(FLOAT, "Maximum gap (used only when Igap = 3)");

    STMIN                                     = VALUE(FLOAT, "Minimum stiffness");
    STMAX                                     = VALUE(FLOAT, "Maximum stiffness");
    PrMesh_Size                               = VALUE(FLOAT, "Percentage of mesh size (used only when Igap = 3)");
    Tmin                                      = VALUE(FLOAT, "Minimum interface time step");
    Irem_Gap                                  = VALUE(INT, "Flag for deactivating secondary nodes or lines, if element size < gap value, in case of self-impact contact");
    Irem_i2                                   = VALUE(INT, "Flag for deactivating the secondary node, if the same contact pair (nodes) has been defined in /INTER/TYPE2");
    
    // Card 2 (if Icurv = 1 or 2)
    TYPE7_N1                                  = VALUE(NODE,"First node identifier");
    TYPE7_N2                                  = VALUE(NODE,"Second node identifier");

    // Card 3
    TYPE7_SCALE                               = VALUE(FLOAT, "Interface stiffness (if Istf = 1) or Stiffness scale factor for the interface (if Istf ? 1)");
    FRIC                                      = VALUE(FLOAT, "Coulomb friction");
    GAP                                       = VALUE(FLOAT," Minimum gap for impact activation");
    TSTART                                    = VALUE(FLOAT,"Start time");
    TSTOP                                     = VALUE(FLOAT,"Time for temporary deactivation");

    Deactivate_X_BC                           = VALUE(INT, "Deactivation flag of boundary conditions at impact");
    Deactivate_Y_BC                           = VALUE(INT, "Deactivation flag of boundary conditions at impact");
    Deactivate_Z_BC                           = VALUE(INT, "Deactivation flag of boundary conditions at impact");
    INACTIV                                   = VALUE(INT, "Deactivation flag of stiffness in case of initial penetrations");
    STIFF_DC                                  = VALUE(FLOAT, "Critical damping coefficient on interface stiffness");
    FRIC_DC                                   = VALUE(FLOAT, "Critical damping coefficient on interface friction");
    SORT_FACT                                 = VALUE(FLOAT, "Sorting factor");

    Ifric                                     = VALUE(INT, "Friction formulation flag");
    Ifiltr                                    = VALUE(INT, "Friction filtering flag");
    Xfreq                                     = VALUE(FLOAT, "Filtering coefficient");
    IFORM                                     = VALUE(INT, "Friction penalty formulation type");
    ISENSOR                                   = VALUE(SENSOR, "Sensor identifier to activate/deactivate the interface") {SUBTYPES=(/SENSOR/SENSOR_DEFINE);}
    Fric_ID                                   = VALUE(FRICTION, "Friction identifier for friction definition for selected pairs of parts");

    // Card 4 (if Ifric > 0)
    C1                                        = VALUE(FLOAT, "Friction law coefficient");
    C2                                        = VALUE(FLOAT, "Friction law coefficient");
    C3                                        = VALUE(FLOAT, "Friction law coefficient");
    C4                                        = VALUE(FLOAT, "Friction law coefficient");
    C5                                        = VALUE(FLOAT, "Friction law coefficient");

    // Card 5 (if Ifric > 1)
    C6                                        = VALUE(FLOAT, "Friction law coefficient");

    // Card 6 (If Ithe = 1)
    Kthe                                      = VALUE(FLOAT, "Heat exchange coefficient (if fct_IDK = 0) or Heat exchange scale factor (if fct_IDK ? 0)");
    fct_ID_k                                  = VALUE(FUNCT, "Function identifier for thermal heat exchange definition with contact pressure");
    T_Initial                                 = VALUE(FLOAT, "Interface temperature");
    IFORM1                                    = VALUE(INT, "Heat contact formulation flag");
    Crx                                       = VALUE(FLOAT, "Abscissa scale factor on fct_IDK");

    F_RAD                                     = VALUE(FLOAT, "Radiation factor");
    D_RAD                                     = VALUE(FLOAT, "Maximum distance for radiation computation");
    Fmax                                      = VALUE(FLOAT, "Frictional heating factor of secondary");
    HEAT_AL                                   = VALUE(FLOAT, "Frictional heating factor of main");

    // HM INTERNAL
    KEYWORD_STR                               = VALUE(STRING,"Solver Keyword");
    NUM_COMMENTS                              = SIZE("NUM_COMMENTS");
    CommentEnumField                          = VALUE(INT,"User Comments");
    COMMENTS                                  = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");

    TITLE                                     = VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    // INPUT ATTRIBUTES

    // Card 1
    type7_Istf                                = 4019;
    Ithe                                      = 4735;
    Igap                                      = 8045;
    Iedge_Type19                              = 2605;
    Ibag                                      = 6300;
    Idel7                                     = 6301;
    Icurv                                     = 4020;

    GAPSCALE                                  = 4021;
    GAPMAX                                    = 4022;

    STMIN                                     = 4023;
    STMAX                                     = 4024;
    PrMesh_Size                               = 4828;
    Tmin                                      = 4831;
    Irem_Gap                                  = 2794;
    Irem_i2                                   = 5408;

    // Card 2
    TYPE7_N1                                  = 4025;
    TYPE7_N2                                  = 4026;

    // Card 3
    TYPE7_SCALE                               = 4027;
    FRIC                                      = 5;
    GAP                                       = 5153;
    TSTART                                    = 11;
    TSTOP                                     = 12;

    Deactivate_X_BC                           = 7020;
    Deactivate_Y_BC                           = 7021;
    Deactivate_Z_BC                           = 7022;
    INACTIV                                   = 94;
    STIFF_DC                                  = 6;
    FRIC_DC                                   = 8;
    SORT_FACT                                 = 5321;

    Ifric                                     = 6303;
    Ifiltr                                    = 6304;
    Xfreq                                     = 6305;
    IFORM                                     = 4028;
    ISENSOR                                   = 5157;
    Fric_ID                                   = 6550;

    // Card 4
    C1                                        = 6306;
    C2                                        = 6307;
    C3                                        = 6308;
    C4                                        = 6309;
    C5                                        = 6310;

    // Card 5
    C6                                        = 6311;

    // Card 7
    Kthe                                      = 4736;
    fct_ID_k                                  = 695;
    T_Initial                                 = 4113;
    IFORM1                                    = 4796;
    Crx                                       = 4122;

    F_RAD                                     = 697;
    D_RAD                                     = 698;
    Fmax                                      = 4830;
    HEAT_AL                                   = 4344;

    // HM INTERNAL
    KEYWORD_STR                               = 9000;
    COMMENTS                                  = 5109;
    CommentEnumField                          = 7951;
    NUM_COMMENTS                              = 5110;

    TITLE                                     = -1;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    // INPUT ATTRIBUTES

    type7_Istf                                = 0;
    Igap                                      = 0;
    Ithe                                      = 0;
    Iedge_Type19                              = 0;
    Ibag                                      = 0;
    Idel7                                     = 0;
    Icurv                                     = 0;

    GAPSCALE                                  = 1.0;
    STMAX                                     = 10e30;
    PrMesh_Size                               = 0.4;
    Irem_Gap                                  = 0;
    Irem_i2                                   = 0;

    TYPE7_SCALE                               = 0.0;
    INACTIV                                   = 0;
    STIFF_DC                                  = 0.05;
    FRIC_DC                                   = 1.0;
    SORT_FACT                                 = 0.20;

    Ifric                                     = 0;
    Ifiltr                                    = 0;
    IFORM                                     = 0;
    
    Kthe                                      = 0.0;
    IFORM1                                    = 0;
    Crx                                       = 1.0;

}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }

    ASSIGN(KEYWORD_STR, "/INTER/TYPE19");

    DATA(secondaryentityids);
    DATA(mainentityids);

    RADIO(type7_Istf, "Istf")
    {
      ADD(0,"0: Use value in /DEFAULT/INTER/TYPE19");
      ADD(1,"1: Interface stiffness is entered as Stfac");
      ADD(2,"2: Interface stiffness is the average of the main and secondary stiffness");
      ADD(3,"3: Interface stiffness is the maximum of the main and secondary stiffness");
      ADD(4,"4: Interface stiffness is the minimum of the main and secondary stiffness");
      ADD(5,"5: Interface stiffness is the main and secondary stiffness in series");
      ADD(1000,"1000 Default, if /DEFAULT/INTER/TYPE19 is not defined: For node to surface contact, interface stiffness is only based on main stiffness. For edge to edge contact, interface stiffness is the main and secondary stiffness in series");
    }

    RADIO(Ithe, "Ithe")
    {
      ADD(0,"0: No heat transfer or heat friction");
      ADD(1,"1: Heat transfer or heat friction activated");
    }

    RADIO(Igap, "Igap")
    {
      ADD(0,"0: Use value in /DEFAULT/INTER/TYPE19");
      ADD(1,"1: Gap varies accordingly to the characteristics of the impacted main surface and the impacting secondary node");
      ADD(2,"2: Variable gap + gap scale correction of the computed gap + size of the mesh taken into account to avoid initial penetrations");
      ADD(3,"3: Node to surface contact uses variable gap + gap scale correction of the computed gap + deactivation of neighbor secondary nodes if element size < gap. Edge contact uses a constant contact gap, Gapmin");
      ADD(1000,"1000 Default, if /DEFAULT/INTER/TYPE19 is not defined: Gap is constant and equal to the minimum gap");
    }

    RADIO(Iedge_Type19, "Iedge")
    {
      ADD(0,"0: Use value in /DEFAULT/INTER/TYPE19");
      ADD(1,"1: Only external edges of surf_IDs and surf_IDm are generated");
      ADD(2,"2 Default, if /DEFAULT/INTER/TYPE19 is not defined: All segment edges of surf_IDs and surf_IDm are generated");
    }

    RADIO(Ibag, "Ibag")
    {
      ADD(0,"0: Use value in /DEFAULT/INTER/TYPE19");
      ADD(1,"1: Closure");
      ADD(2,"2  Default. if /DEFAULT/INTER/TYPE19 is not defined: No closure");
    }
    RADIO(Idel7, "Idel")
    {
      ADD(0,"0: Use value in /DEFAULT/INTER/TYPE19");
      ADD(1,"1: When all the elements (4-node shells, 3-node shells, or solids) associated to one segment are deleted, the segment is removed from the main side of the interface");
      ADD(2,"2: When a 4-node shell, a 3-node shell or a solid element is deleted, the corresponding segment is removed from the main side of the interface");
      ADD(-1,"-1: Same as = 1, except non-connected nodes are not removed from the secondary side of the interface");
      ADD(-2,"-2: Same as = 2, except non-connected nodes are not removed from the secondary side of the interface");
      ADD(1000,"1000  Default, if /DEFAULT/INTER/TYPE19 is not defined: No deletion");
    }

    RADIO(Icurv, "Icurv")
    {
      ADD(0,"0: No curvature");
      ADD(1,"1: Spherical curvature");
      ADD(2,"2: Cylindrical curvature");
      ADD(3,"3: Automatic bicubic surface");
    }

    if (Igap==3)
    {
      SCALAR(GAPSCALE, "Fscalegap")          { DIMENSION="DIMENSIONLESS"; }
      SCALAR(GAPMAX, "Gapmax")               { DIMENSION="l"; }
    }

    
    SCALAR(STMIN, "Stmin")                   {DIMENSION="translation_stiffness";}
    SCALAR(STMAX, "Stmax")                   {DIMENSION="translation_stiffness";}

    if (Igap==3)
    {
      SCALAR(PrMesh_Size, "%mesh_size")      { DIMENSION="DIMENSIONLESS"; }
    }

    SCALAR(Tmin, "dtmin")                    { DIMENSION="t"; }

    RADIO(Irem_Gap, "Irem_gap")
    {
      ADD(0,"0: Set to value defined in /DEFAULT/INTER/TYPE7");
      ADD(1,"1: Default, if /DEFAULT/INTER/TYPE19 is not defined: No deactivation of secondary nodes or lines");
      ADD(2,"2: Deactivation of secondary nodes or lines");
    }

    RADIO(Irem_i2, "Irem_i2")
    {
      ADD(0,"0: Set to value defined in /DEFAULT/INTER/TYPE7");
      ADD(1,"1: Secondary nodes in /INTER/TYPE2 tied contacts are removed from this contact");
      ADD(2,"2: No change to secondary nodes");
    }

    // Card 2 (if Icurv = 1 or 2)
    if (Icurv==1 || Icurv==2)
    {
      DATA(TYPE7_N1, "node_ID1");
      DATA(TYPE7_N2, "node_ID2");
    }

    SCALAR(TYPE7_SCALE, "Stfac")
    {
      if (type7_Istf==1)                     { DIMENSION="translation_stiffness"; }
      else                                   { DIMENSION="DIMENSIONLESS"; }
    }

    SCALAR(FRIC, "Fric")                     { DIMENSION="DIMENSIONLESS"; }
    SCALAR(GAP, "Gapmin")                    { DIMENSION="l"; }
    SCALAR(TSTART , "Tstart")                { DIMENSION="t"; }
    SCALAR(TSTOP, "Tstop")                   { DIMENSION="t"; }

    FLAG(Deactivate_X_BC);
    FLAG(Deactivate_Y_BC);
    FLAG(Deactivate_Z_BC);

    RADIO(INACTIV, "Inacti")
    {
      ADD(0,"0: Use value in /DEFAULT/INTER/TYPE19");
      ADD(1,"1: Deactivation of stiffness on nodes");
      ADD(2,"2: Deactivation of stiffness on elements");
      ADD(3,"3: Change node coordinates to avoid initial penetrations");
      ADD(5,"5: Gap is variable with time and initial gap is computed as: gap0 = Gap - P0, with P0 the initial penetration");
      ADD(6,"6: Gap is variable with time, but initial penetration is computed as (the node is slightly depenetrated): gap0 = Gap - P0 - 5% * (Gap \96 P0)");
      ADD(1000,"1000  Default, if /DEFAULT/INTER/TYPE19 is not defined: No action");
    }

    SCALAR(STIFF_DC, "VISs")                 { DIMENSION="DIMENSIONLESS"; }
    SCALAR(FRIC_DC, "VISF")                  { DIMENSION="DIMENSIONLESS"; }
    SCALAR(SORT_FACT, "Bumult")              { DIMENSION="DIMENSIONLESS"; }

    RADIO(Ifric, "Ifric")
    {
      ADD(0,"0: (Default) Static Coulomb friction law");
      ADD(1,"1: Generalized viscous friction law");
      ADD(2,"2: (Modified) Darmstad friction law");
      ADD(3,"3: Renard friction law");
      ADD(4,"4: Exponential decay law");
    }

    RADIO(Ifiltr, "Ifiltr")
    {
      ADD(0,"0: (Default) No filter is used");
      ADD(1,"1: Simple numerical filter");
      ADD(2,"2: Standard -3dB filter with filtering period");
      ADD(3,"3: Standard -3dB filter with cutting frequency");
    }

    SCALAR(Xfreq, "Xfreq")                   { DIMENSION="f"; }

    RADIO(IFORM, "Iform")
    {
      ADD(0,"0: Use value in /DEFAULT/INTER/TYPE19");
      ADD(1,"1: Default, if /DEFAULT/INTER/TYPE19 is not defined: Viscous (total) formulation");
      ADD(2,"2: Stiffness (incremental) formulation");
    }

    DATA(ISENSOR, "sens_ID");
    DATA(Fric_ID, "fric_ID");

    if(Ifric>0) 
    {
      SCALAR(C1, "C1")
      {
        if (Ifric==1)      { TITLE = "Friction C1 (Viscous law)"  ; DIMENSION = "inverse_of_pressure"; }
        else if (Ifric==2) { TITLE = "Friction C1 (Darmstad law)" ; DIMENSION = "inverse_of_square_of_pressure"; }
        else if (Ifric==3) { TITLE = "Friction C1 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
        else if (Ifric==4) { TITLE = "Friction C1 (Exponential decay model)" ; DIMENSION = "DIMENSIONLESS"; }
      }  
      SCALAR(C2, "C2")
      {
        if (Ifric==1)      { TITLE = "Friction C2 (Viscous law)"  ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==2) { TITLE = "Friction C2 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==3) { TITLE = "Friction C2 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
        else if (Ifric==4) { TITLE = "Friction C2 (Exponential decay model)" ; DIMENSION = "inverse_of_speed"; } 
      }  
      SCALAR(C3, "C3")
      {
        if (Ifric==1)      { TITLE = "Friction C3 (Viscous law)"  ; DIMENSION = "inverse_surfacic_power"; }
        else if (Ifric==2) { TITLE = "Friction C3 (Darmstad law)" ; DIMENSION = "inverse_of_pressure"; }
        else if (Ifric==3) { TITLE = "Friction C3 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
      }  
      SCALAR(C4, "C4") {
        if (Ifric==1)      { TITLE = "Friction C4 (Viscous law)"  ; DIMENSION = "inverse_of_square_of_pressure"; }
        else if (Ifric==2) { TITLE = "Friction C4 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==3) { TITLE = "Friction C4 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
      }  
      SCALAR(C5, "C5") {
        if (Ifric==1)      { TITLE = "Friction C5 (Viscous law)"  ; DIMENSION = "inverse_of_square_of_speed"; }
        else if (Ifric==2) { TITLE = "Friction C5 (Darmstad law)" ; DIMENSION = "DIMENSIONLESS"; }
        else if (Ifric==3) { TITLE = "Friction C5 (Renard law)"   ; DIMENSION = "velocity"; }
      }
    }
    if(Ifric>1)
    {
      SCALAR(C6, "C6")
      {
       if (Ifric==1)      { TITLE = "Friction C6 (Viscous law)"  ; DIMENSION = "DIMENSIONLESS"; }
       else if (Ifric==2) { TITLE = "Friction C6 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
       else if (Ifric==3) { TITLE = "Friction C6 (Renard law)"   ; DIMENSION = "velocity"; }
      } 
    }

    if (Ithe == 1)
    {
      SCALAR(Kthe, "Kthe")
     {
              if (fct_ID_k==NONE)      { TITLE = "Heat exchange coefficient"  ; DIMENSION = "thermal_convectivity"; }
              else                     { TITLE = "Heat exchange scale factor" ; DIMENSION = "DIMENSIONLESS"; }
     }

      DATA(fct_ID_k, "fct_IDK");
      SCALAR(T_Initial, "Tint")              { DIMENSION="k"; }
      RADIO(IFORM1, "Ithe_form")
      {
        ADD(0,"0: (Default) Exchange only between interface (constant temperature) and shells (secondary side)");
        ADD(1,"1: Heat exchange between all pieces in contact");
      }
      SCALAR(Crx, "AscaleK")                 { DIMENSION = "pressure"; }

      SCALAR(F_RAD, "Frad")                  { DIMENSION="stefan_lorentz_constant"; }
      SCALAR(D_RAD, "Drad")                  { DIMENSION="l"; }
      SCALAR(Fmax, "Fheats")                 { DIMENSION="DIMENSIONLESS"; }
      SCALAR(HEAT_AL, "Fheatm")              { DIMENSION="DIMENSIONLESS"; }
    }
}

// File format
FORMAT(radioss90)
{
    HEADER("/INTER/TYPE19/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("#grnod_IDs  surf_IDm      Istf                Igap   Multimp      Ibag      Idel     Icurv");
    CARD("%10d%10d%10d%10s%10d%10d%10d%10d%10d", secondaryentityids, mainentityids, type7_Istf, _BLANK_, Igap, Iedge_Type19, Ibag, Idel7, Icurv);

    COMMENT("#          Fscalegap             Gap_max");
    CARD("%20lg%20lg", GAPSCALE, GAPMAX);

    COMMENT("#              Stmin               Stmax");
    CARD("%20lg%20lg", STMIN, STMAX);

    if (Icurv==0 || Icurv==1)
    {
      COMMENT("# node_ID1  node_ID2");
      CARD("%10d%10d",TYPE7_N1, TYPE7_N2);
    }

    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", TYPE7_SCALE, FRIC, GAP, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs                VISf              Bumult");
    CARD("%7s%1d%1d%1d%10s%10s%10d%20lg%20lg%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, _BLANK_, INACTIV, STIFF_DC, FRIC_DC, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform");
    CARD("%10d%10d%20lg%10d", Ifric, Ifiltr, Xfreq, IFORM);

    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);
    }
}

FORMAT(radioss100)
{
    HEADER("/INTER/TYPE19/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# surf_IDs  surf_IDm      Istf                Igap   Multimp      Ibag      Idel     Icurv");
    CARD("%10d%10d%10d%10s%10d%10d%10d%10d%10d", secondaryentityids, mainentityids, type7_Istf, _BLANK_, Igap, Iedge_Type19, Ibag, Idel7, Icurv);

    COMMENT("#          Fscalegap             Gap_max");
    CARD("%20lg%20lg", GAPSCALE, GAPMAX);

    COMMENT("#              Stmin               Stmax");
    CARD("%20lg%20lg", STMIN, STMAX);

    if (Icurv==1 || Icurv==2)
    {
      COMMENT("# node_ID1  node_ID2");
      CARD("%10d%10d",TYPE7_N1, TYPE7_N2);
    }

    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", TYPE7_SCALE, FRIC, GAP, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs                VISf              Bumult");
    CARD("%7s%1d%1d%1d%10s%10s%10d%20lg%20lg%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, _BLANK_, INACTIV, STIFF_DC, FRIC_DC, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform");
    CARD("%10d%10d%20lg%10d", Ifric, Ifiltr, Xfreq, IFORM);

    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);
    }
}

FORMAT(radioss120)
{
    HEADER("/INTER/TYPE19/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# surf_IDs  surf_IDm      Istf                Igap   Multimp      Ibag      Idel     Icurv");
    CARD("%10d%10d%10d%10s%10d%10d%10d%10d%10d", secondaryentityids, mainentityids, type7_Istf, _BLANK_, Igap, Iedge_Type19, Ibag, Idel7, Icurv);

    COMMENT("#          Fscalegap             Gap_max");
    CARD("%20lg%20lg", GAPSCALE, GAPMAX);

    COMMENT("#              Stmin               Stmax                                   dtmin");
    CARD("%20lg%20lg%10s%10s%20lg", STMIN, STMAX, _BLANK_, _BLANK_, Tmin);

    if (Icurv==1 || Icurv==2)
    {
      COMMENT("# node_ID1  node_ID2");
      CARD("%10d%10d",TYPE7_N1, TYPE7_N2);
    }

    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg",TYPE7_SCALE, FRIC, GAP, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs                VISf              Bumult");
    CARD("%7s%1d%1d%1d%10s%10s%10d%20lg%20lg%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, _BLANK_, INACTIV, STIFF_DC, FRIC_DC, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform   sens_ID");
    CARD("%10d%10d%20lg%10d%10d", Ifric, Ifiltr, Xfreq, IFORM, ISENSOR);

    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);
    }
}

FORMAT(radioss140)
{
    HEADER("/INTER/TYPE19/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# surf_IDs  surf_IDm      Istf                Igap                Ibag      Idel     Icurv");
    CARD("%10d%10d%10d%10s%10d%10s%10d%10d%10d", secondaryentityids, mainentityids, type7_Istf, _BLANK_, Igap, _BLANK_, Ibag, Idel7, Icurv);

    COMMENT("#          Fscalegap             Gap_max");
    CARD("%20lg%20lg", GAPSCALE, GAPMAX);

    COMMENT("#              Stmin               Stmax                                   dtmin");
    CARD("%20lg%20lg%10s%10s%20lg", STMIN, STMAX, _BLANK_, _BLANK_, Tmin);

    if (Icurv==1 || Icurv==2)
    {
      COMMENT("# node_ID1  node_ID2");
      CARD("%10d%10d",TYPE7_N1, TYPE7_N2);
    }

    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", TYPE7_SCALE, FRIC, GAP, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs                VISf              Bumult");
    CARD("%7s%1d%1d%1d%10s%10s%10d%20lg%20lg%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, _BLANK_, INACTIV, STIFF_DC, FRIC_DC, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform   sens_ID");
    CARD("%10d%10d%20lg%10d%10d", Ifric, Ifiltr, Xfreq, IFORM, ISENSOR);

    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);
    }
}

FORMAT(radioss2017)
{
    HEADER("/INTER/TYPE19/%d",_ID_);
    CARD("%-100s", TITLE);

    // Card 1
    COMMENT("# surf_IDs  surf_IDm      Istf                Igap     Iedge      Ibag      Idel     Icurv");
    CARD("%10d%10d%10d%10s%10d%10d%10d%10d%10d", secondaryentityids, mainentityids, type7_Istf, _BLANK_, Igap, Iedge_Type19, Ibag, Idel7, Icurv);

    COMMENT("#          Fscalegap             Gap_max");
    CARD("%20lg%20lg", GAPSCALE, GAPMAX);

    COMMENT("#              Stmin               Stmax                                   dtmin");
    CARD("%20lg%20lg%10s%10s%20lg", STMIN, STMAX, _BLANK_, _BLANK_, Tmin);

    // Card 2
    if (Icurv==1 || Icurv==2)
    {
      COMMENT("# node_ID1  node_ID2");
      CARD("%10d%10d",TYPE7_N1, TYPE7_N2);
    }

    // Card 3
    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", TYPE7_SCALE, FRIC,GAP, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs                VISf              Bumult");
    CARD("%7s%1d%1d%1d%10s%10s%10d%20lg%20lg%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, _BLANK_, INACTIV, STIFF_DC, FRIC_DC, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform   sens_ID");
    CARD("%10d%10d%20lg%10d%10d", Ifric, Ifiltr, Xfreq, IFORM, ISENSOR);

    // Card 4
    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    // Card 5
    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);
    }
}

FORMAT(radioss2018)
{
    HEADER("/INTER/TYPE19/%d",_ID_);
    CARD("%-100s", TITLE);

    // Card 1
    COMMENT("# surf_IDs  surf_IDm      Istf                Igap     Iedge      Ibag      Idel     Icurv");
    CARD("%10d%10d%10d%10s%10d%10d%10d%10d%10d", secondaryentityids, mainentityids, type7_Istf, _BLANK_, Igap, Iedge_Type19, Ibag, Idel7, Icurv);

    COMMENT("#          Fscalegap             Gap_max");
    CARD("%20lg%20lg", GAPSCALE, GAPMAX);

    COMMENT("#              Stmin               Stmax                                   dtmin");
    CARD("%20lg%20lg%10s%10s%20lg", STMIN, STMAX, _BLANK_, _BLANK_, Tmin);

    // Card 2
    if (Icurv==1 || Icurv==2)
    {
      COMMENT("# node_ID1  node_ID2");
      CARD("%10d%10d",TYPE7_N1, TYPE7_N2);
    }

    // Card 3
    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", TYPE7_SCALE, FRIC, GAP, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs                VISf              Bumult");
    CARD("%7s%1d%1d%1d%10s%10s%10d%20lg%20lg%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, _BLANK_, INACTIV, STIFF_DC, FRIC_DC, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform   sens_ID                                 fric_ID");
    CARD("%10d%10d%20lg%10d%10d%10s%10s%10s%10d", Ifric, Ifiltr, Xfreq, IFORM, ISENSOR, _BLANK_, _BLANK_, _BLANK_, Fric_ID);

    // Card 4
    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    // Card 5
    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);
    }
}

FORMAT(radioss2020)
{
    HEADER("/INTER/TYPE19/%d",_ID_);
    CARD("%-100s", TITLE);

    // Card 1
    COMMENT("# surf_IDs  surf_IDm      Istf                Igap     Iedge      Ibag      Idel     Icurv");
    CARD("%10d%10d%10d%10s%10d%10d%10d%10d%10d", secondaryentityids, mainentityids, type7_Istf, _BLANK_, Igap, Iedge_Type19, Ibag, Idel7, Icurv);

    COMMENT("#          Fscalegap             Gap_max");
    CARD("%20lg%20lg", GAPSCALE, GAPMAX);

    COMMENT("#              Stmin               Stmax          %mesh_size               dtmin  Irem_gap   Irem_i2");
    CARD("%20lg%20lg%20lg%20lg%10d%10d", STMIN, STMAX, PrMesh_Size, Tmin, Irem_Gap, Irem_i2);

    // Card 2
    if (Icurv==1 || Icurv==2)
    {
      COMMENT("# node_ID1  node_ID2");
      CARD("%10d%10d",TYPE7_N1, TYPE7_N2);
    }

    // Card 3
    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", TYPE7_SCALE, FRIC, GAP, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs                VISf              Bumult");
    CARD("%7s%1d%1d%1d%10s%10s%10d%20lg%20lg%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, _BLANK_, INACTIV, STIFF_DC, FRIC_DC, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform   sens_ID                                 fric_ID");
    CARD("%10d%10d%20lg%10d%10d%10s%10s%10s%10d", Ifric, Ifiltr, Xfreq, IFORM, ISENSOR, _BLANK_, _BLANK_, _BLANK_, Fric_ID);

    // Card 4
    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    // Card 5
    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);
    }
}

FORMAT(radioss2021)
{
    HEADER("/INTER/TYPE19/%d",_ID_);
    CARD("%-100s", TITLE);

    // Card 1
    COMMENT("# surf_IDs  surf_IDm      Istf      Ithe      Igap     Iedge      Ibag      Idel     Icurv");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10d%10d", secondaryentityids, mainentityids, type7_Istf, Ithe, Igap, Iedge_Type19, Ibag, Idel7, Icurv);

    COMMENT("#          Fscalegap             Gap_max");
    CARD("%20lg%20lg", GAPSCALE, GAPMAX);

    COMMENT("#              Stmin               Stmax          %mesh_size               dtmin  Irem_gap   Irem_i2");
    CARD("%20lg%20lg%20lg%20lg%10d%10d", STMIN, STMAX, PrMesh_Size, Tmin, Irem_Gap, Irem_i2);

    // Card 2
    if (Icurv==1 || Icurv==2)
    {
      COMMENT("# node_ID1  node_ID2");
      CARD("%10d%10d",TYPE7_N1, TYPE7_N2);
    }

    // Card 3
    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", TYPE7_SCALE, FRIC, GAP, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs                VISf              Bumult");
    CARD("%7s%1d%1d%1d%10s%10s%10d%20lg%20lg%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, _BLANK_, INACTIV, STIFF_DC, FRIC_DC, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform   sens_ID                                 fric_ID");
    CARD("%10d%10d%20lg%10d%10d%10s%10s%10s%10d", Ifric, Ifiltr, Xfreq, IFORM, ISENSOR, _BLANK_, _BLANK_, _BLANK_, Fric_ID);

    // Card 4
    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    // Card 5
    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);
    }

    // Card 6
    if (Ithe==1)
    {
        COMMENT("#               Kthe   fct_IDK                          Tint Ithe_form             AscaleK");
        CARD("%20lg%10d%10s%20lg%10d%20lg", Kthe, fct_ID_k, _BLANK_, T_Initial, IFORM1, Crx);
        COMMENT("#               Frad                Drad              Fheats              Fheatm");
        CARD("%20lg%20lg%20lg%20lg", F_RAD, D_RAD, Fmax, HEAT_AL);
    }
}
