//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /INTER/TYPE23
// 

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    // Card 1
    secondaryentityids                        = VALUE(SETS, "Secondary surface identifier") { SUBTYPES = (/SETS/SURF) ; }
    mainentityids                             = VALUE(SETS, "Main surface identifier")    { SUBTYPES = (/SETS/SURF) ; }
    type7_Istf                                = VALUE(INT, "Stiffness definition flag");
    Igap                                      = VALUE(INT, "Gap/element option flag");
    Ibag                                      = VALUE(INT, "Airbag vent holes closure flag in case of contact");
    Idel7                                     = VALUE(INT, "Node deletion flag");
    GAPSCALE                                  = VALUE(FLOAT, "Gap scale factor");
    GAPMAX                                    = VALUE(FLOAT, "Maximum gap");
    FpenMax                                   = VALUE(FLOAT, "Maximum fraction of initial penetration");
    STMIN                                     = VALUE(FLOAT, "Minimum stiffness");
    STMAX                                     = VALUE(FLOAT, "Maximum stiffness");
    TYPE7_SCALE                               = VALUE(FLOAT, "Interface stiffness (if Istf = 1) or Stiffness scale factor for the interface (if Istf = 0)");
    FRIC                                      = VALUE(FLOAT, "Coulomb friction");
    GAP                                       = VALUE(FLOAT," Minimum gap for impact activation");
    TSTART                                    = VALUE(FLOAT,"Start time");
    TSTOP                                     = VALUE(FLOAT,"Time for temporary deactivation");
    Deactivate_X_BC                           = VALUE(INT, "Deactivation flag of boundary conditions at impact");
    Deactivate_Y_BC                           = VALUE(INT, "Deactivation flag of boundary conditions at impact");
    Deactivate_Z_BC                           = VALUE(INT, "Deactivation flag of boundary conditions at impact");
    INACTIV                                   = VALUE(INT, "Deactivation flag of stiffness in case of initial penetrations");
    STIFF_DC                                  = VALUE(FLOAT, "Critical damping coefficient on interface stiffness");
    SORT_FACT                                 = VALUE(FLOAT, "Sorting factor");
    Ifric                                     = VALUE(INT, "Friction formulation flag");
    Ifiltr                                    = VALUE(INT, "Friction filtering flag");
    Xfreq                                     = VALUE(FLOAT, "Filtering coefficient");

    // Card 2 (if Ifric > 0)
    C1                                        = VALUE(FLOAT, "Friction law coefficient");
    C2                                        = VALUE(FLOAT, "Friction law coefficient");
    C3                                        = VALUE(FLOAT, "Friction law coefficient");
    C4                                        = VALUE(FLOAT, "Friction law coefficient");
    C5                                        = VALUE(FLOAT, "Friction law coefficient");

    // Card 3 (if Ifric > 1)
    C6                                        = VALUE(FLOAT, "Friction law coefficient");

    // HM INTERNAL
    KEYWORD_STR                               = VALUE(STRING,"Solver Keyword");
    NUM_COMMENTS                              = SIZE("NUM_COMMENTS");
    CommentEnumField                          = VALUE(INT,"User Comments");
    COMMENTS                                  = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");

    TITLE                                     = VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    // INPUT ATTRIBUTES

    // Card 1
    type7_Istf                                = 4019;
    Igap                                      = 8045;
    Ibag                                      = 6300;
    Idel7                                     = 6301;
    GAPSCALE                                  = 4021;
    GAPMAX                                    = 4022;
    FpenMax                                   = 4795;
    STMIN                                     = 4023;
    STMAX                                     = 4024;
    TYPE7_SCALE                               = 4027;
    FRIC                                      = 5;
    GAP                                       = 5153;
    TSTART                                    = 11;
    TSTOP                                     = 12;

    Deactivate_X_BC                           = 7020;
    Deactivate_Y_BC                           = 7021;
    Deactivate_Z_BC                           = 7022;
    INACTIV                                   = 94;
    STIFF_DC                                  = 6;
    SORT_FACT                                 = 5321;

    Ifric                                     = 6303;
    Ifiltr                                    = 6304;
    Xfreq                                     = 6305;

    // Card 2
    C1                                        = 6306;
    C2                                        = 6307;
    C3                                        = 6308;
    C4                                        = 6309;
    C5                                        = 6310;

    // Card 3
    C6                                        = 6311;

    // HM INTERNAL
    KEYWORD_STR                               = 9000;
    COMMENTS                                  = 5109;
    CommentEnumField                          = 7951;
    NUM_COMMENTS                              = 5110;

    TITLE                                     = -1;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    // INPUT ATTRIBUTES

    type7_Istf                                = 0;
    Ibag                                      = 0;
    Idel7                                     = 0;
    GAPSCALE                                  = 1.0;
    STMAX                                     = 10e30;
    TYPE7_SCALE                               = 0.0;
    INACTIV                                   = 0;
    STIFF_DC                                  = 1.0;
    SORT_FACT                                 = 0.20;

    Ifric                                     = 0;
    Ifiltr                                    = 0;
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }

    ASSIGN(KEYWORD_STR, "/INTER/TYPE23");

    DATA(secondaryentityids, "surf_IDs");
    DATA(mainentityids, "surf_IDm");

    RADIO(type7_Istf, "Istf")
    {
      ADD(0,"0: Stfac is a stiffness scale factor and the stiffness is computed according to the secondary side characteristics");
      ADD(1,"1: Stfac is a stiffness value");
    }

    RADIO(Igap, "Igap")
    {
      ADD(0,"0: Gap is constant and equal to the minimum gap");
      ADD(1,"1: Variable gap varies according to the characteristics of the impacted main surface and the impacting secondary node");
    }

    RADIO(Ibag, "Ibag")
    {
      ADD(0,"0: (Default) No closure");
      ADD(1,"1: Closure");
    }

    RADIO(Idel7, "Idel")
    {
      ADD(0,"0: (Default) No deletion");
      ADD(1,"1: Non-connected nodes are removed from the secondary side of the interface");
    }

    SCALAR(GAPSCALE, "Fscalegap")             { DIMENSION="DIMENSIONLESS"; }
    SCALAR(GAPMAX, "Gapmax")                  { DIMENSION="l"; }
    SCALAR(FpenMax, "Fpenmax")                { DIMENSION="DIMENSIONLESS"; }
    SCALAR(STMIN, "Stmin")                    {DIMENSION="translation_stiffness";}
    SCALAR(STMAX, "Stmax")                    {DIMENSION="translation_stiffness";}

    SCALAR(TYPE7_SCALE, "Stfac")
    {
      if (type7_Istf==1)                      { DIMENSION="translation_stiffness"; }
      else                                    { DIMENSION="DIMENSIONLESS"; }
    }

    SCALAR(FRIC, "Fric")                      { DIMENSION="DIMENSIONLESS"; }
    SCALAR(GAP, "Gapmin")                     { DIMENSION="l"; }
    SCALAR(TSTART , "Tstart")                 { DIMENSION="t"; }
    SCALAR(TSTOP, "Tstop")                    { DIMENSION="t"; }

    FLAG(Deactivate_X_BC, "IBC_x");
    FLAG(Deactivate_Y_BC, "IBC_y");
    FLAG(Deactivate_Z_BC, "IBC_z");

    RADIO(INACTIV, "Inacti")
    {
      ADD(0,"0: No action");
      ADD(1,"1: Deactivation of stiffness on nodes");
      ADD(5,"5: Gap is variable with time and initial gap is computed as: gap0 = Gap - P0, with P0 the initial penetration");
      ADD(6,"6: Gap is variable with time, but initial penetration is computed as (the node is slightly depenetrated): gap0 = Gap - P0 - 5% * (Gap - P0)");
    }

    SCALAR(STIFF_DC, "VISs")                  { DIMENSION="DIMENSIONLESS"; }
    SCALAR(SORT_FACT, "Bumult")               { DIMENSION="DIMENSIONLESS"; }

    RADIO(Ifric, "Ifric")
    {
      ADD(0,"0: (Default) Static Coulomb friction law");
      ADD(1,"1: Generalized viscous friction law");
      ADD(2,"2: (Modified) Darmstad friction law");
      ADD(3,"3: Renard friction law");
      ADD(4,"4: Exponential decay law");
    }

    RADIO(Ifiltr, "Ifiltr")
    {
      ADD(0,"0: (Default) No filter is used");
      ADD(1,"1: Simple numerical filter");
      ADD(2,"2: Standard -3dB filter with filtering period");
      ADD(3,"3: Standard -3dB filter with cutting frequency");
    }

    SCALAR(Xfreq, "Xfreq")                    { DIMENSION="f"; }

    if(Ifric>0) 
    {
      SCALAR(C1, "C1")
      {
        if (Ifric==1)      { TITLE = "Friction C1 (Viscous law)"  ; DIMENSION = "inverse_of_pressure"; }
        else if (Ifric==2) { TITLE = "Friction C1 (Darmstad law)" ; DIMENSION = "DIMENSIONLESS"; }
        else if (Ifric==3) { TITLE = "Friction C1 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
        else if (Ifric==4) { TITLE = "Friction C1 (Exponential decay model)" ; DIMENSION = "DIMENSIONLESS"; }
      }  
      SCALAR(C2, "C2")
      {
        if (Ifric==1)      { TITLE = "Friction C2 (Viscous law)"  ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==2) { TITLE = "Friction C2 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==3) { TITLE = "Friction C2 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
        else if (Ifric==4) { TITLE = "Friction C2 (Exponential decay model)" ; DIMENSION = "inverse_of_speed"; } 
      }  
      SCALAR(C3, "C3")
      {
        if (Ifric==1)      { TITLE = "Friction C3 (Viscous law)"  ; DIMENSION = "inverse_surfacic_power"; }
        else if (Ifric==2) { TITLE = "Friction C3 (Darmstad law)" ; DIMENSION = "DIMENSIONLESS"; }
        else if (Ifric==3) { TITLE = "Friction C3 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
      }  
      SCALAR(C4, "C4") {
        if (Ifric==1)      { TITLE = "Friction C4 (Viscous law)"  ; DIMENSION = "inverse_of_square_of_pressure"; }
        else if (Ifric==2) { TITLE = "Friction C4 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==3) { TITLE = "Friction C4 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
      }  
      SCALAR(C5, "C5") {
        if (Ifric==1)      { TITLE = "Friction C5 (Viscous law)"  ; DIMENSION = "inverse_of_square_of_speed"; }
        else if (Ifric==2) { TITLE = "Friction C5 (Darmstad law)" ; DIMENSION = "DIMENSIONLESS"; }
        else if (Ifric==3) { TITLE = "Friction C5 (Renard law)"   ; DIMENSION = "velocity"; }
      }
    }

    if(Ifric>1)
    {
      SCALAR(C6, "C6")
      {
       if (Ifric==1)      { TITLE = "Friction C6 (Viscous law)"  ; DIMENSION = "DIMENSIONLESS"; }
       else if (Ifric==2) { TITLE = "Friction C6 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
       else if (Ifric==3) { TITLE = "Friction C6 (Renard law)"   ; DIMENSION = "velocity"; }
      } 
    }
}

// File format
FORMAT(radioss120)
{
    HEADER("/INTER/TYPE23/%d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("# surf_IDs  surf_IDm      Istf                Igap                Ibag      Idel");
    CARD("%10d%10d%10d%10s%10d%10s%10d%10d", secondaryentityids, mainentityids, type7_Istf, _BLANK_, Igap, _BLANK_, Ibag, Idel7);

    COMMENT("#          Fscalegap             Gap_max");
    CARD("%20lg%20lg", GAPSCALE, GAPMAX);

    COMMENT("#              Stmin               Stmax");
    CARD("%20lg%20lg", STMIN, STMAX);

    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", TYPE7_SCALE, FRIC, GAP, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs                                  Bumult");
    CARD("%7s%1d%1d%1d%10s%10s%10d%20lg%20s%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, _BLANK_, INACTIV, STIFF_DC, _BLANK_, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq");
    CARD("%10d%10d%20lg", Ifric, Ifiltr, Xfreq);

    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);

      COMMENT("# BLANK LINE ");
      CARD("%100s", _BLANK_);

      COMMENT("# BLANK LINE ");
      CARD("%100s", _BLANK_);

      COMMENT("# BLANK LINE ");
      CARD("%100s", _BLANK_);
    }

}

FORMAT(radioss140)
{
    HEADER("/INTER/TYPE23/%d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("# surf_IDs  surf_IDm      Istf                Igap                Ibag      Idel");
    CARD("%10d%10d%10d%10s%10d%10s%10d%10d", secondaryentityids, mainentityids, type7_Istf, _BLANK_, Igap, _BLANK_, Ibag, Idel7);

    COMMENT("#          Fscalegap             Gap_max             Fpenmax");
    CARD("%20lg%20lg%20lg", GAPSCALE, GAPMAX, FpenMax);

    COMMENT("#              Stmin               Stmax");
    CARD("%20lg%20lg", STMIN, STMAX);

    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", TYPE7_SCALE, FRIC, GAP, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs                                  Bumult");
    CARD("%7s%1d%1d%1d%10s%10s%10d%20lg%20s%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, _BLANK_, INACTIV, STIFF_DC, _BLANK_, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq");
    CARD("%10d%10d%20lg", Ifric, Ifiltr, Xfreq);

    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);

      COMMENT("# BLANK LINE ");
      CARD("%100s", _BLANK_);

      COMMENT("# BLANK LINE ");
      CARD("%100s", _BLANK_);

      COMMENT("# BLANK LINE ");
      CARD("%100s", _BLANK_);
    }
}

FORMAT(radioss2017)
{
    HEADER("/INTER/TYPE23/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# surf_IDs  surf_IDm      Istf                Igap                Ibag      Idel");
    CARD("%10d%10d%10d%10s%10d%10s%10d%10d", secondaryentityids, mainentityids, type7_Istf, _BLANK_, Igap, _BLANK_, Ibag, Idel7);

    COMMENT("#          Fscalegap              Gapmax             Fpenmax");
    CARD("%20lg%20lg%20lg", GAPSCALE, GAPMAX, FpenMax);

    COMMENT("#              Stmin               Stmax");
    CARD("%20lg%20lg", STMIN, STMAX);

    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", TYPE7_SCALE, FRIC, GAP, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs                                  Bumult");
    CARD("%7s%1d%1d%1d%10s%10s%10d%20lg%20s%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, _BLANK_, INACTIV, STIFF_DC, _BLANK_, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq");
    CARD("%10d%10d%20lg", Ifric, Ifiltr, Xfreq);

    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);

      COMMENT("# BLANK LINE ");
      CARD("%100s", _BLANK_);

      COMMENT("# BLANK LINE ");
      CARD("%100s", _BLANK_);

      COMMENT("# BLANK LINE ");
      CARD("%100s", _BLANK_);
    }
}
