//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// IOFLAG - 5003 - 2019
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR = VALUE(STRING, "/IOFLAG");
    IGTYP = VALUE(INT, "IGTYP");
    IOUTP = VALUE(INT, "Output a STY model file flag");
    IOUTYY = VALUE(INT, "STY file output format flag");
    IPRI = VALUE(INT, "Starter output printout flag");
    IROOTYY = VALUE(INT, "STY file name flag");
    Irot = VALUE(INT, "Force computation of rotational DOF flag");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR = 5003;
    IGTYP = 5022;
    IOUTP = 8001;
    IOUTYY = 4010;
    IPRI = 5020;
    IROOTYY = 4039;
    Irot = 4739;
}

DEFAULTS(COMMON)
{

    IGTYP = -1;
    IOUTP = -1;
    IOUTYY = 3;
    IROOTYY = 0;
    Irot = 3;
}

GUI(COMMON)
{

    ASSIGN(KEYWORD_STR, "/IOFLAG");
    RADIO(IPRI)
    {
        ADD(0, "0: Reduced printout");
        ADD(1, "1: 0 + rigid walls + interfaces + part mass and inertia");
        ADD(2, "2: 1 + boundary conditions + nodal masses + initial velocities");
        ADD(3, "3: 2 + ale tables");
        ADD(4, "4: 3 + nodes coordinates");
        ADD(5, "5: 4 + element connectivities + initial penetrations in contacts + deactivated elements from rigid bodies");
        ADD(6, "6: 5 + node with kinematic conditions");
        ADD(7, "7: 6 + element grouping (domain decomposition)");
    }

    RADIO(IOUTP)
    {
        ADD(-1, "-1: Do not output STY model file");
        ADD(0, " 0:Default set to -1");
        ADD(2, "1:  Write output ASCII STY model file");
    }

    RADIO(IOUTYY)
    {
        ADD(2, "2: Format 44");
        ADD(3, "≠ 2: Format 51 (default)");
    }

    RADIO(IROOTYY)
    {
        ADD(2, "2: Ynnn writing file format is RunnameYnnn (old format)");
        ADD(3, "≠ 2: Ynnn writing file format is Runname_run#.sty (default)");
    }

    RADIO(Irot)
    {
        ADD(0, "0:Rotational DOF not always calculated");
        ADD(1, "1: Force computation of rotational DOF");
    }
}

FORMAT(radioss2017)
{
    HEADER("/IOFLAG");
    COMMENT("#     Ipri                         Ioutp     Outyy   Irootyy     Idrot");
    CARD("%10d                    %10d%10d%10d%10d", IPRI, IOUTP, IOUTYY, IROOTYY, Irot);
}

FORMAT(radioss100)
{
    HEADER("/IOFLAG");
    COMMENT("#     Ipri               Igtyp     Ioutp     Outyy   Irootyy     Idrot");
    CARD("%10d          %10d%10d%10d%10d%10d", IPRI, IGTYP, IOUTP, IOUTYY, IROOTYY, Irot);
}

// File format
FORMAT(radioss41)
{
    HEADER("/IOFLAG");
    CARD("%8d        %8d%8d", IPRI, IGTYP, IOUTP);
}

FORMAT(radioss51)
{
    HEADER("/IOFLAG");
    CARD("%10d          %10d%10d", IPRI, IGTYP, IOUTP);
}
