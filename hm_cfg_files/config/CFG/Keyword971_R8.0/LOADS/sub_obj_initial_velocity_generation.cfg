//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//  initial_velocity_generation.cfg
// CARD initial_velocity 971 746
// 10

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    // Card 1
    STYP                                    = VALUE(INT,       "Set type");
      LSD_PSID                              = VALUE(SETS,      "Part Set ID") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
      LSD_PID                               = VALUE(COMPONENT, "Part ID");
      LSD_NSID                              = VALUE(SETS,      "Node Set ID") { SUBTYPES = (/SETS/SET_NODE_IDPOOL) ; }
    OMEGA                                   = VALUE(FLOAT,     "Angular velocity about the rotational axis");
    LSD_VX                                  = VALUE(FLOAT,     "Initial translational velocity in x-direction");
    LSD_VY                                  = VALUE(FLOAT,     "Initial translational velocity in y-direction");
    LSD_VZ                                  = VALUE(FLOAT,     "Initial translational velocity in z-direction");
    LSD_IVATN                               = VALUE(INT,       "Flag for setting the initial velocities of slave nodes and parts");
    LSD_ICID                                = VALUE(SYSTEM,    "Local coordinate system ID");

    // Card 2
    LSD_XC                                  = VALUE(FLOAT,     "Global x-coordinate on rotational axis");
    LSD_YC                                  = VALUE(FLOAT,     "Global y-coordinate on rotational axis");
    LSD_ZC                                  = VALUE(FLOAT,     "Global z-coordinate on rotational axis");
    LSD_NX                                  = VALUE(FLOAT,     "x-direction cosine");   // or -999
    LSD_NY                                  = VALUE(FLOAT,     "y-direction cosine");
    plane_node1                               = VALUE(NODE,      "1st node of the rotational axis","NY_NODE");   // LSD_NX = -999 --- NOT USED
    LSD_NZ                                  = VALUE(FLOAT,     "z-direction cosine");
    plane_node2                               = VALUE(NODE,      "2nd node of the rotational axis","NZ_NODE");   // LSD_NX = -999 --- NOT USED
    PHASE                                   = VALUE(INT,       "Flag specifying phase of the analysis");
    IRIGID                                  = VALUE(INT,       "Controls hierarchy of initial velocities set with *INITIAL_VELOCITY_GENERATION versus those set with *PART_INERTIA / *CONSTRAINED_NODAL_RIGID_BODY_INERTIA when the commands conflict");

    // HM INTERNAL
    UseNodeOpt                              = VALUE(INT,       "Use Node");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    // INPUT ATTRIBUTES

    // Card 1
    STYP                                    = 2788;
      LSD_PSID                              = 768;   // Part Set ID
      LSD_PID                               = 149;   // Part ID
      LSD_NSID                              = 745;   // Node Set ID
    OMEGA                                   = 2789;
    LSD_VX                                  = 747;
    LSD_VY                                  = 748;
    LSD_VZ                                  = 749;
    LSD_IVATN                               = 893;
    LSD_ICID                                = 5867;

    // Card 2
    LSD_XC                                  = 466;
    LSD_YC                                  = 467;
    LSD_ZC                                  = 468;
    LSD_NX                                  = 2790;
    LSD_NY                                  = 2791;
    LSD_NZ                                  = 2792;
    PHASE                                   = 2793;
    IRIGID                                  = 4484;

    // HM INTERNAL
    UseNodeOpt                              = 8631;
}

DEFAULTS(COMMON)
{
    // Card 1
    OMEGA                                   = 0.0;
    LSD_VX                                  = 0.0;
    LSD_VY                                  = 0.0;
    LSD_VZ                                  = 0.0;
    LSD_IVATN                               = 0;

    // Card 2
    LSD_XC                                  = 0.0;
    LSD_YC                                  = 0.0;
    LSD_ZC                                  = 0.0;
    LSD_NX                                  = 0.0;
    LSD_NY                                  = 0.0;
    LSD_NZ                                  = 0.0;
    PHASE                                   = 0;
    IRIGID                                  = 0;
}

GUI(COMMON)
{
    RADIO(STYP,"Set Type")
    {
        ADD(1, "Part Set ID");
        ADD(2, "Part ID");
        ADD(3, "Node Set ID");
        ADD(4, "ENTIRE MODEL");
    }

    SEPARATOR("SET");
        if(STYP == 1)
        {
            DATA(LSD_PSID, "STYP");
        }
        if(STYP == 2)
        {
            DATA(LSD_PID,  "STYP");
        }
        if(STYP == 3)
        {
            DATA(LSD_NSID, "STYP");
        }
    SEPARATOR();

    SCALAR(OMEGA,   "OMEGA") { DIMENSION = "ang_velocity"; }
    SCALAR(LSD_VX,  "VX")    { DIMENSION = "velocity"; }
    SCALAR(LSD_VY,  "VY")    { DIMENSION = "velocity"; }
    SCALAR(LSD_VZ,  "VZ")    { DIMENSION = "velocity"; }
    RADIO(LSD_IVATN,"IVATN")
    {
        ADD(0,"0: Slave parts are ignored");
        ADD(1,"1: Slave parts and slave nodes of the master parts will be assigned initial velocities like the master part");
    }

    DATA(LSD_ICID, "Local coordinate system ID");

    FLAG(UseNodeOpt, "Use Node Option");
    if(UseNodeOpt == 0)
    {
        SEPARATOR("Directions");
            SCALAR(LSD_NX, "NX") { DIMENSION = "l"; }
            SCALAR(LSD_NY, "NY") { DIMENSION = "l"; }
            SCALAR(LSD_NZ, "NZ") { DIMENSION = "l"; }
        SEPARATOR();
    }
    else
    {
        SEPARATOR("Directions999");
            ASSIGN(LSD_NX, -999.);
            DATA(plane_node1, "NY");
            DATA(plane_node2, "NZ");
        SEPARATOR();
    }
    RADIO(PHASE, "PHASE")
    {
        ADD(0, "0: Velocities are applied immediately");
        ADD(1, "1: Velocities are applied after reaching the start time, STIME, which is after dynamic relaxation, if active, is completed");
    }
    if(STYP != 3)
    {
        RADIO(IRIGID,"IRIGID")
        {
            ADD(0, "0: *PART_INERTIA / *CONSTRAINED_NODAL_RIGID_BODY_INERTIA controls initial velocities");
            ADD(1, "1: *INITIAL_VELOCITY_GENERATION controls initial velocities");
        }
    }
}
// File format
FORMAT(Keyword971_R6.1)
{
    CARD_PREREAD("%10s%10d",_BLANK_, STYP);
    if(STYP == 1)
    {
        COMMENT("$     PSID      STYP     OMEGA        VX        VY        VZ     IVATN      ICID");
        CARD("%10d%10d%10lg%10lg%10lg%10lg%10d%10d", LSD_PSID, STYP, OMEGA, LSD_VX, LSD_VY, LSD_VZ, LSD_IVATN, LSD_ICID);
    }
    else if(STYP == 2)
    {
        COMMENT("$      PID      STYP     OMEGA        VX        VY        VZ     IVATN      ICID");
        CARD("%10d%10d%10lg%10lg%10lg%10lg%10d%10d", LSD_PID, STYP, OMEGA, LSD_VX, LSD_VY, LSD_VZ, LSD_IVATN, LSD_ICID);
    }
    else if(STYP == 3)
    {
        COMMENT("$     NSID      STYP     OMEGA        VX        VY        VZ     IVATN      ICID");
        CARD("%10d%10d%10lg%10lg%10lg%10lg%10d%10d", LSD_NSID, STYP, OMEGA, LSD_VX, LSD_VY, LSD_VZ, LSD_IVATN, LSD_ICID);
    }
    else
    {
        ASSIGN(STYP, 0, EXPORT);
        COMMENT("$   ID/ALL      STYP     OMEGA        VX        VY        VZ     IVATN      ICID");
        CARD("%10s%10d%10lg%10lg%10lg%10lg%10d%10d", _BLANK_, STYP, OMEGA, LSD_VX, LSD_VY, LSD_VZ, LSD_IVATN, LSD_ICID);
    }

    CARD_PREREAD("%30s%10lg", _BLANK_, LSD_NX);
    if(LSD_NX != -999.)
    {
        if(STYP != 3)
        {
            COMMENT("$       XC        YC        ZC        NX        NY        NZ     PHASE    IRIGID");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10d%10d", LSD_XC, LSD_YC, LSD_ZC, LSD_NX, LSD_NY, LSD_NZ, PHASE, IRIGID);
        }
        else
        {
            COMMENT("$       XC        YC        ZC        NX        NY        NZ     PHASE");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10d", LSD_XC, LSD_YC, LSD_ZC, LSD_NX, LSD_NY, LSD_NZ, PHASE);
        }
    }
}
FORMAT(Keyword971_R8.0)
{
    CARD_PREREAD("%10s%10d",_BLANK_, STYP);
    if(STYP == 1)
    {
        COMMENT("$     PSID      STYP     OMEGA        VX        VY        VZ     IVATN      ICID");
        CARD("%10d%10d%10lg%10lg%10lg%10lg%10d%10d", LSD_PSID, STYP, OMEGA, LSD_VX, LSD_VY, LSD_VZ, LSD_IVATN, LSD_ICID);
    }
    else if(STYP == 2)
    {
        COMMENT("$      PID      STYP     OMEGA        VX        VY        VZ     IVATN      ICID");
        CARD("%10d%10d%10lg%10lg%10lg%10lg%10d%10d", LSD_PID, STYP, OMEGA, LSD_VX, LSD_VY, LSD_VZ, LSD_IVATN, LSD_ICID);
    }
    else if(STYP == 3)
    {
        COMMENT("$     NSID      STYP     OMEGA        VX        VY        VZ     IVATN      ICID");
        CARD("%10d%10d%10lg%10lg%10lg%10lg%10d%10d", LSD_NSID, STYP, OMEGA, LSD_VX, LSD_VY, LSD_VZ, LSD_IVATN, LSD_ICID);
    }
    else
    {
        ASSIGN(STYP, 0, EXPORT);
        COMMENT("$   ID/ALL      STYP     OMEGA        VX        VY        VZ     IVATN      ICID");
        CARD("%10s%10d%10lg%10lg%10lg%10lg%10d%10d", _BLANK_, STYP, OMEGA, LSD_VX, LSD_VY, LSD_VZ, LSD_IVATN, LSD_ICID);
    }

    CARD_PREREAD("%30s%10lg", _BLANK_, LSD_NX);
    if(LSD_NX != -999.)
    {
        if(STYP != 3)
        {
            COMMENT("$       XC        YC        ZC        NX        NY        NZ     PHASE    IRIGID");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10d%10d", LSD_XC, LSD_YC, LSD_ZC, LSD_NX, LSD_NY, LSD_NZ, PHASE, IRIGID);
        }
        else
        {
            COMMENT("$       XC        YC        ZC        NX        NY        NZ     PHASE");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10d", LSD_XC, LSD_YC, LSD_ZC, LSD_NX, LSD_NY, LSD_NZ, PHASE);
        }

        ASSIGN(UseNodeOpt, 0, IMPORT);
    }
    else if(LSD_NX == -999.)
    {
        if(STYP != 3)
        {
            COMMENT("$       XC        YC        ZC        NX        NY        NZ     PHASE    IRIGID");
            CARD("%10lg%10lg%10lg%10lg%10d%10d%10d%10d", LSD_XC, LSD_YC, LSD_ZC, LSD_NX, plane_node1, plane_node2, PHASE, IRIGID);
        }
        else
        {
            COMMENT("$       XC        YC        ZC        NX        NY        NZ     PHASE");
            CARD("%10lg%10lg%10lg%10lg%10d%10d%10d", LSD_XC, LSD_YC, LSD_ZC, LSD_NX, plane_node1, plane_node2, PHASE);
        }

        ASSIGN(UseNodeOpt, 1, IMPORT);
    }
}

