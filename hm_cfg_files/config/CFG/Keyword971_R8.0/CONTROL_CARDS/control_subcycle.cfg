//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- control_subcycle.cfg ---
//		control cards	control_subcycle	1984	8.0
//		 15/04/2020

ATTRIBUTES(COMMON)
{
     //INPUT ATTRIBUTES
     KLOption                                = VALUE(INT,    "KLOption");
     LSD_KVal                                = VALUE(INT,    "K");
     LSD_LVal                                = VALUE(INT,    "L");
     
     //HM INTERNAL
     KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
     _HAS_HEADER                             = VALUE(BOOL,   "");

     IOFLAG                                  = VALUE(INT,    "");
     _underscore                             = VALUE(STRING, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
     //INPUT ATTRIBUTES
     KLOption                                = 8784;
     LSD_KVal                                = 8785;
     LSD_LVal                                = 8786;

     //HM INTERNAL
     KEYWORD_STR                             = 9000;
     _HAS_HEADER                             = -1;

     IOFLAG                                  = -1;
     _underscore                             = -1;
}

DEFAULTS(COMMON)
{
     LSD_KVal = 16;
     LSD_LVal = 1;

     _HAS_HEADER = TRUE;
}

GUI(COMMON)
{
     //TODO: NEED AN API FOR STRING MANIPULATION IN ORDER TO ASSIGN THE RIGHT HEADER
     //ASSIGN(KEYWORD_STR, "*CONTROL_SUBCYCLE");
     
     FLAG(KLOption);

     if(KLOption != 0)
     {
          SEPARATOR("KLOption");
          RADIO(LSD_KVal, "K")
          {
               ADD(1,  "1");
               ADD(2,  "2");
               ADD(4,  "4"); 
               ADD(8,  "8");
               ADD(16, "16");
               ADD(32, "32");
               ADD(64, "64");
          }
     }
    
     if(KLOption != 0 && LSD_KVal == 1)
     {
          RADIO(LSD_LVal, "L")
          {
               ADD(1, "1");  
          }
     }
     if(KLOption != 0 && LSD_KVal == 2)
     {          
          RADIO(LSD_LVal, "L")
          {
               ADD(1, "1");
               ADD(2, "2");
          }
     }
     if(KLOption != 0 && LSD_KVal == 4)
     {
          RADIO(LSD_LVal, "L")
          {
               ADD(1, "1");
               ADD(2, "2");
               ADD(4, "4");
          }
     }
     if(KLOption != 0 && LSD_KVal == 8)
     {
          RADIO(LSD_LVal, "L")
          {
               ADD(1, "1");
               ADD(2, "2");
               ADD(4, "4");
               ADD(8, "8");
          }
     }
     if(KLOption != 0 && LSD_KVal == 16)
     {  
          RADIO(LSD_LVal, "L")
          {
               ADD(1,  "1");
               ADD(2,  "2");
               ADD(4,  "4");
               ADD(8,  "8");
               ADD(16, "16");
          }
     }
     if(KLOption != 0 && LSD_KVal == 32)
     { 
          RADIO(LSD_LVal, "L")
          {
               ADD(1,  "1");
               ADD(2,  "2");
               ADD(4,  "4");
               ADD(8,  "8");
               ADD(16, "16");
               ADD(32, "32");
          }
     }
     if(KLOption != 0 && LSD_KVal == 64)
     {   
          RADIO(LSD_LVal, "L")
          {
               ADD(1,  "1");
               ADD(2,  "2");
               ADD(4,  "4");
               ADD(8,  "8");
               ADD(16, "16");
               ADD(32, "32");
               ADD(64, "64");
          }
     }
     
     if(KLOption != 0)
     {
          SEPARATOR();
     }
}

// File format
FORMAT(Keyword971_R8.0)
{
     ASSIGN(IOFLAG,0,EXPORT);
     ASSIGN(IOFLAG,1,IMPORT);

     if(IOFLAG == 0 && KLOption == 0)
     {
          HEADER("*CONTROL_SUBCYCLE");
     }
     else if(IOFLAG == 0 && KLOption == 1)
     {
          HEADER("*CONTROL_SUBCYCLE_%-d_%-d",LSD_KVal,LSD_LVal);
     }
     else if(IOFLAG == 1)
     {
          HEADER("*CONTROL_SUBCYCLE%1s%-d_%-d", _underscore,LSD_KVal,LSD_LVal);
     
          if( _underscore == "")
          {
               ASSIGN(KLOption,0,IMPORT);
          }
          else
          {
               ASSIGN(KLOption,1,IMPORT);
          }
     }
}

// File format
FORMAT(Keyword971_R6.1) 
{
     HEADER("*CONTROL_SUBCYCLE");
}
