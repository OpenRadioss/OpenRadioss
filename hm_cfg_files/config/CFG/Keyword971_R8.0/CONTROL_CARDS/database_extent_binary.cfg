//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// DATABASE_EXTENT_BINARY
//

ATTRIBUTES(COMMON)
{
// INPUT ATTRIBUTES
    // CARD 1
    LSD_NEIPH                               = VALUE(INT,    "Number of additional integration point history variables written to the binary database for solid elements");
    LSD_NEIPS                               = VALUE(INT,    "Number of additional integration point history variables written to the binary database for both shell and thick shell elements for each integration point");
    LSD_MAXINT                              = VALUE(INT,    "Number of shell and thick shell through-thickness integration points for which output is written to d3plot");
    LSD_ISTRN                               = VALUE(INT,    "STRFLG is interpreted digit-wise STRFLG = [NML]. L=1 Write strain tensor data to d3plot and elout; M=1 Write plastic strain data to d3plot; N=1 Write thermal strain data to d3plot");
    LSD_SIGFLG                              = VALUE(INT,    "Flag for including the stress tensor for shells");
    LSD_EPSFLG                              = VALUE(INT,    "Flag for including the effective plastic strains for shells");
    LSD_RLTFLG                              = VALUE(INT,    "Flag for including stress resultants in the shell LS-DYNA database");
    LSD_ENGFLG                              = VALUE(INT,    "Flag for including shell internal energy density and shell thickness");

    // CARD 2
    LSD_CMPFLG                              = VALUE(INT,    "Flag to indicate the coordinate system for output of stress and strain in solids, shells and thick shells comprised of orthotropic or anisotropic materials");
    LSD_IEVERP                              = VALUE(INT,    "Every output state for the d3plot database is written to a separate file");
    LSD_BEAMIP                              = VALUE(INT,    "Number of beam integration points for output");
    LSD_DCOMP                               = VALUE(INT,    "Data compression to eliminate rigid body data");
    LSD_SHGE                                = VALUE(INT,    "Flag for including shell hourglass energy density");
    LSD_STSSZ                               = VALUE(INT,    "Flag for including shell element time step, mass, or added mass");
    DATABASE_BIN_N3THDT                     = VALUE(INT,    "Flag for including material energy in d3thdt database");
    DATABASE_BIN_IALEMAT                    = VALUE(INT,    "Output solid part ID list containing ALE materials");

    // CARD 3 (Optional)
    LSD_NINTSLD                             = VALUE(INT,    "Number of solid element integration points written to the LS-DYNA database");
    DATABASE_BIN_PKPSEN                     = VALUE(INT,    "Flag to output the peak pressure and surface energy computed by each contact interface into the interface force database");
    DATABASE_BIN_SCLP                       = VALUE(FLOAT,  "A scaling parameter used in the computation of the peak pressure");
    DATABASE_BIN_HYDRO                      = VALUE(INT,    "Either 3 or 5 additional history variables useful to shock physics are output as the last history variables");
    DATABASE_BIN_MSSCL                      = VALUE(INT,    "Output nodal information related to mass scaling into the d3plot database");
    DATABASE_BIN_THERM                      = VALUE(INT,    "Output of thermal data to d3plot");
    DATABASE_BIN_INTOUT                     = VALUE(STRING, "Output stress/strain at all integration points for detailed element output in the ASCII file eloutdet");
    DATABASE_BIN_NODOUT                     = VALUE(STRING, "Output extrapolated stress/strain at connectivity nodes for detailed element output in the ASCII file eloutdet");

    // CARD 4 (Optional)
    DATABASE_BIN_DTDT                       = VALUE(INT,    "Output of node point Delta temperature/Delta time data to d3plot");
    DATABASE_BIN_RESPLT                     = VALUE(INT,    "Output of translational and rotational residual forces to d3plot and d3iter");
    DATABASE_BIN_NEIPB                      = VALUE(INT,    "NEIPB");

// HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    optionalCards3                          = VALUE(INT,    "OptionalCards3");
    optionalCards4                          = VALUE(INT,    "OptionalCards4");

    IO_FLAG                                 = VALUE(INT,    "Import/Export flag");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    // CARD 1
    LSD_NEIPH                               = 2174;
    LSD_NEIPS                               = 2175;
    LSD_MAXINT                              = 2176;
    LSD_ISTRN                               = 2177;
    LSD_SIGFLG                              = 2178;
    LSD_EPSFLG                              = 2179;
    LSD_RLTFLG                              = 2180;
    LSD_ENGFLG                              = 2181;

    // CARD 2
    LSD_CMPFLG                              = 2183;
    LSD_IEVERP                              = 2182;
    LSD_BEAMIP                              = 2184;
    LSD_DCOMP                               = 2186;
    LSD_SHGE                                = 2187;
    LSD_STSSZ                               = 2188;
    DATABASE_BIN_N3THDT                     = 4144;
    DATABASE_BIN_IALEMAT                    = 898;

    // CARD 3
    LSD_NINTSLD                             = 4485;
    DATABASE_BIN_PKPSEN                     = 899;
    DATABASE_BIN_SCLP                       = 900;
    DATABASE_BIN_HYDRO                      = 5817;
    DATABASE_BIN_MSSCL                      = 901;
    DATABASE_BIN_THERM                      = 902;
    DATABASE_BIN_INTOUT                     = 5818;
    DATABASE_BIN_NODOUT                     = 5819;

    // CARD 4
    DATABASE_BIN_DTDT                       = 5820;
    DATABASE_BIN_RESPLT                     = 6467;
    DATABASE_BIN_NEIPB                      = 6468;

// HM INTERNAL
    KEYWORD_STR                             = 9000;
    optionalCards3                          = 6469;
    optionalCards4                          = 6470;

    IO_FLAG                                 = -1;
}

DEFAULTS(COMMON)
{
    // CARD 1
    LSD_NEIPH                               = 0;
    LSD_NEIPS                               = 0;
    LSD_MAXINT                              = 3;
    LSD_ISTRN                               = 0;
    LSD_SIGFLG                              = 1;
    LSD_EPSFLG                              = 1;
    LSD_RLTFLG                              = 1;
    LSD_ENGFLG                              = 1;

    // CARD 2
    LSD_CMPFLG                              = 0;
    LSD_IEVERP                              = 0;
    LSD_BEAMIP                              = 0;
    LSD_DCOMP                               = 1;
    LSD_SHGE                                = 1;
    LSD_STSSZ                               = 1;
    DATABASE_BIN_N3THDT                     = 2;
    DATABASE_BIN_IALEMAT                    = 1;

    optionalCards3                          = 0;
    // CARD 3
    LSD_NINTSLD                             = 1;
    DATABASE_BIN_PKPSEN                     = 0;
    DATABASE_BIN_SCLP                       = 1.0;
    DATABASE_BIN_HYDRO                      = 0;
    DATABASE_BIN_MSSCL                      = 0;
    DATABASE_BIN_THERM                      = 0;

    optionalCards4                          = 0;
    DATABASE_BIN_DTDT                       = 1;
    DATABASE_BIN_RESPLT                     = 0;
    DATABASE_BIN_NEIPB                      = 0;
}

GUI(COMMON)
{
  ASSIGN(KEYWORD_STR, "*DATABASE_EXTENT_BINARY");

  // CARD 1
  SCALAR(LSD_NEIPH) {DIMENSION="DIMENSIONLESS";}
  SCALAR(LSD_NEIPS) {DIMENSION="DIMENSIONLESS";}
  SCALAR(LSD_MAXINT) {DIMENSION="DIMENSIONLESS";}
  SCALAR(LSD_ISTRN) {DIMENSION="DIMENSIONLESS";}
  RADIO(LSD_SIGFLG) {
      ADD(1, "1: include (default)");
      ADD(2, "2: exclude");
  }
  RADIO(LSD_EPSFLG) {
      ADD(1, "1: include (default)");
      ADD(2, "2: exclude");
  }
  RADIO(LSD_RLTFLG) {
      ADD(1, "1: include (default)");
      ADD(2, "2: exclude");
  }
  RADIO(LSD_ENGFLG) {
      ADD(1, "1: include (default)");
      ADD(2, "2: exclude");
  }

  // CARD 2
  RADIO(LSD_CMPFLG) {
      ADD(-1, "-1: Same as 1, but for *MAT_FABRIC (forms 14 and -14) and *MAT_FABRIC_MAP the stress and strain is in engineering quantities instead of Green-Lagrange strain and 2nd Piola-Kirchhoff stress");
      ADD(0, "0: global coordinate system with exception of elout for shells");
      ADD(1, "1: local material coordinate system");
  }
  RADIO(LSD_IEVERP) {
      ADD(0, "0: more than one state can be on each plot file");
      ADD(1, "1: one state only on each plot file");
  }
  SCALAR(LSD_BEAMIP) {DIMENSION="DIMENSIONLESS";}
  RADIO(LSD_DCOMP) {
      ADD(1, "1: off (default), no rigid body data compression");
      ADD(2, "2: on, rigid body data compression active");
      ADD(3, "3: off, no rigid body data compression, but all nodal velocities and accelerations are eliminated from the database");
      ADD(4, "4: on, rigid body data compression active and all nodal velocities and accelerations are eliminated from the database");
      ADD(5, "5: on, rigid body data compression active and rigid nodal data are eliminated from the database");
      ADD(6, "6: on, rigid body data compression active, rigid nodal data, and all nodal velocities and accelerations are eliminated from the database");
  }
  RADIO(LSD_SHGE) {
      ADD(1, "1: off (default), no hourglass energy written");
      ADD(2, "2: on");
  }
  RADIO(LSD_STSSZ) {
      ADD(1, "1: off (default)");
      ADD(2, "2: output time step size");
      ADD(3, "3: output mass, added mass, or time step size");
  }
  RADIO(DATABASE_BIN_N3THDT) {
      ADD(1, "1: off, energy is NOT written to d3thdt database");
      ADD(2, "2: on (default), energy is written to d3thdt database");
  }
  RADIO(DATABASE_BIN_IALEMAT) {
      ADD(1, "1: on (default)");
  }

  SEPARATOR("Optional Cards3");
  FLAG(optionalCards3);
  if(optionalCards3 == 1) {
      // CARD 3
      SCALAR(LSD_NINTSLD) {DIMENSION="DIMENSIONLESS";}
      RADIO(DATABASE_BIN_PKPSEN) {
          ADD(0, "0: No data is written");
          ADD(1, "1: Output the peak pressures and surface energy by contact interface");
      }
      SCALAR(DATABASE_BIN_SCLP) {DIMENSION="DIMENSIONLESS";}
      SCALAR(DATABASE_BIN_HYDRO) {DIMENSION="DIMENSIONLESS";}
      RADIO(DATABASE_BIN_MSSCL) {
          ADD(0, "0: No data is written");
          ADD(1, "1: Output incremental nodal mass");
          ADD(2, "2: Output percentage increase in nodal mass");
      }
      RADIO(DATABASE_BIN_THERM) {
          ADD(0, "0: (default) output temperature");
          ADD(1, "1: output temperature");
          ADD(2, "2: output temperature and flux");
          ADD(3, "3: output temperature, flux, and shell bottom and top surface temperature");
      }
      RADIO(DATABASE_BIN_INTOUT) {
          ADD("STRESS", "STRESS: when stress output is required");
          ADD("STRAIN", "STRAIN: when strain output is required");
          ADD("ALL",    "ALL: when both stress and strain output are required");
      }
      RADIO(DATABASE_BIN_NODOUT) {
          ADD("STRESS",    "STRESS: when stress output is required");
          ADD("STRAIN",    "STRAIN: when strain output is required");
          ADD("ALL",       "ALL: when both stress and strain output are required");
          ADD("STRESS_GL", "STRESS_GL: when nodal averaged stress output along the global coordinate system is required");
          ADD("STRAIN_GL", "STRAIN_GL: when nodal averaged strain output along the global coordinate system is required");
          ADD("ALL_GL",    "ALL_GL: for global nodal averaged stress and strain output");
      }

      SEPARATOR("Optional Cards4");
      FLAG(optionalCards4);
  }
  SEPARATOR();

  if(optionalCards3 == 1 && optionalCards4 == 1) {
      RADIO(DATABASE_BIN_DTDT) {
          ADD(0, "0: (default) no output");
          ADD(1, "1: output Delta T/Delta t");
      }
      RADIO(DATABASE_BIN_RESPLT) {
          ADD(0, "0: No output");
          ADD(1, "1: Output residual");
      }
      RADIO(DATABASE_BIN_NEIPB) {
          ADD(0, "0: Default no output to d3plot");
          ADD(1, "1: Output of loop-stresses to d3plot for the ELBOW beam element");
      }
      SEPARATOR();
  }
}

// File format
FORMAT(Keyword971)
{
  ASSIGN(IO_FLAG,1,IMPORT);
  ASSIGN(IO_FLAG,0,EXPORT);

  HEADER("*DATABASE_EXTENT_BINARY");
  
  COMMENT("$    NEIPH     NEIPS    MAXINT    STRFLG    SIGFLG    EPSFLG    RLTFLG    ENGFLG");
  CARD("%10d%10d%10d%10d%10d%10d%10d%10d",LSD_NEIPH,LSD_NEIPS,LSD_MAXINT,LSD_ISTRN,LSD_SIGFLG,LSD_EPSFLG,LSD_RLTFLG,LSD_ENGFLG);
  COMMENT("$   CMPFLG    IEVERP    BEAMIP     DCOMP      SHGE     STSSZ    N3THDT   IALEMAT");
  CARD("%10d%10d%10d%10d%10d%10d%10d%10d",LSD_CMPFLG,LSD_IEVERP,LSD_BEAMIP,LSD_DCOMP,LSD_SHGE,LSD_STSSZ,DATABASE_BIN_N3THDT,DATABASE_BIN_IALEMAT);

  if (optionalCards3==1) {
      COMMENT("$  NINTSLD   PKP_SEN      SCLP     HYDRO     MSSCL     THERM    INTOUT    NODOUT");
  }
  FREE_CARD(optionalCards3,"%10d%10d%10lg%10d%10d%10d%10s%10s",LSD_NINTSLD,DATABASE_BIN_PKPSEN,DATABASE_BIN_SCLP,DATABASE_BIN_HYDRO,DATABASE_BIN_MSSCL,DATABASE_BIN_THERM,DATABASE_BIN_INTOUT,DATABASE_BIN_NODOUT);

  if (optionalCards3==1 && optionalCards4==1) {
      COMMENT("$     DTDT");
  }
  if (optionalCards3==1)
      FREE_CARD(optionalCards4,"%10d",DATABASE_BIN_DTDT);
}

FORMAT(Keyword971_R7.1)
{
  ASSIGN(IO_FLAG,1,IMPORT);
  ASSIGN(IO_FLAG,0,EXPORT);

  HEADER("*DATABASE_EXTENT_BINARY");
  
  COMMENT("$    NEIPH     NEIPS    MAXINT    STRFLG    SIGFLG    EPSFLG    RLTFLG    ENGFLG");
  CARD("%10d%10d%10d%10d%10d%10d%10d%10d",LSD_NEIPH,LSD_NEIPS,LSD_MAXINT,LSD_ISTRN,LSD_SIGFLG,LSD_EPSFLG,LSD_RLTFLG,LSD_ENGFLG);
  COMMENT("$   CMPFLG    IEVERP    BEAMIP     DCOMP      SHGE     STSSZ    N3THDT   IALEMAT");
  CARD("%10d%10d%10d%10d%10d%10d%10d%10d",LSD_CMPFLG,LSD_IEVERP,LSD_BEAMIP,LSD_DCOMP,LSD_SHGE,LSD_STSSZ,DATABASE_BIN_N3THDT,DATABASE_BIN_IALEMAT);

  if (optionalCards3==1) {
      COMMENT("$  NINTSLD   PKP_SEN      SCLP     HYDRO     MSSCL     THERM    INTOUT    NODOUT");
  }
  FREE_CARD(optionalCards3,"%10d%10d%10lg%10d%10d%10d%10s%10s",LSD_NINTSLD,DATABASE_BIN_PKPSEN,DATABASE_BIN_SCLP,DATABASE_BIN_HYDRO,DATABASE_BIN_MSSCL,DATABASE_BIN_THERM,DATABASE_BIN_INTOUT,DATABASE_BIN_NODOUT);

  if (optionalCards3==1 && optionalCards4==1) {
      COMMENT("$     DTDT    RESPLT     NEIPB");
  }
  if (optionalCards3==1)
      FREE_CARD(optionalCards4,"%10d%10d%10d",DATABASE_BIN_DTDT,DATABASE_BIN_RESPLT,DATABASE_BIN_NEIPB);
}
