//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 058
// 


ATTRIBUTES(COMMON) 
{
    KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt                      = VALUE(INT, "Title");
    CommentEnumField                  = VALUE(INT, "User Comments");
    Num_Comments                      = SIZE("No. of comment lines");
    Comments                          = ARRAY[Num_Comments](STRING, "Entity Comments");
    Rho                               = VALUE(FLOAT, "Mass density");  
    EAFunction                        = VALUE(INT, "EAFunction");
    LSD_MAT_EA                        = VALUE(FLOAT, "EA Young’s modulus");
    EA_AsFunct                        = VALUE(FUNCT, "LongFunction");
    EBFunction                        = VALUE(INT, "EBFunction");
    LSD_MAT_EB                        = VALUE(FLOAT, "Young’s modulus");
    EB_AsFunct                        = VALUE(FUNCT, "TransFunction");
    LSD_MAT_EC                        = VALUE(FLOAT, "EC Young’s modulus");
    LSD_MAT_PRBA                      = VALUE(FLOAT, "Poisson’s ratio BA");
    MATL58_TAU1                       = VALUE(FLOAT, "stress limit of the first slightly nonlinear part of the shear stress versus shear strain curve");
    MATL58_GAMMA1                     = VALUE(FLOAT, "strain limit of the first slightly nonlinear part of the shear stress versus engineering shear strain curve");
    LSD_MAT_GAB                       = VALUE(FLOAT, "GAB shear modulus");
    LSD_MAT_GBC                       = VALUE(FLOAT, "GBC shear modulus");
    LSD_MAT_GCA                       = VALUE(FLOAT, "GCA shear modulus");
    MATL58_SLIMT1                     = VALUE(FLOAT, "Factor to determine the minimum stress limit after stress maximum");
    MATL58_SLIMC1                     = VALUE(FLOAT, "Factor to determine the minimum stress limit after stress maximum");
    MATL58_SLIMT2                     = VALUE(FLOAT, "Factor to determine the minimum stress limit after stress maximum");
    MATL58_SLIMC2                     = VALUE(FLOAT, "Factor to determine the minimum stress limit after stress maximum");
    MATL58_SLIMS                      = VALUE(FLOAT, "Factor to determine the minimum stress limit after stress maximum");
    axisOptFlag                       = VALUE(INT, "Anisotropy axis definition");
    LSD_SYSTEM                        = VALUE(SYSTEM, "Material axes option");
    LSD_TSIZE                         = VALUE(FLOAT, "Time step for automatic element deletion");
    MATL58_ERODS                      = VALUE(FLOAT, "Maximum effective strain for element layer failure");
    LSD_SOFT                          = VALUE(FLOAT, "Softening reduction factor for strength in the crashfront");
    LSD_FS                            = VALUE(FLOAT, "Failure surface type");
    LSD_MAT_EPSF                      = VALUE(FLOAT, "Damage initiation transverse shear strain.");
    LSD_MAT_EPSR                      = VALUE(FLOAT, "Final rupture transverse shear strain");
    LSD_MAT_TSMD                      = VALUE(FLOAT, "Transverse shear maximum damage");
    LSD_MAT_BETA                      = VALUE(FLOAT, "Material angle in degrees");
    LSD_M11C                          = VALUE(FLOAT, "Strain at longitudinal compressive strength");
    LSD_M11T                          = VALUE(FLOAT, "Strain at longitudinal tensile strength");
    LSD_M22C                          = VALUE(FLOAT, "Strain at transverse compressive strength");
    LSD_M22T                          = VALUE(FLOAT, "Strain at transverse tensile strength");
    LSD_MS                            = VALUE(FLOAT, "Engineering shear strain at shear strength");
    LSD_MAT_XC                        = VALUE(FLOAT, "Longitudinal compressive strength");
    LSD_MAT_XT                        = VALUE(FLOAT, "Longitudinal tensile strength");
    LSD_MAT_YC                        = VALUE(FLOAT, "Transverse compressive strength");
    LSD_MAT_YT                        = VALUE(FLOAT, "Transverse tensile strength");
    LSD_MAT_SC                        = VALUE(FLOAT, "Shear strength,");
    Mat58_Option                      = VALUE(INT, "AdditionalCards");
    SRDOptionalCards                  = VALUE(INT, "Cards");
    LSD_LCID                          = VALUE(FUNCT, "Load curve ID defining longitudinal compressive strength XC vs strain rate");
    LSD_LCID2                         = VALUE(FUNCT, "Load curve ID defining longitudinal tensile strength XT vs. strain rate");
    LSD_LCID3                         = VALUE(FUNCT, "Load curve ID defining transverse compressive strength YC vs. strain rate");
    LSD_LCID4                         = VALUE(FUNCT, "Load curve ID defining transverse tensile strength YT vs. strain rate");
    LSD_LCID5                         = VALUE(FUNCT, "Load curve ID defining shear strength SC vs. strain rate");
    LSD_LCID6                         = VALUE(FUNCT, "Load curve ID defining TAU1 vs. strain rate");
    LSD_LCID7                         = VALUE(FUNCT, "Load curve ID defining GAMMA1 vs. strain rate");
    MATL58_DT                         = VALUE(FLOAT, "Strain rate averaging option");
    LSD_LCID11                        = VALUE(FUNCT, "Load curve ID defining E11C vs. strain rate");
    LSD_LCID12                        = VALUE(FUNCT, "Load curve ID defining E11T vs. strain rate");
    LSD_LCID13                        = VALUE(FUNCT, "Load curve ID defining E22C vs. strain rate");
    LSD_LCID14                        = VALUE(FUNCT, "LCELoad curve ID defining E22T vs. strain rate22T");
    LSD_LCID15                        = VALUE(FUNCT, "Load curve ID defining GMS vs. strain rate");
    LSD_LCID16                        = VALUE(FUNCT, "ERODS vs. strain rate");
    LSD_NODE3                         = VALUE(NODE, "Node1");
    LSD_NODE4                         = VALUE(NODE, "Node2");
    LSDYNA_A1                         = VALUE(FLOAT, "Define components of vector a");
    LSDYNA_A2                         = VALUE(FLOAT, "Define components of vector a");
    LSDYNA_A3                         = VALUE(FLOAT, "Define components of vector a");
    LSD_NODE7                         = VALUE(NODE, "Node1");
    LSD_NODE8                         = VALUE(NODE, "Node2");
    LSDYNA_D1                         = VALUE(FLOAT, "Define components of vector d");
    LSDYNA_D2                         = VALUE(FLOAT, "Define components of vector d");
    LSDYNA_D3                         = VALUE(FLOAT, "Define components of vector d");  
    LSD_NODE5                         = VALUE(NODE, "Node1");
    LSD_NODE6                         = VALUE(NODE, "Node2");
    LSDYNA_V1                         = VALUE(FLOAT, "Define components of vector v");
    LSDYNA_V2                         = VALUE(FLOAT, "Define components of vector v");
    LSDYNA_V3                         = VALUE(FLOAT, "Define components of vector v");
    LSDYNA_XP                         = VALUE(FLOAT, "Define coordinates of point p");
    LSDYNA_YP                         = VALUE(FLOAT, "Define coordinates of point p");
    LSDYNA_ZP                         = VALUE(FLOAT, "Define coordinates of point p");
    AOPT_SKEW_FLAG                    = VALUE(INT,  "Flag for defining coordinate system ID number");
    LSDYNA_PRCA                       = VALUE(FLOAT, "Poisson’s ratio CA");
    LSDYNA_PRCB                       = VALUE(FLOAT, "Poisson’s ratio CB");
    LSD_NODE1                         = VALUE(NODE, "Node");
    LOC_AOPT                          = VALUE(FLOAT, "");
    IO_FLAG                           = VALUE(INT, "io flag");
    LOC_OPT_CARD                      = VALUE(INT, "io flag");
    //empty_string                   = VALUE(STRING, "Used as a local variable for free format case");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                   = 9000;
    CommentEnumField              = 3220;
    Num_Comments                  = 3101;
    LSD_TitleOpt                  = 90;
    Comments                      = 3100;
    Rho                           = 118;
    EA_AsFunct                    = 8041;
    LSD_MAT_EA                    = 325;
    EAFunction                    = 8039;
    EB_AsFunct                    = 8042;
    LSD_MAT_EB                    = 326;
    EBFunction                    = 8040;
    LSD_MAT_EC                    = 327;
    LSD_MAT_PRBA                  = 329;
    MATL58_TAU1                   = 4256;
    MATL58_GAMMA1                 = 4257;
    LSD_MAT_GAB                   = 332;
    LSD_MAT_GBC                   = 333;
    LSD_MAT_GCA                   = 334;
    MATL58_SLIMT1                 = 4258;
    MATL58_SLIMC1                 = 4259;
    MATL58_SLIMT2                 = 4260;
    MATL58_SLIMC2                 = 4261;
    MATL58_SLIMS                  = 4262;
    axisOptFlag                   = 4946;
    LSD_SYSTEM                    = 184;
    LSD_TSIZE                     = 360;
    MATL58_ERODS                  = 4263;
    LSD_SOFT                      = 362;
    LSD_FS                        = 3009;
    LSD_MAT_EPSF                  = 5846;
    LSD_MAT_EPSR                  = 5847;
    LSD_MAT_TSMD                  = 5848;
    LSD_MAT_BETA                  = 306;
    LSD_M11C                      = 364;
    LSD_M11T                      = 365;
    LSD_M22C                      = 366;
    LSD_M22T                      = 367;
    LSD_MS                        = 368;
    LSD_MAT_XC                    = 1126;
    LSD_MAT_XT                    = 346;
    LSD_MAT_YC                    = 348;
    LSD_MAT_YT                    = 347;
    LSD_MAT_SC                    = 345;
    Mat58_Option                  = 7968;
    SRDOptionalCards              = 7969;
    LSD_LCID                      = 45;
    LSD_LCID2                     = 168;
    LSD_LCID3                     = 170;
    LSD_LCID4                     = 171;
    LSD_LCID5                     = 172;
    LSD_LCID6                     = 199;
    LSD_LCID7                     = 200;
    MATL58_DT                     = 7967;
    LSD_LCID11                    = 1175;
    LSD_LCID12                    = 1176;
    LSD_LCID13                    = 1189;
    LSD_LCID14                    = 4602;
    LSD_LCID15                    = 4603;
    LSD_LCID16                    = 4604;
    LSD_NODE3                     = 2802;
    LSD_NODE4                     = 2803;
    LSDYNA_A1                     = 139;
    LSDYNA_A2                     = 140;
    LSDYNA_A3                     = 141;
    LSD_NODE5                     = 5078;
    LSD_NODE6                     = 5079;
    LSDYNA_V1                     = 142;
    LSDYNA_V2                     = 143;
    LSDYNA_V3                     = 144;
    LSD_NODE7                     = 5080;
    LSD_NODE8                     = 5081;
    LSDYNA_D1                     = 145;
    LSDYNA_D2                     = 146;
    LSDYNA_D3                     = 147;
    LSDYNA_XP                     = 136;
    LSDYNA_YP                     = 137;
    LSDYNA_ZP                     = 138;
    AOPT_SKEW_FLAG                = -1;
    LSDYNA_PRCA                   = 130;
    LSDYNA_PRCB                   = 131;
    LSD_NODE1                     = 86;
    LOC_AOPT                      = -1;
    IO_FLAG                       = -1;
    LOC_OPT_CARD                  = -1;
    //empty_string             = -1;
}

DEFAULTS(COMMON)
{
    LSD_MAT_TSMD            = 0.90;
}

DRAWABLES(COMMON)
{
public:
    MASS_DENSITY=SCALAR(Rho);
    YOUNG_MODULUS_LONGITUDINAL_DIRECTION=SCALAR(LSD_MAT_EA);
    YOUNG_MODULUS_TRANSVERSE_DIRECTION=SCALAR(LSD_MAT_EB);
    YOUNG_MODULUS_NORMAL_DIRECTION=SCALAR(LSD_MAT_EC);
    POISSON_RATIO_BA=SCALAR(LSD_MAT_PRBA);
    POISSON_RATIO_CA=SCALAR(LSDYNA_PRCA);
    POISSON_RATIO_CB=SCALAR(LSDYNA_PRCB);
    STRESS_LIMIT_TAU1=SCALAR(MATL58_TAU1);
    STRAIN_LIMIT_GAMMA1=SCALAR(MATL58_GAMMA1);
    SHEAR_MODULUS_AB=SCALAR(LSD_MAT_GAB);
    SHEAR_MODULUS_BC=SCALAR(LSD_MAT_GBC);
    SHEAR_MODULUS_CA=SCALAR(LSD_MAT_GCA);
    SLIMT1=SCALAR(MATL58_SLIMT1);
    SLIMC1=SCALAR(MATL58_SLIMC1);
    SLIMT2=SCALAR(MATL58_SLIMT2);
    SLIMC2=SCALAR(MATL58_SLIMC2);
    SLIMS=SCALAR(MATL58_SLIMS);
    MATERIAL_AXES_OPTION=SCALAR(axisOptFlag);
    TIME_STEP=SCALAR(LSD_TSIZE);
    MAXIMUM_EFFECTIVE_STRAIN=SCALAR(MATL58_ERODS);
    SOFTENING_REDUCTION_FACTOR=SCALAR(LSD_SOFT);
    FAILURE_SURFACE_TYPE=SCALAR(LSD_FS);
    MATERIAL_ANGLE=SCALAR(LSD_MAT_BETA);
    E11C=SCALAR(LSD_M11C);
    E11T=SCALAR(LSD_M11T);
    E22C=SCALAR(LSD_M22C);
    E22T=SCALAR(LSD_M22T);
    GMS=SCALAR(LSD_MS);
    LONGITUDINAL_COMPRESSIVE_STRENGTH=SCALAR(LSD_MAT_XC);
    LONGITUDINAL_TENSILE_STRENGTH=SCALAR(LSD_MAT_XT);
    TRANSVERSE_COMPRESSIVE_STRENGTH=SCALAR(LSD_MAT_YC);
    TRANSVERSE_TENSILE_STRENGTH_B-AXIS=SCALAR(LSD_MAT_YT);
    SHEAR_STRENGTH_AB_PLANE=SCALAR(LSD_MAT_SC);
    YOUNG_MODULUS = MAX(YOUNG_MODULUS_LONGITUDINAL_DIRECTION,YOUNG_MODULUS_TRANSVERSE_DIRECTION,YOUNG_MODULUS_NORMAL_DIRECTION);
    SHEAR_MODULUS = MAX(SHEAR_MODULUS_AB,SHEAR_MODULUS_BC,SHEAR_MODULUS_CA);
    POISSON_RATIO = MAX(POISSON_RATIO_BA,POISSON_RATIO_CA, POISSON_RATIO_CB);
    //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED        = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
   C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*SHEAR_MODULUS/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON) 
{
    ASSIGN(KEYWORD_STR, "*MAT_LAMINATED_COMPOSITE_FABRIC");
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do not export");
    }
    if(CommentEnumField == 2)
    {  
    SIZE(Num_Comments);
    ARRAY(Num_Comments,"")
    {
        SCALAR(Comments);
    }
    }     
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == TRUE)
    {
            ASSIGN(KEYWORD_STR, "_TITLE");
    }
 mandatory:
    SCALAR(Rho)                         { DIMENSION="density";}
    FLAG(EAFunction);
    if(EAFunction == FALSE)
    {
 optional:
        SCALAR(LSD_MAT_EA)              {DIMENSION="pressure";}
    }
    if(EAFunction == TRUE)
    {
        FUNCTION(EA_AsFunct)
        {
          X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
          Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
        }
    }
    FLAG(EBFunction);
    if(EBFunction == FALSE)
    {
 optional:
        SCALAR(LSD_MAT_EB)              {DIMENSION="pressure";}
    }
    if(EBFunction == TRUE)
    {
        FUNCTION(EB_AsFunct)
        {
          X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
          Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
        }
    }
 optional:
    SCALAR(LSD_MAT_EC)                  {DIMENSION="pressure";}
    SCALAR(LSD_MAT_PRBA)                {DIMENSION="DIMENSIONLESS";}
    SCALAR(MATL58_TAU1)                 {DIMENSION="pressure";}
    SCALAR(MATL58_GAMMA1)               {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT_GAB)                 {DIMENSION="pressure";}
    SCALAR(LSD_MAT_GBC)                 {DIMENSION="pressure";}
    SCALAR(LSD_MAT_GCA)                 {DIMENSION="pressure";}
    SCALAR(MATL58_SLIMT1)               {DIMENSION="DIMENSIONLESS";}
    SCALAR(MATL58_SLIMC1)               {DIMENSION="DIMENSIONLESS";}
    SCALAR(MATL58_SLIMT2)               {DIMENSION="DIMENSIONLESS";}
    SCALAR(MATL58_SLIMC2)               {DIMENSION="DIMENSIONLESS";}
    SCALAR(MATL58_SLIMS)                {DIMENSION="DIMENSIONLESS";}
    RADIO(axisOptFlag)
    {
        ADD(0, "By element nodes");
        ADD(1, "By points");
        ADD(2, "Define global vector");
        ADD(3, "Define local vector");
        ADD(4, "Pick System");
    }
    if(axisOptFlag == 4)
    {
        DATA(LSD_SYSTEM);
    }
    SCALAR(LSD_TSIZE)            {DIMENSION="t";}
    SCALAR(MATL58_ERODS)         {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_SOFT)             {DIMENSION="DIMENSIONLESS";}
    RADIO(LSD_FS)
    {
        ADD( 1.0, " 1.0: Smooth failure surface with a quadratic criterion for both the fiber and transverse directions");
        ADD( 0.0, " 0.0: Smooth failure surface in the transverse direction with a limiting value in the fiber direction");
        ADD(-1.0,  "-1.0: Faceted failure surface");
    }
    SCALAR(LSD_MAT_EPSF)        {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT_EPSR)        {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT_TSMD)        {DIMENSION="DIMENSIONLESS";}
    if(axisOptFlag == 1)
    {
        DATA(LSD_NODE1);
        SCALAR(LSDYNA_XP)               {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSDYNA_YP)               {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSDYNA_ZP)               {DIMENSION="DIMENSIONLESS";}
    }
    if(axisOptFlag == 2)
    {
    DATA(LSD_NODE3);
    DATA(LSD_NODE4);
    SCALAR(LSDYNA_A1)               {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_A2)               {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_A3)               {DIMENSION="DIMENSIONLESS";}
    }
    SCALAR(LSDYNA_PRCA)        {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_PRCB)        {DIMENSION="DIMENSIONLESS";}

    if(axisOptFlag == 3)
    {
    DATA(LSD_NODE5);
    DATA(LSD_NODE6);
    SCALAR(LSDYNA_V1)               {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_V2)               {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_V3)               {DIMENSION="DIMENSIONLESS";}         
    }
    if(axisOptFlag == 0 || axisOptFlag == 3)
    {
        SCALAR(LSD_MAT_BETA)        {DIMENSION="a";}
    }      
    if(axisOptFlag == 2)
    {
    DATA(LSD_NODE7);                
    DATA(LSD_NODE8);                
    SCALAR(LSDYNA_D1)               {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_D2)               {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_D3)               {DIMENSION="DIMENSIONLESS";}      
    }
    SCALAR(LSD_M11C)                  {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_M11T)                  {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_M22C)                  {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_M22T)                  {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MS)                    {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT_XC)                {DIMENSION="pressure";}
    SCALAR(LSD_MAT_XT)                  {DIMENSION="pressure";}
    SCALAR(LSD_MAT_YC)                  {DIMENSION="pressure";}
    SCALAR(LSD_MAT_YT)                  {DIMENSION="pressure";}
    SCALAR(LSD_MAT_SC)                  {DIMENSION="pressure";}    
    if(axisOptFlag != 5)
    {
        FLAG(Mat58_Option);      
    }
    if(axisOptFlag != 5 && Mat58_Option == TRUE)
    {
        RADIO(SRDOptionalCards)
        {
            ADD(0, "8");
            ADD(1, "8/9");
        }
        FUNCTION(LSD_LCID)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "strain_rate";
          Y_TITLE = "Strength"; Y_DIMENSION = "pressure";
        }
        FUNCTION(LSD_LCID2)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "strain_rate";
          Y_TITLE = "Strength"; Y_DIMENSION = "pressure";
        }
        FUNCTION(LSD_LCID3)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "strain_rate";
          Y_TITLE = "Strength"; Y_DIMENSION = "pressure";
        }
        FUNCTION(LSD_LCID4)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "strain_rate";
          Y_TITLE = "Strength"; Y_DIMENSION = "pressure";
        }
        FUNCTION(LSD_LCID5)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "strain_rate";
          Y_TITLE = "Strength"; Y_DIMENSION = "pressure";
        }
    }
    if(axisOptFlag != 5 && Mat58_Option == TRUE && LSD_FS == -1.0)
    {
        FUNCTION(LSD_LCID6)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "strain_rate";
          Y_TITLE = "tau1"; Y_DIMENSION = "DIMENSIONLESS";
        }
        FUNCTION(LSD_LCID7)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "strain_rate";
          Y_TITLE = "gamma"; Y_DIMENSION = "DIMENSIONLESS";
        }
    }
    SCALAR(MATL58_DT)                     {DIMENSION="t";}
    if(axisOptFlag != 5 && Mat58_Option == TRUE && SRDOptionalCards == 1)
    {
        FUNCTION(LSD_LCID11)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "strain_rate";
          Y_TITLE = "Strain"; Y_DIMENSION = "DIMENSIONLESS";
        }
        FUNCTION(LSD_LCID12)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "strain_rate";
          Y_TITLE = "Strain"; Y_DIMENSION = "DIMENSIONLESS";
        }
        FUNCTION(LSD_LCID13)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "strain_rate";
          Y_TITLE = "Strain"; Y_DIMENSION = "DIMENSIONLESS";
        }
        FUNCTION(LSD_LCID14)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "strain_rate";
          Y_TITLE = "Strain"; Y_DIMENSION = "DIMENSIONLESS";
        }
        FUNCTION(LSD_LCID15)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "strain_rate";
          Y_TITLE = "Strain"; Y_DIMENSION = "DIMENSIONLESS";
        }
    }
/*
    graphical SUPPORT("Part(s) to which material is applied")
    {
        OBJECTS=(/COMPONENT/SHELL,/COMPONENT/TSHELL);
        ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, IMPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, EXPORT);

    //
    if(LSD_NODE1 != NONE)
    {
        ASSIGN(LSDYNA_XP,[@getentityvalue(nodes,$LSD_NODE1,x)],EXPORT);
        ASSIGN(LSDYNA_YP,[@getentityvalue(nodes,$LSD_NODE1,y)],EXPORT);
        ASSIGN(LSDYNA_ZP,[@getentityvalue(nodes,$LSD_NODE1,z)],EXPORT);
    }
    if(LSD_NODE4 != NONE && LSD_NODE3 != NONE)
    {
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],EXPORT);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],EXPORT);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],EXPORT);
    }
    if(LSD_NODE8 != NONE && LSD_NODE7 != NONE)
    {
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],EXPORT);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],EXPORT);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],EXPORT);
    }
    if(LSD_NODE6 != NONE && LSD_NODE5 != NONE)
    {
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],EXPORT);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],EXPORT);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],EXPORT);
    }
    //
    if(axisOptFlag == 1 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,0.0,EXPORT);
    }
    else if(axisOptFlag == 2 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,2.0,EXPORT);
    }
    else if(axisOptFlag == 3 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,3.0,EXPORT);
    }
    else if(axisOptFlag == 5 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,1.0,EXPORT);
    }

    //
    COMMENT("$      MID       RHO        EA        EB        EC      PRBA      TAU1    GAMMA1");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_MAT_EA,LSD_MAT_EB,LSD_MAT_EC,LSD_MAT_PRBA,MATL58_TAU1,MATL58_GAMMA1);
    //
    COMMENT("$      GAB       GBC       GCA    SLIMT1    SLIMC1    SLIMT2    SLIMC2     SLIMS");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_GAB,LSD_MAT_GBC,LSD_MAT_GCA,MATL58_SLIMT1,MATL58_SLIMC1,MATL58_SLIMT2,MATL58_SLIMC2,MATL58_SLIMS);
    //
    COMMENT("$     AOPT     TSIZE     ERODS      SOFT        FS");
    if(IO_FLAG == 2)
    {
        if(axisOptFlag != 4)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LOC_AOPT,LSD_TSIZE,MATL58_ERODS,LSD_SOFT,LSD_FS);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM),LSD_TSIZE,MATL58_ERODS,LSD_SOFT,LSD_FS); 
        }
    }
    CARD_PREREAD("%10lg",LOC_AOPT);
    if(LOC_AOPT == 0.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,1,IMPORT);
    }
    else if(LOC_AOPT == 2.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,2,IMPORT);
    }
    else if(LOC_AOPT == 3.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,3,IMPORT);
    }
    else if(LOC_AOPT == 1.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,5,IMPORT);
    }
    else if(IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag, 4, IMPORT);
    }

    if(IO_FLAG == 1)
    {
        if(axisOptFlag != 4)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LOC_AOPT,LSD_TSIZE,MATL58_ERODS,LSD_SOFT,LSD_FS);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM),LSD_TSIZE,MATL58_ERODS,LSD_SOFT,LSD_FS); 
        }
    }

    //
    COMMENT("$       XP        YP        ZP        A1        A2        A3");
    if(axisOptFlag == 5)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s",LSDYNA_XP,LSDYNA_YP,LSDYNA_ZP,_BLANK_,_BLANK_,_BLANK_);
    }
    else if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$       V1        V2        V3        D1        D2        D3      BETA");
    if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3);
    }
    else if(axisOptFlag == 3)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,LSD_MAT_BETA);
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$     E11C      E11T      E22C      E22T       GMS");
    CARD("%10lg%10lg%10lg%10lg%10lg",LSD_M11C,LSD_M11T,LSD_M22C,LSD_M22T,LSD_MS);
    //
    COMMENT("$       XC        XT        YC        YT        SC");
    CARD("%10lg%10lg%10lg%10lg%10lg",LSD_MAT_XC,LSD_MAT_XT,LSD_MAT_YC,LSD_MAT_YT,LSD_MAT_SC);
    //

}
FORMAT(Keyword971_R6.1) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, IMPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, EXPORT);

    //
    if(LSD_NODE1 != NONE)
    {
        ASSIGN(LSDYNA_XP,[@getentityvalue(nodes,$LSD_NODE1,x)],EXPORT);
        ASSIGN(LSDYNA_YP,[@getentityvalue(nodes,$LSD_NODE1,y)],EXPORT);
        ASSIGN(LSDYNA_ZP,[@getentityvalue(nodes,$LSD_NODE1,z)],EXPORT);
    }
    if(LSD_NODE4 != NONE && LSD_NODE3 != NONE)
    {
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],EXPORT);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],EXPORT);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],EXPORT);
    }
    if(LSD_NODE8 != NONE && LSD_NODE7 != NONE)
    {
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],EXPORT);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],EXPORT);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],EXPORT);
    }
    if(LSD_NODE6 != NONE && LSD_NODE5 != NONE)
    {
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],EXPORT);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],EXPORT);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],EXPORT);
    }
    //
    if(axisOptFlag == 1 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,0.0,EXPORT);
    }
    else if(axisOptFlag == 2 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,2.0,EXPORT);
    }
    else if(axisOptFlag == 3 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,3.0,EXPORT);
    }
    else if(axisOptFlag == 5 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,1.0,EXPORT);
    }

    //
    COMMENT("$      MID       RHO        EA        EB        EC      PRBA      TAU1    GAMMA1");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_MAT_EA,LSD_MAT_EB,LSD_MAT_EC,LSD_MAT_PRBA,MATL58_TAU1,MATL58_GAMMA1);
    //
    COMMENT("$      GAB       GBC       GCA    SLIMT1    SLIMC1    SLIMT2    SLIMC2     SLIMS");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_GAB,LSD_MAT_GBC,LSD_MAT_GCA,MATL58_SLIMT1,MATL58_SLIMC1,MATL58_SLIMT2,MATL58_SLIMC2,MATL58_SLIMS);
    //
    COMMENT("$     AOPT     TSIZE     ERODS      SOFT        FS");
    if(IO_FLAG == 2)
    {
        if(axisOptFlag != 4)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LOC_AOPT,LSD_TSIZE,MATL58_ERODS,LSD_SOFT,LSD_FS);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM),LSD_TSIZE,MATL58_ERODS,LSD_SOFT,LSD_FS); 
        }
    }
    CARD_PREREAD("%10lg",LOC_AOPT);
    if(LOC_AOPT == 0.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,1,IMPORT);
    }
    else if(LOC_AOPT == 2.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,2,IMPORT);
    }
    else if(LOC_AOPT == 3.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,3,IMPORT);
    }
    else if(LOC_AOPT == 1.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,5,IMPORT);
    }
    else if(IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag, 4, IMPORT);
    }

    if(IO_FLAG == 1)
    {
        if(axisOptFlag != 4)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LOC_AOPT,LSD_TSIZE,MATL58_ERODS,LSD_SOFT,LSD_FS);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM),LSD_TSIZE,MATL58_ERODS,LSD_SOFT,LSD_FS); 
        }
    }
    //
    COMMENT("$       XP        YP        ZP        A1        A2        A3");
    if(axisOptFlag == 5)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s",LSDYNA_XP,LSDYNA_YP,LSDYNA_ZP,_BLANK_,_BLANK_,_BLANK_);
    }
    else if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$       V1        V2        V3        D1        D2        D3      BETA");
    if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3);
    }
    else if(axisOptFlag == 3)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,LSD_MAT_BETA);
    }
    else if(axisOptFlag == 1)
    {
        CARD("%10s%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_MAT_BETA);
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$     E11C      E11T      E22C      E22T       GMS");
    CARD("%10lg%10lg%10lg%10lg%10lg",LSD_M11C,LSD_M11T,LSD_M22C,LSD_M22T,LSD_MS);
    //
    COMMENT("$       XC        XT        YC        YT        SC");
    CARD("%10lg%10lg%10lg%10lg%10lg",LSD_MAT_XC,LSD_MAT_XT,LSD_MAT_YC,LSD_MAT_YT,LSD_MAT_SC);
    //
}

FORMAT(Keyword971_R7.1) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, IMPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, EXPORT);

    //
    if(LSD_NODE1 != NONE)
    {
        ASSIGN(LSDYNA_XP,[@getentityvalue(nodes,$LSD_NODE1,x)],EXPORT);
        ASSIGN(LSDYNA_YP,[@getentityvalue(nodes,$LSD_NODE1,y)],EXPORT);
        ASSIGN(LSDYNA_ZP,[@getentityvalue(nodes,$LSD_NODE1,z)],EXPORT);
    }
    if(LSD_NODE4 != NONE && LSD_NODE3 != NONE)
    {
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],EXPORT);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],EXPORT);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],EXPORT);
    }
    if(LSD_NODE8 != NONE && LSD_NODE7 != NONE)
    {
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],EXPORT);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],EXPORT);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],EXPORT);
    }
    if(LSD_NODE6 != NONE && LSD_NODE5 != NONE)
    {
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],EXPORT);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],EXPORT);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],EXPORT);
    }
    //
    if(axisOptFlag == 1 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,0.0,EXPORT);
    }
    else if(axisOptFlag == 2 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,2.0,EXPORT);
    }
    else if(axisOptFlag == 3 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,3.0,EXPORT);
    }
    else if(axisOptFlag == 5 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,1.0,EXPORT);
    }

    //
    COMMENT("$      MID       RHO        EA        EB        EC      PRBA      TAU1    GAMMA1");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_MAT_EA,LSD_MAT_EB,LSD_MAT_EC,LSD_MAT_PRBA,MATL58_TAU1,MATL58_GAMMA1);
    //
    COMMENT("$      GAB       GBC       GCA    SLIMT1    SLIMC1    SLIMT2    SLIMC2     SLIMS");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_GAB,LSD_MAT_GBC,LSD_MAT_GCA,MATL58_SLIMT1,MATL58_SLIMC1,MATL58_SLIMT2,MATL58_SLIMC2,MATL58_SLIMS);
    //
    COMMENT("$     AOPT     TSIZE     ERODS      SOFT        FS      EPSF      EPSR      TSMD");
    if(IO_FLAG == 2)
    {
        if(axisOptFlag != 4)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LOC_AOPT,LSD_TSIZE,MATL58_ERODS,LSD_SOFT,LSD_FS,LSD_MAT_EPSF,LSD_MAT_EPSR,LSD_MAT_TSMD);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM),LSD_TSIZE,MATL58_ERODS,LSD_SOFT,LSD_FS,LSD_MAT_EPSF,LSD_MAT_EPSR,LSD_MAT_TSMD); 
        }
    }
    CARD_PREREAD("%10lg",LOC_AOPT);
    if(LOC_AOPT == 0.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,1,IMPORT);
    }
    else if(LOC_AOPT == 2.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,2,IMPORT);
    }
    else if(LOC_AOPT == 3.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,3,IMPORT);
    }
    else if(LOC_AOPT == 1.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,5,IMPORT);
    }
    else if(IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag, 4, IMPORT);
    }

    if(IO_FLAG == 1)
    {
        if(axisOptFlag != 4)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",axisOptFlag,LSD_TSIZE,MATL58_ERODS,LSD_SOFT,LSD_FS,LSD_MAT_EPSF,LSD_MAT_EPSR,LSD_MAT_TSMD);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM),LSD_TSIZE,MATL58_ERODS,LSD_SOFT,LSD_FS,LSD_MAT_EPSF,LSD_MAT_EPSR,LSD_MAT_TSMD); 
        }
    }
    //
    COMMENT("$       XP        YP        ZP        A1        A2        A3");
    if(axisOptFlag == 5)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s",LSDYNA_XP,LSDYNA_YP,LSDYNA_ZP,_BLANK_,_BLANK_,_BLANK_);
    }
    else if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$       V1        V2        V3        D1        D2        D3      BETA");
    if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3);
    }
    else if(axisOptFlag == 3)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,LSD_MAT_BETA);
    }
    else if(axisOptFlag == 1)
    {
        CARD("%10s%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_MAT_BETA);
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$     E11C      E11T      E22C      E22T       GMS");
    CARD("%10lg%10lg%10lg%10lg%10lg",LSD_M11C,LSD_M11T,LSD_M22C,LSD_M22T,LSD_MS);
    //
    COMMENT("$       XC        XT        YC        YT        SC");
    CARD("%10lg%10lg%10lg%10lg%10lg",LSD_MAT_XC,LSD_MAT_XT,LSD_MAT_YC,LSD_MAT_YT,LSD_MAT_SC);
    //
    if(Mat58_Option == TRUE)
    {
        COMMENT("$     LCXC      LCXT      LCYC      LCYT      LCSC     LCTAU     LCGAM        DT");
    }
    FREE_CARD(Mat58_Option,"%10d%10d%10d%10d%10d%10d%10d%10lg",LSD_LCID,LSD_LCID2,LSD_LCID3,LSD_LCID4,LSD_LCID5,LSD_LCID6,LSD_LCID7,MATL58_DT);
    //
    if(IO_FLAG == 2 && Mat58_Option == TRUE && SRDOptionalCards == 2)
    {
        COMMENT("$   LCE11C    LCE11T    LCE22C    LCE22T     LCGMS");
        CARD("%10d%10d%10d%10d%10d",LSD_LCID11,LSD_LCID12,LSD_LCID13,LSD_LCID14,LSD_LCID15);
    }
    //
    FREE_CARD(LOC_OPT_CARD,"%10d%10d%10d%10d%10d",LSD_LCID11,LSD_LCID12,LSD_LCID13,LSD_LCID14,LSD_LCID15);
    //
    if(LOC_OPT_CARD == 1)
    {
        ASSIGN(SRDOptionalCards,2,IMPORT);
    }
}

FORMAT(Keyword971_R8.0) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, IMPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, EXPORT);

    //
    if(LSD_NODE1 != NONE)
    {
        ASSIGN(LSDYNA_XP,[@getentityvalue(nodes,$LSD_NODE1,x)],EXPORT);
        ASSIGN(LSDYNA_YP,[@getentityvalue(nodes,$LSD_NODE1,y)],EXPORT);
        ASSIGN(LSDYNA_ZP,[@getentityvalue(nodes,$LSD_NODE1,z)],EXPORT);
    }
    if(LSD_NODE4 != NONE && LSD_NODE3 != NONE)
    {
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],EXPORT);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],EXPORT);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],EXPORT);
    }
    if(LSD_NODE8 != NONE && LSD_NODE7 != NONE)
    {
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],EXPORT);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],EXPORT);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],EXPORT);
    }
    if(LSD_NODE6 != NONE && LSD_NODE5 != NONE)
    {
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],EXPORT);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],EXPORT);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],EXPORT);
    }
    //
    if(axisOptFlag == 1 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,0.0,EXPORT);
    }
    else if(axisOptFlag == 2 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,2.0,EXPORT);
    }
    else if(axisOptFlag == 3 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,3.0,EXPORT);
    }
    else if(axisOptFlag == 5 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,1.0,EXPORT);
    }
    //
    COMMENT("$      MID       RHO        EA        EB        EC      PRBA      TAU1    GAMMA1");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,SCALAR_OR_OBJECT(EAFunction,LSD_MAT_EA,EA_AsFunct),SCALAR_OR_OBJECT(EBFunction,LSD_MAT_EB,EB_AsFunct),LSD_MAT_EC,LSD_MAT_PRBA,MATL58_TAU1,MATL58_GAMMA1);
    //
    COMMENT("$      GAB       GBC       GCA    SLIMT1    SLIMC1    SLIMT2    SLIMC2     SLIMS");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_GAB,LSD_MAT_GBC,LSD_MAT_GCA,MATL58_SLIMT1,MATL58_SLIMC1,MATL58_SLIMT2,MATL58_SLIMC2,MATL58_SLIMS);
    //
    COMMENT("$     AOPT     TSIZE     ERODS      SOFT        FS      EPSF      EPSR      TSMD");
    if(IO_FLAG == 2)
    {
        if(axisOptFlag != 4)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LOC_AOPT,LSD_TSIZE,MATL58_ERODS,LSD_SOFT,LSD_FS,LSD_MAT_EPSF,LSD_MAT_EPSR,LSD_MAT_TSMD);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",FLAGGED_OBJECT(LSD_SYSTEM,AOPT_SKEW_FLAG),LSD_TSIZE,MATL58_ERODS,LSD_SOFT,LSD_FS,LSD_MAT_EPSF,LSD_MAT_EPSR,LSD_MAT_TSMD); 
        }
    }
    CARD_PREREAD("%10lg",LOC_AOPT);
    if(LOC_AOPT == 0.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,1,IMPORT);
    }
    else if(LOC_AOPT == 2.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,2,IMPORT);
    }
    else if(LOC_AOPT == 3.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,3,IMPORT);
    }
    else if(LOC_AOPT == 1.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,5,IMPORT);
    }
    else if(IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag, 4, IMPORT);
    }
    
    if(IO_FLAG == 1)
    {
        if(axisOptFlag != 4)
        {
            CARD("%10s%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_BLANK_,LSD_TSIZE,MATL58_ERODS,LSD_SOFT,LSD_FS,LSD_MAT_EPSF,LSD_MAT_EPSR,LSD_MAT_TSMD);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",FLAGGED_OBJECT(LSD_SYSTEM,AOPT_SKEW_FLAG),LSD_TSIZE,MATL58_ERODS,LSD_SOFT,LSD_FS,LSD_MAT_EPSF,LSD_MAT_EPSR,LSD_MAT_TSMD); 
        }
    }
    //
    COMMENT("$       XP        YP        ZP        A1        A2        A3      PRCA      PRCB");
    if(axisOptFlag == 5)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg%10lg",LSDYNA_XP,LSDYNA_YP,LSDYNA_ZP,_BLANK_,_BLANK_,_BLANK_,LSDYNA_PRCA,LSDYNA_PRCB);
    }
    else if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3,LSDYNA_PRCA,LSDYNA_PRCB);
    }
    else
    {
        CARD("%10s%10s%10s%10s%10s%10s%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSDYNA_PRCA,LSDYNA_PRCB);
    }
    //
    COMMENT("$       V1        V2        V3        D1        D2        D3      BETA");
    if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3);
    }
    else if(axisOptFlag == 3)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,LSD_MAT_BETA);
    }
    else if(axisOptFlag == 1)
    {
        CARD("%10s%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_MAT_BETA);
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$     E11C      E11T      E22C      E22T       GMS");
    CARD("%10lg%10lg%10lg%10lg%10lg",LSD_M11C,LSD_M11T,LSD_M22C,LSD_M22T,LSD_MS);
    //
    COMMENT("$       XC        XT        YC        YT        SC");
    CARD("%10lg%10lg%10lg%10lg%10lg",LSD_MAT_XC,LSD_MAT_XT,LSD_MAT_YC,LSD_MAT_YT,LSD_MAT_SC);
    //
    if(IO_FLAG == 2 && Mat58_Option == TRUE)
    {
        COMMENT("$     LCXC      LCXT      LCYC      LCYT      LCSC     LCTAU     LCGAM        DT");
    }
    //
    FREE_CARD(Mat58_Option,"%10d%10d%10d%10d%10d%10d%10d%10lg",LSD_LCID,LSD_LCID2,LSD_LCID3,LSD_LCID4,LSD_LCID5,LSD_LCID6,LSD_LCID7,MATL58_DT);
    //
    if(IO_FLAG == 2 && Mat58_Option == TRUE && SRDOptionalCards == 2)
    {
        COMMENT("$   LCE11C    LCE11T    LCE22C    LCE22T     LCGMS     LCEFS");
        CARD("%10d%10d%10d%10d%10d%10d",LSD_LCID11,LSD_LCID12,LSD_LCID13,LSD_LCID14,LSD_LCID15,LSD_LCID16);
    }
    //
    FREE_CARD(LOC_OPT_CARD,"%10d%10d%10d%10d%10d%10d",LSD_LCID11,LSD_LCID12,LSD_LCID13,LSD_LCID14,LSD_LCID15,LSD_LCID16);
    //
    if(LOC_OPT_CARD == 1)
    {
        ASSIGN(SRDOptionalCards,2,IMPORT);
    }
}