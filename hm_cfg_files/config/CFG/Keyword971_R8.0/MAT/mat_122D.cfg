//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 00
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    LSDYNA_A1                               = VALUE(FLOAT,  "Components of vector a for AOPT = 2");
    LSDYNA_A2                               = VALUE(FLOAT,  "Components of vector a for AOPT = 2");
    LSDYNA_A3                               = VALUE(FLOAT,  "Components of vector a for AOPT = 2");
    LSDYNA_D1                               = VALUE(FLOAT,  "Components of vector d for AOPT = 2");
    LSDYNA_D2                               = VALUE(FLOAT,  "Components of vector d for AOPT = 2");
    LSDYNA_D3                               = VALUE(FLOAT,  "Components of vector d for AOPT = 2");
    LSDYNA_V1                               = VALUE(FLOAT,  "Components of vector v for AOPT = 3");
    LSDYNA_V2                               = VALUE(FLOAT,  "Components of vector v for AOPT = 3");
    LSDYNA_V3                               = VALUE(FLOAT,  "Components of vector v for AOPT = 3");
    LSDYNA_XP                               = VALUE(FLOAT,  "Coordinates of point p for AOPT = 1");
    LSDYNA_YP                               = VALUE(FLOAT,  "Coordinates of point p for AOPT = 1");
    LSDYNA_ZP                               = VALUE(FLOAT,  "Coordinates of point p for AOPT = 1");
    LSDYNA_BETA                             = VALUE(FLOAT,  "Material angle in degrees for AOPT = 0 and 3, may be overridden on the element card");
    LSD_NODE1                               = VALUE(NODE,  "Node");
    LSD_NODE3                               = VALUE(NODE,  "Node1");
    LSD_NODE4                               = VALUE(NODE,  "Node2");
    LSD_NODE5                               = VALUE(NODE,  "Node1");
    LSD_NODE6                               = VALUE(NODE,  "Node2");
    LSD_NODE7                               = VALUE(NODE,  "Node1");
    LSD_NODE8                               = VALUE(NODE,  "Node2");
    LSDYNA_HR                               = VALUE(INT,  "Hardening rule");
    LSDYNA_N                                = VALUE(FLOAT,  "Material constants in Hill’s 1948 yield criterion");
    LSD_BETA                                = VALUE(FLOAT,  "Material angle in degrees");
    LSD_EX                                  = VALUE(FLOAT,  "Young's Modulus in XY Direction");
    LSD_EY                                  = VALUE(FLOAT,  "Young's Modulus in YZ Direction");
    LSD_EZ                                  = VALUE(FLOAT,  "Young's Modulus in XZ Direction");
    LSD_F                                   = VALUE(FLOAT,  "Material constants in Hill’s 1948 yield criterion");
    LSD_G                                   = VALUE(FLOAT,  "Material constants in Hill’s 1948 yield criterion");
    LSD_GXY                                 = VALUE(FLOAT,  "Shear modulus in XY direction");
    LSD_GYZ                                 = VALUE(FLOAT,  "Shear modulus in YZ direction");
    LSD_GXZ                                 = VALUE(FLOAT,  "Shear modulus in XZ direction");
    LSD_H                                   = VALUE(FLOAT,  "Material constants in Hill’s 1948 yield criterion");
    LSD_L                                   = VALUE(FLOAT,  "Material constants in Hill’s 1948 yield criterion");
    LSD_M                                   = VALUE(FLOAT,  "Material constants in Hill’s 1948 yield criterion");
    LSD_P1                                  = VALUE(FLOAT,  "Material Parameter");
    LSD_LCID                                = VALUE(FUNCT,  "Load curve ID defining stress-strain curve");
    LSD_P2                                  = VALUE(FLOAT,  "Material Parameter");
    LSD_PRXY                                = VALUE(FLOAT,  "Poisson's Ratio in XY Direction");
    LSD_PRYZ                                = VALUE(FLOAT,  "Poisson's Ratio in YZ Direction");
    LSD_PRXZ                                = VALUE(FLOAT,  "Poisson's Ratio in XZ Direction");
    LSD_SYSTEM                              = VALUE(SYSTEM,  "AOPT");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    Rho                                     = VALUE(FLOAT,  "Mass Density");
    axisOptFlag                             = VALUE(INT,  "Anisotropy axis definition");
    AOPT_SKEW_FLAG                          = VALUE(INT,  "Flag for defining coordinate system ID number");
    LOC_AOPT                                = VALUE(FLOAT, "");
    IO_FLAG                                 = VALUE(INT, "io flag");
    OPT_TYPE_STR                            = VALUE(STRING, "OPT");
    TITLE                                   = VALUE(STRING, "");
    //empty_string                       = VALUE(STRING, "Used as a local variable for free format case");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSDYNA_A1                               = 139;
    LSDYNA_A2                               = 140;
    LSDYNA_A3                               = 141;
    LSDYNA_D1                               = 145;
    LSDYNA_D2                               = 146;
    LSDYNA_D3                               = 147;
    LSDYNA_BETA                             = 148;
    LSDYNA_HR                               = 8157;
    LSDYNA_N                                = 71;
    LSDYNA_V1                               = 142;
    LSDYNA_V2                               = 143;
    LSDYNA_V3                               = 144;
    LSDYNA_XP                               = 136;
    LSDYNA_YP                               = 137;
    LSDYNA_ZP                               = 138;
    LSD_BETA                                = 1662;
    LSD_EX                                  = 8148;
    LSD_EY                                  = 8149;
    LSD_EZ                                  = 8150;
    LSD_F                                   = 5283;
    LSD_G                                   = 1560;
    LSD_GXY                                 = 8154;
    LSD_GXZ                                 = 8155;
    LSD_GYZ                                 = 8156;
    LSD_H                                   = 1561;
    LSD_L                                   = 32;
    LSD_M                                   = 1570;
    LSD_NODE1                               = 86;
    LSD_NODE3                               = 2802;
    LSD_NODE4                               = 2803;
    LSD_NODE5                               = 5078;
    LSD_NODE6                               = 5079;
    LSD_NODE7                               = 5080;
    LSD_NODE8                               = 5081;
    LSD_P1                                  = 5046;
    LSD_LCID                                = 45;
    LSD_P2                                  = 5047;
    LSD_PRXY                                = 8151;
    LSD_PRXZ                                = 8152;
    LSD_PRYZ                                = 8153;
    LSD_SYSTEM                              = 184;
    LSD_TitleOpt                            = 90;
    Num_Comments                            = 3101;
    Rho                                     = 118;
    axisOptFlag                             = 4946;
    AOPT_SKEW_FLAG                          = -1;
    LOC_AOPT                                = -1;
    IO_FLAG                                 = -1;
    OPT_TYPE_STR                            = -1;
    TITLE                                   = -1;
    //empty_string                       = -1;
}

DRAWABLES(COMMON) {
public:
    MASS_DENSITY=SCALAR(Rho);
    EA = SCALAR(LSD_EX);
    EB = SCALAR(LSD_EY);
    EC = SCALAR(LSD_EZ);
    PRBA = SCALAR(LSD_PRXY);
    PRCA = SCALAR(LSD_PRYZ);
    PRCB = SCALAR(LSD_PRXZ);
    GXY = SCALAR(LSD_GXY);
    GYZ = SCALAR(LSD_GYZ);
    GXZ = SCALAR(LSD_GXZ);
    SHEAR_MODULUS = MAX(GXY,GYZ,GXZ);
    YOUNG_MODULUS = MAX(EA,EB,EC);
    POISSON_RATIO = MAX(PRBA,PRCA,PRCB);
    //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2      = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*SHEAR_MODULUS/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{/*
     ASSIGN(KEYWORD_STR, "*MAT_HILL_3R_3D");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     } 

    if( CommentEnumField == 2)
    {
       SIZE(Num_Comments);
       ARRAY(Num_Comments,"");
       {
          SCALAR(Comments);
       }
    }
    FLAG( LSD_TitleOpt);
         if(FLAG( LSD_TitleOpt);==0)
         {
    ASSIGN(KEYWORD_STR,);
    }
    SCALAR(Rho);
    SCALAR(LSD_EX);
    SCALAR(LSD_EY);
    SCALAR(LSD_EZ);
    SCALAR(LSD_PRXY);
    SCALAR(LSD_PRYZ);
    SCALAR(LSD_PRXZ);
    SCALAR(LSD_GXY);
    SCALAR(LSD_GYZ);
    SCALAR(LSD_GXZ);
    SCALAR(LSD_F);
    SCALAR(LSD_G);
    SCALAR(LSD_H);
    SCALAR(LSD_L);
    SCALAR(LSD_M);
    SCALAR(LSDYNA_N);
    RADIO(LSDYNA_HR)
    {
    }
    if( LSDYNA_HR == 1)
    {
        DATA(LSD_LCID);
       ASSIGN(KEYWORD_STR, "          ");
    }
    if( LSDYNA_HR == 1)
    {
        DATA(LSD_LCID);
       ASSIGN(KEYWORD_STR, "          ");
    }
    if( LSDYNA_HR == 2)
    {
       SCALAR(LSD_P1);
       SCALAR(LSD_P2);
    }
    if( LSDYNA_HR == 2)
    {
       SCALAR(LSD_P1);
       SCALAR(LSD_P2);
    }
    RADIO(axisOptFlag)
    {
        ADD(1, "1: locally orthotropic with material axes defined by point");
        ADD(2, "2: Globally orthotropic: axis given by vectors");
        ADD(3, "3: Locally orthotropic: axis given by rotating the material axes by an angle BETA");
    }
    if( axisOptFlag == 1)
    {
       SCALAR();
    }
    if( axisOptFlag == 2)
    {
       SCALAR();
    }
    if( axisOptFlag == 3)
    {
       SCALAR();
    }
    if( variable1 == 1)
    {
        DATA(LSD_NODE1);
    }
    if( variable1 == 2)
    {
        DATA(LSD_NODE3);
        DATA(LSD_NODE4);
       ASSIGN(KEYWORD_STR, "                              ");
    }
    if( variable1 == 3)
    {
        DATA(LSD_NODE5);
        DATA(LSD_NODE6);
    }
    if( variable1 == 3)
    {
       ASSIGN(KEYWORD_STR, "                              ");
       SCALAR(LSD_BETA);
    }
    if( variable1 == 2)
    {
        DATA(LSD_NODE7);
        DATA(LSD_NODE8);
       ASSIGN(KEYWORD_STR, "                              ");
    }
    RADIO(CommentEnumField)
    {
       ADD(1, "");
       ADD(2, "");
       ADD(3, "");
    }
    */
}

// File format
FORMAT(Keyword971_R8.0) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);

    if(LSD_NODE1 != NONE)
    {
        ASSIGN(LSDYNA_XP,[@getentityvalue(nodes,$LSD_NODE1,x)],EXPORT);
        ASSIGN(LSDYNA_YP,[@getentityvalue(nodes,$LSD_NODE1,y)],EXPORT);
        ASSIGN(LSDYNA_ZP,[@getentityvalue(nodes,$LSD_NODE1,z)],EXPORT);
    }
    if(LSD_NODE4 != NONE && LSD_NODE3 != NONE)
    {
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],EXPORT);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],EXPORT);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],EXPORT);
    }
    if(LSD_NODE8 != NONE && LSD_NODE7 != NONE)
    {
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],EXPORT);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],EXPORT);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],EXPORT);
    }
    if(LSD_NODE6 != NONE && LSD_NODE5 != NONE)
    {
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],EXPORT);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],EXPORT);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],EXPORT);
    }


    COMMENT("$      MID       RHO        EX        EY        EZ      PRXY      PRYZ      PRXZ");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_EX,LSD_EY,LSD_EZ,LSD_PRXY,LSD_PRYZ,LSD_PRXZ);

    COMMENT("$      GXY       GYZ       GXZ         F         G         H         L         M");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_GXY,LSD_GYZ,LSD_GXZ,LSD_F,LSD_G,LSD_H,LSD_L,LSD_M);

    COMMENT("$        N        HR        P1        P2");
    CARD("%10lg%10lg%10lg%10lg",LSDYNA_N,LSDYNA_HR,CELL_COND( if(LSDYNA_HR==1) LSD_LCID; else if(LSDYNA_HR==2) LSD_P1;),CELL_COND( if(LSDYNA_HR==2) LSD_P2;));

    COMMENT("$     IOPT");
    CARD("%10d",axisOptFlag);

    COMMENT("$       XP        YP        ZP        A1        A2        A3");
    if(axisOptFlag == 1)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s",LSDYNA_XP,LSDYNA_YP,LSDYNA_ZP,_BLANK_,_BLANK_,_BLANK_);
    }
    else if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$       V1        V2        V3        D1        D2        D3      BETA");
    if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3,LSDYNA_BETA);
    }
    else if(axisOptFlag == 3)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,LSDYNA_BETA);
    }
    else
    {
        BLANK;
    }
}