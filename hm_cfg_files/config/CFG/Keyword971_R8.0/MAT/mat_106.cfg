//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 106
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    LSDYNA_C                                = VALUE(FLOAT,  "Viscous material parameter");
    LSDYNA_FAIL                             = VALUE(FLOAT,  "Effective plastic failure strain for erosion.");
    LSDYNA_P                                = VALUE(FLOAT,  "Viscous material parameter");
    LSD_LCID                                = VALUE(FUNCT,  "Load curve ID or Table ID.");
    LSD_LCID10                              = VALUE(FUNCT,  "Load curve for scaling the viscous material parameter C as a function of temperature");
    LSD_LCID11                              = VALUE(FUNCT,  "Load curve for scaling the viscous material parameter P as a function of temperature");
    LSD_LCID4                               = VALUE(FUNCT,  "Load curve defining Young's modulus as a function of temperature");
    LSD_LCID5                               = VALUE(FUNCT,  "Load curve defining Poisson's ratio as a function of temperature.");
    LSD_LCID6                               = VALUE(FUNCT,  "Load curve defining the initial yield stress as a function of temperature");
    LSD_LCID7                               = VALUE(FUNCT,  "Load curve for scaling the isotropic hardening parameters QR1 and QR2 or the stress given by the load curve LCSS as a function of temperature");
    LSD_LCID8                               = VALUE(FUNCT,  "Load curve for scaling the kinematic hardening parameters QX1 and QX2 as a function of temperature");
    LSD_LCID9                               = VALUE(FUNCT,  "Load curve ID defining the instantaneous coefficient of thermal expansion as a function of temperature");
    LSD_MAT103_ALPHA                        = VALUE(FLOAT,  "Coefficient of thermal expansion");
    LSD_MAT103_CR1                          = VALUE(FLOAT,  "Isotropic hardening parameter CR1");
    LSD_MAT103_CR2                          = VALUE(FLOAT,  "Isotropic hardening parameter CR2");
    LSD_MAT103_CX1                          = VALUE(FLOAT,  "Kinematic hardening parameter CX1");
    LSD_MAT103_CX2                          = VALUE(FLOAT,  "Kinematic hardening parameter CX2");
    LSD_MAT103_E                            = VALUE(FLOAT,  "Youngâ€™s modulus");
    LSD_MAT103_PR                           = VALUE(FLOAT,  "Poisson's Ratio");
    LSD_MAT103_QR1                          = VALUE(FLOAT,  "Isotropic hardening parameter QR1");
    LSD_MAT103_QR2                          = VALUE(FLOAT,  "Isotropic hardening parameter QR2");
    LSD_MAT103_QX1                          = VALUE(FLOAT,  "Kinematic hardening parameter QX1");
    LSD_MAT103_QX2                          = VALUE(FLOAT,  "Kinematic hardening parameter QX2");
    LSD_MAT103_SIGY                         = VALUE(FLOAT,  "Initial yield stress");
    LSD_TREF                                = VALUE(FLOAT,  "Reference temperature required if and only if LCALPH is given with a negative curve ID");
    LSD_LCFAIL                              = VALUE(FUNCT,  "LCFAIL");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    Rho                                     = VALUE(FLOAT,  "Mass Density");
    curveoption                             = VALUE(INT,  "LCALPHoption");
    //empty_string                       = VALUE(STRING, "Used as a local variable for free format case");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSDYNA_C                                = 197;
    LSDYNA_FAIL                             = 256;
    LSDYNA_P                                = 198;
    LSD_LCID                                = 45;
    LSD_LCID10                              = 1142;
    LSD_LCID11                              = 1175;
    LSD_LCID4                               = 171;
    LSD_LCID5                               = 172;
    LSD_LCID6                               = 199;
    LSD_LCID7                               = 200;
    LSD_LCID8                               = 224;
    LSD_LCID9                               = 1141;
    LSD_MAT103_ALPHA                        = 2653;
    LSD_MAT103_CR1                          = 2655;
    LSD_MAT103_CR2                          = 2657;
    LSD_MAT103_CX1                          = 2659;
    LSD_MAT103_CX2                          = 2661;
    LSD_MAT103_E                            = 2649;
    LSD_MAT103_PR                           = 2650;
    LSD_MAT103_QR1                          = 2654;
    LSD_MAT103_QR2                          = 2656;
    LSD_MAT103_QX1                          = 2658;
    LSD_MAT103_QX2                          = 2660;
    LSD_MAT103_SIGY                         = 2651;
    LSD_TREF                                = 1643;
    LSD_LCFAIL                              = 3215;
    LSD_TitleOpt                            = 90;
    Num_Comments                            = 3101;
    Rho                                     = 118;
    curveoption                             = 3016;
    //empty_string                       = -1;
}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  YOUNG_MODULUS=SCALAR(LSD_MAT103_E);
  POISSON_RATIO=SCALAR(LSD_MAT103_PR);
  INITIAL_YIELD_STRESS=SCALAR(LSD_MAT103_SIGY);
  COEFFICIENT_OF_THERMAL_EXPANSION=SCALAR(LSD_MAT103_ALPHA);
  ISOTROPIC_HARDENING_PARAMETER_Q1=SCALAR(LSD_MAT103_QR1);
  ISOTROPIC_HARDENING_PARAMETER_C1=SCALAR(LSD_MAT103_CR1);
  ISOTROPIC_HARDENING_PARAMETER_Q2=SCALAR(LSD_MAT103_QR2);
  ISOTROPIC_HARDENING_PARAMETER_C2=SCALAR(LSD_MAT103_CR2);
  KINEMATIC_HARDENING_PARAMETER_Q1=SCALAR(LSD_MAT103_QX1);
  KINEMATIC_HARDENING_PARAMETER_C1=SCALAR(LSD_MAT103_CX1);
  KINEMATIC_HARDENING_PARAMETER_Q2=SCALAR(LSD_MAT103_QX2);
  KINEMATIC_HARDENING_PARAMETER_C2=SCALAR(LSD_MAT103_CX2);
  VISCOUS_MATERIAL_PARAMETER_C=SCALAR(LSDYNA_C);
  VISCOUS_MATERIAL_PARAMETER_P=SCALAR(LSDYNA_P);
 public:
 //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2      = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_ELASTIC_VISCOPLASTIC_THERMAL");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     }  
 mandatory:    
     SCALAR(Rho)                        {DIMENSION="density";}
     SCALAR(LSD_MAT103_E)               {DIMENSION="pressure";}
 optional:    
     SCALAR(LSD_MAT103_PR)              {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT103_SIGY)            {DIMENSION="pressure";}
     SCALAR(LSD_MAT103_ALPHA)           {DIMENSION="DIMENSIONLESS";}
 mandatory:     
     DATA(LSD_LCID);
 optional:    
     SCALAR(LSDYNA_FAIL)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT103_QR1)             {DIMENSION="pressure";}
     SCALAR(LSD_MAT103_CR1)             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT103_QR2)             {DIMENSION="pressure";}
     SCALAR(LSD_MAT103_CR2)             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT103_QX1)             {DIMENSION="pressure";}
     SCALAR(LSD_MAT103_CX1)             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT103_QX2)             {DIMENSION="pressure";}
     SCALAR(LSD_MAT103_CX2)             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_C)                   {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_P)                   {DIMENSION="DIMENSIONLESS";}
     
     DATA(LSD_LCID4);
     DATA(LSD_LCID5);
     DATA(LSD_LCID6);
     DATA(LSD_LCID7);
     DATA(LSD_LCID8);
     FLAG(curveoption);
     DATA(LSD_LCID9);

     DATA(LSD_LCID10);
     DATA(LSD_LCID11);
     DATA(LSD_LCFAIL);
     if(curveoption == TRUE)
     {
         SCALAR(LSD_TREF)               {DIMENSION="k";}
     }
     
/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D,/COMPONENT/SHELL);
      ADD(COMPONENT,"Parts");
    }
*/

}

// File format
FORMAT(Keyword971) 
{
    //    
    COMMENT("$      MID       RHO         E        PR      SIGY     ALPHA      LCSS");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_MAT103_E,LSD_MAT103_PR,LSD_MAT103_SIGY,LSD_MAT103_ALPHA,LSD_LCID);
    //
    COMMENT("$      QR1       CR1       QR2       CR2       QX1       CX1       QX2       CX2");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg", LSD_MAT103_QR1, LSD_MAT103_CR1, LSD_MAT103_QR2, LSD_MAT103_CR2, LSD_MAT103_QX1, LSD_MAT103_CX1, LSD_MAT103_QX2, LSD_MAT103_CX2);
    //
    COMMENT("$        C         P       LCE      LCPR    LCSIGY       LCR       LCX    LCALPH");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_C,LSDYNA_P,LSD_LCID4,LSD_LCID5,LSD_LCID6,LSD_LCID7,LSD_LCID8,FLAGGED_OBJECT(LSD_LCID9,curveoption));
    //
    COMMENT("$      LCC       LCP      TREF");
    if(curveoption == 1)
    {
        CARD("%10lg%10lg%10lg",LSD_LCID10,LSD_LCID11, LSD_TREF);
    }
    else
    {
        CARD("%10lg%10lg",LSD_LCID10,LSD_LCID11);
    }
}

FORMAT(Keyword971_R7.1) 
{
    //    
    COMMENT("$      MID       RHO         E        PR      SIGY     ALPHA      LCSS      FAIL");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_MAT103_E,LSD_MAT103_PR,LSD_MAT103_SIGY,LSD_MAT103_ALPHA,LSD_LCID,LSDYNA_FAIL);
    //
    COMMENT("$      QR1       CR1       QR2       CR2       QX1       CX1       QX2       CX2");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg", LSD_MAT103_QR1, LSD_MAT103_CR1, LSD_MAT103_QR2, LSD_MAT103_CR2, LSD_MAT103_QX1, LSD_MAT103_CX1, LSD_MAT103_QX2, LSD_MAT103_CX2);
    //
    COMMENT("$        C         P       LCE      LCPR    LCSIGY       LCR       LCX    LCALPH");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_C,LSDYNA_P,LSD_LCID4,LSD_LCID5,LSD_LCID6,LSD_LCID7,LSD_LCID8,FLAGGED_OBJECT(LSD_LCID9,curveoption));
    //
    COMMENT("$      LCC       LCP      TREF");
    if(curveoption == 1)
    {
        CARD("%10lg%10lg%10lg",LSD_LCID10,LSD_LCID11, LSD_TREF);
    }
    else
    {
        CARD("%10lg%10lg",LSD_LCID10,LSD_LCID11);
    }

}

FORMAT(Keyword971_R8.0) 
{
    //    
    COMMENT("$      MID       RHO         E        PR      SIGY     ALPHA      LCSS      FAIL");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_MAT103_E,LSD_MAT103_PR,LSD_MAT103_SIGY,LSD_MAT103_ALPHA,LSD_LCID,LSDYNA_FAIL);
    //
    COMMENT("$      QR1       CR1       QR2       CR2       QX1       CX1       QX2       CX2");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg", LSD_MAT103_QR1, LSD_MAT103_CR1, LSD_MAT103_QR2, LSD_MAT103_CR2, LSD_MAT103_QX1, LSD_MAT103_CX1, LSD_MAT103_QX2, LSD_MAT103_CX2);
    //
    COMMENT("$        C         P       LCE      LCPR    LCSIGY       LCR       LCX    LCALPH");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_C,LSDYNA_P,LSD_LCID4,LSD_LCID5,LSD_LCID6,LSD_LCID7,LSD_LCID8,FLAGGED_OBJECT(LSD_LCID9,curveoption));
    //
    COMMENT("$      LCC       LCP      TREF    LCFAIL");
    if(curveoption == 1)
    {
        CARD("%10lg%10lg%10lg%10lg",LSD_LCID10,LSD_LCID11, LSD_TREF,LSD_LCFAIL);
    }
    else
    {
        CARD("%10lg%10lg%10s%10lg",LSD_LCID10,LSD_LCID11, _BLANK_,LSD_LCFAIL);
    }
    //

}
