//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 248
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    E                                       = VALUE(FLOAT,  "Youngs modulus");
    LSD_AL                                  = VALUE(FLOAT,  "weight %");
    LSD_ALPHA                               = VALUE(FLOAT,  "Material constant");
    LSD_ALPH_M                              = VALUE(FLOAT,  "Martensite evolution parameter");
    LSD_ALPH_M_curve                        = VALUE(FUNCT,  "Martensite evolution parameter");
    LSD_AS                                  = VALUE(FLOAT,  "weight %");
    LSD_AUST                                = VALUE(FLOAT,  "sets initial amount of austenite");
    LSD_BAIN                                = VALUE(FLOAT,  "sets initial amount of austenite");
    LSD_BO                                  = VALUE(FLOAT,  "weight %");
    LSD_BS                                  = VALUE(FLOAT,  "Manual start temp.");
    LSD_C                                   = VALUE(FLOAT,  "weight %");
    LSD_CO                                  = VALUE(FLOAT,  "weight %");
    LSD_CR                                  = VALUE(FLOAT,  "weight %");
    LSD_CR_B                                = VALUE(FLOAT,  "Bainite evolution parameter");
    LSD_CR_B_curve                          = VALUE(FUNCT,  "Bainite evolution parameter");
    LSD_CR_F                                = VALUE(FLOAT,  "Ferrite evolution parameter");
    LSD_CR_F_curve                          = VALUE(FUNCT,  "Ferrite evolution parameter");
    LSD_CR_P                                = VALUE(FLOAT,  "Pearlite evolution parameter");
    LSD_CR_P_curve                          = VALUE(FUNCT,  "Pearlite evolution parameter");
    LSD_CU                                  = VALUE(FLOAT,  "weight %");
    LSD_CVCRIT                              = VALUE(FLOAT,  "Critical cooling velocity");
    LSD_DTCRIT                              = VALUE(FLOAT,  "Critical cooling rate");
    LSD_EPSP                                = VALUE(FLOAT,  "Plastic strain");
    LSD_EXPA                                = VALUE(FLOAT,  "Grain growth parameter");
    LSD_EXPB                                = VALUE(FLOAT,  "Grain growth parameter");
    LSD_EXPON                               = VALUE(FLOAT,  "Exponent in Hockett-Sherby");
    LSD_FERR                                = VALUE(FLOAT,  "sets initial amount of austenite");
    LSD_FS                                  = VALUE(FLOAT,  "Manual start temperature");
    LSD_FUNCA                               = VALUE(FUNCT,  "ID for saturation stress");
    LSD_FUNCB                               = VALUE(FUNCT,  "ID for yield stress");
    LSD_FUNCM                               = VALUE(FUNCT,  "ID for saturation rate");
    LSD_GRA                                 = VALUE(FLOAT,  "Grain growth parameter");
    LSD_GRAIN                               = VALUE(FLOAT,  "ASTM grain size number");
    LSD_GRB                                 = VALUE(FLOAT,  "Grain growth parameter");
    LSD_GRCC                                = VALUE(FLOAT,  "Grain growth parameter");
    LSD_GRCM                                = VALUE(FLOAT,  "Grain growth parameter");
    LSD_GRK                                 = VALUE(FLOAT,  "Growth parameter");
    LSD_GRQR                                = VALUE(FLOAT,  "Grain growth activation energy");
    LSD_HEAT                                = VALUE(INT,  "Heat flag");
    LSD_HEATN                               = VALUE(FLOAT,  "Grain growth parameter");
    LSD_IEXTRA                              = VALUE(INT,  "Flag to read extra cards");
    LSD_ISLC                                = VALUE(INT,  "Flag for definition of evolution parameters");
    LSD_LAT1                                = VALUE(FLOAT,  "Latent heat for the decomposition");
    LSD_LAT5                                = VALUE(FLOAT,  "Latent heat for the decomposition");
    LSD_LCE                                 = VALUE(FUNCT,  "Temp. dependent Youngs modulus");
    LSD_LCEPS23                             = VALUE(FUNCT,  "plastic strain vs activation energy");
    LSD_LCEPS4                              = VALUE(FUNCT,  "plastic strain vs activation energy");
    LSD_LCEPS5                              = VALUE(FUNCT,  "start temperature vs plastic strain");
    LSD_LCH4                                = VALUE(FUNCT,  "Vickers hardness vs temp.");
    LSD_LCH5                                = VALUE(FUNCT,  "Vickers hardness vs temp.");
    LSD_LCHEAT                              = VALUE(FUNCT,  "Switch between cooling and heating");
    LSD_LCLAT1                              = VALUE(FUNCT,  "Curve ID");
    LSD_LCLAT5                              = VALUE(FUNCT,  "Curve ID");
    LSD_LCNu                                = VALUE(FUNCT,  "Temp. dependent Poissons ratio");
    LSD_LCSTRC                              = VALUE(FUNCT,  "strain rate parameter");
    LSD_LCSTRP                              = VALUE(FUNCT,  "strain rate parameter");
    LSD_LCY1                                = VALUE(FUNCT,  "yield stress vs plastic strain");
    LSD_LCY2                                = VALUE(FUNCT,  "yield stress vs plastic strain");
    LSD_LCY3                                = VALUE(FUNCT,  "yield stress vs plastic strain");
    LSD_LCY4                                = VALUE(FUNCT,  "yield stress vs plastic strain");
    LSD_LCY5                                = VALUE(FUNCT,  "yield stress vs plastic strain");
    LSD_MART                                = VALUE(FLOAT,  "sets initial amount of austenite");
    LSD_MN                                  = VALUE(FLOAT,  "weight %");
    LSD_MO                                  = VALUE(FLOAT,  "weight %");
    LSD_MS                                  = VALUE(FLOAT,  "Manual start temp.");
    LSD_NI                                  = VALUE(FLOAT,  "weight %");
    LSD_N_M                                 = VALUE(FLOAT,  "Martensite evolution parameter");
    LSD_N_M_curve                           = VALUE(FUNCT,  "Martensite evolution parameter");
    LSD_OMG_B                               = VALUE(FLOAT,  "Bainite grain size factor");
    LSD_OMG_B_curve                         = VALUE(FUNCT,  "Bainite grain size factor");
    LSD_OMG_F                               = VALUE(FLOAT,  "Ferrite grain size factor");
    LSD_OMG_F_curve                         = VALUE(FUNCT,  "Ferrite grain size factor");
    LSD_OMG_P                               = VALUE(FLOAT,  "Pearlite grain size factor");
    LSD_OMG_P_curve                         = VALUE(FUNCT,  "Pearlite grain size factor");
    LSD_P                                   = VALUE(FLOAT,  "weight %");
    LSD_PEAR                                = VALUE(FLOAT,  "sets initial amount of austenite");
    LSD_PHASE                               = VALUE(INT,  "Switch for middle phases");
    LSD_PHI_B                               = VALUE(FLOAT,  "Bainite evolution parameter");
    LSD_PHI_B_curve                         = VALUE(FUNCT,  "Bainite evolution parameter");
    LSD_PHI_F                               = VALUE(FLOAT,  "Ferrite evolution parameter");
    LSD_PHI_F_curve                         = VALUE(FUNCT,  "Ferrite evolution parameter");
    LSD_PHI_M                               = VALUE(FLOAT,  "Martensite evolution parameter");
    LSD_PHI_M_curve                         = VALUE(FUNCT,  "Martensite evolution parameter");
    LSD_PHI_P                               = VALUE(FLOAT,  "Pearlite evolution parameter");
    LSD_PHI_P_curve                         = VALUE(FUNCT,  "Pearlite evolution parameter");
    LSD_PLMEM2                              = VALUE(FLOAT,  "Memory coefficient");
    LSD_PLMEM3                              = VALUE(FLOAT,  "Memory coefficient");
    LSD_PLMEM4                              = VALUE(FLOAT,  "Memory coefficient");
    LSD_PLMEM5                              = VALUE(FLOAT,  "Memory coefficient");
    LSD_PS                                  = VALUE(FLOAT,  "Manual start temperature");
    LSD_PSI_B                               = VALUE(FLOAT,  "Bainite evolution parameter");
    LSD_PSI_B_curve                         = VALUE(FUNCT,  "Bainite evolution parameter");
    LSD_PSI_F                               = VALUE(FLOAT,  "Ferrite evolution parameter");
    LSD_PSI_F_curve                         = VALUE(FUNCT,  "Ferrite evolution parameter");
    LSD_PSI_M                               = VALUE(FLOAT,  "Martensite evolution exponent");
    LSD_PSI_M_curve                         = VALUE(FUNCT,  "Martensite evolution exponent");
    LSD_PSI_P                               = VALUE(FLOAT,  "Pearlite evolution parameter");
    LSD_PSI_P_curve                         = VALUE(FUNCT,  "Pearlite evolution parameter");
    LSD_QR2                                 = VALUE(FLOAT,  "Activation energy");
    LSD_QR3                                 = VALUE(FLOAT,  "Activation energy");
    LSD_QR4                                 = VALUE(FLOAT,  "Activation energy");
    LSD_SI                                  = VALUE(FLOAT,  "weight %");
    LSD_STRC                                = VALUE(FLOAT,  "strain rate parameter");
    LSD_STRP                                = VALUE(FLOAT,  "strain rate parameter");
    LSD_TABTH                               = VALUE(FUNCT,  "thermal expansion coef.");
    LSD_TAU1                                = VALUE(FLOAT,  "Grain growth activation energy");
    LSD_TAU2                                = VALUE(FLOAT,  "Grain growth activation energy");
    LSD_TCVLO                               = VALUE(FLOAT,  "lower temp. for avg cooling velocity");
    LSD_TCVSL                               = VALUE(FLOAT,  "Temp. for small cooling velocities");
    LSD_TCVUP                               = VALUE(FLOAT,  "Upper temp. for avg cooling velocity");
    LSD_TI                                  = VALUE(FLOAT,  "weight %");
    LSD_TOFBA                               = VALUE(FLOAT,  "Number of degrees");
    LSD_TOFFE                               = VALUE(FLOAT,  "Number of degrees");
    LSD_TOFPE                               = VALUE(FLOAT,  "Number of degrees");
    LSD_TREF                                = VALUE(FLOAT,  "Reference temp.");
    LSD_TSAMP                               = VALUE(FLOAT,  "Sampling interval");
    LSD_TUNIT                               = VALUE(FLOAT,  "Number of time units");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    LSD_V                                   = VALUE(FLOAT,  "weight %");
    LSD_W                                   = VALUE(FLOAT,  "weight %");
    MAT248_BS2                              = VALUE(FUNCT,  "temp. for cooling and heating");
    MAT248_BS_CURVE                         = VALUE(INT,  "curveBS");
    MAT248_C_B                              = VALUE(FLOAT,  "Alloy dependent factor");
    MAT248_C_F                              = VALUE(FLOAT,  "Alloy dependent factor");
    MAT248_C_P                              = VALUE(FLOAT,  "Alloy dependent factor");
    MAT248_FS2                              = VALUE(FUNCT,  "temp. for cooling and heating");
    MAT248_FS_CURVE                         = VALUE(INT,  "curveFS");
    MAT248_MS2                              = VALUE(FUNCT,  "temp. for cooling and heating");
    MAT248_MSIG                             = VALUE(FUNCT,  "increase of martensite start temp.");
    MAT248_MS_CURVE                         = VALUE(INT,  "curveMS");
    MAT248_PS2                              = VALUE(FUNCT,  "temp. for cooling and heating");
    MAT248_PS_CURVE                         = VALUE(INT,  "curvePS");
    MAT248_TABRHO                           = VALUE(FUNCT,  "phase and temp. dependent densities");
    MAT248_TRIP                             = VALUE(INT,  "trip effect calculation");
    Nu                                      = VALUE(FLOAT,  "Poisson s ratio");
    Rho                                     = VALUE(FLOAT,  "Material density");
    optionE                                 = VALUE(INT,  "optionE");
    optionHEAT                              = VALUE(INT,  "Heat flag");
    optionLAT1                              = VALUE(INT,  "optionLAT1");
    optionLAT5                              = VALUE(INT,  "optionLAT5");
    optionNu                                = VALUE(INT,  "optionNu");
    optionSTRC                              = VALUE(INT,  "optionSTRC");
    optionSTRP                              = VALUE(INT,  "optionSTRP");
    optionTABTH                             = VALUE(INT,  "optionTABTH");
    IO_FLAG                                 = VALUE(INT, "io flag");
    _HMCOMMENTSFLAG                         = VALUE(INT, "Write HM Comments");
    TITLE                                   = VALUE(STRING, "Title");
    EncTypeEnumField                        = VALUE(INT,  "Type");
    RegTypeEnumField                        = VALUE(INT,  "Type");
     //empty_string                       = VALUE(STRING, "Used as a local variable for free format case");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    E                                       = 119;
    LSD_AL                                  = 7622;
    LSD_ALPHA                               = 1651;
    LSD_ALPH_M                              = 8464;
    LSD_ALPH_M_curve                        = 8496;
    LSD_AS                                  = 7623;
    LSD_AUST                                = 7647;
    LSD_BAIN                                = 7650;
    LSD_BO                                  = 7612;
    LSD_BS                                  = 7664;
    LSD_C                                   = 1519;
    LSD_CO                                  = 7613;
    LSD_CR                                  = 7615;
    LSD_CR_B                                = 8493;
    LSD_CR_B_curve                          = 8460;
    LSD_CR_F                                = 8471;
    LSD_CR_F_curve                          = 8513;
    LSD_CR_P                                = 8475;
    LSD_CR_P_curve                          = 8517;
    LSD_CU                                  = 7620;
    LSD_CVCRIT                              = 8485;
    LSD_DTCRIT                              = 7671;
    LSD_EPSP                                = 8487;
    LSD_EXPA                                = 7657;
    LSD_EXPB                                = 7658;
    LSD_EXPON                               = 8488;
    LSD_FERR                                = 7648;
    LSD_FS                                  = 3009;
    LSD_FUNCA                               = 8480;
    LSD_FUNCB                               = 8481;
    LSD_FUNCM                               = 8482;
    LSD_GRA                                 = 7655;
    LSD_GRAIN                               = 7635;
    LSD_GRB                                 = 7656;
    LSD_GRCC                                = 7659;
    LSD_GRCM                                = 7660;
    LSD_GRK                                 = 7652;
    LSD_GRQR                                = 7653;
    LSD_HEAT                                = 7604;
    LSD_HEATN                               = 7661;
    LSD_IEXTRA                              = 8463;
    LSD_ISLC                                = 8462;
    LSD_LAT1                                = 7629;
    LSD_LAT5                                = 7630;
    LSD_LCE                                 = 7674;
    LSD_LCEPS23                             = 7666;
    LSD_LCEPS4                              = 7667;
    LSD_LCEPS5                              = 7668;
    LSD_LCH4                                = 7669;
    LSD_LCH5                                = 7670;
    LSD_LCHEAT                              = 7678;
    LSD_LCLAT1                              = 7680;
    LSD_LCLAT5                              = 7682;
    LSD_LCNu                                = 7676;
    LSD_LCSTRC                              = 7684;
    LSD_LCSTRP                              = 7686;
    LSD_LCY1                                = 7605;
    LSD_LCY2                                = 7606;
    LSD_LCY3                                = 7607;
    LSD_LCY4                                = 7608;
    LSD_LCY5                                = 7609;
    LSD_MART                                = 7651;
    LSD_MN                                  = 7617;
    LSD_MO                                  = 7614;
    LSD_MS                                  = 368;
    LSD_NI                                  = 7616;
    LSD_N_M                                 = 8465;
    LSD_N_M_curve                           = 8497;
    LSD_OMG_B                               = 8476;
    LSD_OMG_B_curve                         = 8457;
    LSD_OMG_F                               = 8468;
    LSD_OMG_F_curve                         = 8510;
    LSD_OMG_P                               = 8472;
    LSD_OMG_P_curve                         = 8514;
    LSD_P                                   = 7621;
    LSD_PEAR                                = 8518;
    LSD_PHASE                               = 7603;
    LSD_PHI_B                               = 8477;
    LSD_PHI_B_curve                         = 8458;
    LSD_PHI_F                               = 8469;
    LSD_PHI_F_curve                         = 8511;
    LSD_PHI_M                               = 8466;
    LSD_PHI_M_curve                         = 8498;
    LSD_PHI_P                               = 8473;
    LSD_PHI_P_curve                         = 8515;
    LSD_PLMEM2                              = 7639;
    LSD_PLMEM3                              = 7640;
    LSD_PLMEM4                              = 7641;
    LSD_PLMEM5                              = 7642;
    LSD_PS                                  = 7663;
    LSD_PSI_B                               = 8478;
    LSD_PSI_B_curve                         = 8459;
    LSD_PSI_F                               = 8470;
    LSD_PSI_F_curve                         = 8512;
    LSD_PSI_M                               = 8467;
    LSD_PSI_M_curve                         = 8499;
    LSD_PSI_P                               = 8474;
    LSD_PSI_P_curve                         = 8516;
    LSD_QR2                                 = 7632;
    LSD_QR3                                 = 7633;
    LSD_QR4                                 = 7634;
    LSD_SI                                  = 7618;
    LSD_STRC                                = 7643;
    LSD_STRP                                = 7644;
    LSD_TABTH                               = 7631;
    LSD_TAU1                                = 7654;
    LSD_TAU2                                = 7662;
    LSD_TCVLO                               = 8484;
    LSD_TCVSL                               = 8486;
    LSD_TCVUP                               = 8483;
    LSD_TI                                  = 7624;
    LSD_TOFBA                               = 7638;
    LSD_TOFFE                               = 7636;
    LSD_TOFPE                               = 7637;
    LSD_TREF                                = 1643;
    LSD_TSAMP                               = 7672;
    LSD_TUNIT                               = 7601;
    LSD_TitleOpt                            = 90;
    LSD_V                                   = 7619;
    LSD_W                                   = 1638;
    MAT248_BS2                              = 8491;
    MAT248_BS_CURVE                         = 8455;
    MAT248_C_B                              = 8449;
    MAT248_C_F                              = 8447;
    MAT248_C_P                              = 8448;
    MAT248_FS2                              = 8489;
    MAT248_FS_CURVE                         = 8453;
    MAT248_MS2                              = 8492;
    MAT248_MSIG                             = 8461;
    MAT248_MS_CURVE                         = 8456;
    MAT248_PS2                              = 8490;
    MAT248_PS_CURVE                         = 8454;
    MAT248_TABRHO                           = 8452;
    MAT248_TRIP                             = 8446;
    Nu                                      = 120;
    Num_Comments                            = 3101;
    Rho                                     = 118;
    optionE                                 = 7673;
    optionHEAT                              = 7677;
    optionLAT1                              = 7679;
    optionLAT5                              = 7681;
    optionNu                                = 7675;
    optionSTRC                              = 7683;
    optionSTRP                              = 7685;
    optionTABTH                             = 7687;
    EncTypeEnumField                        = 5828;
    RegTypeEnumField                        = 5827;
    TITLE                                   = -1;
    IO_FLAG                                 = -1;
    //empty_string                       = -1;
    
}

DRAWABLES(COMMON) {
public:
    MASS_DENSITY=SCALAR(Rho);
    YOUNG_MODULUS = SCALAR(E);
    POISSON_RATIO = SCALAR(Nu);
         //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2      = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

DEFAULTS(COMMON)
{

    LSD_ALPH_M    = 0.0428;
    LSD_CR_B    = 0.0;
    LSD_CR_F    = 0.0;
    LSD_CR_P    = 0.0;
    LSD_EXPA    = 1.0;
    LSD_EXPB    = 1.0;
    LSD_GRA    = 3.11;
    LSD_GRB    = 7520.;
    LSD_HEATN    = 1.0;
    LSD_N_M    = 0.191;
    LSD_OMG_B    = 0.29;
    LSD_OMG_F    = 0.41;
    LSD_OMG_P    = 0.32;
    LSD_PHI_B    = 0.4;
    LSD_PHI_F    = 0.4;
    LSD_PHI_M    = 0.382;
    LSD_PHI_P    = 0.4;
    LSD_PSI_B    = 0.4;
    LSD_PSI_F    = 0.4;
    LSD_PSI_M    = 2.421;
    LSD_PSI_P    = 0.4;
    LSD_TAU1    = 2.08e+8;
    LSD_TAU2    = 4.806;
    LSD_TUNIT    = 3600.;
    

}

GUI(COMMON)
{

    ASSIGN(KEYWORD_STR, "*MAT_PHS_BMW");
    RADIO(CommentEnumField)
    {
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do not export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
    {
        SCALAR(Comments);
    }
    }     
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == TRUE)
    {
        ASSIGN(KEYWORD_STR, "_TITLE");
    }
mandatory:
    SCALAR(Rho)                                 {DIMENSION="density";} 
    if(optionE == FALSE)
    {
        SCALAR(E)                               {DIMENSION="pressure";}
    }
    if(optionE == TRUE)
    {
        DATA(LSD_LCE);
    }
    FLAG(optionNu);
    if(optionNu == FALSE)
    {
        SCALAR(Nu)                              {DIMENSION="DIMENSIONLESS";}
    }
    if(optionNu == TRUE)
    {
        DATA(LSD_LCNu);
    }
optional:
    SCALAR(LSD_TUNIT);
    RADIO(MAT248_TRIP)
    {
       ADD(0, "0: Activate");
       ADD(1, "1: Deactivate");
    }
    RADIO(LSD_PHASE)
    {
       ADD(0, "0: all phases active");
       ADD(1, "1: pearlite and bainite active");
       ADD(2, "2: bainite active");
       ADD(3, "3: ferrite and pearlite active");
       ADD(4, "4: ferrite and bainite active");
       ADD(5, "5: no active middle phases");
    }
    FLAG(optionHEAT);
    if(optionHEAT == FALSE)
    {
        RADIO(LSD_HEAT)
        {
            ADD(0, "0: Heating is not activated. No transformation in Autstenite is possible");
            ADD(1, "1: Heating is not activated. Only transformation in Autstenite is possible");
            ADD(2, "2: Automatic switching between cooling and heating");
        }     
    }
    else if(optionHEAT == TRUE)
    {
        DATA(LSD_LCHEAT);
    }
    DATA(LSD_LCY1);
    DATA(LSD_LCY2);
    DATA(LSD_LCY3);
    DATA(LSD_LCY4);
    DATA(LSD_LCY5);
    SCALAR(MAT248_C_F);
    SCALAR(MAT248_C_P);
    SCALAR(MAT248_C_B);
    SCALAR(LSD_C);
    SCALAR(LSD_CO);
    SCALAR(LSD_MO);
    SCALAR(LSD_CR);
    SCALAR(LSD_NI);
    SCALAR(LSD_MN);
    SCALAR(LSD_SI);
    SCALAR(LSD_V);
    SCALAR(LSD_W);
    SCALAR(LSD_CU);
    SCALAR(LSD_P);
    SCALAR(LSD_AL);
    SCALAR(LSD_AS);
    SCALAR(LSD_TI);
    SCALAR(LSD_BO);
    DATA(MAT248_TABRHO);
    SCALAR(LSD_TREF);
    FLAG(optionLAT1);
    if(optionLAT1 == FALSE)
    {
        SCALAR(LSD_LAT1)                        {DIMENSION="pressure";}
    }
    if(optionLAT1 == TRUE)
    {
        DATA(LSD_LCLAT1);
    }
    FLAG(optionLAT5);
    if(optionLAT5 == FALSE)
    {
        SCALAR(LSD_LAT5)                        {DIMENSION="pressure";}
    }
    if(optionLAT5 == TRUE)
    {
        DATA(LSD_LCLAT5);
    }
    FLAG(optionTABTH);
    if(optionTABTH == FALSE || optionTABTH == TRUE)
    {
        DATA(LSD_TABTH);
    }
    SCALAR(LSD_QR2)                            {DIMENSION="k";}
    SCALAR(LSD_QR3)                            {DIMENSION="k";}
    SCALAR(LSD_QR4)                            {DIMENSION="k";}
    SCALAR(LSD_ALPHA);
    SCALAR(LSD_GRAIN);
    SCALAR(LSD_TOFFE);
    SCALAR(LSD_TOFPE);
    SCALAR(LSD_TOFBA);
    SCALAR(LSD_PLMEM2);
    SCALAR(LSD_PLMEM3);
    SCALAR(LSD_PLMEM4);
    SCALAR(LSD_PLMEM5);
    FLAG(optionSTRC);
    if(optionSTRC == FALSE)
    {
        SCALAR(LSD_STRC)                        {DIMENSION="DIMENSIONLESS";}
    }
    else if(optionSTRC == TRUE)
    {
        DATA(LSD_LCSTRC);
    }
    FLAG(optionSTRP);
    if(optionSTRP == FALSE)
    {
        SCALAR(LSD_STRP)                        {DIMENSION="DIMENSIONLESS";}
    }
    else if(optionSTRP == TRUE)
    {
        DATA(LSD_LCSTRP);
    }
    FLAG( MAT248_FS_CURVE);
    if(MAT248_FS_CURVE == FALSE)
    {
        SCALAR(LSD_FS)                        {DIMENSION="k";}
    }
    else if(MAT248_FS_CURVE == TRUE)
    {
        DATA(MAT248_FS2);
    }
    FLAG( MAT248_PS_CURVE);
    if(MAT248_PS_CURVE == FALSE)
    {
        SCALAR(LSD_PS)                        {DIMENSION="k";}
    }
    else if(MAT248_PS_CURVE == TRUE)
    {
        DATA(MAT248_PS2);
    }
    FLAG( MAT248_BS_CURVE);
    if(MAT248_BS_CURVE == FALSE)
    {
        SCALAR(LSD_BS)                        {DIMENSION="k";}
    }
    else if(MAT248_BS_CURVE == TRUE)
    {
        DATA(MAT248_BS2);
    }
    FLAG( MAT248_MS_CURVE);
    if(MAT248_MS_CURVE == FALSE)
    {
        SCALAR(LSD_MS)                        {DIMENSION="k";}
    }
    else if(MAT248_MS_CURVE == TRUE)
    {
        DATA(MAT248_MS2);
    }
    DATA(MAT248_MSIG);
    DATA(LSD_LCEPS23);
    DATA(LSD_LCEPS4);
    DATA(LSD_LCEPS5);
    DATA(LSD_LCH4);
    DATA(LSD_LCH5);
    SCALAR(LSD_DTCRIT);
    SCALAR(LSD_TSAMP)                           {DIMENSION="t";}
    RADIO(LSD_ISLC)
    {
       ADD(0, "0.0: All 16 parameters on Cards 10 and 11 are constant values");
       ADD(1, "1.0: PHI_F, CR_F, PHI_P, CR_P, PHI_B, and CR_B are load curves defining values as functions of cooling rate. The remaining 10 parameters on Cards 10 and 11 are constant values.");
       ADD(2, "2.0: All 16 parameters on Cards 10 and 11 are load curves defining values as functions of cooling rate");
    }
    RADIO(LSD_IEXTRA)
    {
        ADD(1, "1: Flag to read extra card 1");
        ADD(2, "2: Flag to read extra card 2");
    }
    if(LSD_ISLC==0)
    {
       SCALAR(LSD_ALPH_M);
       SCALAR(LSD_N_M);
       SCALAR(LSD_PHI_M);
       SCALAR(LSD_PSI_M);
       SCALAR(LSD_OMG_F);
       SCALAR(LSD_PHI_F);
       SCALAR(LSD_PSI_F);
       SCALAR(LSD_CR_F);
       SCALAR(LSD_OMG_P);
       SCALAR(LSD_PHI_P);
       SCALAR(LSD_PSI_P);
       SCALAR(LSD_CR_P);
       SCALAR(LSD_OMG_B);
       SCALAR(LSD_PHI_B);
       SCALAR(LSD_PSI_B);
       SCALAR(LSD_CR_B);
    }
    if(LSD_ISLC==1)
    {
       SCALAR(LSD_ALPH_M);
       SCALAR(LSD_N_M);
       SCALAR(LSD_PHI_M);
       SCALAR(LSD_PSI_M);
       SCALAR(LSD_OMG_F);
        DATA(LSD_PHI_F_curve);
       SCALAR(LSD_PSI_F);
        DATA(LSD_CR_F_curve);
       SCALAR(LSD_OMG_P);
        DATA(LSD_PHI_P_curve);
       SCALAR(LSD_PSI_P);
        DATA(LSD_CR_P_curve);
       SCALAR(LSD_OMG_B);
        DATA(LSD_PHI_B_curve);
       SCALAR(LSD_PSI_B);
        DATA(LSD_CR_B_curve);
    }
    if(LSD_ISLC==2)
    {
        DATA(LSD_ALPH_M_curve);
        DATA(LSD_N_M_curve);
        DATA(LSD_PHI_M_curve);
        DATA(LSD_PSI_M_curve);
        DATA(LSD_OMG_F_curve);
        DATA(LSD_PHI_F_curve);
        DATA(LSD_PSI_F_curve);
        DATA(LSD_CR_F_curve);
        DATA(LSD_OMG_P_curve);
        DATA(LSD_PHI_P_curve);
        DATA(LSD_PSI_P_curve);
        DATA(LSD_CR_P_curve);
        DATA(LSD_OMG_B_curve);
        DATA(LSD_PHI_B_curve);
        DATA(LSD_PSI_B_curve);
        DATA(LSD_CR_B_curve);
    }
    if(LSD_HEAT != 0)
    {
       SCALAR(LSD_AUST)                                 {DIMENSION="m";}
       SCALAR(LSD_FERR)                                 {DIMENSION="m";}
       SCALAR(LSD_PEAR)                                 {DIMENSION="m";}
       SCALAR(LSD_BAIN)                                 {DIMENSION="m";}
       SCALAR(LSD_MART)                                 {DIMENSION="m";}
       SCALAR(LSD_GRK);
       SCALAR(LSD_GRQR)                                 {DIMENSION="m";}
       SCALAR(LSD_TAU1);
       SCALAR(LSD_GRA);
       SCALAR(LSD_GRB);
       SCALAR(LSD_EXPA);
       SCALAR(LSD_EXPB);
       SCALAR(LSD_GRCC);
       SCALAR(LSD_GRCM);
       SCALAR(LSD_HEATN);
       SCALAR(LSD_TAU2);
    }
    if(LSD_IEXTRA==1)
    {
        DATA(LSD_FUNCA);
        DATA(LSD_FUNCB);
        DATA(LSD_FUNCM);
       SCALAR(LSD_TCVUP)                                {DIMENSION="k";}
       SCALAR(LSD_TCVLO)                                {DIMENSION="k";}
       SCALAR(LSD_CVCRIT);
       SCALAR(LSD_TCVSL)                                {DIMENSION="k";}
    }
    if(LSD_IEXTRA==2)
    {
       SCALAR(LSD_EPSP);
       SCALAR(LSD_EXPON);
    }
}

// File format
FORMAT(Keyword971_R8.0) 
{
    //
    COMMENT("$      MID       RHO         E        PR     TUNIT      TRIP     PHASE      HEAT");
    CARD("%10d%10lg%10lg%10lg%10lg%10d%10d%10d",_ID_,Rho,SCALAR_OR_FUNCTION(optionE,E,LSD_LCE),SCALAR_OR_FUNCTION(optionNu,Nu,LSD_LCNu),LSD_TUNIT,MAT248_TRIP,LSD_PHASE,SCALAR_OR_OBJECT(optionHEAT,LSD_HEAT,LSD_LCHEAT));
    //
    COMMENT("$     LCY1      LCY2      LCY3      LCY4      LCY5       C_F       C_P       C_B");
    CARD("%10d%10d%10d%10d%10d%10lg%10lg%10lg",LSD_LCY1,LSD_LCY2,LSD_LCY3,LSD_LCY4,LSD_LCY5,MAT248_C_F,MAT248_C_P,MAT248_C_B);
    //
    COMMENT("$        C        Co        Mo        Cr        Ni        Mn        Si         V");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_C,LSD_CO,LSD_MO,LSD_CR,LSD_NI,LSD_MN,LSD_SI,LSD_V);
    //
    COMMENT("$        W        Cu         P        Al        As        Ti         B");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_W,LSD_CU,LSD_P,LSD_AL,LSD_AS,LSD_TI,LSD_BO);
    //
    COMMENT("$                       TABRHO                TREF      LAT1      LAT5     TABTH");
    CARD("%10s%10s%10d%10s%10lg%10lg%10lg%10d",_BLANK_,_BLANK_,MAT248_TABRHO,_BLANK_,LSD_TREF,SCALAR_OR_FUNCTION(optionLAT1,LSD_LAT1,LSD_LCLAT1),SCALAR_OR_FUNCTION(optionLAT5,LSD_LAT5,LSD_LCLAT5),FLAGGED_OBJECT(LSD_TABTH,optionTABTH));
    //
    COMMENT("$      QR2       QR3       QR4     ALPHA     GRAIN     TOFFE     TOFPE     TOFBA");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_QR2,LSD_QR3,LSD_QR4,LSD_ALPHA,LSD_GRAIN,LSD_TOFFE,LSD_TOFPE,LSD_TOFBA);
    //
    COMMENT("$   PLMEM2    PLMEM3    PLMEM4    PLMEM5      STRC      STRP");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_PLMEM2,LSD_PLMEM3,LSD_PLMEM4,LSD_PLMEM5,SCALAR_OR_OBJECT(optionSTRC,LSD_STRC,LSD_LCSTRC),SCALAR_OR_OBJECT(optionSTRP,LSD_STRP,LSD_LCSTRP));   
    //
    COMMENT("$       FS        PS        BS        MS      MSIG   LCEPS23    LCEPS4    LCEPS5");
    CARD("%10lg%10lg%10lg%10lg%10d%10d%10d%10d",SCALAR_OR_OBJECT(MAT248_FS_CURVE,LSD_FS,MAT248_FS2),SCALAR_OR_OBJECT(MAT248_PS_CURVE,LSD_PS,MAT248_PS2),SCALAR_OR_OBJECT(MAT248_BS_CURVE,LSD_BS,MAT248_BS2),SCALAR_OR_OBJECT(MAT248_MS_CURVE,LSD_MS,MAT248_MS2),MAT248_MSIG,LSD_LCEPS23,LSD_LCEPS4,LSD_LCEPS5);
    //
    COMMENT("$     LCH4      LCH5    DTCRIT     TSAMP      ISLC    IEXTRA");
    CARD("%10d%10d%10lg%10lg%10d%10d",LSD_LCH4,LSD_LCH5,LSD_DTCRIT,LSD_TSAMP,LSD_ISLC,LSD_IEXTRA);
    //
    COMMENT("$   ALPH_M       N_M     PHI_M     PSI_M     OMG_F     PHI_F     PSI_F      CR_F");
    if(LSD_ISLC == 0)
    {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_ALPH_M,LSD_N_M,LSD_PHI_M,LSD_PSI_M,LSD_OMG_F,LSD_PHI_F,LSD_PSI_F,LSD_CR_F);
        COMMENT("$    OMG_P     PHI_P     PSI_P      CR_P     OMG_B     PHI_B     PSI_B      CR_B");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_OMG_P,LSD_PHI_P,LSD_PSI_P,LSD_CR_P,LSD_OMG_B,LSD_PHI_B,LSD_PSI_B,LSD_CR_B);
    }
    if(LSD_ISLC == 1)
    {
        CARD("%10lg%10lg%10lg%10lg%10lg%10d%10lg%10d",LSD_ALPH_M,LSD_N_M,LSD_PHI_M,LSD_PSI_M,LSD_OMG_F,LSD_PHI_F_curve,LSD_PSI_F,LSD_CR_F_curve);
        COMMENT("$    OMG_P     PHI_P     PSI_P      CR_P     OMG_B     PHI_B     PSI_B      CR_B");
        CARD("%10lg%10d%10lg%10d%10lg%10d%10lg%10d",LSD_OMG_P,LSD_PHI_P_curve,LSD_PSI_P,LSD_CR_P_curve,LSD_OMG_B,LSD_PHI_B_curve,LSD_PSI_B,LSD_CR_B_curve);
    }
    if(LSD_ISLC == 2)
    {
        CARD("%10d%10d%10d%10d%10d%10d%10d%10d",LSD_ALPH_M_curve,LSD_N_M_curve,LSD_PHI_M_curve,LSD_PSI_M_curve,LSD_OMG_F_curve,LSD_PHI_F_curve,LSD_PSI_F_curve,LSD_CR_F_curve);
        COMMENT("$    OMG_P     PHI_P     PSI_P      CR_P     OMG_B     PHI_B     PSI_B      CR_B");
        CARD("%10d%10d%10d%10d%10d%10d%10d%10d",LSD_OMG_P_curve,LSD_PHI_P_curve,LSD_PSI_P_curve,LSD_CR_P_curve,LSD_OMG_B_curve,LSD_PHI_B_curve,LSD_PSI_B_curve,LSD_CR_B_curve);
    }
    //
    if((optionHEAT == FALSE && (LSD_HEAT == 1.0 || LSD_HEAT == 2.0 )) || (optionHEAT == TRUE && LSD_LCHEAT != NONE))
    {
        COMMENT("$     AUST      FERR      PEAR      BAIN      MART       GRK      GRQR      TAU1");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_AUST,LSD_FERR,LSD_PEAR,LSD_BAIN,LSD_MART,LSD_GRK,LSD_GRQR,LSD_TAU1);
        //
        COMMENT("$      GRA       GRB      EXPA      EXPB      GRCC      GRCM     HEATN      TAU2");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_GRA,LSD_GRB,LSD_EXPA,LSD_EXPB,LSD_GRCC,LSD_GRCM,LSD_HEATN,LSD_TAU2);
        //
    }
    if(LSD_IEXTRA==1)
    {
        COMMENT("$    FUNCA     FUNCB     FUNCM     TCVUP     TCVLO    CVCRIT     TCVSL");
        CARD("%10d%10d%10d%10lg%10lg%10lg%10lg",LSD_FUNCA,LSD_FUNCB,LSD_FUNCM,LSD_TCVUP,LSD_TCVLO,LSD_CVCRIT,LSD_TCVSL);
    }
    else if(LSD_IEXTRA==2)
    {
        COMMENT("$     EPSP     EXPON");
        CARD("%10lg%10lg",LSD_EPSP,LSD_EXPON);
    }
}
