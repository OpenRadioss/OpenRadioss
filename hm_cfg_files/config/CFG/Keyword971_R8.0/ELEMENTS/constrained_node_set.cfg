//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// CONSTRAINED_NODE_SET
//

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    LSD_NSID                                = VALUE(SETS,   "Nodal set ID")                                { SUBTYPES = (/SETS/SET_NODE_IDPOOL) ; }
    LSD_DOF                                 = VALUE(INT,    "Applicable degrees-of-freedom");
    LSD_TF                                  = VALUE(FLOAT,  "Failure Time");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");

    IOFLAG                                  = VALUE(INT,    "IOFLAG");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    LSD_NSID                                = 745;
    LSD_DOF                                 = 3128;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;

    IOFLAG                                  = -1;
}

DEFAULTS(COMMON)
{
    LSD_TF                                  = 1.0;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*CONSTRAINED_NODE_SET");

    DATA(LSD_NSID, "NSID");

    RADIO(LSD_DOF, "DOF")
    {
        ADD(1, "x-direction of load action");
        ADD(2, "y-direction of load action");
        ADD(3, "z-direction of load action");
        ADD(4, "Follower force");
        ADD(5, "Moment about the x-axis");
        ADD(6, "Moment about the y-axis");
        ADD(7, "Moment about the z-axis");
        ADD(8, "Follower moment");
    }

    SCALAR(LSD_TF, "TF")                    { DIMENSION = "t"; }

}

// File format
FORMAT(Keyword971_R8.0)
{
    ASSIGN(IOFLAG, 0, EXPORT);
    ASSIGN(IOFLAG, 1, IMPORT);

    HEADER("*CONSTRAINED_NODE_SET");

    if(IOFLAG == 0)
    {
        COMMENT("$     NSID       DOF        TF");
        CARD("%10d%10d%10lg", LSD_NSID, LSD_DOF, LSD_TF);
    }
    else //IMPORT
    {
        COMMENT("$     NSID       DOF        TF");
        CARD("%10d%10d%10lg", LSD_NSID, LSD_DOF, LSD_TF);
    }
}
