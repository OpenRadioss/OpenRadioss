//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
ATTRIBUTES(COMMON) {

    //Attributes for HM usage 
    IO_FLAG                             = VALUE(INT, "Import/Export flag");
    _HMCOMMENTSFLAG                     = VALUE(INT, "Write HM Comments");
    _HWCOLOR                            = VALUE(INT, "Entity Color");
    _HAS_HEADER                         = VALUE(BOOL,"Has Header Card");
    TITLE                               = VALUE(STRING, "TITLE");
    solverkeyword                       = VALUE(STRING, "Solver Keyword");
    Type                                = VALUE(STRING, "");
    pathoptions                         = VALUE(INT,"PATH Options","OPTION");
    nfreqrange                          = SIZE("No of Frequency range","No_Frequency_Range");

    // Solver fields
    filename                            = VALUE(STRING,"Path and name of the file which contains modal information");
    f_begs                              = ARRAY[nfreqrange](FLOAT,"Beginning frequency for using this database");
    f_ends                              = ARRAY[nfreqrange](FLOAT,"Ending frequency for using this database");
    filenames                           = ARRAY[nfreqrange](STRING,"Path and name of the database which contains modal information");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    IO_FLAG                            = -1;
    _HMCOMMENTSFLAG                    = -1;
    _HWCOLOR                           = -1;
    _HAS_HEADER                        = -1;
    TITLE                              = -1;
    solverkeyword                      = -1;
    Type                               = -1;
}

DEFAULTS(COMMON)
{
    pathoptions                        = 0;
}

CHECK(COMMON)
{
    nfreqrange                         >= 0;
}

GUI(COMMON)
{
    RADIO(pathoptions)
    {
        ADD(0,"NONE");
        ADD(1,"PARTITION");
        
    } { PARAMETERIZED = FALSE; DISPLAY_STATUS=ALWAYS_ON;}
    if(pathoptions == 0)
    {
        ASSIGN(solverkeyword, *FREQUENCY_DOMAIN_PATH);
    }
    else if(pathoptions == 1)
    {
        ASSIGN(solverkeyword, *FREQUENCY_DOMAIN_PATH_PARTITION);
    }
    
    if(pathoptions == 0)
    {
        SCALAR(filename);
    }
    else if(pathoptions == 1)
    {
        SIZE(nfreqrange);
        ARRAY(nfreqrange, "")
        {
            SCALAR(f_begs);
            SCALAR(f_ends);
            SCALAR(filenames);
        }
    }
}

// File format
FORMAT(Keyword971_R8.0) {

    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 0, EXPORT);
    
    if (IO_FLAG == 0)
    {
        if(pathoptions == 0)
        {
            HEADER("*FREQUENCY_DOMAIN_PATH");
        }
        else if(pathoptions == 1)
        {
            HEADER("*FREQUENCY_DOMAIN_PATH_PARTITION");
        }
    }
    
    if(IO_FLAG == 1)
    {
        HEADER("*FREQUENCY_DOMAIN_PATH%4s",Type);
        if(Type == "_PAR")
        {
            ASSIGN(pathoptions,1);
        }
        else
        {
            ASSIGN(pathoptions,0);
        }
    }
    
    if(pathoptions == 0)
    {
        COMMENT("$                                  FILENAME                                  ");
        CARD("%-80s",filename);
    }
    else if(pathoptions == 1)
    {
        if (IO_FLAG == 0)
        {
            COMMENT("$     FBEG      FEND                      FILENAME                      ");
            CARD_LIST(nfreqrange)
            {
                CARD("%10lg%10lg%-60s",f_begs,f_ends,filenames);
            }
        }
        else
        {
            FREE_CARD_LIST(nfreqrange)
            { 
                CARD("%10lg%10lg%-60s",f_begs,f_ends,filenames);
            }
        }
    }
}

// File format
FORMAT(Keyword971_R7.1) {

    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 0, EXPORT);
    
    if (IO_FLAG == 0)
    {
        if(pathoptions == 0)
        {
            HEADER("*FREQUENCY_DOMAIN_PATH");
        }
    }
    
    if(IO_FLAG == 1)
    {
        ASSIGN(pathoptions,0);
    }
    
    COMMENT("$                                  FILENAME                                  ");
    CARD("%-80s",filename);
   
}