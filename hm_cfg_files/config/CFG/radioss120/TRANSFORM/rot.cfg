//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Rotation transformation (/TRANSFORM/ROT) Setup File
// 

ATTRIBUTES(COMMON) {
  ORDER     = VALUE(INT,   "Order");
  GR_NODE   = VALUE(SETS, "Node group identifier") { SUBTYPES = (/SETS/GRNOD); }
  rotation_point1_x       = VALUE(FLOAT, "X coordinate of point 1");
  rotation_point1_y       = VALUE(FLOAT, "Y coordinate of point 1");
  rotation_point1_z       = VALUE(FLOAT, "Z coordinate of point 1");
  rotation_point2_x       = VALUE(FLOAT, "X coordinate of point 2");
  rotation_point2_y       = VALUE(FLOAT, "Y coordinate of point 2");
  rotation_point2_z       = VALUE(FLOAT, "Z coordinate of point 2");
  rotation_angle     = VALUE(FLOAT, "Rotation angle value (in degree's)");
  node1    = VALUE(NODE,  "Node identifier 1");
  node2    = VALUE(NODE,  "Node identifier 2");
  ACTIVE    = VALUE(INT,   "Status");
  SUBMODEL  = VALUE(SOLVERSUBMODEL,"Submodel to Move") ;
//
  GHOST_PARA = VALUE(INT,   "Ghost Status");
  IF_INIT_STORE  = VALUE(INT,   "Status store");
  VX_NODE_1 = VALUE(FLOAT, "X original location of Node1");
  VY_NODE_1 = VALUE(FLOAT, "Y original location of Node1");
  VZ_NODE_1 = VALUE(FLOAT, "Z original location of Node1");
  VX_NODE_2 = VALUE(FLOAT, "X original location of Node2");
  VY_NODE_2 = VALUE(FLOAT, "Y original location of Node2");
  VZ_NODE_2 = VALUE(FLOAT, "Z original location of Node2");
  TITLE = VALUE(STRING, "");
}

DEFAULTS(COMMON) {
  ACTIVE    = 1;
  ORDER     = -1;
}

DEFINITIONS(COMMON) {
  VALIDITY_FLAGS=(ACTIVE);
}

GUI(COMMON) {
 mandatory:
  graphical SCALAR(rotation_angle) { DIMENSION="a"; }
  SEPARATOR("Definition using coordinates");
  //graphical POINT(rotation_point1_x,rotation_point1_y,rotation_point1_z)      { TITLE=""; DIMENSION="l"; } 
  //graphical POINT(rotation_point2_x,rotation_point2_y,rotation_point2_z)      { TITLE=""; DIMENSION="l"; } 
  SCALAR(rotation_point1_x) { DIMENSION="l"; }
  SCALAR(rotation_point1_y) { DIMENSION="l"; }
  SCALAR(rotation_point1_z) { DIMENSION="l"; }
  SCALAR(rotation_point2_x) { DIMENSION="l"; }
  SCALAR(rotation_point2_y) { DIMENSION="l"; }
  SCALAR(rotation_point2_z) { DIMENSION="l"; }
  //
  SEPARATOR("Definition using nodes ");
  graphical DATA(node1);
  graphical DATA(node2);
  //
  if(GHOST_PARA==1)
  {
      //graphical VECTOR(VX_NODE_1,VY_NODE_1,VZ_NODE_1) { DIMENSION="l"; }
      //graphical VECTOR(VX_NODE_2,VY_NODE_2,VZ_NODE_2) { DIMENSION="l"; }
      SCALAR(VX_NODE_1) { DIMENSION="l"; }
      SCALAR(VY_NODE_1) { DIMENSION="l"; }
      SCALAR(VZ_NODE_1) { DIMENSION="l"; }
      SCALAR(VX_NODE_2) { DIMENSION="l"; }
      SCALAR(VY_NODE_2) { DIMENSION="l"; }
      SCALAR(VZ_NODE_2) { DIMENSION="l"; }
  }
  //
  SEPARATOR();	
  //
  graphical SUPPORT("Support") {
    //OBJECTS=(NODE,ELEMENTS,PART,SEGMENT);
    ADD(GR_NODE,"Node group");
  }

  DATA(SUBMODEL);
}

FORMAT(radioss100) {
  HEADER("/TRANSFORM/ROT/%d",_ID_);
  CARD("%-100s",TITLE);
  COMMENT("# grnod_ID           X_point_1           Y_point_1           Z_point_1  node_ID1  node_ID2    sub_ID");     
  CARD("%10d%20lg%20lg%20lg%10d%10d%10d",GR_NODE,rotation_point1_x,rotation_point1_y,rotation_point1_z,node1,node2,SUBMODEL);
  COMMENT("#                    X_point_2           Y_point_2           Z_point_2               Angle");
  CARD("          %20lg%20lg%20lg%20lg",rotation_point2_x,rotation_point2_y,rotation_point2_z,rotation_angle);
}

FORMAT(radioss90) {
  HEADER("/TRANSFORM/ROT/%d",_ID_);
  CARD("%-100s",TITLE);
  COMMENT("# grnod_ID           X_point_1           Y_point_1           Z_point_1  node_ID1  node_ID2");         
  CARD("%10d%20lg%20lg%20lg%10d%10d",GR_NODE,rotation_point1_x,rotation_point1_y,rotation_point1_z,node1,node2);
  COMMENT("#                    X_point_2           Y_point_2           Z_point_2               Angle");
  CARD("          %20lg%20lg%20lg%20lg",rotation_point2_x,rotation_point2_y,rotation_point2_z,rotation_angle);
}

