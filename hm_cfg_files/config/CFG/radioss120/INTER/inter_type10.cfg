//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /INTER/TYPE10
// 

ATTRIBUTES(COMMON)
{
// INPUT ATTRIBUTES
    secondaryentityids                        = VALUE(SETS, "Secondary node group identifier") { SUBTYPES = (/SETS/GRNOD) ; }
    mainentityids                             = VALUE(SETS, "Main surface identifier")         { SUBTYPES = (/SETS/SURF) ; }
    Type10_Multimp                            = VALUE(INT,"Max average number of impacted main segment per secondary node");
    NodDel10                                  = VALUE(INT,"Node and segment deletion flag");
    TYPE10_SCALE                              = VALUE(FLOAT,"Interface stiffness scale factor");
    GAP                                       = VALUE(FLOAT,"Gap for impact activation");
    TSTART                                    = VALUE(FLOAT,"Start time");
    TSTOP                                     = VALUE(FLOAT,"Time for temporary deactivation");
    Itied                                     = VALUE(INT,"Tied option flag");
    INACTIV                                   = VALUE(INT,"Deactivation of stiffness flag");
    STIFF_DC                                  = VALUE(FLOAT,"Critical damping coefficient on interface stiffness");
    SORT_FACT                                 = VALUE(FLOAT,"Sorting factor"); 

    empty_string                              = VALUE(STRING, "");

// HM INTERNAL
    KEYWORD_STR                               = VALUE(STRING,"Solver Keyword");
    NUM_COMMENTS                              = SIZE("NUM_COMMENTS");
    CommentEnumField                          = VALUE(INT,"User Comments");
    COMMENTS                                  = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    TITLE                                     = VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                               = 9000;
    COMMENTS                                  = 5109;
    CommentEnumField                          = 7951;
    NUM_COMMENTS                              = 5110;
    Type10_Multimp                            = 4032;
    NodDel10                                  = 4033;
    TYPE10_SCALE                              = 4034;
    GAP                                       = 5153;
    TSTART                                    = 11;
    TSTOP                                     = 12;
    Itied                                     = 5322;
    INACTIV                                   = 94;
    STIFF_DC                                  = 6;
    SORT_FACT                                 = 5321;

    empty_string                              = -1;
    TITLE                                     = -1;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    Type10_Multimp                            = 4;
    NodDel10                                  = 0;
    TYPE10_SCALE                              = 0.2;
    STIFF_DC                                  = 0.05;
    SORT_FACT                                 = 0.20;
   
    empty_string                              = "";
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }

    ASSIGN(KEYWORD_STR, "/INTER/TYPE10");

    DATA(secondaryentityids);
    DATA(mainentityids);
    SCALAR(Type10_Multimp)      { DIMENSION="DIMENSIONLESS"; }

    RADIO(NodDel10) {
      ADD(0,"0: (Default) No deletion");
      ADD(1,"1: When all the elements (4-node shells, 3-node shells, solids) associated to one segment are deleted, the segment is removed from the main side of the interface");
      ADD(2,"2: When a 4-node shell, a 3-node shell or a solid element is deleted, the corresponding segment is removed from the main side of the interface");
      ADD(-1,"-1: Same as =1, except non-connected nodes are not removed from the secondary side of the interface");
      ADD(-2,"-2: Same as =2, except non-connected nodes are not removed from the secondary side of the interface");
    }
    SCALAR(TYPE10_SCALE)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(GAP)                 { DIMENSION="l"; }
    SCALAR(TSTART)              { DIMENSION="t"; }
    SCALAR(TSTOP)               { DIMENSION="t"; }
    RADIO(Itied) {
      ADD(0,"0: Secondary node is tied during impact with possible rebound") ;
      ADD(1,"1: Secondary node is tied after impact without possible rebound");
    }
    RADIO(INACTIV) {
      ADD(0,"0: No action") ;
      ADD(1,"1: Deactivation of stiffness on nodes");
      ADD(2,"2: Deactivation of stiffness on elements");
      ADD(3,"3: Change node coordinates to avoid initial penetrations");
    }
    SCALAR(STIFF_DC)            { DIMENSION="DIMENSIONLESS"; }
    SCALAR(SORT_FACT)           { DIMENSION="DIMENSIONLESS"; }
}

// File format
FORMAT(radioss41) {
    HEADER("/INTER/TYPE10/%d/%-40s",_ID_,TITLE);

    COMMENT("#grnod_id surf_id");
    CARD("%8d%8d",secondaryentityids,mainentityids);

    COMMENT("#          STFAC                             GAP          Tstart           Tstop");
    CARD("%16lg%16s%16lg%16lg%16lg",TYPE10_SCALE,empty_string,GAP,TSTART,TSTOP);

    COMMENT("#                  ITIED  INACTI           VIS_S                          BUMULT");
    CARD("%16s%8d%8d%16lg%16s%16lg",empty_string,Itied,INACTIV,STIFF_DC,empty_string,SORT_FACT);
}

FORMAT(radioss42) {
    HEADER("/INTER/TYPE10/%d/%-40s",_ID_,TITLE);

    COMMENT("#grnod_id surf_id                         Multimp");
    CARD("%8d%8d%8s%8s%8s%8d",secondaryentityids,mainentityids,empty_string,empty_string,empty_string,Type10_Multimp);

    COMMENT("#          STFAC                             GAP          Tstart           Tstop");
    CARD("%16lg%16s%16lg%16lg%16lg",TYPE10_SCALE,empty_string,GAP,TSTART,TSTOP);

    COMMENT("#                  ITIED  INACTI           VIS_S                          BUMULT");
    CARD("%16s%8d%8d%16lg%16s%16lg",empty_string,Itied,INACTIV,STIFF_DC,empty_string,SORT_FACT);
}

FORMAT(radioss51) {
    HEADER("/INTER/TYPE10/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# grnod_id   surf_id                                 Multimp                Idel");
    CARD("%10d%10d%10s%10s%10s%10d%10s%10d",secondaryentityids,mainentityids,empty_string,empty_string,empty_string,Type10_Multimp,empty_string,NodDel10);

    COMMENT("#              STFAC                                     GAP              Tstart               Tstop");
    CARD("%20lg%20s%20lg%20lg%20lg",TYPE10_SCALE,empty_string,GAP,TSTART,TSTOP);

    COMMENT("#                        ITIED    INACTI               VIS_S                                  BUMULT");
    CARD("%20s%10d%10d%20lg%20s%20lg",empty_string,Itied,INACTIV,STIFF_DC,empty_string,SORT_FACT);
}

FORMAT(radioss120) {
    HEADER("/INTER/TYPE10/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# grnod_id   surf_id                                                        Idel");
    CARD("%10d%10d%10s%10s%10s%10s%10s%10d",secondaryentityids,mainentityids,empty_string,empty_string,empty_string,empty_string,empty_string,NodDel10);

    COMMENT("#              STFAC                                     GAP              Tstart               Tstop");
    CARD("%20lg%20s%20lg%20lg%20lg",TYPE10_SCALE,empty_string,GAP,TSTART,TSTOP);

    COMMENT("#                        ITIED    INACTI               VIS_S                                  BUMULT");
    CARD("%20s%10d%10d%20lg%20s%20lg",empty_string,Itied,INACTIV,STIFF_DC,empty_string,SORT_FACT);
}
