//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /INTER/TYPE12
// 

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    secondaryentityids                        = VALUE(SETS, "Secondary surface identifier") { SUBTYPES = (/SETS/SURF) ; }
    mainentityids                             = VALUE(SETS, "Main surface identifier")    { SUBTYPES = (/SETS/SURF) ; }

    type12_interpol                           = VALUE(INT, "Interpolation flag");
    type12_tol                                = VALUE(FLOAT, "Tolerance for segment search");
    TSTART                                    = VALUE(FLOAT, "Start time for contact impact computation");
    TSTOP                                     = VALUE(FLOAT, "Time for temporary deactivation");
    type12_itied                              = VALUE(INT, "Option for surface connection");
    type12_bcopt                              = VALUE(INT, "Kinematic constraint deactivation flag");
    SKEW_CSID                                 = VALUE(SYSTEM, "Skew system identifier for polar interpolation");
    Node_C                                    = VALUE(NODE, "Reference node number for polar interpolation");

    type12_Xc                                 = VALUE(FLOAT, "X coordinate of center of rotation");
    type12_Yc                                 = VALUE(FLOAT, "Y coordinate of center of rotation");
    type12_Zc                                 = VALUE(FLOAT, "Z coordinate of center of rotation");

    type12_XN                                 = VALUE(FLOAT, "X component of the vector defining the rotation axis");
    type12_YN                                 = VALUE(FLOAT, "Y component of the vector defining the rotation axis");
    type12_ZN                                 = VALUE(FLOAT, "Z component of the vector defining the rotation axis");

    type12_theta                              = VALUE(FLOAT, "Angle of rotation");

    type12_XT                                 = VALUE(FLOAT, "X component of translation vector");
    type12_YT                                 = VALUE(FLOAT, "Y component of translation vector");
    type12_ZT                                 = VALUE(FLOAT, "Z component of translation vector");

    //HM INTERNAL
    KEYWORD_STR                               = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                              = SIZE("NUM_COMMENTS");
    CommentEnumField                          = VALUE(INT, "User Comments");
    COMMENTS                                  = ARRAY[NUM_COMMENTS](STRING, "Entity Comments");

    TITLE                                     = VALUE(STRING, "Title");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    type12_interpol                           = 217;
    type12_tol                                = 218;
    TSTART                                    = 11;
    TSTOP                                     = 12;
    type12_itied                              = 219;
    type12_bcopt                              = 220;
    SKEW_CSID                                 = 412;
    Node_C                                    = 4535;

    type12_Xc                                 = 221;
    type12_Yc                                 = 222;
    type12_Zc                                 = 231;

    type12_theta                              = 232;

    type12_XN                                 = 225;
    type12_YN                                 = 226;
    type12_ZN                                 = 227;

    type12_XT                                 = 228;
    type12_YT                                 = 229;
    type12_ZT                                 = 230;

    //HM INTERNAL
    KEYWORD_STR                               = 9000;
    COMMENTS                                  = 5109;
    CommentEnumField                          = 7951;
    NUM_COMMENTS                              = 5110;

    TITLE                                     = -1;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    //INPUT ATTRIBUTES

    type12_tol                                = 0.02;
}


GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }

    ASSIGN(KEYWORD_STR, "/INTER/TYPE12");

    DATA(secondaryentityids, "surf_IDs");
    DATA(mainentityids, "surf_IDm");

    RADIO(type12_interpol, "Interpol")
    {
      ADD(0,"0: Linear");
      ADD(1,"1: Polar");
    }

    SCALAR(type12_tol, "Tol")                 { DIMENSION="l"; }

    RADIO(type12_itied, "ITIED")
    {
      ADD(0,"0: Free");
      ADD(1,"1: Tied");
      ADD(2,"2: Periodic");
      ADD(3,"3: No convection");
    }

    RADIO(type12_bcopt, "Bcopt")
    {
      ADD(0,"0: Default");
      ADD(1,"1: All nodes considered");
      ADD(2,"2: Secondary nodes will be omitted");
      ADD(3,"3: Secondary nodes and fully fixed nodes will be omitted");
    }

    DATA(SKEW_CSID);
    DATA(Node_C);

    if(type12_itied==2)
    {
        SCALAR(type12_Xc)                     { DIMENSION="l"; }
        SCALAR(type12_Yc)                     { DIMENSION="l"; }
        SCALAR(type12_Zc)                     { DIMENSION="l"; }

        SCALAR(type12_XN)                     { DIMENSION="l"; }
        SCALAR(type12_YN)                     { DIMENSION="l"; }
        SCALAR(type12_ZN)                     { DIMENSION="l"; }

        SCALAR(type12_theta)                  { DIMENSION="a"; }

        SCALAR(type12_XT)                     { DIMENSION="a"; }
        SCALAR(type12_YT)                     { DIMENSION="l"; }
        SCALAR(type12_ZT)                     { DIMENSION="l"; }
    }
}

// File format
FORMAT(radioss44)
{
    HEADER("/INTER/TYPE12/%-d", _ID_);
    CARD("%-80s", TITLE);

    // Card1
    COMMENT("#    IS1     IS2        Interpol");
    CARD("%8d%8d%8d", secondaryentityids, mainentityids, type12_interpol);

    // Card 2
    COMMENT("#                                            TOL          Tstart           Tstop");
    CARD("%32s%16lg%16lg%16lg", _BLANK_, type12_tol, TSTART, TSTOP);

    // Card 3
    COMMENT("#  ITIED   BCOPT    SKEW  CENTER");
    CARD("%8d%8d%8d%8d", type12_itied, type12_bcopt, SKEW_CSID, Node_C);

    if(type12_itied==2)
    {
      // Card 4
      COMMENT("#             XC              YC              ZC");
      CARD("%16lg%16lg%16lg", type12_Xc, type12_Yc, type12_Zc);
  
      // Card 5
      COMMENT("#             XR              YR              ZR               q");
      CARD("%16lg%16lg%16lg%16lg", type12_XN, type12_YN, type12_ZN, type12_theta);
  
      // Card 6
      COMMENT("#             XT              YT              ZT");
      CARD("%16lg%16lg%16lg", type12_XT, type12_YT, type12_ZT);
    }
}

FORMAT(radioss51)
{
    HEADER("/INTER/TYPE12/%-d", _ID_);
    CARD("%-100s", TITLE);

    // Card1
    COMMENT("#      IS1       IS2            Interpol");
    CARD("%10d%10d%10s%10d", secondaryentityids, mainentityids, _BLANK_, type12_interpol);

    // Card 2
    COMMENT("#                                                        TOL              Tstart               Tstop");
    CARD("%40s%20lg%20lg%20lg", _BLANK_, type12_tol, TSTART, TSTOP);
   
    // Card 3
    COMMENT("#    ITIED     BCOPT      SKEW    CENTER");
    CARD("%10d%10d%10d%10d", type12_itied, type12_bcopt, SKEW_CSID, Node_C);

    if(type12_itied==2)
    {
       // Card 4
      COMMENT("#                 XC                  YC                  ZC");
      CARD("%20lg%20lg%20lg", type12_Xc, type12_Yc, type12_Zc);

      // Card 5
      COMMENT("#                 XR                  YR                  ZR                   q");
      CARD("%20lg%20lg%20lg%20lg", type12_XN, type12_YN, type12_ZN, type12_theta);

      // Card 6
      COMMENT("#                 XT                  YT                  ZT");
      CARD("%20lg%20lg%20lg", type12_XT, type12_YT, type12_ZT);
    }
}

FORMAT(radioss90)
{
    HEADER("/INTER/TYPE12/%-d", _ID_);
    CARD("%-100s", TITLE);

    // Card1
    COMMENT("# surf_IDs  surf_IDm            Interpol");
    CARD("%10d%10d%10s%10d", secondaryentityids, mainentityids, _BLANK_, type12_interpol);

    // Card 2
    COMMENT("#                                                        Tol              Tstart               Tstop");
    CARD("%40s%20lg%20lg%20lg", _BLANK_, type12_tol, TSTART, TSTOP);
   
    // Card 3
    COMMENT("#    ITIED     Bcopt   skew_ID   node_ID");
    CARD("%10d%10d%10d%10d", type12_itied, type12_bcopt, SKEW_CSID, Node_C);

    if(type12_itied==2)
    {
       // Card 4
      COMMENT("#                 XC                  YC                  ZC");
      CARD("%20lg%20lg%20lg", type12_Xc, type12_Yc, type12_Zc);

      // Card 5
      COMMENT("#                 XR                  YR                  ZR               THETA");
      CARD("%20lg%20lg%20lg%20lg", type12_XN, type12_YN, type12_ZN, type12_theta);

      // Card 6
      COMMENT("#                 XT                  YT                  ZT");
      CARD("%20lg%20lg%20lg", type12_XT, type12_YT, type12_ZT);
    }
}

FORMAT(radioss110)
{
    HEADER("/INTER/TYPE12/%-d", _ID_);
    CARD("%-100s", TITLE);

    // Card1
    COMMENT("# surf_IDs  surf_IDm            Interpol");
    CARD("%10d%10d%10s%10d", secondaryentityids, mainentityids, _BLANK_, type12_interpol);

    // Card 2
    COMMENT("#                                                        Tol              Tstart               Tstop");
    CARD("%40s%20lg%20lg%20lg", _BLANK_, type12_tol, TSTART, TSTOP);
   
    // Card 3
    COMMENT("#    ITIED     Bcopt   skew_ID   node_ID");
    CARD("%10d%10d%10d%10d", type12_itied, type12_bcopt, SKEW_CSID, Node_C);

    if(type12_itied==2)
    {
       // Card 4
      COMMENT("#                 XC                  YC                  ZC");
      CARD("%20lg%20lg%20lg", type12_Xc, type12_Yc, type12_Zc);

      // Card 5
      COMMENT("#                 XR                  YR                  ZR               THETA");
      CARD("%20lg%20lg%20lg%20lg", type12_XN, type12_YN, type12_ZN, type12_theta);

      // Card 6
      COMMENT("#                 XT                  YT                  ZT");
      CARD("%20lg%20lg%20lg", type12_XT, type12_YT, type12_ZT);
    }
}

FORMAT(radioss120)
{
    HEADER("/INTER/TYPE12/%-d", _ID_);
    CARD("%-100s", TITLE);

    // Card1
    COMMENT("# surf_IDs  surf_IDm            Interpol");
    CARD("%10d%10d%10s%10d", secondaryentityids, mainentityids, _BLANK_, type12_interpol);

    // Card 2
    COMMENT("#                                                        Tol");
    CARD("%40s%20lg", _BLANK_, type12_tol);
   
    // Card 3
    COMMENT("#    ITIED     Bcopt   skew_ID   node_ID");
    CARD("%10d%10d%10d%10d", type12_itied, type12_bcopt, SKEW_CSID, Node_C);

    if(type12_itied==2)
    {
       // Card 4
      COMMENT("#                 XC                  YC                  ZC");
      CARD("%20lg%20lg%20lg", type12_Xc, type12_Yc, type12_Zc);

      // Card 5
      COMMENT("#                 XR                  YR                  ZR               THETA");
      CARD("%20lg%20lg%20lg%20lg", type12_XN, type12_YN, type12_ZN, type12_theta);

      // Card 6
      COMMENT("#                 XT                  YT                  ZT");
      CARD("%20lg%20lg%20lg", type12_XT, type12_YT, type12_ZT);
    }
}
