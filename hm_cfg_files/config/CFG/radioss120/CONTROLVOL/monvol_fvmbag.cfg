//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /MONVOL/FVMBAG
//

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES

    entityiddisplayed                       = VALUE(SETS, "External surface identifier")  { SUBTYPES = (/SETS/SURF_IDPOOL); }

    // Card 1
    Scal_T                                  = VALUE(FLOAT, "Abscissa scale factor for time based functions");
    Scal_P                                  = VALUE(FLOAT, "Abscissa scale factor for pressure based functions");
    Scal_S                                  = VALUE(FLOAT, "Abscissa scale factor for area based functions");
    Scal_A                                  = VALUE(FLOAT, "Abscissa scale factor for angle based functions");
    Scal_D                                  = VALUE(FLOAT, "Abscissa scale factor for distance based functions");

    MU                                      = VALUE(FLOAT, "Volumetric viscosity");
    PEXT                                    = VALUE(FLOAT, "External pressure");
    T_Initial                               = VALUE(FLOAT, "Initial  temperature");
    Iequil                                  = VALUE(INT, "Initial thermodynamic equilibrium flag");
    I_ttf                                   = VALUE(INT, "Venting time shift flag. Active only when injection sensor is specified");

    GAMMA                                   = VALUE(FLOAT, "Ratio of specific heats at initial temperature");
    ABG_cpai                                = VALUE(FLOAT, "Cpa coefficient in the relation cpi(T)");
    ABG_cpbi                                = VALUE(FLOAT, "Cpb coefficient in the relation cpi(T)");
    ABG_cpci                                = VALUE(FLOAT, "Cpc coefficient in the relation cpi(T)");

    // Card 2: Number of injectors

    ABG_Njet                                = SIZE("Number of injectors");

    // Card 3: Define Njet injectors (four lines per injector)
    ABG_gamma                               = ARRAY[ABG_Njet](FLOAT, "Ratio of specific heats");
    ABG_cpa                                 = ARRAY[ABG_Njet](FLOAT, "Cpa coefficient in the relation cp(T)");
    ABG_cpb                                 = ARRAY[ABG_Njet](FLOAT, "Cpb coefficient in the relation cp(T)");
    ABG_cpc                                 = ARRAY[ABG_Njet](FLOAT, "Cpc coefficient in the relation cp(T)");

    ABG_Imass                               = ARRAY[ABG_Njet](FUNCT, "Mass of injected gas versus time identifier");
    ABG_Iflow                               = ARRAY[ABG_Njet](INT, "Mass versus time function input type flag");
    ABG_Smass                               = ARRAY[ABG_Njet](FLOAT, "Scale factor on mass function");
    ABG_Itemp                               = ARRAY[ABG_Njet](FUNCT, "Temperature of injected gas versus time identifier");
    ABG_Stemp                               = ARRAY[ABG_Njet](FLOAT, "Temperature scale factor");
    ABG_Isensor                             = ARRAY[ABG_Njet](SENSOR, "Sensor identifier to start injections");

    Isjet                                   = ARRAY[ABG_Njet](SETS, "Injector surface identifier (must be different for each injectors)")  { SUBTYPES = (/SETS/SURF_IDPOOL); }

    ABG_Iv                                  = ARRAY[ABG_Njet](FUNCT, "Injected gas velocity identifier");
    Fp1                                     = ARRAY[ABG_Njet](FLOAT, "Injected gas scale factor"); 

    // Card 4: Number of vent holes
    ABG_Nvent                               = SIZE("Number of vent holes");

    // Card 5: Define Nvent vent holes (four lines  per vent hole)
    SVENT_SETSURFID                         = ARRAY[ABG_Nvent](SETS, "Vent holes membrane surface (Real) or porous surface identifier")  { SUBTYPES = (/SETS/SURF_IDPOOL); }
    ABG_Avent                               = ARRAY[ABG_Nvent](FLOAT, "If surf_IDv ? 0: scale factor on surface, or If surf_IDv = 0: surface of vent holes");
    ABG_Bvent                               = ARRAY[ABG_Nvent](FLOAT, "If surf_IDv ? 0: scale factor on impacted surface, or If surf_IDv = 0: Bvent is reset to 0");
    Itvent                                  = ARRAY[ABG_Nvent](INT, "Venting Formulation");

    ABG_Tvent                               = ARRAY[ABG_Nvent](FLOAT, "Start time for venting");
    ABG_dPdef                               = ARRAY[ABG_Nvent](FLOAT, "Pressure difference to open vent hole membrane");
    ABG_dtPdef                              = ARRAY[ABG_Nvent](FLOAT, "Minimum duration pressure exceeds Pdef to open vent hole membrane");
    ABG_IvdP                                = ARRAY[ABG_Nvent](FUNCT, "Outflow velocity function identifier");
    ABG_FvdP                                = ARRAY[ABG_Nvent](FLOAT, "Scale factor on fct_IDV");
    I_dtPdef_arr                            = ARRAY[ABG_Nvent](INT, "Time delay flag, when DELTAPdef is reached");

    ABG_Iport                               = ARRAY[ABG_Nvent](FUNCT, "Porosity vs time function identifier");
    ABG_Iporp                               = ARRAY[ABG_Nvent](FUNCT, "Porosity vs pressure function identifier");
    ABG_IporA                               = ARRAY[ABG_Nvent](FUNCT, "Porosity vs area function identifier");
    Fport                                   = ARRAY[ABG_Nvent](FLOAT, "Scale factor for fct_IDt");
    Fporp                                   = ARRAY[ABG_Nvent](FLOAT, "Scale factor for fct_IDP");
    FporA                                   = ARRAY[ABG_Nvent](FLOAT, "Scale factor for fct_IDA");

    ABG_Iport1                              = ARRAY[ABG_Nvent](FUNCT, "Porosity vs time when contact function identifier");
    ABG_Iporp1                              = ARRAY[ABG_Nvent](FUNCT, "Porosity vs pressure when contact function identifier");
    ABG_IporA1                              = ARRAY[ABG_Nvent](FUNCT, "Porosity vs impacted surface function identifier");
    Fport1                                  = ARRAY[ABG_Nvent](FLOAT, "Scale factor for fct_IDt'");
    Fporp1                                  = ARRAY[ABG_Nvent](FLOAT, "Scale factor for fct_IDP'");
    FporA1                                  = ARRAY[ABG_Nvent](FLOAT, "Scale factor for fct_IDA'");

    // Card 6
    VX3                                     = VALUE(FLOAT, "X component of vector V3 (in global frame)");
    VY3                                     = VALUE(FLOAT, "Y component of vector V3 (in global frame)");
    VZ3                                     = VALUE(FLOAT, "Z component of vector V3 (in global frame)");

    VX1                                     = VALUE(FLOAT, "X component of vector V1 (in global frame)");
    VY1                                     = VALUE(FLOAT, "Y component of vector V1 (in global frame)");
    VZ1                                     = VALUE(FLOAT, "Z component of vector V1 (in global frame)");

    X0                                      = VALUE(FLOAT, "X coordinate of local origin O (in global frame)");
    Y0                                      = VALUE(FLOAT, "Y coordinate of local origin O (in global frame)");
    Z0                                      = VALUE(FLOAT, "Z coordinate of local origin O (in global frame)");

    L1                                      = VALUE(FLOAT, "Length L1");
    L2                                      = VALUE(FLOAT, "Length L2");
    L3                                      = VALUE(FLOAT, "Length L3");

    Nb1                                     = VALUE(INT, "Number of finite volumes in direction 1");
    Nb2                                     = VALUE(INT, "Number of finite volumes in direction 2");
    Nb3                                     = VALUE(INT, "Number of finite volumes in direction 3");
    GR_BRICK_SET                            = VALUE(SETS, "User-defined solid group identifier")  { SUBTYPES = (/SETS/GRBRIC) ; }
    SURF_ID1                                = VALUE(SETS, "Internal surfaces identifier")  { SUBTYPES = (/SETS/SURF_IDPOOL); }
    Iref                                    = VALUE(INT, "Flag for applying the automated FVM mesh on the reference geometry");

    // Card 7: Other FVMBAG parameters
    Igmerg                                  = VALUE(INT, "Global merging formulation flag");
    Cgmerg                                  = VALUE(FLOAT, "Factor for global merging"); 
    Cnmerg                                  = VALUE(FLOAT, "Factor for neighborhood merging");
    Ptole                                   = VALUE(FLOAT, "Tolerance for finite volume identification");

    qa                                      = VALUE(FLOAT, "Quadratic bulk viscosity");
    qb                                      = VALUE(FLOAT, "Linear bulk viscosity");
    h                                       = VALUE(FLOAT, "Minimum height for triangle permeability");

    ILvout                                  = VALUE(INT, "Output level: 0 or 1");
    NLayer                                  = VALUE(INT, "Estimated number of layers in airbag folding along direction V3");
    Nfacmax                                 = VALUE(INT, "Estimated maximum number of airbag segments concerned by a finite volume in the first automatic meshing step");
    Nppmax                                  = VALUE(INT, "Estimated maximum number of vertices of a polygon");
    Vflag                                   = VALUE(INT, "Write finite volumes in Radioss Starter Animation A000 File flag");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    CommentEnumField                        = VALUE(INT, "User Comments");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING, "Entity Comments");

    TITLE                                   = VALUE(STRING, "Monitored volume title");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    // Card 1
    Scal_T                                  = 4103;
    Scal_P                                  = 4104;
    Scal_S                                  = 4105;
    Scal_A                                  = 4106;
    Scal_D                                  = 4107;

    MU                                      = 8143;
    PEXT                                    = 8144;
    T_Initial                               = 4113;
    Iequil                                  = 5398;
    I_ttf                                   = 4759;

    GAMMA                                   = 5172;
    ABG_cpai                                = 908;
    ABG_cpbi                                = 909;
    ABG_cpci                                = 910;

    // Card 2: Number of injectors
    ABG_Njet                                = 969;

    // Card 3: Define Njet injectors (four lines per injector)
    ABG_gamma                               = 911;
    ABG_cpa                                 = 912;
    ABG_cpb                                 = 913;
    ABG_cpc                                 = 914;

    ABG_Imass                               = 915;
    ABG_Iflow                               = 916;
    ABG_Smass                               = 917;
    ABG_Itemp                               = 918;
    ABG_Stemp                               = 919;
    ABG_Isensor                             = 920;

    Isjet                                   = 4498;

    ABG_Iv                                  = 943;
    Fp1                                     = 4114;

    // Card 4: Number of vent holes
    ABG_Nvent                               = 928;

    // Card 5: Define Nvent vent holes (four lines  per vent hole)
    SVENT_SETSURFID                         = 4682;
    ABG_Avent                               = 930;
    ABG_Bvent                               = 931;
    Itvent                                  = 4449;

    ABG_Tvent                               = 932;
    ABG_dPdef                               = 933;
    ABG_dtPdef                              = 934;
    ABG_IvdP                                = 4117;
    ABG_FvdP                                = 4118;
    I_dtPdef_arr                            = 4760;

    ABG_Iport                               = 935;
    ABG_Iporp                               = 936;
    ABG_IporA                               = 937;
    Fport                                   = 4110;
    Fporp                                   = 4111;
    FporA                                   = 4112;

    ABG_Iport1                              = 938;
    ABG_Iporp1                              = 939;
    ABG_IporA1                              = 940;
    Fport1                                  = 4119;
    Fporp1                                  = 4120;
    FporA1                                  = 4121;

    // Card 6
    VX3                                     = 4502;
    VY3                                     = 4503;
    VZ3                                     = 4504;

    VX1                                     = 4521;
    VY1                                     = 4522;
    VZ1                                     = 4523;

    X0                                      = 4524;
    Y0                                      = 4185;
    Z0                                      = 4186;
    L1                                      = 4506;
    L2                                      = 4507;
    L3                                      = 4508;

    Nb1                                     = 4509;
    Nb2                                     = 4510;
    Nb3                                     = 4511;
    GR_BRICK_SET                            = 949;
    SURF_ID1                                = 8169;
    Iref                                    = 4184;

    // Card 7 Other FVMBAG parameters
    Igmerg                                  = 4513;
    Cgmerg                                  = 4514;
    Cnmerg                                  = 4515;
    Ptole                                   = 4516;
    qa                                      = 8029;
    qb                                      = 8030;
    h                                       = 8031;

    ILvout                                  = 4517;
    NLayer                                  = 4518;
    Nfacmax                                 = 4519;
    Nppmax                                  = 4520;
    Vflag                                   = 5113;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    NUM_COMMENTS                            = 5110;

    TITLE                                   = -1;
}

DEFAULTS(COMMON)
{
    Scal_T                                  = 1.0;
    Scal_P                                  = 1.0;
    Scal_S                                  = 1.0;
    Scal_A                                  = 1.0;
    Scal_D                                  = 1.0;
    T_Initial                               = 295.0;

    ABG_Smass                               = 1.0;
    ABG_Stemp                               = 1.0;
    Fp1                                     = 1.0;

    Itvent                                  = 2;
    ABG_Tvent                               = 0.0;
    ABG_FvdP                                = 1.0;

    Fport                                   = 1.0;
    Fporp                                   = 1.0;
    FporA                                   = 1.0;

    Fport1                                  = 1.0;
    Fporp1                                  = 1.0;
    FporA1                                  = 1.0;

    Nb1                                     = 1;
    Nb2                                     = 1;
    Nb3                                     = 1;
    Iref                                    = 0;

    Igmerg                                  = 1;
    Cgmerg                                  = 0.02;
    Ptole                                   = 10e-5;
    qa                                      = 0.0;
    qb                                      = 0.0;

    ILvout                                  = 0;
    NLayer                                  = 10;
    Nfacmax                                 = 20;
    Nppmax                                  = 20;
}

GUI(COMMON)
{

    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }

    ASSIGN(KEYWORD_STR, "/MONVOL/FVMBAG");

    // Card 1
    DATA(entityiddisplayed , "surf_IDex");

    SCALAR(Scal_T, "Ascalet")               { DIMENSION = "t"; }
    SCALAR(Scal_P, "AscaleP")               { DIMENSION = "pressure"; }
    SCALAR(Scal_S, "AscaleS")               { DIMENSION = "area"; }
    SCALAR(Scal_A, "AscaleA")               { DIMENSION = "a"; }
    SCALAR(Scal_D, "AscaleD")               { DIMENSION = "l"; }

    SCALAR(PEXT, "Pext")                    { DIMENSION = "pressure"; }
    SCALAR(T_Initial, "T0")                 { DIMENSION = "k"; }

    RADIO(Iequil, "Iequi")
    {
      ADD(0,"0: The mass of gas initially filling the airbag is determined with respect to the volume at time zero");
      ADD(1,"1: The mass of gas initially filling the airbag is determined with respect to the volume at beginning of jetting");
    }

    RADIO(I_ttf, "Ittf")
    {
      ADD(0, "0 or 1: Time dependent porosity curves are not shifted by injection sensor activation time. Tvent and Tstop are ignored");
      ADD(2, "2: Time dependent porosity curves are shifted by Tinj (Tinj defined as the time of the first injector to be activated by the sensor)");
      ADD(3, "3: Time dependent porosity curves are shifted by Tinj +Tvent");
    }

    SCALAR(GAMMA)                           { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(ABG_cpai)                        { DIMENSION = "thermal_massic_capacity"; }
    SCALAR(ABG_cpbi)                        { DIMENSION = "thermal_massic_capacity_on_temperature"; }
    SCALAR(ABG_cpci)                        { DIMENSION = "thermal_massic_capacity_on_square_of_temperature"; }

    // Card 2: Number of injectors
    SIZE(ABG_Njet, "Number of injectors");

    // Card 3: Define Njet injectors (four lines per injector)
    ARRAY(ABG_Njet, "Injectors")
    {
      SCALAR(ABG_gamma, "GAMMA")            { DIMENSION = "DIMENSIONLESS"; }
      SCALAR(ABG_cpa, "cpa")                { DIMENSION = "thermal_massic_capacity"; }
      SCALAR(ABG_cpb, "cpb")                { DIMENSION = "thermal_massic_capacity_on_temperature"; }
      SCALAR(ABG_cpc, "cpc")                { DIMENSION = "thermal_massic_capacity_on_square_of_temperature"; }

      DATA(ABG_Imass, "fct_IDmas");

      RADIO(ABG_Iflow, "Iflow")
      {
         ADD(0,"0: Mass is input");
         ADD(1,"1: Mass flow is input");
      }
    
      SCALAR(ABG_Smass, "Fscalemas")
      { 
         if(ABG_Iflow==0)                   { TITLE = "Mass of injected gas"  ; DIMENSION = "m"; }
         else if (ABG_Iflow==1)             { TITLE = "Mass flow of injected gas"  ; DIMENSION = "massFlux"; }
      }

      DATA(ABG_Itemp, "fct_IDT");
      SCALAR(ABG_Stemp, "FscaleT")          { DIMENSION = "DIMENSIONLESS"; }
      DATA(ABG_Isensor, "sens_ID");
      DATA(Isjet, "Isjet");
      DATA(ABG_Iv, "fct_IDvel");
      SCALAR(Fp1, "Fscalevel")              { DIMENSION = "DIMENSIONLESS"; }
    }

    // Card 4: Number of vent holes
    SIZE(ABG_Nvent, "Number of vent holes");

    // Card 5: Define Nvent vent holes (four lines per vent hole)
    ARRAY(ABG_Nvent, "Vent holes")
    {
        DATA(SVENT_SETSURFID, "surf_IDv");
        SCALAR(ABG_Avent, "Avent")
        {
            if(SVENT_SETSURFID!=NONE)       { TITLE = "scale factor on surface" ; DIMENSION = "DIMENSIONLESS"; }
            else                            { TITLE = "Surface of vent holes" ; DIMENSION = "area"; }
        }

        SCALAR(ABG_Bvent, "Bvent")
        {
            if(SVENT_SETSURFID!=NONE)       { TITLE = "scale factor on impacted surface" ; DIMENSION = "DIMENSIONLESS"; }
            else                            { TITLE = "Bvent is reset to 0" ; DIMENSION = "area"; }
        }
        
        RADIO(Itvent, "Itvent")
        {
          ADD(1, "1: Venting velocity is equal to the component of the local fluid velocity normal to vent hole surface. Local density and energy are used to compute outgoing mass and energy through the hole");
          ADD(2, "2: (Default) Venting velocity is computed from Bernoulli equation using local pressure in the airbag. Local density and energy are used to compute outgoing mass and energy");
          ADD(3, "3: Venting velocity is computed from Chemkin equation");
        }

        SCALAR(ABG_Tvent, "Tvent")          { DIMENSION = "t"; }
        SCALAR(ABG_dPdef, "dPdef")          { DIMENSION = "pressure"; }
        SCALAR(ABG_dtPdef, "dtPdef")        { DIMENSION = "t"; }
        DATA(ABG_IvdP, "fct_IDV");
        SCALAR(ABG_FvdP, "FscaleV")         { DIMENSION = "velocity"; }
        RADIO(I_dtPdef_arr, "IdtPdef")
        {
            ADD(0, "0: Pressure should be over dPdef during a dtPdef cumulative time to activate venting");
            ADD(1, "1: Venting is activated dtPdef after dPdef is reached");
        }

        DATA(ABG_Iport, "fct_IDt");
        DATA(ABG_Iporp, "fct_IDP");
        DATA(ABG_IporA, "fct_IDA");
        SCALAR(Fport, "Fscalet")            { DIMENSION = "DIMENSIONLESS"; }
        SCALAR(Fporp, "FscaleP")            { DIMENSION = "DIMENSIONLESS"; }
        SCALAR(FporA, "FscaleA")            { DIMENSION = "DIMENSIONLESS"; }

        DATA(ABG_Iport1, "fct_IDt'");
        DATA(ABG_Iporp1, "fct_IDP'");
        DATA(ABG_IporA1, "fct_IDA'");
        SCALAR(Fport1, "Fscalet'")          { DIMENSION = "DIMENSIONLESS"; }
        SCALAR(Fporp1, "FscaleP'")          { DIMENSION = "DIMENSIONLESS"; }
        SCALAR(FporA1, "FscaleA'")          { DIMENSION = "DIMENSIONLESS"; }
    }

    // Card 6
    SCALAR(VX3, "Vx3")                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(VY3, "Vy3")                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(VZ3, "Vz3")                      { DIMENSION = "DIMENSIONLESS"; }

    SCALAR(VX1, "Vx1")                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(VY1, "Vy1")                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(VZ1, "Vz1")                      { DIMENSION = "DIMENSIONLESS"; }

    SCALAR(X0, "X0")                        { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(Y0, "Y0")                        { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(Z0, "Z0")                        { DIMENSION = "DIMENSIONLESS"; }
        
    SCALAR(L1, "L1")                        { DIMENSION = "l"; }
    SCALAR(L2, "L2")                        { DIMENSION = "l"; }
    SCALAR(L3, "L3")                        { DIMENSION = "l"; }

    SCALAR(Nb1, "Nb1")                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(Nb2, "Nb2")                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(Nb3, "Nb3")                      { DIMENSION = "DIMENSIONLESS"; }

    DATA(GR_BRICK_SET, "grbric_ID");
    DATA(SURF_ID1, "surf_IDin");

    RADIO(Iref, "Iref")
    {
      ADD(0,"0 : (Default) No");
      ADD(1,"1 : Yes");
    }

    // Card 7: Other FVMBAG parameters
    SCALAR(Igmerg, "Igmerg")                { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(Cgmerg, "Cgmerg")                { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(Cnmerg, "Cnmerg")                { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(Ptole, "Ptole")                  { DIMENSION = "DIMENSIONLESS"; }

    SCALAR(qa, "qa")                        { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(qb, "qb")                        { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(h, "Hmin")                       { DIMENSION = "l"; }

    SCALAR(ILvout, "Ilvout")                { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(NLayer, "Nlayer")                { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(Nfacmax, "Nfacmax")              { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(Nppmax, "Nppmax")                { DIMENSION = "DIMENSIONLESS"; }
    RADIO(Vflag, "Ifvani")
    {
      ADD(0,"0 : No");
      ADD(1,"1 : Yes");
    }
}

// File format
FORMAT(radioss90)
{
    HEADER("/MONVOL/FVMBAG/%-d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("#surf_IDext");
    CARD("%10d", entityiddisplayed);

    COMMENT("#            AscaleT             AscaleP             AscaleS             AscaleA             AscaleD");
    CARD("%20lg%20lg%20lg%20lg%20lg", Scal_T, Scal_P, Scal_S, Scal_A, Scal_D);

    COMMENT("#                                     Mu                Pext                  T0     Iequi");
    CARD("%20s%20lg%20lg%20lg%10lg", _BLANK_, MU, PEXT, T_Initial, Iequil);

    COMMENT("#             Gammai                cpai");
    CARD("%20lg%20lg", GAMMA, ABG_cpai);

    COMMENT("#     Njet");
    CARD("%10d", ABG_Njet);

    CARD_LIST(ABG_Njet)
    {
        COMMENT("#              Gamma                 cpa");
        CARD("%20lg%20lg", ABG_gamma, ABG_cpa);

        COMMENT("#funct_IDm     Iflow          Fscalemass funct_IDT             FscaleT sensor_ID");
        CARD("%10d%10d%20lg%10d%20lg%10d", ABG_Imass, ABG_Iflow, ABG_Smass, ABG_Itemp, ABG_Stemp, ABG_Isensor);

        COMMENT("#     Ijet");
        CARD("%10d", Isjet);

        COMMENT("#funct_IDv                     Fscalevel");
        CARD("%10d%10s%20lg", ABG_Iv, _BLANK_, Fp1);
    }
  
    COMMENT("#    Nvent");
    CARD("%10d", ABG_Nvent);

    CARD_LIST(ABG_Nvent)
    {
      COMMENT("# surf_IDv               Avent               Bvent                        Itvent");
      CARD("%10d%20lg%20lg%20s%10d", SVENT_SETSURFID, ABG_Avent, ABG_Bvent, _BLANK_, Itvent);

      COMMENT("#              Tvent               dPdef              dtPdef funct_IDV             FscaleV");
      CARD("%20lg%20lg%20lg%10d%20lg", ABG_Tvent, ABG_dPdef, ABG_dtPdef, ABG_IvdP, ABG_FvdP);

      COMMENT("#funct_IDpTfunct_IDpPfunct_IDpA                   FscaleporT          FscaleporP          FscaleporA");
      CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport, ABG_Iporp, ABG_IporA, _BLANK_,Fport, Fporp, FporA);
      //
      COMMENT("#funct_IDT'funct_IDP'funct_IDA'                      FscaleT'            scaleP'            FscaleA'");
      CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport1, ABG_Iporp1, ABG_IporA1, _BLANK_, Fport1, Fporp1, FporA1);
    }

    COMMENT("#                Vx3                 Vy3                 Vz3");
    CARD("%20lg%20lg%20lg", VX3, VY3, VZ3);

    COMMENT("#                Vx1                 Vy1                 Vz1");
    CARD("%20lg%20lg%20lg", VX1, VY1, VZ1); 

    COMMENT("#                 X0                  Y0                  Z0");
    CARD("%20lg%20lg%20lg", X0, Y0, Z0); 

    COMMENT("#                 L1                  L2                  L3");
    CARD("%20lg%20lg%20lg", L1, L2, L3);

    COMMENT("#      Nb1       Nb2       Nb3 grbric_ID");
    CARD("%10d%10d%10d%10d", Nb1, Nb2, Nb3, GR_BRICK_SET);

    COMMENT("#   Igmerg                        Cgmerg              Cnmerg               Ptole");
    CARD("%10d%10s%20lg%20lg%20lg", Igmerg, _BLANK_, Cgmerg, Cnmerg, Ptole);

    COMMENT("#                 qa                  qb                Hmin");
    CARD("%20lg%20lg%20lg", qa, qb, h);

    COMMENT("#   Ilvout    Nlayer   Nfacmax    Nppmax");
    CARD("%10d%10d%10d%10d", ILvout, NLayer, Nfacmax, Nppmax);
}

FORMAT(radioss100)
{
    HEADER("/MONVOL/FVMBAG/%-d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("#surf_IDext");
    CARD("%10d", entityiddisplayed);

    COMMENT("#            AscaleT             AscaleP             AscaleS             AscaleA             AscaleD");
    CARD("%20lg%20lg%20lg%20lg%20lg", Scal_T, Scal_P, Scal_S, Scal_A, Scal_D);

    COMMENT("#                                                       Pext                  T0     Iequi      Ittf");
    CARD("%40s%20lg%20lg%10d%10d", _BLANK_, PEXT, T_Initial, Iequil, I_ttf);

    COMMENT("#             Gammai                cpai                cpbi                cpci");
    CARD("%20lg%20lg%20lg%20lg", GAMMA, ABG_cpai, ABG_cpbi, ABG_cpci);

    COMMENT("#     Njet");
    CARD("%10d", ABG_Njet);

    CARD_LIST(ABG_Njet)
    {
        COMMENT("#              Gamma                 cpa                 cpb                 cpc");
        CARD("%20lg%20lg%20lg%20lg", ABG_gamma, ABG_cpa, ABG_cpb, ABG_cpc);

        COMMENT("#fct_IDmas     Iflow           Fscalemas   fct_IDT             FscaleT   sens_ID");
        CARD("%10d%10d%20lg%10d%20lg%10d", ABG_Imass, ABG_Iflow, ABG_Smass, ABG_Itemp, ABG_Stemp, ABG_Isensor);

        COMMENT("#    Isjet");
        CARD("%10d", Isjet);

        COMMENT("#fct_IDvel           Fscalevel");
        CARD("%10d%10s%20lg", ABG_Iv, _BLANK_, Fp1);
    }
  
    COMMENT("#    Nvent");
    CARD("%10d", ABG_Nvent);

    CARD_LIST(ABG_Nvent)
    {
      COMMENT("# surf_IDv               Avent               Bvent                        Itvent");
      CARD("%10d%20lg%20lg%20s%10d", SVENT_SETSURFID, ABG_Avent, ABG_Bvent, _BLANK_, Itvent);

      COMMENT("#              Tvent               dPdef              dtPdef funct_IDV             FscaleV   IdtPdef");
      CARD("%20lg%20lg%20lg%10d%20lg%10d", ABG_Tvent, ABG_dPdef, ABG_dtPdef, ABG_IvdP, ABG_FvdP, I_dtPdef_arr);

      COMMENT("#funct_IDpTfunct_IDpPfunct_IDpA                   FscaleporT          FscaleporP          FscaleporA");
      CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport, ABG_Iporp, ABG_IporA, _BLANK_,Fport, Fporp, FporA);
      //
      COMMENT("#funct_IDT'funct_IDP'funct_IDA'                      FscaleT'            scaleP'            FscaleA'");
      CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport1, ABG_Iporp1, ABG_IporA1, _BLANK_, Fport1, Fporp1, FporA1);
    }

    COMMENT("#                Vx3                 Vy3                 Vz3");
    CARD("%20lg%20lg%20lg", VX3, VY3, VZ3);

    COMMENT("#                Vx1                 Vy1                 Vz1");
    CARD("%20lg%20lg%20lg", VX1, VY1, VZ1); 

    COMMENT("#                 X0                  Y0                  Z0");
    CARD("%20lg%20lg%20lg", X0, Y0, Z0); 

    COMMENT("#                 L1                  L2                  L3");
    CARD("%20lg%20lg%20lg", L1, L2, L3);

    COMMENT("#      Nb1       Nb2       Nb3 grbric_ID");
    CARD("%10d%10d%10d%10d", Nb1, Nb2, Nb3, GR_BRICK_SET);

    COMMENT("#   Igmerg                        Cgmerg              Cnmerg               Ptole");
    CARD("%10d%10s%20lg%20lg%20lg", Igmerg, _BLANK_, Cgmerg, Cnmerg, Ptole); 

    COMMENT("#                 qa                  qb                Hmin");
    CARD("%20lg%20lg%20lg", qa, qb, h);

    COMMENT("#   Ilvout    Nlayer   Nfacmax    Nppmax    Ifvani");
    CARD("%10d%10d%10d%10d%10d", ILvout, NLayer, Nfacmax, Nppmax, Vflag);
}

FORMAT(radioss110)
{
    HEADER("/MONVOL/FVMBAG/%-d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("#surf_IDex");
    CARD("%10d", entityiddisplayed);

    COMMENT("#            AscaleT             AscaleP             AscaleS             AscaleA             AscaleD");
    CARD("%20lg%20lg%20lg%20lg%20lg", Scal_T, Scal_P, Scal_S, Scal_A, Scal_D);

    COMMENT("#                                                       Pext                  T0     Iequi      Ittf");
    CARD("%40s%20lg%20lg%10d%10d", _BLANK_, PEXT, T_Initial, Iequil, I_ttf);

    COMMENT("#             Gammai                cpai                cpbi                cpci");
    CARD("%20lg%20lg%20lg%20lg", GAMMA, ABG_cpai, ABG_cpbi, ABG_cpci);

    COMMENT("#     Njet");
    CARD("%10d", ABG_Njet);

    CARD_LIST(ABG_Njet)
    {
        COMMENT("#               Gamma                 cpa                 cpb                 cpc");
        CARD("%20lg%20lg%20lg%20lg", ABG_gamma, ABG_cpa, ABG_cpb, ABG_cpc);

        COMMENT("#fct_IDmas     Iflow           Fscalemas   fct_IDT             FscaleT   sens_ID");
        CARD("%10d%10d%20lg%10d%20lg%10d", ABG_Imass, ABG_Iflow, ABG_Smass, ABG_Itemp, ABG_Stemp, ABG_Isensor);

        COMMENT("#    Isjet");
        CARD("%10d", Isjet);

        COMMENT("#fct_IDvel           Fscalevel");
        CARD("%10d%10s%20lg", ABG_Iv, _BLANK_, Fp1);
    }
  
    COMMENT("#    Nvent");
    CARD("%10d", ABG_Nvent);

    CARD_LIST(ABG_Nvent)
    {
      COMMENT("# surf_IDv               Avent               Bvent                        Itvent");
      CARD("%10d%20lg%20lg%20s%10d", SVENT_SETSURFID, ABG_Avent, ABG_Bvent, _BLANK_, Itvent);

      COMMENT("#              Tvent               dPdef              dtPdef   fct_IDV             FscaleV   IdtPdef");
      CARD("%20lg%20lg%20lg%10d%20lg%10d", ABG_Tvent, ABG_dPdef, ABG_dtPdef, ABG_IvdP, ABG_FvdP, I_dtPdef_arr);

      COMMENT("#  fct_IDT   fct_IDP   fct_IDA                       FscaleT             FscaleP             FscaleA");
      CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport, ABG_Iporp, ABG_IporA, _BLANK_,Fport, Fporp, FporA);
      //
      COMMENT("# fct_IDT'  fct_IDP'  fct_IDA'                      FscaleT'            FscaleP'            FscaleA'");
      CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport1, ABG_Iporp1, ABG_IporA1, _BLANK_, Fport1, Fporp1, FporA1);
    }

    COMMENT("#                Vx3                 Vy3                 Vz3");
    CARD("%20lg%20lg%20lg", VX3, VY3, VZ3);

    COMMENT("#                Vx1                 Vy1                 Vz1");
    CARD("%20lg%20lg%20lg", VX1, VY1, VZ1); 

    COMMENT("#                 X0                  Y0                  Z0");
    CARD("%20lg%20lg%20lg", X0, Y0, Z0); 

    COMMENT("#                 L1                  L2                  L3");
    CARD("%20lg%20lg%20lg", L1, L2, L3);

    COMMENT("#      Nb1       Nb2       Nb3  grbrc_ID                Iref");
    CARD("%10d%10d%10d%10d%10s%10d", Nb1, Nb2, Nb3, GR_BRICK_SET, _BLANK_, Iref);

    COMMENT("#   Igmerg                        Cgmerg              Cnmerg               Ptole");
    CARD("%10d%10s%20lg%20lg%20lg", Igmerg, _BLANK_, Cgmerg, Cnmerg, Ptole); 

    COMMENT("#                 qa                  qb                Hmin");
    CARD("%20lg%20lg%20lg", qa, qb, h);

    COMMENT("#   Ilvout    Nlayer   Nfacmax    Nppmax    Ifvani");
    CARD("%10d%10d%10d%10d%10d", ILvout, NLayer, Nfacmax, Nppmax, Vflag);
}

FORMAT(radioss120)
{
    HEADER("/MONVOL/FVMBAG/%-d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("#surf_IDex");
    CARD("%10d", entityiddisplayed);

    COMMENT("#            Ascalet             AscaleP             AscaleS             AscaleA             AscaleD");
    CARD("%20lg%20lg%20lg%20lg%20lg", Scal_T, Scal_P, Scal_S, Scal_A, Scal_D);

    COMMENT("#                                                       Pext                  T0     Iequi      Ittf");
    CARD("%40s%20lg%20lg%10d%10d", _BLANK_, PEXT, T_Initial, Iequil, I_ttf);

    COMMENT("#             Gammai                cpai                cpbi                cpci");
    CARD("%20lg%20lg%20lg%20lg", GAMMA, ABG_cpai, ABG_cpbi, ABG_cpci);

    COMMENT("#     Njet");
    CARD("%10d", ABG_Njet);

    CARD_LIST(ABG_Njet)
    {
        COMMENT("#              Gamma                 cpa                 cpb                 cpc");
        CARD("%20lg%20lg%20lg%20lg", ABG_gamma, ABG_cpa, ABG_cpb, ABG_cpc);

        COMMENT("#fct_IDmas     Iflow           Fscalemas   fct_IDT             FscaleT   sens_ID");
        CARD("%10d%10d%20lg%10d%20lg%10d", ABG_Imass, ABG_Iflow, ABG_Smass, ABG_Itemp, ABG_Stemp, ABG_Isensor);

        COMMENT("#    Isjet");
        CARD("%10d", Isjet);

        COMMENT("#fct_IDvel           Fscalevel");
        CARD("%10d%10s%20lg", ABG_Iv, _BLANK_, Fp1);
    }
  
    COMMENT("#    Nvent");
    CARD("%10d", ABG_Nvent);

    CARD_LIST(ABG_Nvent)
    {
      COMMENT("# surf_IDv               Avent               Bvent                        Itvent");
      CARD("%10d%20lg%20lg%20s%10d", SVENT_SETSURFID, ABG_Avent, ABG_Bvent, _BLANK_, Itvent);

      COMMENT("#              Tvent               dPdef              dtPdef   fct_IDV             FscaleV   IdtPdef");
      CARD("%20lg%20lg%20lg%10d%20lg%10d", ABG_Tvent, ABG_dPdef, ABG_dtPdef, ABG_IvdP, ABG_FvdP, I_dtPdef_arr);

      COMMENT("#  fct_IDt   fct_IDP   fct_IDA                       Fscalet             FscaleP             FscaleA");
      CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport, ABG_Iporp, ABG_IporA, _BLANK_,Fport, Fporp, FporA);
      //
      COMMENT("# fct_IDt'  fct_IDP'  fct_IDA'                      Fscalet'            FscaleP'            FscaleA'");
      CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport1, ABG_Iporp1, ABG_IporA1, _BLANK_, Fport1, Fporp1, FporA1);
    }

    COMMENT("#                Vx3                 Vy3                 Vz3");
    CARD("%20lg%20lg%20lg", VX3, VY3, VZ3);

    COMMENT("#                Vx1                 Vy1                 Vz1");
    CARD("%20lg%20lg%20lg", VX1, VY1, VZ1); 

    COMMENT("#                 X0                  Y0                  Z0");
    CARD("%20lg%20lg%20lg", X0, Y0, Z0); 

    COMMENT("#                 L1                  L2                  L3");
    CARD("%20lg%20lg%20lg", L1, L2, L3);

    COMMENT("#      Nb1       Nb2       Nb3  grbrc_ID surf_IDin      Iref");
    CARD("%10d%10d%10d%10d%10d%10d", Nb1, Nb2, Nb3, GR_BRICK_SET, SURF_ID1, Iref);

    COMMENT("#   Igmerg                        Cgmerg              Cnmerg               Ptole");
    CARD("%10d%10s%20lg%20lg%20lg", Igmerg, _BLANK_, Cgmerg, Cnmerg, Ptole); 

    COMMENT("#                 qa                  qb                Hmin");
    CARD("%20lg%20lg%20lg", qa, qb, h);

    COMMENT("#   Ilvout    Nlayer   Nfacmax    Nppmax    Ifvani");
    CARD("%10d%10d%10d%10d%10d", ILvout, NLayer, Nfacmax, Nppmax, Vflag);
}
