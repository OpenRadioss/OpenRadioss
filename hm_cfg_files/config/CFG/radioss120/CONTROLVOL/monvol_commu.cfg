//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- monvol_commu.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    entityiddisplayed                       = VALUE(SETS,                    "External surface identifier")  { SUBTYPES = (/SETS/SURF_IDPOOL); }

    Scal_T                                  = VALUE(FLOAT,                   "Abscissa scale factor for time based functions");
    Scal_P                                  = VALUE(FLOAT,                   "Abscissa scale factor for pressure based functions");
    Scal_S                                  = VALUE(FLOAT,                   "Abscissa scale factor for area based functions");
    Scal_A                                  = VALUE(FLOAT,                   "Abscissa scale factor for angle based functions");
    Scal_D                                  = VALUE(FLOAT,                   "Abscissa scale factor for distance based functions");

    MU                                      = VALUE(FLOAT,                   "Volumetric viscosity");
    PEXT                                    = VALUE(FLOAT,                   "External pressure");
    T_Initial                               = VALUE(FLOAT,                   "Initial temperature");
    Iequil                                  = VALUE(INT,                     "Initial thermodynamic equilibrium flag.");
    I_ttf                                   = VALUE(INT,                     "Venting time shift flag");

    GAMMA                                   = VALUE(FLOAT,                   "Ratio of specific heats at initial temperature");
    ABG_cpai                                = VALUE(FLOAT,                   "cpa coefficient in the relation cpi(T)");
    ABG_cpbi                                = VALUE(FLOAT,                   "cpb coefficient in the relation cpi(T)");
    ABG_cpci                                = VALUE(FLOAT,                   "cpc coefficient in the relation cpi(T)");

    //Number of injectors
    ABG_Njet                                = SIZE(                          "Number of injectors");

    //Njet injector
    ABG_gamma                               = ARRAY[ABG_Njet](FLOAT,         "Ratio of specific heats at initial temperature");
    ABG_cpa                                 = ARRAY[ABG_Njet](FLOAT,         "cpa coefficient in the relation cpi(T)");
    ABG_cpb                                 = ARRAY[ABG_Njet](FLOAT,         "cpb coefficient in the relation cpi(T)");
    ABG_cpc                                 = ARRAY[ABG_Njet](FLOAT,         "cpc coefficient in the relation cpi(T)");

    ABG_Imass                               = ARRAY[ABG_Njet](CURVE,         "Mass of injected gas vs time function identifier");
    ABG_Iflow                               = ARRAY[ABG_Njet](INT,           "Mass vs time function input type flag");
    ABG_Smass                               = ARRAY[ABG_Njet](FLOAT,         "Mass function scale factor");
    ABG_Itemp                               = ARRAY[ABG_Njet](CURVE,         "Temperature of injected gas vs time function identifier");
    ABG_Stemp                               = ARRAY[ABG_Njet](FLOAT,         "Temperature function scale factor");
    ABG_Isensor                             = ARRAY[ABG_Njet](SENSOR,        "Sensor identifier to start injections");

    ABG_Ijet                                = ARRAY[ABG_Njet](INT,           "Jetting flag");
    ABG_N1                                  = ARRAY[ABG_Njet](NODE,          "Node identifiers N1 for jet shape definition");
    ABG_N2                                  = ARRAY[ABG_Njet](NODE,          "Node identifiers N2 for jet shape definition");
    ABG_N3                                  = ARRAY[ABG_Njet](NODE,          "Node identifiers N3 for jet shape definition");

    ABG_IPt                                 = ARRAY[ABG_Njet](CURVE,         "Identifier of the function number defining DeltaPt");
    ABG_IPtheta                             = ARRAY[ABG_Njet](CURVE,         "Identifier of the function number defining DeltaP(Theta)");
    ABG_IPdel                               = ARRAY[ABG_Njet](CURVE,         "Identifier of the function number defining DeltaP(Gamma)");
    Fp1                                     = ARRAY[ABG_Njet](FLOAT,         "Scale factor for fct_IDPt");
    Fp2                                     = ARRAY[ABG_Njet](FLOAT,         "Scale factor for fct_IDP Theta");
    Fp3                                     = ARRAY[ABG_Njet](FLOAT,         "Scale factor for fct_IDP Gamma");

    //Number of vent holes
    ABG_Nvent                               = SIZE(                          "Number of vent holes");

    //Nvent vent holes membranes
    SVENT_SETSURFID                         = ARRAY[ABG_Nvent](SETS,         "Vent holes membrane surface identifier")  { SUBTYPES = (/SETS/SURF_IDPOOL); }
    ABG_Avent                               = ARRAY[ABG_Nvent](FLOAT,        "Scale factor on surface or surface of vent holes");
    ABG_Bvent                               = ARRAY[ABG_Nvent](FLOAT,        "Scale factor on impacted surface");
    Tstop_arr_X                             = ARRAY[ABG_Nvent](FLOAT,        "Stop time for venting");

    ABG_Tvent                               = ARRAY[ABG_Nvent](FLOAT,        "Start time for venting");
    ABG_dPdef                               = ARRAY[ABG_Nvent](FLOAT,        "DeltaPdef");
    ABG_dtPdef                              = ARRAY[ABG_Nvent](FLOAT,        "Minimum duration pressure exceeds Pdef to open vent hole membrane");
    ABG_IvdP                                = ARRAY[ABG_Nvent](CURVE,        "Outflow velocity function identifier");
    ABG_FvdP                                = ARRAY[ABG_Nvent](FLOAT,        "Scale factor on fct_IDV");
    I_dtPdef_arr                            = ARRAY[ABG_Nvent](INT,          "Time delay flag when DeltaPCdef is reached");

    ABG_Iport                               = ARRAY[ABG_Nvent](CURVE,        "Porosity vs time when contact function identifier");
    ABG_Iporp                               = ARRAY[ABG_Nvent](CURVE,        "Porosity vs pressure when contact function identifier");
    ABG_IporA                               = ARRAY[ABG_Nvent](CURVE,        "Porosity vs impacted surface function identifier");
    Fport                                   = ARRAY[ABG_Nvent](FLOAT,        "Scale factor for fct_IDt");
    Fporp                                   = ARRAY[ABG_Nvent](FLOAT,        "Scale factor for fct_IDP");
    FporA                                   = ARRAY[ABG_Nvent](FLOAT,        "Scale factor for fct_IDA");

    ABG_Iport1                              = ARRAY[ABG_Nvent](CURVE,        "Porosity vs time when contact function identifier");
    ABG_Iporp1                              = ARRAY[ABG_Nvent](CURVE,        "Porosity vs pressure when contact function identifier");
    ABG_IporA1                              = ARRAY[ABG_Nvent](CURVE,        "Porosity vs impacted surface function identifier");
    Fport1                                  = ARRAY[ABG_Nvent](FLOAT,        "Scale factor for fct_IDt'");
    Fporp1                                  = ARRAY[ABG_Nvent](FLOAT,        "Scale factor for fct_IDP'");
    FporA1                                  = ARRAY[ABG_Nvent](FLOAT,        "Scale factor for fct_IDA'");

    //Number of communicating airbags
    NBAG                                    = VALUE(INT,                     "Number of communicating airbags");

    //NBAG communicating airbags
    BAG_ID1                                 = VALUE(CONTROLVOL,              "Airbag identifier");
    SURF_ID1                                = VALUE(SETS,                    "Communicating surface identifier")  { SUBTYPES = (/SETS/SURF_IDPOOL); }
    DPDIFF1                                 = VALUE(FLOAT,                   "Pressure difference to open communication surface membrane");
    ACOM1                                   = VALUE(FLOAT,                   "Communication surface coefficient");
    TCOM1                                   = VALUE(FLOAT,                   "Start time for communication");
    dTPdefCommu1                            = VALUE(FLOAT,                   "Minimum duration pressure difference exceeds DeltaPCdef to open communication surface membrane");

    BAG_ID2                                 = VALUE(CONTROLVOL,              "Airbag identifier");
    SURF_ID2                                = VALUE(SETS,                    "Communicating surface identifier")  { SUBTYPES = (/SETS/SURF_IDPOOL); }
    DPDIFF2                                 = VALUE(FLOAT,                   "Pressure difference to open communication surface membrane");
    ACOM2                                   = VALUE(FLOAT,                   "Communication surface coefficient");
    TCOM2                                   = VALUE(FLOAT,                   "Start time for communication");
    dTPdefCommu2                            = VALUE(FLOAT,                   "Minimum duration pressure difference exceeds DeltaPCdef to open communication surface membrane");

    BAG_ID3                                 = VALUE(CONTROLVOL,              "Airbag identifier");
    SURF_ID3                                = VALUE(SETS,                    "Communicating surface identifier")  { SUBTYPES = (/SETS/SURF_IDPOOL); }
    DPDIFF3                                 = VALUE(FLOAT,                   "Pressure difference to open communication surface membrane");
    ACOM3                                   = VALUE(FLOAT,                   "Communication surface coefficient");
    TCOM3                                   = VALUE(FLOAT,                   "Start time for communication");
    dTPdefCommu3                            = VALUE(FLOAT,                   "Minimum duration pressure difference exceeds DeltaPCdef to open communication surface membrane");

    BAG_ID4                                 = VALUE(CONTROLVOL,              "Airbag identifier");
    SURF_ID4                                = VALUE(SETS,                    "Communicating surface identifier")  { SUBTYPES = (/SETS/SURF_IDPOOL); }
    DPDIFF4                                 = VALUE(FLOAT,                   "Pressure difference to open communication surface membrane");
    ACOM4                                   = VALUE(FLOAT,                   "Communication surface coefficient");
    TCOM4                                   = VALUE(FLOAT,                   "Start time for communication");
    dTPdefCommu4                            = VALUE(FLOAT,                   "Minimum duration pressure difference exceeds DeltaPCdef to open communication surface membrane");

    BAG_ID5                                 = VALUE(CONTROLVOL,              "Airbag identifier");
    SURF_ID5                                = VALUE(SETS,                    "Communicating surface identifier")  { SUBTYPES = (/SETS/SURF_IDPOOL); }
    DPDIFF5                                 = VALUE(FLOAT,                   "Pressure difference to open communication surface membrane");
    ACOM5                                   = VALUE(FLOAT,                   "Communication surface coefficient");
    TCOM5                                   = VALUE(FLOAT,                   "Start time for communication");
    dTPdefCommu5                            = VALUE(FLOAT,                   "Minimum duration pressure difference exceeds DeltaPCdef to open communication surface membrane");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING,                  "Solver Keyword");

    TITLE                                   = VALUE(STRING,                  "Monitored volume title");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    Scal_T                                  = 4103;
    Scal_P                                  = 4104;
    Scal_S                                  = 4105;
    Scal_A                                  = 4106;
    Scal_D                                  = 4107;

    MU                                      = 8143;
    PEXT                                    = 8144;
    T_Initial                               = 4113;
    Iequil                                  = 5398;
    I_ttf                                   = 4759;

    GAMMA                                   = 5172;
    ABG_cpai                                = 908;
    ABG_cpbi                                = 909;
    ABG_cpci                                = 910;

    //Number of injectors
    ABG_Njet                                = 969;

    //Njet injector
    ABG_gamma                               = 911;
    ABG_cpa                                 = 912;
    ABG_cpb                                 = 913;
    ABG_cpc                                 = 914;

    ABG_Imass                               = 915;
    ABG_Iflow                               = 916;
    ABG_Smass                               = 917;
    ABG_Itemp                               = 918;
    ABG_Stemp                               = 919;
    ABG_Isensor                             = 920;

    ABG_Ijet                                = 921;
    ABG_N1                                  = 922;
    ABG_N2                                  = 923;
    ABG_N3                                  = 924;

    ABG_IPt                                 = 925;
    ABG_IPtheta                             = 926;
    ABG_IPdel                               = 927;
    Fp1                                     = 4114;
    Fp2                                     = 4115;
    Fp3                                     = 4116;

    //Number of vent holes
    ABG_Nvent                               = 928;

    //Nvent vent holes membranes
    SVENT_SETSURFID                         = 4682;
    ABG_Avent                               = 930;
    ABG_Bvent                               = 931;
    Tstop_arr_X                             = 4636;

    ABG_Tvent                               = 932;
    ABG_dPdef                               = 933;
    ABG_dtPdef                              = 934;
    ABG_IvdP                                = 4117;
    ABG_FvdP                                = 4118;
    I_dtPdef_arr                            = 4760;

    ABG_Iport                               = 935;
    ABG_Iporp                               = 936;
    ABG_IporA                               = 937;
    Fport                                   = 4110;
    Fporp                                   = 4111;
    FporA                                   = 4112;

    ABG_Iport1                              = 938;
    ABG_Iporp1                              = 939;
    ABG_IporA1                              = 940;
    Fport1                                  = 4119;
    Fporp1                                  = 4120;
    FporA1                                  = 4121;

    //Number of communicating airbags
    NBAG                                    = 8164;

    //NBAG communicating airbags
    BAG_ID1                                 = 8168;
    SURF_ID1                                = 8169;
    DPDIFF1                                 = 8170;
    ACOM1                                   = 8171;
    TCOM1                                   = 8172;
    dTPdefCommu1                            = 944;

    BAG_ID2                                 = 8173;
    SURF_ID2                                = 8174;
    DPDIFF2                                 = 8175;
    ACOM2                                   = 8176;
    TCOM2                                   = 8177;
    dTPdefCommu2                            = 945;

    BAG_ID3                                 = 8178;
    SURF_ID3                                = 8179;
    DPDIFF3                                 = 8180;
    ACOM3                                   = 6170;
    TCOM3                                   = 6171;
    dTPdefCommu3                            = 946;

    BAG_ID4                                 = 6172;
    SURF_ID4                                = 6173;
    DPDIFF4                                 = 6174;
    ACOM4                                   = 6175;
    TCOM4                                   = 6176;
    dTPdefCommu4                            = 947;

    BAG_ID5                                 = 6177;
    SURF_ID5                                = 6178;
    DPDIFF5                                 = 6179;
    ACOM5                                   = 6180;
    TCOM5                                   = 8054;
    dTPdefCommu5                            = 948;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;

    TITLE                                   = -1;
}

DEFAULTS(COMMON)
{
    Scal_T                                  = 1.0;
    Scal_P                                  = 1.0;
    Scal_S                                  = 1.0;
    Scal_A                                  = 1.0;
    Scal_D                                  = 1.0;
    MU                                      = 0.01;
    T_Initial                               = 295.0;
    ABG_Avent                               = 1.0;
    ABG_Bvent                               = 0.0;
    ABG_Tvent                               = 0.0;
    Tstop_arr_X                             = 1E+30;
    Fport                                   = 1.0;
    Fport1                                  = 1.0;
    Fp1                                     = 1.0;
    Fp2                                     = 1.0;
    Fp3                                     = 1.0;
    Fporp                                   = 1.0;
    Fporp1                                  = 1.0;
    FporA                                   = 1.0;
    FporA1                                  = 1.0;
    ABG_Smass                               = 1.0;
    ABG_Stemp                               = 1.0;
    ABG_FvdP                                = 1.0;
    ABG_Njet                                = 0;
    ABG_Nvent                               = 0;
    ACOM1                                   = 1.0;
    ACOM2                                   = 1.0;
    ACOM3                                   = 1.0;
    ACOM4                                   = 1.0;
    ACOM5                                   = 1.0;
    MU                                      = 0.01;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/MONVOL/COMMU/");
    DATA(entityiddisplayed, "surf_IDex");
    SCALAR(Scal_T,   "Ascalet")                   { DIMENSION = "t" ; }
    SCALAR(Scal_P,   "AscaleP")                   { DIMENSION = "pressure" ; }
    SCALAR(Scal_S,   "AscaleS")                   { DIMENSION = "area" ; }
    SCALAR(Scal_A,   "AscaleA")                   { DIMENSION = "a" ; }
    SCALAR(Scal_D,   "AscaleD")                   { DIMENSION = "l" ; }
    SCALAR(MU,       "MU")                        { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(PEXT,     "Pext")                      { DIMENSION = "pressure" ; }
    SCALAR(T_Initial,"T0")                        { DIMENSION = "k" ; }
    RADIO(Iequil,    "Iequi")
    {
        ADD(0, "0: The mass of gas initially filling the airbag is determined with respect to the volume at time zero");
        ADD(1, "1: The mass of gas initially filling the airbag is determined with respect to the volume at beginning of jetting");
    }
    RADIO(I_ttf, "Ittf")
    {
        ADD(0, "0: Time dependent porosity curves are not shifted by injection sensor activation time");
        ADD(1, "1: Time dependent porosity curves are not shifted by injection sensor activation time");
        ADD(2, "2: Time dependent porosity curves are shifted by Tinj (Tinj defined as the time of the first injector to be activated by the sensor)");
        ADD(3, "3: Time dependent porosity curves are shifted by Tinj +Tvent. Venting is stopped at Tinj + Tstop, when Tstop is specified");
    }
    SCALAR(GAMMA,    "Gammai")                    { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(ABG_cpai, "cpai")                      { DIMENSION = "thermal_massic_capacity" ; }
    SCALAR(ABG_cpbi, "cpbi")                      { DIMENSION = "thermal_massic_capacity_on_temperature" ; }
    SCALAR(ABG_cpci, "cpci")                      { DIMENSION = "thermal_massic_capacity_on_square_of_temperature" ; }
    SIZE(ABG_Njet,   "Njet");
    SEPARATOR("AirbagWithCommunication");
        ARRAY(ABG_Njet, "Njet")
        {
            SCALAR(ABG_gamma, "Gammai")               { DIMENSION = "DIMENSIONLESS" ; }
            SCALAR(ABG_cpa,   "cpai")                 { DIMENSION = "thermal_massic_capacity" ; }
            SCALAR(ABG_cpb,   "cpbi")                 { DIMENSION = "thermal_massic_capacity_on_temperature" ; }
            SCALAR(ABG_cpc,   "cpci")                 { DIMENSION = "thermal_massic_capacity_on_square_of_temperature" ; }
            DATA(ABG_Imass,   "fct_IDmas");
            RADIO(ABG_Iflow,  "Iflow")
            {
                ADD(0, "0: Mass is input");
                ADD(1, "1: Mass flow is input");
            }
            SCALAR(ABG_Smass, "Fscalemas")            { DIMENSION = "m" ; }
            DATA(ABG_Itemp, "fct_IDT");
            SCALAR(ABG_Stemp, "FscaleT")              { DIMENSION = "k" ; }
            DATA(ABG_Isensor, "sens_ID");

            RADIO(ABG_Ijet, "Ijet")
            {
                ADD(0, "0: No jetting");
                ADD(1, "1: Jetting");
            }
            DATA(ABG_N1,      "node_ID1");
            DATA(ABG_N2,      "node_ID2");
            DATA(ABG_N3,      "node_ID3");
            if(ABG_Ijet > 0)
            {
                DATA(ABG_IPt,     "fct_IDPt");
                DATA(ABG_IPtheta, "fct_IPtheta");
                DATA(ABG_IPdel,   "fct_IPDelta");
                SCALAR(Fp1,       "FscalePt")                  { DIMENSION = "pressure" ; }
                SCALAR(Fp2,       "FscaleTheta")               { DIMENSION = "pressure" ; }
                SCALAR(Fp3,       "FscaleDelta")               { DIMENSION = "pressure" ; }
            }
        }
    SEPARATOR();

    SIZE(ABG_Nvent,   "Nvent");
    SEPARATOR("AirbagWithCommunication");
        ARRAY(ABG_Nvent,  "Nvent")
        {
                DATA(SVENT_SETSURFID, "surf_IDv");
                SCALAR(ABG_Avent,     "Avent")             { if(SVENT_SETSURFID == NONE) { TITLE = "Surface of vent holes" ; DIMENSION = "area" ; } else if(SVENT_SETSURFID != NONE) { TITLE = "Scale factor on surface"           ; DIMENSION = "DIMENSIONLESS" ; }}
                SCALAR(ABG_Bvent,     "Bvent")             { if(SVENT_SETSURFID == NONE) { TITLE = "Is reset to 0"         ; DIMENSION = "area" ; } else if(SVENT_SETSURFID != NONE) { TITLE = " scale factor on impacted surface" ; DIMENSION = "DIMENSIONLESS" ; }}
                SCALAR(Tstop_arr_X,   "Tstop")             { DIMENSION = "t" ; }
                SCALAR(ABG_Tvent,     "Tvent")             { DIMENSION = "t" ; }
                SCALAR(ABG_dPdef,     "DeltaPdef")         { DIMENSION = "DIMENSIONLESS" ; }
                SCALAR(ABG_dtPdef,    "DeltatPdef")        { DIMENSION = "t" ; }
                DATA(ABG_IvdP,        "fct_IDV");
                SCALAR(ABG_FvdP,      "FscaleV")           { DIMENSION = "velocity" ; }
                RADIO(I_dtPdef_arr,   "IdtPdef")
                {
                    ADD(0, "0: Pressure should be over DeltaPCdef during a DeltatPCdef cumulative time to activate venting");
                    ADD(1, "1: Venting is activated DeltatPCdef after DeltaPCdef is reached");
                }
                DATA(ABG_Iport,  "fct_IDt");
                DATA(ABG_Iporp,  "fct_IDP");
                DATA(ABG_IporA,  "fct_IDA");
                SCALAR(Fport,    "Fscalet")                { DIMENSION = "DIMENSIONLESS" ; }
                SCALAR(Fporp,    "FscaleP")                { DIMENSION = "DIMENSIONLESS" ; }
                SCALAR(FporA,    "FscaleA")                { DIMENSION = "DIMENSIONLESS" ; }
                DATA(ABG_Iport1, "fct_IDt'");
                DATA(ABG_Iporp1, "fct_IDP'");
                DATA(ABG_IporA1, "fct_IDA'");
                SCALAR(Fport1,   "Fscalet'")               { DIMENSION = "DIMENSIONLESS" ; }
                SCALAR(Fporp1,   "FscaleP'")               { DIMENSION = "DIMENSIONLESS" ; }
                SCALAR(FporA1,   "FscaleA'")               { DIMENSION = "DIMENSIONLESS" ; }
        }
    SEPARATOR();
    SCALAR(NBAG, "Nbag")                           { DIMENSION = "DIMENSIONLESS" ; }
    if(NBAG >= 1)
    {
        DATA(BAG_ID1,        "bag_ID");
        DATA(SURF_ID1,       "surf_IDc");
        SCALAR(DPDIFF1,      "DeltaPCdelf")        { DIMENSION = "pressure" ; }
        SCALAR(ACOM1,        "Acom")               { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(TCOM1,        "Tcom")               { DIMENSION = "t" ; }
        SCALAR(dTPdefCommu1, "DeltatPCdef")        { DIMENSION = "t" ; }
    }
    else if(NBAG >= 2)
    {
        DATA(BAG_ID2,        "bag_ID");
        DATA(SURF_ID2,       "surf_IDc");
        SCALAR(DPDIFF2,      "DeltaPCdelf")        { DIMENSION = "pressure" ; }
        SCALAR(ACOM2,        "Acom")               { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(TCOM2,        "Tcom")               { DIMENSION = "t" ; }
        SCALAR(dTPdefCommu2, "DeltatPCdef")        { DIMENSION = "t" ; }
    }
    else if(NBAG >= 3)
    {
        DATA(BAG_ID3,        "bag_ID");
        DATA(SURF_ID3,       "surf_IDc");
        SCALAR(DPDIFF3,      "DeltaPCdelf")        { DIMENSION = "pressure" ; }
        SCALAR(ACOM3,        "Acom")               { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(TCOM3,        "Tcom")               { DIMENSION = "t" ; }
        SCALAR(dTPdefCommu3, "DeltatPCdef")        { DIMENSION = "t" ; }
    }
    else if(NBAG == 4)
    {
        DATA(BAG_ID4,        "bag_ID");
        DATA(SURF_ID4,       "surf_IDc");
        SCALAR(DPDIFF4,      "DeltaPCdelf")        { DIMENSION = "pressure" ; }
        SCALAR(ACOM4,        "Acom")               { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(TCOM4,        "Tcom")               { DIMENSION = "t" ; }
        SCALAR(dTPdefCommu4, "DeltatPCdef")        { DIMENSION = "t" ; }
    }
    else if(NBAG == 5)
    {
        DATA(BAG_ID5,        "bag_ID");
        DATA(SURF_ID5,       "surf_IDc");
        SCALAR(DPDIFF5,      "DeltaPCdelf")        { DIMENSION = "pressure" ; }
        SCALAR(ACOM5,        "Acom")               { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(TCOM5,        "Tcom")               { DIMENSION = "t" ; }
        SCALAR(dTPdefCommu5, "DeltatPCdef")        { DIMENSION = "t" ; }
    }
}

// File format
FORMAT(radioss44)
{
    HEADER("/MONVOL/COMMU/%-d", _ID_);
    CARD("%-80s",TITLE);

    COMMENT("#   Isur");
    CARD("%8d", entityiddisplayed);

    COMMENT("#                             Mu            Pext              T0");
    CARD("%16s%16lg%16lg%16lg", _BLANK_, MU, PEXT, T_Initial);

    COMMENT("#         Gammai            cpai            cpbi            cpci");
    CARD("%16lg%16lg%16lg%16lg", GAMMA, ABG_cpai, ABG_cpbi, ABG_cpci);

    COMMENT("#   Njet");
    CARD("%8d", ABG_Njet);

    if(ABG_Njet > 0)
    {
        CARD_LIST(ABG_Njet)
        {
            COMMENT("#          Gamma             cpa             cpb             cpc");
            CARD("%16lg%16lg%16lg%16lg", ABG_gamma, ABG_cpa, ABG_cpb, ABG_cpc);

            COMMENT("#  Imass   Iflow           Smass   Itemp           Stemp Isensor");
            CARD("%8d%8d%16lg%8d%16lg%8d", ABG_Imass, ABG_Iflow, ABG_Smass, ABG_Itemp, ABG_Stemp, ABG_Isensor);

            COMMENT("#   Ijet      N1      N2      N3     Ipt Iptheta IpDelta");
            CARD("%8d%8d%8d%8d%8d%8d%8d", ABG_Ijet, ABG_N1, ABG_N2, ABG_N3, ABG_IPt, ABG_IPtheta, ABG_IPdel);
        }
    }

    COMMENT("#  Nvent");
    CARD("%8d", ABG_Nvent);

    if(ABG_Nvent > 0)
    {
        CARD_LIST(ABG_Nvent)
        {
            COMMENT("#  Svent           Avent           Bvent");
            CARD("%8d%16lg%16lg", SVENT_SETSURFID, ABG_Avent, ABG_Bvent);

            COMMENT("#          Tvent       DeltaPdef      DeltatPdef");
            CARD("%16lg%16lg%16lg", ABG_Tvent, ABG_dPdef, ABG_dtPdef);

            COMMENT("#  Iport   Iporp   IporA");
            CARD("%8d%8d%8d", ABG_Iport, ABG_Iporp, ABG_IporA);

            COMMENT("# Iport'  Iporp'  IporA'");
            CARD("%8d%8d%8d", ABG_Iport1, ABG_Iporp1, ABG_IporA1);
        }
    }

    COMMENT("#   NBAG");
    CARD("%8d", NBAG);

    if(NBAG >= 1)
    {
        COMMENT("# BAG_ID    Scom       DeltaPdef            Acom            Tcom      DeltatPdef");
        CARD("%8d%8d%16lg%16lg%16lg%16lg", BAG_ID1, SURF_ID1, DPDIFF1, ACOM1, TCOM1, dTPdefCommu1);
    }
    if(NBAG >= 2)
    {
        COMMENT("# BAG_ID    Scom       DeltaPdef            Acom            Tcom      DeltatPdef");
        CARD("%8d%8d%16lg%16lg%16lg%16lg", BAG_ID2, SURF_ID2, DPDIFF2, ACOM2, TCOM2, dTPdefCommu2);
    }
    if(NBAG >= 3)
    {
        COMMENT("# BAG_ID    Scom       DeltaPdef            Acom            Tcom      DeltatPdef");
        CARD("%8d%8d%16lg%16lg%16lg%16lg", BAG_ID3, SURF_ID3, DPDIFF3, ACOM3, TCOM3, dTPdefCommu3);
    }
    if(NBAG >= 4)
    {
        COMMENT("# BAG_ID    Scom       DeltaPdef            Acom            Tcom      DeltatPdef");
        CARD("%8d%8d%16lg%16lg%16lg%16lg", BAG_ID4, SURF_ID4, DPDIFF4, ACOM4, TCOM4, dTPdefCommu4);
    }
    if(NBAG >= 5)
    {
        COMMENT("# BAG_ID    Scom       DeltaPdef            Acom            Tcom      DeltatPdef");
        CARD("%8d%8d%16lg%16lg%16lg%16lg", BAG_ID5, SURF_ID5, DPDIFF5, ACOM5, TCOM5, dTPdefCommu5);
    }
}

FORMAT(radioss51)
{
    HEADER("/MONVOL/COMMU/%-d", _ID_);
    CARD("%-100s",TITLE);

    COMMENT("#     Isur");
    CARD("%10d", entityiddisplayed);

    COMMENT("#             Scal_T              Scal_P              Scal_S              Scal_A              Scal_D");
    CARD("%20lg%20lg%20lg%20lg%20lg", Scal_T, Scal_P, Scal_S, Scal_A, Scal_D);

    COMMENT("#                                     Mu                Pext                  T0");
    CARD("%20s%20lg%20lg%20lg", _BLANK_, MU, PEXT, T_Initial);

    COMMENT("#             Gammai                cpai                cpbi                cpci");
    CARD("%20lg%20lg%20lg%20lg", GAMMA, ABG_cpai, ABG_cpbi, ABG_cpci);

    COMMENT("#     Njet");
    CARD("%10d", ABG_Njet);

    if(ABG_Njet > 0)
    {
        CARD_LIST(ABG_Njet)
        {
            COMMENT("#              Gamma                 cpa                 cpb                 cpc");
            CARD("%20lg%20lg%20lg%20lg", ABG_gamma, ABG_cpa, ABG_cpb, ABG_cpc);

            COMMENT("#    Imass     Iflow               Smass     Itemp               Stemp   Isensor");
            CARD("%10d%10d%20lg%10d%20lg%10d", ABG_Imass, ABG_Iflow, ABG_Smass, ABG_Itemp, ABG_Stemp, ABG_Isensor);

            COMMENT("#     Ijet        N1        N2        N3");
            CARD("%10d%10d%10d%10d", ABG_Ijet, ABG_N1, ABG_N2, ABG_N3);

            if(ABG_Ijet > 0)
            {
                COMMENT("#      IPt   IPTheta   IPDelta                           Fp1                 Fp2                 Fp3");
                CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_IPt, ABG_IPtheta, ABG_IPdel, _BLANK_, Fp1, Fp2, Fp3);
            }
        }
    }

    COMMENT("#    Nvent");
    CARD("%10d", ABG_Nvent);

    if(ABG_Nvent > 0)
    {
        CARD_LIST(ABG_Nvent)
        {
            COMMENT("#    Svent               Avent               Bvent");
            CARD("%10d%20lg%20lg", SVENT_SETSURFID, ABG_Avent, ABG_Bvent);

            COMMENT("#              Tvent           DeltaPdef          DeltatPdef  IvDeltaP            FvDeltaP");
            CARD("%20lg%20lg%20lg%10d%20lg", ABG_Tvent, ABG_dPdef, ABG_dtPdef, ABG_IvdP, ABG_FvdP);

            COMMENT("#    Iport     Iporp     Ipora                        Fport'              Fporp'               Fpora'");
            CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport, ABG_Iporp, ABG_IporA, _BLANK_, Fport, Fporp, FporA);

            COMMENT("# fct_IDt'  fct_IDP'  fct_IDA'                      Fscalet'            FscaleP'            FscaleA'");
            CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport1, ABG_Iporp1, ABG_IporA1, _BLANK_, Fport1, Fporp1, FporA1);
        }
    }

    COMMENT("#     NBAG");
    CARD("%10d", NBAG);

    if(NBAG >= 1)
    {
        COMMENT("#   BAG_ID      Scom           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID1, SURF_ID1, DPDIFF1, ACOM1, TCOM1, dTPdefCommu1);
    }
    if(NBAG >= 2)
    {
        COMMENT("#   BAG_ID      Scom           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID2, SURF_ID2, DPDIFF2, ACOM2, TCOM2, dTPdefCommu2);
    }
    if(NBAG >= 3)
    {
        COMMENT("#   BAG_ID      Scom           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID3, SURF_ID3, DPDIFF3, ACOM3, TCOM3, dTPdefCommu3);
    }
    if(NBAG >= 4)
    {
        COMMENT("#   BAG_ID      Scom           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID4, SURF_ID4, DPDIFF4, ACOM4, TCOM4, dTPdefCommu4);
    }
    if(NBAG >= 5)
    {
        COMMENT("#   BAG_ID      Scom           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID5, SURF_ID5, DPDIFF5, ACOM5, TCOM5, dTPdefCommu5);
    }
}

FORMAT(radioss90)
{
    HEADER("/MONVOL/COMMU/%-d", _ID_);
    CARD("%-100s",TITLE);

    COMMENT("#surf_IDex");
    CARD("%10d", entityiddisplayed);

    COMMENT("#            Ascalet             AscaleP             AscaleS             AscaleA             AscaleD");
    CARD("%20lg%20lg%20lg%20lg%20lg", Scal_T, Scal_P, Scal_S, Scal_A, Scal_D);

    COMMENT("#                                     Mu                Pext                  T0     Iequi");
    CARD("%20s%20lg%20lg%20lg%10d", _BLANK_, MU, PEXT, T_Initial, Iequil);

    COMMENT("#             Gammai                cpai                cpbi                cpci");
    CARD("%20lg%20lg%20lg%20lg", GAMMA, ABG_cpai, ABG_cpbi, ABG_cpci);

    COMMENT("#     Njet");
    CARD("%10d", ABG_Njet);

    if(ABG_Njet > 0)
    {
        CARD_LIST(ABG_Njet)
        {
            COMMENT("#              Gamma                 cpa                 cpb                 cpc");
            CARD("%20lg%20lg%20lg%20lg", ABG_gamma, ABG_cpa, ABG_cpb, ABG_cpc);

            COMMENT("#fct_IDmas     Iflow           Fscalemas   fct_IDT             FscaleT   sens_ID");
            CARD("%10d%10d%20lg%10d%20lg%10d", ABG_Imass, ABG_Iflow, ABG_Smass, ABG_Itemp, ABG_Stemp, ABG_Isensor);

            COMMENT("#     Ijet  node_ID1  node_ID2  node_ID3");
            CARD("%10d%10d%10d%10d", ABG_Ijet, ABG_N1, ABG_N2, ABG_N3);

            if(ABG_Ijet > 0)
            {
                COMMENT("# fct_IDPtfctIDPThetfctIDPDelt                      FscalePt        FscalePTheta        FscalePDelta");
                CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_IPt, ABG_IPtheta, ABG_IPdel, _BLANK_, Fp1, Fp2, Fp3);
            }
        }
    }

    COMMENT("#    Nvent");
    CARD("%10d", ABG_Nvent);

    if(ABG_Nvent > 0)
    {
        CARD_LIST(ABG_Nvent)
        {
            COMMENT("# surf_IDv               Avent               Bvent               Tstop");
            CARD("%10d%20lg%20lg%20lg", SVENT_SETSURFID, ABG_Avent, ABG_Bvent, Tstop_arr_X);

            COMMENT("#              Tvent           DeltaPdef          DeltatPdef   fct_IDV             FscaleV");
            CARD("%20lg%20lg%20lg%10d%20lg", ABG_Tvent, ABG_dPdef, ABG_dtPdef, ABG_IvdP, ABG_FvdP);

            COMMENT("#fctIDportfct_IDporPfct_IDporA                    FscaleporT          FscaleporP          FscaleporA");
            CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport, ABG_Iporp, ABG_IporA, _BLANK_, Fport, Fporp, FporA);

            COMMENT("# fct_IDT'  fct_IDP'  fct_IDA'                      FscaleT'            FscaleP'            FscaleA'");
            CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport1, ABG_Iporp1, ABG_IporA1, _BLANK_, Fport1, Fporp1, FporA1);
        }
    }

    COMMENT("#     Nbag");
    CARD("%10d", NBAG);

    if(NBAG >= 1)
    {
        COMMENT("#   bag_IDsurf_IDcom           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID1, SURF_ID1, DPDIFF1, ACOM1, TCOM1, dTPdefCommu1);
    }
    if(NBAG >= 2)
    {
        COMMENT("#   bag_IDsurf_IDcom           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID2, SURF_ID2, DPDIFF2, ACOM2, TCOM2, dTPdefCommu2);
    }
    if(NBAG >= 3)
    {
        COMMENT("#   bag_IDsurf_IDcom           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID3, SURF_ID3, DPDIFF3, ACOM3, TCOM3, dTPdefCommu3);
    }
    if(NBAG >= 4)
    {
        COMMENT("#   bag_IDsurf_IDcom           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID4, SURF_ID4, DPDIFF4, ACOM4, TCOM4, dTPdefCommu4);
    }
    if(NBAG >= 5)
    {
        COMMENT("#   bag_IDsurf_IDcom           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID5, SURF_ID5, DPDIFF5, ACOM5, TCOM5, dTPdefCommu5);
    }
}

FORMAT(radioss100)
{
    HEADER("/MONVOL/COMMU/%-d", _ID_);
    CARD("%-100s",TITLE);

    COMMENT("#surf_IDex");
    CARD("%10d", entityiddisplayed);

    COMMENT("#            Ascalet             AscaleP             AscaleS             AscaleA             AscaleD");
    CARD("%20lg%20lg%20lg%20lg%20lg", Scal_T, Scal_P, Scal_S, Scal_A, Scal_D);

    COMMENT("#                                     Mu                Pext                  T0     Iequi      Ittf");
    CARD("%20s%20lg%20lg%20lg%10d%10d", _BLANK_, MU, PEXT, T_Initial, Iequil, I_ttf);

    COMMENT("#             Gammai                cpai                cpbi                cpci");
    CARD("%20lg%20lg%20lg%20lg", GAMMA, ABG_cpai, ABG_cpbi, ABG_cpci);

    COMMENT("#     Njet");
    CARD("%10d", ABG_Njet);

    if(ABG_Njet > 0)
    {
        CARD_LIST(ABG_Njet)
        {
            COMMENT("#              Gamma                 cpa                 cpb                 cpc");
            CARD("%20lg%20lg%20lg%20lg", ABG_gamma, ABG_cpa, ABG_cpb, ABG_cpc);

            COMMENT("#fct_IDmas     Iflow           Fscalemas   fct_IDT             FscaleT sensor_ID");
            CARD("%10d%10d%20lg%10d%20lg%10d", ABG_Imass, ABG_Iflow, ABG_Smass, ABG_Itemp, ABG_Stemp, ABG_Isensor);

            COMMENT("#     Ijet  node_ID1  node_ID2  node_ID3");
            CARD("%10d%10d%10d%10d", ABG_Ijet, ABG_N1, ABG_N2, ABG_N3);

            if(ABG_Ijet > 0)
            {
                COMMENT("# fct_IDPtfctIDPThetfctIDPDelt                      FscaleP1            FscaleP2            FscaleP3");
                CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_IPt, ABG_IPtheta, ABG_IPdel, _BLANK_, Fp1, Fp2, Fp3);
            }
        }
    }

    COMMENT("#    Nvent");
    CARD("%10d", ABG_Nvent);

    if(ABG_Nvent > 0)
    {
        CARD_LIST(ABG_Nvent)
        {
            COMMENT("# surf_IDv               Avent               Bvent               Tstop");
            CARD("%10d%20lg%20lg%20lg", SVENT_SETSURFID, ABG_Avent, ABG_Bvent, Tstop_arr_X);

            COMMENT("#              Tvent           DeltaPdef          DeltatPdef   fct_IDV             FscaleV   IdtPdef");
            CARD("%20lg%20lg%20lg%10d%20lg%10d", ABG_Tvent, ABG_dPdef, ABG_dtPdef, ABG_IvdP, ABG_FvdP, I_dtPdef_arr);

            COMMENT("#fctIDporTfct_IDporPfct_IDporA                       Fscalet             FscaleP             FscaleA");
            CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport, ABG_Iporp, ABG_IporA, _BLANK_, Fport, Fporp, FporA);

            COMMENT("# fct_IDt'  fct_IDP'  fct_IDA'                      Fscalet'            FscaleP'            FscaleA'");
            CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport1, ABG_Iporp1, ABG_IporA1, _BLANK_, Fport1, Fporp1, FporA1);
        }
    }

    COMMENT("#     Nbag");
    CARD("%10d", NBAG);

    if(NBAG >= 1)
    {
        COMMENT("#   bag_IDsurf_IDcom           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID1, SURF_ID1, DPDIFF1, ACOM1, TCOM1, dTPdefCommu1);
    }
    if(NBAG >= 2)
    {
        COMMENT("#   bag_IDsurf_IDcom           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID2, SURF_ID2, DPDIFF2, ACOM2, TCOM2, dTPdefCommu2);
    }
    if(NBAG >= 3)
    {
        COMMENT("#   bag_IDsurf_IDcom           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID3, SURF_ID3, DPDIFF3, ACOM3, TCOM3, dTPdefCommu3);
    }
    if(NBAG >= 4)
    {
        COMMENT("#   bag_IDsurf_IDcom           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID4, SURF_ID4, DPDIFF4, ACOM4, TCOM4, dTPdefCommu4);
    }
    if(NBAG >= 5)
    {
        COMMENT("#   bag_IDsurf_IDcom           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID5, SURF_ID5, DPDIFF5, ACOM5, TCOM5, dTPdefCommu5);
    }
}

FORMAT(radioss110)
{
    HEADER("/MONVOL/COMMU/%-d", _ID_);
    CARD("%-100s",TITLE);

    COMMENT("#surf_IDex");
    CARD("%10d", entityiddisplayed);

    COMMENT("#            Ascalet             AscaleP             AscaleS             AscaleA             AscaleD");
    CARD("%20lg%20lg%20lg%20lg%20lg", Scal_T, Scal_P, Scal_S, Scal_A, Scal_D);

    COMMENT("#                                     Mu                Pext                  T0     Iequi      Ittf");
    CARD("%20s%20lg%20lg%20lg%10d%10d", _BLANK_, MU, PEXT, T_Initial, Iequil, I_ttf);

    COMMENT("#             Gammai                cpai                cpbi                cpci");
    CARD("%20lg%20lg%20lg%20lg", GAMMA, ABG_cpai, ABG_cpbi, ABG_cpci);

    COMMENT("#     Njet");
    CARD("%10d", ABG_Njet);

    if(ABG_Njet > 0)
    {
        CARD_LIST(ABG_Njet)
        {
            COMMENT("#              Gamma                 cpa                 cpb                 cpc");
            CARD("%20lg%20lg%20lg%20lg", ABG_gamma, ABG_cpa, ABG_cpb, ABG_cpc);

            COMMENT("#fct_IDmas     Iflow           Fscalemas   fct_IDT             FscaleT   sens_ID");
            CARD("%10d%10d%20lg%10d%20lg%10d", ABG_Imass, ABG_Iflow, ABG_Smass, ABG_Itemp, ABG_Stemp, ABG_Isensor);

            COMMENT("#     Ijet  node_ID1  node_ID2  node_ID3");
            CARD("%10d%10d%10d%10d", ABG_Ijet, ABG_N1, ABG_N2, ABG_N3);

            if(ABG_Ijet > 0)
            {
                COMMENT("# fct_IDPtfctIDPThetfctIDPDelt                      FscaleP1            FscaleP2            FscaleP3");
                CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_IPt, ABG_IPtheta, ABG_IPdel, _BLANK_, Fp1, Fp2, Fp3);
            }
        }
    }

    COMMENT("#    Nvent");
    CARD("%10d", ABG_Nvent);

    if(ABG_Nvent > 0)
    {
        CARD_LIST(ABG_Nvent)
        {
            COMMENT("# surf_IDv               Avent               Bvent               Tstop");
            CARD("%10d%20lg%20lg%20lg", SVENT_SETSURFID, ABG_Avent, ABG_Bvent, Tstop_arr_X);

            COMMENT("#              Tvent           DeltaPdef          DeltatPdef   fct_IDV             FscaleV   IdtPdef");
            CARD("%20lg%20lg%20lg%10d%20lg%10d", ABG_Tvent, ABG_dPdef, ABG_dtPdef, ABG_IvdP, ABG_FvdP, I_dtPdef_arr);

            COMMENT("#  fct_IDt   fct_IDP   fct_IDA                       Fscalet             FscaleP             FscaleA");
            CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport, ABG_Iporp, ABG_IporA, _BLANK_, Fport, Fporp, FporA);

            COMMENT("# fct_IDt'  fct_IDP'  fct_IDA'                      Fscalet'            FscaleP'            FscaleA'");
            CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport1, ABG_Iporp1, ABG_IporA1, _BLANK_, Fport1, Fporp1, FporA1);
        }
    }

    COMMENT("#     Nbag");
    CARD("%10d", NBAG);

    if(NBAG >= 1)
    {
        COMMENT("#   bag_ID  surf_IDc           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID1, SURF_ID1, DPDIFF1, ACOM1, TCOM1, dTPdefCommu1);
    }
    if(NBAG >= 2)
    {
        COMMENT("#   bag_ID  surf_IDc           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID2, SURF_ID2, DPDIFF2, ACOM2, TCOM2, dTPdefCommu2);
    }
    if(NBAG >= 3)
    {
        COMMENT("#   bag_ID  surf_IDc           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID3, SURF_ID3, DPDIFF3, ACOM3, TCOM3, dTPdefCommu3);
    }
    if(NBAG >= 4)
    {
        COMMENT("#   bag_ID  surf_IDc           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID4, SURF_ID4, DPDIFF4, ACOM4, TCOM4, dTPdefCommu4);
    }
    if(NBAG >= 5)
    {
        COMMENT("#   bag_ID  surf_IDc           DeltaPdef                Acom                Tcom          DeltatPdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID5, SURF_ID5, DPDIFF5, ACOM5, TCOM5, dTPdefCommu5);
    }
}

FORMAT(radioss120)
{
    HEADER("/MONVOL/COMMU/%-d", _ID_);
    CARD("%-100s",TITLE);

    COMMENT("#surf_IDex");
    CARD("%10d", entityiddisplayed);

    COMMENT("#            Ascalet             AscaleP             AscaleS             AscaleA             AscaleD");
    CARD("%20lg%20lg%20lg%20lg%20lg", Scal_T, Scal_P, Scal_S, Scal_A, Scal_D);

    COMMENT("#                                     Mu                Pext                  T0     Iequi      Ittf");
    CARD("%20s%20lg%20lg%20lg%10d%10d", _BLANK_, MU, PEXT, T_Initial, Iequil, I_ttf);

    COMMENT("#             Gammai                cpai                cpbi                cpci");
    CARD("%20lg%20lg%20lg%20lg", GAMMA, ABG_cpai, ABG_cpbi, ABG_cpci);

    COMMENT("#     Njet");
    CARD("%10d", ABG_Njet);

    if(ABG_Njet > 0)
    {
        CARD_LIST(ABG_Njet)
        {
            COMMENT("#              Gamma                 cpa                 cpb                 cpc");
            CARD("%20lg%20lg%20lg%20lg", ABG_gamma, ABG_cpa, ABG_cpb, ABG_cpc);

            COMMENT("#fct_IDmas     Iflow           Fscalemas   fct_IDT             FscaleT   sens_ID");
            CARD("%10d%10d%20lg%10d%20lg%10d", ABG_Imass, ABG_Iflow, ABG_Smass, ABG_Itemp, ABG_Stemp, ABG_Isensor);

            COMMENT("#     Ijet  node_ID1  node_ID2  node_ID3");
            CARD("%10d%10d%10d%10d", ABG_Ijet, ABG_N1, ABG_N2, ABG_N3);

            if(ABG_Ijet > 0)
            {
                COMMENT("# fct_IDPtfctIDPThetfctIDPDelt                      FscalePt        FscalePTheta        FscalePDelta");
                CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_IPt, ABG_IPtheta, ABG_IPdel, _BLANK_, Fp1, Fp2, Fp3);
            }
        }
    }

    COMMENT("#    Nvent");
    CARD("%10d", ABG_Nvent);

    if(ABG_Nvent > 0)
    {
        CARD_LIST(ABG_Nvent)
        {
            COMMENT("# surf_IDv               Avent               Bvent               Tstop");
            CARD("%10d%20lg%20lg%20lg", SVENT_SETSURFID, ABG_Avent, ABG_Bvent, Tstop_arr_X);

            COMMENT("#              Tvent           DeltaPdef          DeltatPdef   fct_IDV             FscaleV   IdtPdef");
            CARD("%20lg%20lg%20lg%10d%20lg%10d", ABG_Tvent, ABG_dPdef, ABG_dtPdef, ABG_IvdP, ABG_FvdP, I_dtPdef_arr);

            COMMENT("#  fct_IDt   fct_IDP   fct_IDA                       Fscalet             FscaleP             FscaleA");
            CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport, ABG_Iporp, ABG_IporA, _BLANK_, Fport, Fporp, FporA);

            COMMENT("# fct_IDt'  fct_IDP'  fct_IDA'                      Fscalet'            FscaleP'            FscaleA'");
            CARD("%10d%10d%10d%10s%20lg%20lg%20lg", ABG_Iport1, ABG_Iporp1, ABG_IporA1, _BLANK_, Fport1, Fporp1, FporA1);
        }
    }

    COMMENT("#     Nbag");
    CARD("%10d", NBAG);

    if(NBAG >= 1)
    {
        COMMENT("#   bag_ID  surf_IDc          DeltaPCdef                Acom                Tcom         DeltatPCdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID1, SURF_ID1, DPDIFF1, ACOM1, TCOM1, dTPdefCommu1);
    }
    if(NBAG >= 2)
    {
        COMMENT("#   bag_ID  surf_IDc          DeltaPCdef                Acom                Tcom         DeltatPCdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID2, SURF_ID2, DPDIFF2, ACOM2, TCOM2, dTPdefCommu2);
    }
    if(NBAG >= 3)
    {
        COMMENT("#   bag_ID  surf_IDc          DeltaPCdef                Acom                Tcom         DeltatPCdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID3, SURF_ID3, DPDIFF3, ACOM3, TCOM3, dTPdefCommu3);
    }
    if(NBAG >= 4)
    {
        COMMENT("#   bag_ID  surf_IDc          DeltaPCdef                Acom                Tcom         DeltatPCdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID4, SURF_ID4, DPDIFF4, ACOM4, TCOM4, dTPdefCommu4);
    }
    if(NBAG >= 5)
    {
        COMMENT("#   bag_ID  surf_IDc          DeltaPCdef                Acom                Tcom         DeltatPCdef");
        CARD("%10d%10d%20lg%20lg%20lg%20lg", BAG_ID5, SURF_ID5, DPDIFF5, ACOM5, TCOM5, dTPdefCommu5);
    }
}