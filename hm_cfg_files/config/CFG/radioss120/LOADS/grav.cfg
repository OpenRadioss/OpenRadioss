//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Gravity Setup File
// 

ATTRIBUTES {
  // Data
  DIR_RADIO       = VALUE(INT,   "Direction in translation"); 
  rad_dir         = VALUE(STRING,   "Direction in translation"); 
  xscale          = VALUE(FLOAT, "X-scale factor"); 
  magnitude       = VALUE(FLOAT, "Y-scale factor"); 
  inputsystem     = VALUE(SYSTEM,  "Skew");
  curveid         = VALUE(FUNCT, "Time function");
  rad_sensor_id   = VALUE(SENSOR,"Sensor") {SUBTYPES=(/SENSOR/SENSOR_DEFINE);}
  // Support
  entityid        = VALUE(SETS, "Node group to which the gravity load is applied") { SUBTYPES = (/SETS/GRNOD); }
  NB_NODES        = SIZE("Number of additional nodes"); 
  NODE            = ARRAY[NB_NODES](NODE,"Additional nodes"); 
  displayname           = VALUE(STRING, "Title");
}

DEFINITIONS(COMMON) {
 // MAINS=(NODE);
}

PARAMETERS(PARAMETERS) {
  magnitude = INPUT_SCALAR(magnitude,"Scale factor");   
}

DEFAULTS {
  DIR_RADIO = 1;
  xscale    = 1.;
  magnitude     = 1.;
  rad_dir   = "X";
}

GUI(COMMON) {
 mandatory:
/*
  graphical RADIO(DIR_RADIO) {
    ADD(1,"X");
    ADD(2,"Y");
    ADD(3,"Z");
  }
  */
  graphical FUNCTION(curveid) {
    X_TITLE     = "Time"; Y_TITLE     = "Gravity";
    X_DIMENSION="t"; Y_DIMENSION="acceleration";
    X_SCALING(xscale);    Y_SCALING(magnitude);
    X_CAN_BE_NEGATIVE = FALSE;
  }
/*
 optional:
  graphical TOOL(inputsystem);
  TOOL(rad_sensor_id);
  //
  mandatory:
  graphical SUPPORT("Support") {
    OBJECTS=(NODE,ELEMENTS,COMPONENT);
    ADD(entityid,"Node Group");
    ADD(NODE   ,"Additional nodes");
  }
  */
}

FORMAT(radioss41) {
  HEADER("/GRAV/%d/%-40s",_ID_, displayname);
  COMMENT("# Ifunct     Dir   Iskew Isensor           Scale Gnod_id");
  CARD("%8d%8s%8d%8d%16lg%8d",curveid,rad_dir,inputsystem,rad_sensor_id,magnitude,entityid);
  /*if(DIR=="X")
  {
     ASSIGN(DIR_RADIO, 1);  
  }
  else if(DIR=="Y")
  {
     ASSIGN(DIR_RADIO, 2);  
  }
  else if(DIR=="Z")
  {
     ASSIGN(DIR_RADIO, 3);  
  }
  else if(DIR=="XX")
  {
     ASSIGN(DIR_RADIO, 11);  
  }
  else if(DIR=="YY")
  {
     ASSIGN(DIR_RADIO, 22);  
  }  
  else if(DIR=="ZZ")
  {
     ASSIGN(DIR_RADIO, 33);  
  }  
  //
  COMMENT("#  Node1   Node2   Node3   Node4   Node5   Node6   Node7   Node8   Node9  Node10");
  FREE_CELL_LIST(NB_NODES,"%8d",NODE,80) ;
  */
}

FORMAT(radioss51) {
  HEADER("/GRAV/%d",_ID_);
  CARD("%-100s", displayname);
  COMMENT("#funct_IDT       DIR   skew_ID sensor_ID  grnod_ID                      Ascale_x            Fscale_Y");
  CARD("%10d%10s%10d%10d%10d          %20lg%20lg",curveid,rad_dir,inputsystem,rad_sensor_id,entityid,xscale,magnitude);
  /*if(DIR=="X")
  {
     ASSIGN(DIR_RADIO, 1);  
  }
  else if(DIR=="Y")
  {
     ASSIGN(DIR_RADIO, 2);  
  }
  else if(DIR=="Z")
  {
     ASSIGN(DIR_RADIO, 3);  
  }
  else if(DIR=="XX")
  {
     ASSIGN(DIR_RADIO, 11);  
  }
  else if(DIR=="YY")
  {
     ASSIGN(DIR_RADIO, 22);  
  }  
  else if(DIR=="ZZ")
  {
     ASSIGN(DIR_RADIO, 33);  
  }  
  //
  FREE_OBJECT_LIST("%10d",NODE) {
    COMMENT="#  Node1   Node2   Node3   Node4   Node5   Node6   Node7   Node8   Node9  Node10";
  }
  */
}
