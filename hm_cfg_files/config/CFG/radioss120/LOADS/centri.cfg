//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Concentrated load Setup File
// 

ATTRIBUTES(COMMON) {
  // Data
  rad_dir        = VALUE(STRING,   "Direction of rotation"); 
  inputsystem    = VALUE(SYSTEM,  "Frame Identifier");
  curveid        = VALUE(FUNCT, "Rotational velocity vs time");
  rad_sensor_id  = VALUE(SENSOR,"Sensor") {SUBTYPES=(/SENSOR/SENSOR_DEFINE);}
  xscale         = VALUE(FLOAT, "Abscissa scale factor");
  magnitude      = VALUE(FLOAT, "Ordinate scale factor");
  rad_ivar_flag  = VALUE(INT, "Flag for neglecting variation of velocity with respect to time, for the calculation of the force") ;
  // Support
  entityid       = VALUE(SETS, "Node group to which the load is applied") { SUBTYPES = (/SETS/GRNOD); }
  displayname = VALUE(STRING, "Title");
}

DEFAULTS(COMMON) {
  rad_dir= "XX";
}

GUI(COMMON) {
 mandatory:
  graphical RADIO(rad_dir) 
  {
    ADD("XX","XX direction");
    ADD("YY","YY direction");
    ADD("ZZ","ZZ direction");
  }
 
  optional:
  TOOL(inputsystem) {ORIGIN=MANDATORY;}
  TOOL(rad_sensor_id);
  //
  mandatory:
     graphical FUNCTION(curveid) {    
     X_TITLE = "Time"; X_DIMENSION="t";
     TITLE = "Rotational velocity vs time"; 
     Y_TITLE = "Rotational velocity"; Y_DIMENSION="ang_velocity";
     X_SCALING(xscale);    Y_SCALING(magnitude);
  }  
  //
 optional:
  RADIO(rad_ivar_flag)
  {
     ADD(1,"Variation of velocity is not taken into account") ;
     ADD(2,"Variation of velocity is taken into account") ;
  }
  /*
 mandatory:
  graphical SUPPORT("Support") {
    OBJECTS=(NODE,ELEMENTS,COMPONENT);
    ADD(entityid,"Node group");
  }
  */
}

FORMAT(radioss120) {
  HEADER("/LOAD/CENTRI/%d",_ID_);
  CARD("%-100s", displayname);
  COMMENT("#funct_IDT       Dir  frame_ID sensor_ID  grnod_ID      Ivar             Ascalex             Fscaley");
  CARD("%10d%10s%10d%10d%10d%10d%20lg%20lg",curveid,rad_dir,inputsystem,rad_sensor_id,entityid,rad_ivar_flag,xscale,magnitude);
  //
}
