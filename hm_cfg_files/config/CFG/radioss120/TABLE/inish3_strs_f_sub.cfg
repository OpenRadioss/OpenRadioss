//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- inish3_strs_f_sub.cfg ---

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    //Card 1
    shell_ID                           = VALUE(ELEMS,"Element identifier"){ SUBTYPES = ( /ELEMS/SH3N ) ; }
    nb_integr                          = SIZE("Integration point number through the thickness");
    npg                                = VALUE(INT,"Number of surface quadrature points");
    Thick                              = VALUE(FLOAT,"Shell thickness");

    //Card 2
    Em                                 = VALUE(FLOAT,"Total membrane energy");
    Eb                                 = VALUE(FLOAT,"Total bending energy");
    H1                                 = VALUE(FLOAT,"Hourglass force");
    H2                                 = VALUE(FLOAT,"Hourglass force");
    H3                                 = VALUE(FLOAT,"Hourglass force");

    //Card 4
    _dummy                             = SIZE("_dummy");
    nb_integr2                         = SIZE("Integration point number through the thickness");
    SigmaX                             = ARRAY[nb_integr2](FLOAT, "Bending stress");
    SigmaY                             = ARRAY[nb_integr2](FLOAT, "Bending stress");
    SigmaZ                             = ARRAY[nb_integr2](FLOAT, "Bending stress");
    SigmaYZ                            = ARRAY[nb_integr2](FLOAT,"Bending stress");
    //Cards
    sigma_1                            = ARRAY[nb_integr2](FLOAT,"First plane stress");
    sigma_2                            = ARRAY[nb_integr2](FLOAT,"Second plane stress");
    sigma_12                           = ARRAY[nb_integr2](FLOAT,"Shear stress");
    sigma_13                           = ARRAY[nb_integr2](FLOAT,"Shear stress");
    sigma_23                           = ARRAY[nb_integr2](FLOAT,"Shear stress");
    sigma_31                           = ARRAY[nb_integr2](FLOAT,"Shear stress");
    eps_p                              = ARRAY[nb_integr2](FLOAT,"Plastic strain");
    sigma_b1                           = ARRAY[nb_integr2](FLOAT,"Bending stress");
    sigma_b2                           = ARRAY[nb_integr2](FLOAT,"Bending stress");
    sigma_b12                          = ARRAY[nb_integr2](FLOAT,"Bending stress");
    
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    shell_ID                           = -1;
    nb_integr                          = -1;
    npg                                = -1;
    Thick                              = -1;

    //Card 2
    Em                                 = -1;
    Eb                                 = -1;
    H1                                 = -1;
    H2                                 = -1;
    H3                                 = -1;

    //Card 4
    _dummy                             = -1;
    SigmaX                             = -1;
    SigmaY                             = -1;
    SigmaZ                             = -1;
    SigmaYZ                            = -1;

    //Cards
    sigma_1                            = -1;
    sigma_2                            = -1;
    sigma_12                           = -1;
    sigma_13                           = -1;
    sigma_23                           = -1;
    sigma_31                           = -1;
    eps_p                              = -1;
    sigma_b1                           = -1;
    sigma_b2                           = -1;
    sigma_b12                          = -1;
    nb_integr2                         = -1;
}

GUI(COMMON)
{
    //Card 1
    DATA(shell_ID,  "shell_ID");
    SIZE(nb_integr, "nb_integr");
    RADIO(npg, "npg")
    {
        ADD(0,"Set to 1");
        ADD(1,"Must be used for shell formulations Ishell=1,2,3,4");
        ADD(3,"Must be used for DKT18 shell formulation");
        ADD(4,"Must be used for BATOZ formulation");
    }
    SCALAR(Thick, "Thick")             { DIMENSION = "l" ; }

    //Card 2
    SCALAR(Em, "Em")                   { DIMENSION = "energy" ; }
    SCALAR(Eb, "Eb")                   { DIMENSION = "energy" ; }
    if( npg == 0 || npg == 1)
    {
        SCALAR(H1, "H1")               { DIMENSION = "force" ; }
        SCALAR(H2, "H2")               { DIMENSION = "force" ; }
        SCALAR(H3, "H3")               { DIMENSION = "force" ; }
    }
    
    SIZE(nb_integr2,"nb_integr2");
    ASSIGN(nb_integr2, 1);
    if(nb_integr > 0)
    {
        ASSIGN(nb_integr2, nb_integr2*nb_integr);
    }
    if(npg > 1)
    {
        ASSIGN(nb_integr2, nb_integr2*npg);
    }
    //Cards
    
    ARRAY(nb_integr2, "data array")
    {
        SCALAR(sigma_1,   "sigma_1")   { DIMENSION = "pressure" ; }
        SCALAR(sigma_2,   "sigma_2")   { DIMENSION = "pressure" ; }
        SCALAR(sigma_12,  "sigma_12")  { DIMENSION = "pressure" ; }
        SCALAR(sigma_23,  "sigma_23")  { DIMENSION = "pressure" ; }
        SCALAR(sigma_31,  "sigma_31")  { DIMENSION = "pressure" ; }
        SCALAR(eps_p,     "eps_p")     { DIMENSION = "DIMENSIONLESS" ; }
    }
    if (nb_integr == 0)
    {
        ARRAY(nb_integr2, "data array")
        {
            SCALAR(sigma_b1,  "sigma_b1")  { DIMENSION = "pressure" ; }
            SCALAR(sigma_b2,  "sigma_b2")  { DIMENSION = "pressure" ; }
            SCALAR(sigma_b12, "sigma_b12") { DIMENSION = "pressure" ; }
        }
    }
}

// File format
FORMAT(radioss44)
{
    //Card1
    COMMENT("#shell_IDnb_integr");
    CARD("%8d%8d", shell_ID, nb_integr);

    //Card 2
    COMMENT("#             Em              Eb              H1              H2              H3");
    CARD("%16lg%16lg%16lg%16lg%16lg", Em, Eb, H1, H2, H3);

    if(nb_integr > 0)
    {
        FREE_CARD_LIST(_dummy) //_dummy = 1
        {
            //Card 3
            COMMENT("# Sigma1  Sigma2 Sigma12 Sigma13 Sigma23");
            CARD("%16lg%16lg%16lg%16lg%16lg", sigma_1, sigma_2, sigma_12, sigma_13, sigma_23);

            //Card 4
            COMMENT("# SigmaX  SigmaY  SigmaZ SigmaYZ");
            CARD("%16lg%16lg%16lg%16lg", SigmaX, SigmaY, SigmaZ, SigmaYZ);
        }
    }
}

FORMAT(radioss51)
{
    //Card1
    COMMENT("# shell_ID nb_integr       npg");
    CARD("%10d%10d%10d", shell_ID, nb_integr, npg);

    //Card 2
    if( npg == 0 || npg == 1)
    {
        COMMENT("#                 Em                  Eb                  H1                  H2                  H3");
        CARD("%20lg%20lg%20lg%20lg%20lg", Em, Eb, H1, H2, H3);
    }
    else
    {
        COMMENT("#                 Em                  Eb");
        CARD("%20lg%20lg", Em, Eb);
    }
    ASSIGN(nb_integr2, 1, IMPORT);
    if(nb_integr > 0)
    {
        ASSIGN(nb_integr2, nb_integr2*nb_integr, IMPORT);
    }
    if(npg > 1)
    {
        ASSIGN(nb_integr2, nb_integr2*npg, IMPORT);
    }
    //Cards
    if(nb_integr == 0)
    {
        CARD_LIST(nb_integr2)
        {
            COMMENT("#            sigma_1             sigma_2            sigma_12            sigma_23            sigma_31");
            CARD("%20lg%20lg%20lg%20lg%20lg", sigma_1, sigma_2, sigma_12, sigma_23, sigma_31);

            COMMENT("#              eps_p            sigma_b1            sigma_b2           sigma_b12");
            CARD("%20lg%20lg%20lg%20lg", eps_p, sigma_b1, sigma_b2, sigma_b12);
        }

    }
    else /*if(nb_integr > 0)*/
    {
        CARD_LIST(nb_integr2)
        {
            COMMENT("#            sigma_1             sigma_2            sigma_12");
            CARD("%20lg%20lg%20lg", sigma_1, sigma_2, sigma_12);

            COMMENT("#           sigma_23            sigma_31               eps_p");
            CARD("%20lg%20lg%20lg", sigma_23, sigma_31, eps_p);
        }
    }
}

FORMAT(radioss120)
{
    //Card 1
    COMMENT("# shell_ID nb_integr       npg               Thick");
    CARD("%10d%10d%10d%20lg", shell_ID, nb_integr, npg, Thick);

    //Card 2
    if(npg == 0 || npg == 1)
    {
        COMMENT("#                 Em                  Eb                  H1                  H2                  H3");
        CARD("%20lg%20lg%20lg%20lg%20lg", Em, Eb, H1, H2, H3);
    }
    else
    {
        COMMENT("#                 Em                  Eb");
        CARD("%20lg%20lg", Em, Eb);
    }
    ASSIGN(nb_integr2, 1, IMPORT);
    if(nb_integr > 0)
    {
        ASSIGN(nb_integr2, nb_integr2*nb_integr, IMPORT);
    }
    if(npg > 1)
    {
        ASSIGN(nb_integr2, nb_integr2*npg, IMPORT);
    }
    //Cards
    if(nb_integr == 0)
    {
        CARD_LIST(nb_integr2)
        {
            COMMENT("#            sigma_1             sigma_2            sigma_12            sigma_23            sigma_31");
            CARD("%20lg%20lg%20lg%20lg%20lg", sigma_1, sigma_2, sigma_12, sigma_23, sigma_31);

            COMMENT("#              eps_p            sigma_b1            sigma_b2           sigma_b12");
            CARD("%20lg%20lg%20lg%20lg", eps_p, sigma_b1, sigma_b2, sigma_b12);
        }
    }
    else /*if(nb_integr > 0)*/
    {
        CARD_LIST(nb_integr2)
        {
            COMMENT("#            sigma_1             sigma_2            sigma_12");
            CARD("%20lg%20lg%20lg", sigma_1, sigma_2, sigma_12);

            COMMENT("#           sigma_23            sigma_31               eps_p");
            CARD("%20lg%20lg%20lg", sigma_23, sigma_31, eps_p);
        }
    }
    
}
