//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material law 79 (JOHN_HOLM) Setup File

ATTRIBUTES(COMMON) 
{
    KEYWORD_STR                     = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                    = SIZE("NUM_COMMENTS");
    CommentEnumField                = VALUE(INT,"User Comments");
    COMMENTS                        = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    MAT_RHO                         = VALUE(FLOAT,"Initial Density");
    Refer_Rho                       = VALUE(FLOAT,"Reference Density (for Lower than 14.0 Version)");
    DUMMY                           = VALUE(STRING,"Dummy Variable for Ref_Rho Flag");
    MAT_REFRHO_Option               = VALUE(INT, "RefRho_Option");
    tau_shear                       = VALUE(FLOAT, "Shear Modulus");
    MAT_A                           = VALUE(FLOAT, "Intact Normalized Strength Constant");
    MAT_B                           = VALUE(FLOAT, "Fractured Normalized Strength Constant");
    MAT_M                           = VALUE(FLOAT, "Fractured Strength Pressure Exponent");
    MAT_N                           = VALUE(FLOAT, "Intact Strength Pressure Exponent");
    MAT_C                           = VALUE(FLOAT, "Strain Rate Coeff");
    MAT_Epsilon_F                   = VALUE(FLOAT, "Reference Strain Rate");
    MAT_SIG1max_t                   = VALUE(FLOAT, "Maximum Normalized Fractured Strength");
    MAT_T0                          = VALUE(FLOAT, "Maximum Pressure Tensile Strength");
    MAT_E                           = VALUE(FLOAT, "Hugoniot Elastic Limit");
    MAT_EPS                         = VALUE(FLOAT, "Pressure at Hugoniot Elastic Limit");
    D1                              = VALUE(FLOAT, "Damage Constant");
    D2                              = VALUE(FLOAT, "Damage Exponent");
    K1                              = VALUE(FLOAT, "Bulk Modulus");
    K2                              = VALUE(FLOAT, "Pressure Coefficient");
    K3                              = VALUE(FLOAT, "Pressure Coefficient");
    MAT_Beta                        = VALUE(FLOAT, "Bulking Pressure Coefficient");
    Heat_Inp_opt                    = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT                 = VALUE(SUBOBJECT, "");
    THERM_STRESS                    = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS             = VALUE(SUBOBJECT, "");
    IO_FLAG                         = VALUE(INT, "");
    Mat_Name_OR_LawNo               = VALUE(INT,  "RADIOSS_COMMENT_FLAG");
    TITLE                           = VALUE(STRING,"");
    LAW_NO                          = VALUE(STRING, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                     = 9000;
    COMMENTS                        = 5109;
    CommentEnumField                = 7951;
    Heat_Inp_opt                    = 4346;
    SUBGRP_HEAT_MAT                 = -1;
    THERM_STRESS                    = 4555;
    SUBGRP_THERM_STRESS             = -1;
    MAT_REFRHO_Option               = 4285;
    MAT_RHO                         = 118;
    Refer_Rho                       = 4229;
    D1                              = 4193;
    D2                              = 4194;
    K1                              = 4490;
    K2                              = 4491;
    K3                              = 4592;
    MAT_A                           = 6056;
    MAT_B                           = 995;
    MAT_Beta                        = 5007;
    MAT_C                           = 996;
    MAT_E                           = 119;
    MAT_EPS                         = 195;
    MAT_Epsilon_F                   = 4093;
    MAT_M                           = 314;
    MAT_N                           = 5037;
    MAT_SIG1max_t                   = 6005;
    MAT_T0                          = 6133;
    LAW_NO                          = -1;
    tau_shear                       = 4569;
    NUM_COMMENTS                    = 5110;
    DUMMY                           = -1;
    IO_FLAG                         = -1;
    TITLE                           = -1;
    Mat_Name_OR_LawNo               = 4538;
    
}
DRAWABLES(COMMON) {
public:
    INITIAL_DENSITY                 = SCALAR(MAT_RHO);
}
CHECK(COMMON)
{
    MAT_Beta                        >=0;
    MAT_Beta                        <=1;
    MAT_RHO                         >0.0;
}

DEFAULTS(COMMON)
{
    MAT_SIG1max_t                   = 1.0e30;
    Mat_Name_OR_LawNo               = 1;
}

GUI(COMMON) {
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if(Mat_Name_OR_LawNo == 1)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/JOHN_HOLM/");
    }
    else 
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW79/");
    }

    FLAG(MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)      { DIMENSION="density";       }
    }
mandatory:
    SCALAR(MAT_RHO)      { DIMENSION="density";            }
mandatory:
    SCALAR(tau_shear)    { DIMENSION="pressure";                      }
optional:
mandatory:
    SCALAR(MAT_A)        { DIMENSION="DIMENSIONLESS";                      }
optional:
    SCALAR(MAT_B)        { DIMENSION="DIMENSIONLESS";                      }
    SCALAR(MAT_M)        { DIMENSION="DIMENSIONLESS";                 }
    SCALAR(MAT_N)        { DIMENSION="DIMENSIONLESS";                 }
    SCALAR(MAT_C)        { DIMENSION="DIMENSIONLESS";                 }
    SCALAR(MAT_Epsilon_F){ DIMENSION="f";                     }
    SCALAR(MAT_SIG1max_t){DIMENSION="DIMENSIONLESS";}
    SCALAR(MAT_T0)       {DIMENSION="pressure";}
    SCALAR(MAT_E)        {DIMENSION="pressure";}
    SCALAR(MAT_EPS)      {DIMENSION="pressure";}
    SCALAR(D1)           {DIMENSION="DIMENSIONLESS";}
    SCALAR(D2)           {DIMENSION="DIMENSIONLESS";}
    SCALAR(K1)           {DIMENSION="pressure";}
    SCALAR(K2)           {DIMENSION="pressure";}
    SCALAR(K3)           {DIMENSION="pressure";}
    SCALAR(MAT_Beta)     {DIMENSION="DIMENSIONLESS";}
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    } 
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    }
    /*
    mandatory:
    graphical SUPPORT("Support") {
    OBJECTS=(/COMPONENT/QUAD,/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D,/COMPONENT/PENTA6,/COMPONENT/LINEAR_THICK,
    /COMPONENT/TETRA10,/COMPONENT/SHEL16,/COMPONENT/BRIC20,
    /COMPONENT/SHELL,/COMPONENT/SPHCEL);
    ADD(COMPONENT,"Parts");
    }
    */
}


FORMAT(radioss120) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "JOH" )
        {
            ASSIGN(Mat_Name_OR_LawNo,1);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 1)
    {
        HEADER("/MAT/LAW79/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/JOHN_HOLM/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#        Init. dens.          Ref. dens.");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#        Init. dens.");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                  G");
    CARD("%20lg",tau_shear);
    COMMENT("#                  a                   b                   m                   n");
    CARD("%20lg%20lg%20lg%20lg",MAT_A,MAT_B,MAT_M,MAT_N);
    COMMENT("#                  c                EPS0          SIGMA_FMAX");
    CARD("%20lg%20lg%20lg",MAT_C,MAT_Epsilon_F,MAT_SIG1max_t);
    COMMENT("#                  T                 HEL                PHEL");
    CARD("%20lg%20lg%20lg",MAT_T0,MAT_E,MAT_EPS); 
    COMMENT("#                 D1                  D2");
    CARD("%20lg%20lg",D1,D2); 
    COMMENT("#                 K1                  K2                  K3                BETA");
    CARD("%20lg%20lg%20lg%20lg",K1,K2,K3,MAT_Beta); 
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}