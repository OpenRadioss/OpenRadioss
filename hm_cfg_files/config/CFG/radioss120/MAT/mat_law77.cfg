//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.

// Material law 77

ATTRIBUTES(COMMON)
{
    KEYWORD_STR                                 = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                                = SIZE("NUM_COMMENTS");
    COMMENTS                                    = ARRAY[NUM_COMMENTS](STRING,  "Entity_Comments");
    CommentEnumField                            = VALUE(INT,  "User Comments");
    MAT_REFRHO_Option                           = VALUE(INT,  "RefRho_Option");
    DUMMY                                       = VALUE(STRING,"Dummy variable for Ref_Rho flag");
    Refer_Rho                                   = VALUE(FLOAT,  "Ref_Rho");
    MAT_RHO                                     = VALUE(FLOAT,  "Initial Density");
    MAT_E                                       = VALUE(FLOAT,  "Initial Young's Modulus");
    MAT_NU                                      = VALUE(FLOAT,  "Nu,Poisson's Ratio");
    E_Max                                       = VALUE(FLOAT,  "E_max,Maximum Youngs Modulus");
    MAT_EPS                                     = VALUE(FLOAT,  "Failure Plastic Strain");
    MAT_asrate                                  = VALUE(FLOAT,  "Cutoff Frequency for Strain Rate Filtering");
    ISRATE                                      = VALUE(INT,  "Smooth Strain Rate Option Flag");
    NRATEP                                      = SIZE("Number of Loading Functions");
    NRATEN                                      = SIZE("Number of Unloading Functions");
    MAT_Iflag                                   = VALUE(INT,  "Flag to Control the Unloading Response");
    MAT_SHAPE                                   = VALUE(FLOAT,  "Shape Factor");
    MAT_HYST                                    = VALUE(FLOAT,  "Hysteresis Unloading Factor");
    if(NRATEP > 0)
    {
        //FUN_LOAD                              = ARRAY[NRATEP](MULTIOBJECT,  "load_fctID,Load function identifier");
        FUN_LOAD                                = ARRAY[NRATEP](FUNCT,  "Load Function Identifier");
        SCALE_LOAD                              = ARRAY[NRATEP](FLOAT,  "FSCALE,Scale Factor for Load Function");
        STRAINRATE_LOAD                         = ARRAY[NRATEP](FLOAT,  "STRAINRATE,Strain Rate for Load Function");
    }
    if(NRATEN > 0)
    {
        //FUN_UNLOAD                            = ARRAY[NRATEN](MULTIOBJECT,  "Unload Function Identifier");
        FUN_UNLOAD                              = ARRAY[NRATEN](FUNCT,  "Unload Function Identifier");
        SCALE_UNLOAD                            = ARRAY[NRATEN](FLOAT,  "FSCALE,Scale Factor for Unload Function");
        STRAINRATE_UNLOAD                       = ARRAY[NRATEN](FLOAT,  "STRAINRATE,Strain Rate for Unload Function");
    }
    Lqud_Rho_g                                  = VALUE(FLOAT,  "Air Density");
    MAT_P0                                      = VALUE(FLOAT,  "Initial Pressure");
    GAMMA                                       = VALUE(FLOAT,  "Gamma Constant for the Gas");
    Rho_Gas                                     = VALUE(FLOAT,  "External Gas Density");
    Gflag                                       = VALUE(INT,  "Flag for Incoming or Not Incoming Gaz");
    PEXT                                        = VALUE(FLOAT,  "External Pressure");
    MAT_POROS                                   = VALUE(FLOAT,  "Ratio of Gas in the Element");
    MAT_ALPHA                                   = VALUE(FLOAT,  "Parameter for Darcy Law");
    MAT_Beta                                    = VALUE(FLOAT,  "Parameter for Darcy Law");
    tau_shear                                   = VALUE(FLOAT,  "Tau Parameter for Darcy law");
    MAT_K                                       = VALUE(FLOAT,  "Initial Foam Permeability Modulus");
    ISFLAG                                      = VALUE(INT,  "Flag to Open/Close the Free Surface of the Solid Brick");
    FUN_A1                                      = VALUE(FUNCT,"Permeability Scale Factor Function");
    FUN_B1                                      = VALUE(FUNCT,"Porosity Scale Factor Function");
    Heat_Inp_opt                                = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT                             = VALUE(SUBOBJECT, "");
    THERM_STRESS                                = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS                         = VALUE(SUBOBJECT, "");
    IO_FLAG                                     = VALUE(INT, "");
    TITLE                                       = VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                                 = 9000;
    COMMENTS                                    = 5109;
    CommentEnumField                            = 7951;
    NUM_COMMENTS                                = 5110;
    MAT_REFRHO_Option                           = 4285;
    Refer_Rho                                   = 4229;
    MAT_RHO                                     = 118;
    MAT_E                                       = 119;
    MAT_NU                                      = 120;
    E_Max                                       = 4230;
    MAT_EPS                                     = 195;
    MAT_asrate                                  = 6065;
    ISRATE                                      = 4231;
    NRATEP                                      = 4232;
    NRATEN                                      = 4233;
    MAT_Iflag                                   = 6002;
    MAT_SHAPE                                   = 4580;
    MAT_HYST                                    = 5346;
    FUN_LOAD                                    = 4234;
    SCALE_LOAD                                  = 4236;
    STRAINRATE_LOAD                             = 4235;
    FUN_UNLOAD                                  = 4239;
    SCALE_UNLOAD                                = 4238;
    STRAINRATE_UNLOAD                           = 4237;
    Lqud_Rho_g                                  = 4262;
    MAT_P0                                      = 1122;
    GAMMA                                       = 5172;
    Rho_Gas                                     = 736;
    Gflag                                       = 5112;
    PEXT                                        = 8144;
    MAT_POROS                                   = 5098;
    MAT_ALPHA                                   = 349;
    MAT_Beta                                    = 5007;
    tau_shear                                   = 4569;
    MAT_K                                       = 998;
    ISFLAG                                      = 5158;
    FUN_A1                                      = 45;
    FUN_B1                                      = 168;
    Heat_Inp_opt                                = 4346;
    SUBGRP_HEAT_MAT                             = -1;
    THERM_STRESS                                = 4555;
    SUBGRP_THERM_STRESS                         = -1;
    DUMMY                                       = -1;
    IO_FLAG                                     = -1;
    TITLE                                       = -1;
}

DRAWABLES(COMMON) {
public:
    INITIAL_DENSITY = SCALAR(MAT_RHO);
    YOUNG_MODULUS   = SCALAR(MAT_E);
    POISSON_RATIO   = SCALAR(MAT_NU);
    SOUND_SPEED     = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
    private:
    G                       = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
    C1                      = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
public:
    SOUND_SPEED_SOLID       = EVAL(((4*G/3+C1)/INITIAL_DENSITY)^0.5);

}

CHECK(COMMON)
{
    MAT_POROS                                   >=0;
    MAT_POROS                                   <=1;
    MAT_RHO                                     >0.0;
    NRATEN                                      <=100;
    NRATEP                                      <=100;
}

DEFAULTS(COMMON)
{
    ISRATE                                      = 0;
    MAT_HYST                                    = 1.0;
    MAT_Iflag                                   = 1;
    MAT_SHAPE                                   = 1.0;
    MAT_asrate                                  = 1.0e30;
    NRATEP                                      = 0;
    NRATEN                                      = 0;
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if( CommentEnumField == 2)
    {
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }
    ASSIGN(KEYWORD_STR, "/MAT");
    ASSIGN(KEYWORD_STR, "/LAW77/");

    SCALAR(MAT_RHO)                     {DIMENSION="density";}

    graphical FLAG( MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)               {DIMENSION="density";}
    }
    SCALAR(MAT_E)                       {DIMENSION="pressure";}
    SCALAR(MAT_NU)                      {DIMENSION="DIMENSIONLESS";}
    SCALAR(E_Max)                       {DIMENSION="pressure";}
    SCALAR(MAT_EPS)                     {DIMENSION="DIMENSIONLESS";}
    SCALAR(MAT_asrate)                  {DIMENSION="f";}
    RADIO(ISRATE)
    {
        ADD(0,"No Strain Rate Smoothing");
        ADD(1,"Strain Rate Smoothing");
    }
    SIZE(NRATEP);
    SIZE(NRATEN);
    RADIO(MAT_Iflag)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1,"Material Behaviour Follows the Defined Curves for Loading and Unloading");
        ADD(2,"Loading Curves are Used for Both Loading and Unloading");
        ADD(3,"Loading Curves are Used for Both Loading and Unloading Behaviour and the Tensor Unloading Tensor Stress is Reduced");
    }
    SCALAR(MAT_SHAPE)                   {DIMENSION="DIMENSIONLESS";}
    SCALAR(MAT_HYST)                    {DIMENSION="DIMENSIONLESS";}
    ARRAY(NRATEP,"Loading functions")
    {
        //DATA(FUN_LOAD);
        /*FUNCTION(FUN_LOAD)
        {
        X_TITLE="Strain";          X_DIMENSION="DIMENSIONLESS";
        Y_TITLE="Stress";          Y_DIMENSION="pressure";
        }*/
        SCALAR(STRAINRATE_LOAD)    {DIMENSION="f"; }
        SCALAR(SCALE_LOAD)         {DIMENSION="pressure" ; }
    }
    ARRAY(NRATEN,"Unloading functions")
    {
        //DATA(FUN_UNLOAD);
        /*FUNCTION(FUN_UNLOAD)
        {
        X_TITLE="Strain";          X_DIMENSION="DIMENSIONLESS";
        Y_TITLE="Stress";          Y_DIMENSION="pressure";
        }*/
        SCALAR(STRAINRATE_UNLOAD)       {DIMENSION="f"; }
        SCALAR(SCALE_UNLOAD)            {DIMENSION="pressure" ; }
    }
    SCALAR(Lqud_Rho_g)                  {DIMENSION="density";}
    SCALAR(MAT_P0)                      {DIMENSION="pressure";}
    SCALAR(GAMMA)                       {DIMENSION="DIMENSIONLESS";}
    //ASSIGN(KEYWORD_STR, "                    ");
    SCALAR(MAT_POROS)                   {DIMENSION="DIMENSIONLESS";}
    SCALAR(Rho_Gas)                     {DIMENSION="density";}
    SCALAR(PEXT)                        {DIMENSION="pressure";}
    RADIO(ISFLAG)
    {
        ADD(0, "Free Outflow on Free Surface(open)");
        ADD(1, "No Outflow on Free Surface(close)");
    }
    RADIO(Gflag)
    {
        ADD(0, "No Reverse Flow");
        ADD(1, "Reverse Flow is Admitted");
    }
    SCALAR(MAT_ALPHA)                   {DIMENSION="DIMENSIONLESS";}
    SCALAR(MAT_Beta)                    {DIMENSION="inverse_of_speed";}
    SCALAR(tau_shear)                   {DIMENSION="t";}
    SCALAR(MAT_K)                       {DIMENSION="gravitational_attraction_per_unit_time";}
    DATA(FUN_A1);
    DATA(FUN_B1);
    /*
    graphical SUPPORT("Support") 
    {
    OBJECTS=(/PART/BRICK,/PART/TETRA4,/PART/LINEAR_3D,/PART/TETRA10);
    ADD(PART,"Parts");
    }
    */
optional:
    //heat data
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    }
}

FORMAT(radioss120)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/MAT/LAW77/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option != FALSE)
    {
        COMMENT("#               RHO_i           Refer_Rho");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                 E0                  NU                EMAX              EPSMAX");
    CARD("%20lg%20lg%20lg%20lg",MAT_E,MAT_NU,E_Max,MAT_EPS);
    COMMENT("#               FCUT  FSMOOTH      NLOAD   NUNLOAD     IFLAG               SHAPE                 HYS");
    CARD("%20lg%10d%10d%10d%10d%20lg%20lg",MAT_asrate,ISRATE,NRATEP,NRATEN,MAT_Iflag,MAT_SHAPE,MAT_HYST);
    if(NRATEP>0)
    {
        COMMENT("#   F_ID_L        Eps_dot_load         Fscale_load");
        CARD_LIST(NRATEP) {
            CARD("%10d%20lg%20lg",FUN_LOAD,STRAINRATE_LOAD,SCALE_LOAD);
        }
    }
    if(NRATEN>0)
    {
        COMMENT("#  F_ID_UL      Eps_dot_unload       Fscale_unload");
        CARD_LIST(NRATEN) {
            CARD("%10d%20lg%20lg",FUN_UNLOAD,STRAINRATE_UNLOAD,SCALE_UNLOAD);
        }
    }
    COMMENT("#            RHO_GAS                  P0               GAMMA                                       R");
    CARD("%20lg%20lg%20lg                    %20lg",Lqud_Rho_g,MAT_P0,GAMMA,MAT_POROS);
    COMMENT("#            RHO_EXT                PEXT     ICLOS   INC_GAS");
    CARD("%20lg%20lg%10d%10d",Rho_Gas,PEXT,ISFLAG,Gflag);
    COMMENT("#              ALPHA                BETA                   T                   K");
    CARD("%20lg%20lg%20lg%20lg",MAT_ALPHA,MAT_Beta,tau_shear,MAT_K);
    COMMENT("#   F_ID_K    F_ID_R");
    CARD("%10d%10d",FUN_A1,FUN_B1);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
