//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.

// Material law 75

ATTRIBUTES(COMMON) 
{
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    CommentEnumField                        = VALUE(INT,"User Comments");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    MAT_RHO                                 = VALUE(FLOAT,"Initial Density");
    Refer_Rho                               = VALUE(FLOAT,"Reference Density (for lower than 14.0 version)");
    DUMMY                                   = VALUE(STRING,"Dummy variable for Ref_Rho flag");
    MAT_REFRHO_Option                       = VALUE(INT, "RefRho_Option");
    MAT_E                                   = VALUE(FLOAT, "Young's Modulus");
    MAT_NU                                  = VALUE(FLOAT, "Poisson's Ratio");
    MAT1                                    = VALUE(MAT,"Material of the Solid (Fully Compacted) Material") ;
    HFLAG1                                  = VALUE(INT,"Pressure Formulation Flag") ;
    HFLAG2                                  = VALUE(INT,"Deviatoric Stresses Formulation Flag") ;
    Nppmax                                  = VALUE(INT,"Maximum Number of Iterations on a Calculation") ;
    MAT_PPRES                               = VALUE(FLOAT, "Elastic Compact Pressure");
    MAT_YPRES                               = VALUE(FLOAT, "Solid Compact Pressure");
    MAT_EXP1                                = VALUE(FLOAT, "Exponent");
    MAT_Tol                                 = VALUE(FLOAT, "Convergence Tolerance on a Calcultion");
    Heat_Inp_opt                            = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT                         = VALUE(SUBOBJECT, "");
    THERM_STRESS                            = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS                     = VALUE(SUBOBJECT, "");
    ALE_Form                                = VALUE(INT, "Flag for heat transfer formulation");
    SUBGRP_ALE_MAT                          = VALUE(SUBOBJECT, "");
    SUBGRP_EULER_MAT                        = VALUE(SUBOBJECT, "");
    IO_FLAG                                 = VALUE(INT, "");
    LAW_NO                                  = VALUE(STRING, "");
    Mat_Name_OR_LawNo                       = VALUE(INT,  "RADIOSS_COMMENT_FLAG");
    TITLE                                   = VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    Heat_Inp_opt                            = 4346;
    SUBGRP_HEAT_MAT                         = -1;
    THERM_STRESS                            = 4555;
    SUBGRP_THERM_STRESS                     = -1;
    ALE_Form                                = 4336;
    SUBGRP_ALE_MAT                          = -1;
    SUBGRP_EULER_MAT                        = -1;
    MAT_REFRHO_Option                       = 4285;
    MAT_RHO                                 = 118;
    Refer_Rho                               = 4229;
    HFLAG1                                  = 5163;
    HFLAG2                                  = 5183;
    MAT1                                    = 5277;
    MAT_E                                   = 119;
    MAT_EXP1                                = 5099;
    MAT_NU                                  = 120;
    MAT_PPRES                               = 5055;
    MAT_Tol                                 = 4102;
    MAT_YPRES                               = 5056;
    Nppmax                                  = 4520;
    NUM_COMMENTS                            = 5110;
    DUMMY                                   = -1;
    LAW_NO                                  = -1;
    Mat_Name_OR_LawNo                       = 4538;
    IO_FLAG                                 = -1;
    TITLE                                   = -1;
}

CHECK(COMMON)
{
    MAT_RHO                                 >0.0;
}

DEFAULTS(COMMON)
{
    MAT_EXP1                                = 2;
    MAT_Tol                                 = 1e.008;
    //MAT_Tol                               = 1.0e08;
    Nppmax                                  = 5;
    Mat_Name_OR_LawNo                       = 0;
}

DRAWABLES(COMMON) 
{
public:
    INITIAL_DENSITY                         = SCALAR(MAT_RHO);
    POISSON_RATIO                           = SCALAR(MAT_NU);
    YOUNG_MODULUS                           = SCALAR(MAT_E);
    SOUND_SPEED                             = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
    private:
    G                       = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
    C1                      = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
public:
    SOUND_SPEED_SOLID       = EVAL(((4*G/3+C1)/INITIAL_DENSITY)^0.5);
}

GUI(COMMON) 
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Mat_Name_OR_LawNo == 1)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/POROUS/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW75/");
    }
    FLAG(MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)      { DIMENSION="density";       }
    }
mandatory:
    SCALAR(MAT_RHO)     { DIMENSION="density";            }
    SCALAR(MAT_E)       {DIMENSION="pressure";}
    SCALAR(MAT_NU)      {DIMENSION="DIMENSIONLESS";}
    DATA(MAT1) ;
    RADIO(HFLAG1)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1,"1: Herrmann") ;
        ADD(2,"2: Modified Herrmann") ;
    }
    RADIO(HFLAG2)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1,"1: Hydrodynamic") ;
        ADD(2,"2: Elastic") ;
    }
    SCALAR(Nppmax) ;
    SCALAR(MAT_PPRES) {DIMENSION="pressure";}
    SCALAR(MAT_YPRES) {DIMENSION="pressure";}
    SCALAR(MAT_EXP1) ;
    SCALAR(MAT_Tol) ;
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    }
    /*
    graphical SUPPORT("Support") 
    {
    OBJECTS=(/COMPONENT/BRICK);
    ADD(COMPONENT,"Parts");
    }
    */
}

GUI(ALE) 
{
optional:
    graphical RADIO(ALE_Form) 
    {
        ADD(1,"NONE");
        ADD(2,"ALE");
        ADD(3,"EULER");
    }
    if(ALE_Form == 2)
    {   
        SUBOBJECT(SUBGRP_ALE_MAT) {SUBTYPES = (/SUBOBJECT/ALE_MAT);}
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECT(SUBGRP_EULER_MAT) {SUBTYPES = (/SUBOBJECT/EULER);}
    }
}

FORMAT(radioss120) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if (IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "POR" )
        {
            ASSIGN(Mat_Name_OR_LawNo,1);
        }
        else
        {
            ASSIGN(Mat_Name_OR_LawNo, 2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 1)
    {
        HEADER("/MAT/POROUS/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/LAW75/%d", _ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                 E                   NU");
    CARD("%20lg%20lg",MAT_E,MAT_NU);
    COMMENT("#  MAT_IDs    IFLAG1    IFLAG2    ITEMAX");
    CARD("%10d%10d%10d%10d",MAT1,HFLAG1,HFLAG2,Nppmax);
    COMMENT("#                PE                   PS                   N");
    CARD("%20lg%20lg%20lg",MAT_PPRES,MAT_YPRES,MAT_EXP1);
    COMMENT("#                TOL");
    CARD("%20lg",MAT_Tol); 
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(ALE_Form == 2)
    {
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
    }
}