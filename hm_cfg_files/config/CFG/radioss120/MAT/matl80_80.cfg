//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
ATTRIBUTES(COMMON)
{
    KEYWORD_STR                         = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                        = SIZE("NUM_COMMENTS");
    CommentEnumField                    = VALUE(INT,"User Comments");
    COMMENTS                            = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    MAT_RHO                             = VALUE(FLOAT,"Initial Density");
    Refer_Rho                           = VALUE(FLOAT,"Reference Density (for lower than 14.0 version)");
    DUMMY                               = VALUE(STRING,"Dummy Variable for Ref_Rho Flag");
    MAT_REFRHO_Option                   = VALUE(INT, "RefRho_Option");
    MAT_E                               = VALUE(FLOAT, "Young's Modulus") ;
    MAT_NU                              = VALUE(FLOAT, "Poisson's Ratio") ;
    MAT_fct_IDE                         = VALUE(FUNCT,"Function for Temperature Dependent Young Modulus");
    SCALE                               = VALUE(FLOAT,"Scale Factor for Ordinate (Young) for Fct_IDE");
    time_inputunit_value                = VALUE(FLOAT,"Number of Time Unit Per Hour, Default Corresponds to Seconds (3600)");
    Fsmooth                             = VALUE(INT,"Smooth Strain Rate Option Flag");
    Fcut                                = VALUE(FLOAT,"Cutoff Frequency for Strain Rate Filtering");
    MAT_CAP_END                         = VALUE(FLOAT,"Parameter for The Effective Strain Rate Dependency (Cowper-Symonds Relation)");
    MAT_PC                              = VALUE(FLOAT," Parameter for The Effective Strain Rate Dependency (Cowper-Symonds Relation)");
    FUN_A1                              = VALUE(FUNCT,"Table for Yield Stress, First Entry Effective Plastic Strain and Second Temperature, for Austenite");
    FUN_A2                              = VALUE(FUNCT,"Table for Yield Stress, First Entry Effective Plastic Strain and Second Temperature, for Ferrite");
    FUN_A3                              = VALUE(FUNCT,"Table for Yield Stress, First Entry Effective Plastic Strain and Second Temperature, for Pearlite");
    FUN_A4                              = VALUE(FUNCT,"Table for Yield Stress, First Entry Effective Plastic Strain and Second Temperature, for Bainite");
    FUN_A5                              = VALUE(FUNCT,"Table for Yield Stress, First Entry Effective Plastic Strain and Second Temperature, for Martensite");
    FScale11                            = VALUE(FLOAT,"Scale Factor for Ordinate (Stress) for ID_YLD1");
    FScale22                            = VALUE(FLOAT,"Scale Factor for Ordinate (Stress) for ID_YLD2");
    FScale33                            = VALUE(FLOAT,"Scale Factor for Ordinate (Stress) for ID_YLD3");
    FScale12                            = VALUE(FLOAT,"Scale Factor for Ordinate (Stress) for ID_YLD4");
    FScale23                            = VALUE(FLOAT,"Scale Factor for Ordinate (Stress) for ID_YLD5");
    FScale11_2                          = VALUE(FLOAT,"Memory Coefficient that Determines the Fraction of Previous Straining in the Austenite that will be Remembered by the Newly Formed Ferrite");
    FScale22_2                          = VALUE(FLOAT,"Memory Coefficient that Determines the Fraction of Previous Straining in the Austenite that will be Remembered by the Newly Formed Pearlite");
    FScale33_2                          = VALUE(FLOAT,"Memory Coefficient that Determines the Fraction of Previous Straining in the Austenite that will be Remembered in the Newly Formed Bainite");
    FScale12_2                          = VALUE(FLOAT,"Memory Coefficient that Determines the Fraction of Previous Straining in the Austenite that will be Remembered in the Newly Formed Martensite");
    ALPHA1                              = VALUE(FLOAT,"Thermal Expansion for the Austenite (Gamma Phase)");
    ALPHA2                              = VALUE(FLOAT,"Thermal Expansion for Products (Alpha Phase)");
    qa_l                                = VALUE(FLOAT,"Activation Energy Divided by the Universal Gas Constant for the Diffusion Reaction of the Austenite Ferrite Reaction");
    qb_l                                = VALUE(FLOAT,"Activation Energy Divided by the Universal gas Constant for the Diffusion Reaction of the Austenite Pearlite Reaction");
    Q                                   = VALUE(FLOAT,"Activation Energy Divided by the Universal gas Constant for the Diffusion Reaction of the Austenite Bainite Reaction");
    Alpha_y                             = VALUE(FLOAT,"Material Constant for the Martensite Phase");
    WPREF                               = VALUE(FLOAT,"Reference Temperature for the Thermal Expansion");
    PrMesh_Size                         = VALUE(FLOAT,"ASTM Grain Size Number for the Austenite");
    MAT_K                               = VALUE(FLOAT,"Coefficient of Boron in the Composition of Ferrite");
    MAT_K_UNLOAD                        = VALUE(FLOAT,"Coefficient of Boron in the Composition of Pearlite");
    MAT_Lamda                           = VALUE(FLOAT,"Latent Heat for the Decomposition of Austenite to Ferrite, Pearlite, Bainite");
    MAT_Theta                           = VALUE(FLOAT,"Latent Heat for the Decomposition of Austenite to Martensite");
    T_Initial                           = VALUE(FLOAT,"");
    MAT_B                               = VALUE(FLOAT,"Boron Percentage Weight in Material");
    MAT_MUE1                            = VALUE(FLOAT,"Molybdenum Percentage Weight in Material");
    MAT_MUE2                            = VALUE(FLOAT,"Manganese Percentage Weight in Material");
    MAT_Wmax_pt1                        = VALUE(FLOAT,"Tungsten Percentage Weight in Material");
    MAT_A1                              = VALUE(FLOAT,"Aluminium Percentage Weight in Material");
    MAT_C                               = VALUE(FLOAT,"Carbon Percentage Weight in Material");
    MAT_c1_t                            = VALUE(FLOAT,"Chromium Percentage Weight in Material");
    MAT_SRE                             = VALUE(FLOAT,"Silicon Percentage Weight in Material");
    MAT_c2_t                            = VALUE(FLOAT,"Copper Percentage Weight in Material");
    MAT_A2                              = VALUE(FLOAT,"Arsenic Percentage Weight in Material");
    MAT_c1_c                            = VALUE(FLOAT,"Cobalt Percentage Weight in Material");
    MAT_NUt                             = VALUE(FLOAT,"Nickel Percentage Weight in Material");
    MAT_VOL                             = VALUE(FLOAT,"Vanadium Percentage Weight in Material");
    MAT_PR                              = VALUE(FLOAT,"Phosphorous Percentage Weight in Material");
    MAT_T0                              = VALUE(FLOAT,"Titanium Percentage Weight in Material");
    Heat_Inp_opt                        = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT                     = VALUE(SUBOBJECT, "");
    THERM_STRESS                        = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS                 = VALUE(SUBOBJECT, "");
    ALE_Form                            = VALUE(INT, "Flag for heat transfer formulation");
    SUBGRP_ALE_MAT                      = VALUE(SUBOBJECT, "");
    SUBGRP_EULER_MAT                    = VALUE(SUBOBJECT, "");
    IO_FLAG                             = VALUE(INT, "");
    TITLE                               = VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                     = 9000;
    COMMENTS                        = 5109;
    CommentEnumField                = 7951;
    MAT_REFRHO_Option               = 4285;
    MAT_RHO                         = 118;
    Refer_Rho                       = 4229;
    ALPHA1                          = 6145;
    ALPHA2                          = 6146;
    Alpha_y                         = 350;
    FScale11                        = 4050;
    FScale11_2                      = 4429;
    FScale12                        = 4053;
    FScale12_2                      = 4432;
    FScale22                        = 4051;
    FScale22_2                      = 4430;
    FScale23                        = 4054;
    FScale33                        = 4052;
    FScale33_2                      = 4431;
    FUN_A1                          = 45;
    FUN_A2                          = 170;
    FUN_A3                          = 172;
    FUN_A4                          = 200;
    FUN_A5                          = 1141;
    Fcut                            = 5356;
    Fsmooth                         = 5355;
    MAT_A1                          = 280;
    MAT_A2                          = 281;
    MAT_B                           = 995;
    MAT_C                           = 996;
    MAT_CAP_END                     = 5062;
    MAT_E                           = 119;
    MAT_K                           = 998;
    MAT_K_UNLOAD                    = 5050;
    MAT_Lamda                       = 4100;
    MAT_MUE1                        = 8014;
    MAT_MUE2                        = 8015;
    MAT_NU                          = 120;
    MAT_NUt                         = 5083;
    MAT_PC                          = 282;
    MAT_PR                          = 5096;
    MAT_SRE                         = 158;
    MAT_T0                          = 6133;
    MAT_Theta                       = 4094;
    MAT_VOL                         = 4276;
    MAT_Wmax_pt1                    = 6010;
    MAT_c1_c                        = 6023;
    MAT_c1_t                        = 6006;
    MAT_c2_t                        = 6014;
    MAT_fct_IDE                     = 312;
    PrMesh_Size                     = 4828;
    Q                               = 4487;
    SCALE                           = 13;
    T_Initial                       = 4113;
    WPREF                           = 4041;
    qa_l                            = 4328;
    qb_l                            = 4329;
    time_inputunit_value            = 4607;
    NUM_COMMENTS                    = 5110;
    DUMMY                           = -1;
    Heat_Inp_opt                    = 4346;
    SUBGRP_HEAT_MAT                 = -1;
    THERM_STRESS                    = 4555;
    SUBGRP_THERM_STRESS             = -1;
    ALE_Form                        = 4336;
    SUBGRP_ALE_MAT                  = -1;
    SUBGRP_EULER_MAT                = -1;
    IO_FLAG                         = -1;
    TITLE                           = -1;
}
DRAWABLES(COMMON) 
{
public:
    INITIAL_DENSITY         = SCALAR(MAT_RHO);
    POISSON_RATIO           = SCALAR(MAT_NU);
    YOUNG_MODULUS   = SCALAR(MAT_E);
    SOUND_SPEED     = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
        private:
    G                       = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
    C1                      = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
public:
    SOUND_SPEED_SOLID       = EVAL(((4*G/3+C1)/INITIAL_DENSITY)^0.5);
}

CHECK(COMMON)
{
    MAT_A1                          >=0;
    MAT_A1                          <=1;
    MAT_A2                          >=0;
    MAT_A2                          <=1;
    MAT_B                           >=0;
    MAT_B                           <=1;
    MAT_C                           >=0;
    MAT_C                           <=1;
    MAT_MUE1                        >=0;
    MAT_MUE1                        <=1;
    MAT_MUE2                        >=0;
    MAT_MUE2                        <=1;
    MAT_NU                          >=0;
    MAT_NU                          <=1;
    MAT_PR                          >=0;
    MAT_PR                          <=1;
    MAT_RHO                         >0.0;
    MAT_SRE                         >=0;
    MAT_SRE                         <=1;
    MAT_T0                          >=0;
    MAT_T0                          <=1;
    MAT_VOL                         >=0;
    MAT_VOL                         <=1;
    MAT_Wmax_pt1                    >=0;
    MAT_Wmax_pt1                    <=1;
    MAT_c1_c                        >=0;
    MAT_c1_c                        <=1;
    MAT_c1_t                        >=0;
    MAT_c1_t                        <=1;
    MAT_c2_t                        >=0;
    MAT_c2_t                        <=1;
}

DEFAULTS(COMMON)
{
    FScale11                        = 1.0;
    FScale12                        = 1.0;
    FScale22                        = 1.0;
    FScale23                        = 1.0;
    FScale33                        = 1.0;
    Fcut                            = 1.0e30;
    Fsmooth                         = 0;
    Q                               = 13588;
    SCALE                           = 1.0;
    qa_l                            = 11575;
    qb_l                            = 13840;
    time_inputunit_value            = 3600;
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    ASSIGN(KEYWORD_STR, "/MAT");
    ASSIGN(KEYWORD_STR, "/LAW80/");
    FLAG(MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)   { DIMENSION="density";       }
    }
mandatory:
    SCALAR(MAT_RHO)         { DIMENSION="density";            }
    SCALAR(MAT_E)           {DIMENSION="pressure";}
    SCALAR(MAT_NU)          {DIMENSION="DIMENSIONLESS";}
optional:
    DATA(MAT_fct_IDE);
    /*
    {
    X_TITLE ="Temperature";
    X_DIMENSION="k";
    Y_TITLE ="Young's modulus";
    Y_DIMENSION="pressure";
    }
    */
    SCALAR(SCALE) ;
    SCALAR(time_inputunit_value) ;
    RADIO(Fsmooth)
    {
        ADD(0,"No Strain Rate Smoothing");
        ADD(1,"strain Rate Smoothing is Active");
    }
    SCALAR(Fcut) {DIMENSION="f";}
    SCALAR(MAT_CAP_END);
    SCALAR(MAT_PC);
mandatory:
    DATA(FUN_A1);
    DATA(FUN_A2);
    DATA(FUN_A3);
    DATA(FUN_A4);
    DATA(FUN_A5);
optional:
    SCALAR(FScale11) {DIMENSION="pressure";}
    SCALAR(FScale22) {DIMENSION="pressure";}
    SCALAR(FScale33) {DIMENSION="pressure";}
    SCALAR(FScale12) {DIMENSION="pressure";}
    SCALAR(FScale23) {DIMENSION="pressure";}
    SCALAR(FScale11_2) ;
    SCALAR(FScale22_2) ;
    SCALAR(FScale33_2) ;
    SCALAR(FScale12_2) ;
    SCALAR(ALPHA1)          {DIMENSION="coefficient_of_linear_inflation";}
    SCALAR(ALPHA2)          {DIMENSION="coefficient_of_linear_inflation";}
    SCALAR(qa_l)            {DIMENSION="k";}
    SCALAR(qb_l)            {DIMENSION="k";}
    SCALAR(Q)               {DIMENSION="k";}
    SCALAR(Alpha_y);
    SCALAR(WPREF)           {DIMENSION="k";}
    SCALAR(PrMesh_Size) ;
    SCALAR(MAT_K) ;
    SCALAR(MAT_K_UNLOAD) ;
    SCALAR(MAT_Lamda)       {DIMENSION="energydensity";}
    SCALAR(MAT_Theta)       {DIMENSION="energydensity";}
    SCALAR(T_Initial) ;
    SCALAR(MAT_B);
    SCALAR(MAT_MUE1);
    SCALAR(MAT_MUE2);
    SCALAR(MAT_Wmax_pt1);
    SCALAR(MAT_A1);
    SCALAR(MAT_C);
    SCALAR(MAT_c1_t);
    SCALAR(MAT_SRE);
    SCALAR(MAT_c2_t);
    SCALAR(MAT_A2);
    SCALAR(MAT_c1_c);
    SCALAR(MAT_NUt);
    SCALAR(MAT_VOL);
    SCALAR(MAT_PR);
    SCALAR(MAT_T0);
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    }
    /*
    graphical SUPPORT("Support") 
    {
    OBJECTS=(/COMPONENT/SHELL,/COMPONENT/SHELL3N,/COMPONENT/SHELL4N);
    ADD(COMPONENT,"Parts");
    }
    */
}

GUI(ALE) {
optional:
    graphical RADIO(ALE_Form) 
    {
        ADD(1,"NONE") ;
        ADD(2,"ALE") ;
        ADD(3,"EULER");
    }
    if(ALE_Form == 2)
    {
        SUBOBJECT(SUBGRP_ALE_MAT) {SUBTYPES = (/SUBOBJECT/ALE_MAT);}
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECT(SUBGRP_EULER_MAT) {SUBTYPES = (/SUBOBJECT/EULER);}
    }
}

FORMAT(radioss120)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/MAT/LAW80/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                  E                  Nu   Fct_IDE             YscaleE           Time_unit") ;
    CARD("%20lg%20lg%10d%20lg%20lg",MAT_E,MAT_NU,MAT_fct_IDE,SCALE,time_inputunit_value);
    COMMENT("#            Fsmooth                Fcut                Ceps                Peps") ;
    CARD("          %10d%20lg%20lg%20lg",Fsmooth,Fcut,MAT_CAP_END,MAT_PC);
    COMMENT("#  ID_YLD1   ID_YLD2   ID_YLD3   ID_YLD4   ID_YLD5") ;
    CARD("%10d%10d%10d%10d%10d",FUN_A1,FUN_A2,FUN_A3,FUN_A4,FUN_A5);
    COMMENT("#            Yscale1             Yscale2             Yscale3             Yscale4             Yscale5") ;
    CARD("%20lg%20lg%20lg%20lg%20lg",FScale11,FScale22,FScale33,FScale12,FScale23);
    BLANK;
    COMMENT("#             Theta2              Theta3              Theta4              Theta5") ;
    CARD("%20lg%20lg%20lg%20lg",FScale11_2,FScale22_2,FScale33_2,FScale12_2);
    COMMENT("#             Alpha1              Alpha2") ;
    CARD("%20lg%20lg",ALPHA1,ALPHA2);
    COMMENT("#                QR2                 QR3                 QR4               Alpha                Tref") ;
    CARD("%20lg%20lg%20lg%20lg%20lg",qa_l,qb_l,Q,Alpha_y,WPREF);
    COMMENT("#                                                                                              Gsize") ;
    CARD("                                                                                %20lg",PrMesh_Size);
    COMMENT("#                 KF                  KP                Lat1                Lat2                Tini") ;
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_K,MAT_K_UNLOAD,MAT_Lamda,MAT_Theta,T_Initial);
    COMMENT("#                  B                  Mo                  Mn                   W                  Al") ;
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_B,MAT_MUE1,MAT_MUE2,MAT_Wmax_pt1,MAT_A1);
    COMMENT("#                  C                  Cr                  Si                  Cu                  As") ;
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_C,MAT_c1_t,MAT_SRE,MAT_c2_t,MAT_A2);
    COMMENT("#                 Co                  Ni                   V                   P                  Ti") ;
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_c1_c,MAT_NUt,MAT_VOL,MAT_PR,MAT_T0);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(ALE_Form == 2)
    {
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
    }
}