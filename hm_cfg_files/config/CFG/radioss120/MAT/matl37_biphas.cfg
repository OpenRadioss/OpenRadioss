//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material law 37 (BIPHAS) Setup File
ATTRIBUTES(COMMON) {
    KEYWORD_STR                     = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                    = SIZE("NUM_COMMENTS");
    CommentEnumField                = VALUE(INT,"User Comments");
    COMMENTS                        = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    // Initial and reference densities
    MAT_RHO                         = VALUE(FLOAT,"Initial Density");
    Refer_Rho                       = VALUE(FLOAT,"Reference Density (for lower than 14.0 version)");
    DUMMY                           = VALUE(STRING,"Dummy variable for Ref_Rho flag");
    MAT_REFRHO_Option               = VALUE(INT, "RefRho_Option");
    // Other values
    Lqud_Rho_l                      = VALUE(FLOAT,"Liquid Reference Density");
    C_l                             = VALUE(FLOAT,"Liquid Bulk Modulus");
    ALPHA1                          = VALUE(FLOAT,"Initial Massic Liquid Proportion");
    Nu_l                            = VALUE(FLOAT,"Shear Kinematic Viscosity");
    Bulk_Ratio_l                    = VALUE(FLOAT,"Volumetric Viscosity (Kinematic) for Liquid");
    Lqud_Rho_g                      = VALUE(FLOAT,"Reference Gas Density");
    Lqud_Gamma_bulk                 = VALUE(FLOAT,"Perfect Gas Constant");
    Lqud_P0                         = VALUE(FLOAT,"Reference Gas Initial Pressure");
    Nu_g                            = VALUE(FLOAT,"Shear Kinematic Viscosity");
    Bulk_Ratio_g                    = VALUE(FLOAT,"Volumetric Viscosity (Kinematic) for Gas");
    // HEAT
    Heat_Inp_opt                    = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT                 = VALUE(SUBOBJECT, "");
    // THERM_STRESS
    THERM_STRESS                    = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS             = VALUE(SUBOBJECT, "");
    ALE_Form                        = VALUE(INT, "Flag for Heat Transfer Formulation");
    SUBGRP_ALE_MAT                  = VALUE(SUBOBJECT, "");
    SUBGRP_EULER_MAT                = VALUE(SUBOBJECT, "");
    IO_FLAG                         = VALUE(INT, "");
    LAW_NO                          = VALUE(STRING, "");
    Mat_Name_OR_LawNo               = VALUE(INT,  "RADIOSS_COMMENT_FLAG");
    TITLE                           = VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                     = 9000;
    COMMENTS                        = 5109;
    CommentEnumField                = 7951;
    MAT_REFRHO_Option               = 4285;
    MAT_RHO                         = 118;
    Refer_Rho                       = 4229;
    DUMMY                           = -1;
    ALPHA1                          = 6145;
    Bulk_Ratio_g                    = 4266;
    Bulk_Ratio_l                    = 4261;
    C_l                             = 4259;
    Lqud_Gamma_bulk                 = 4263;
    Lqud_P0                         = 4264;
    Lqud_Rho_g                      = 4262;
    Lqud_Rho_l                      = 4258;
    Nu_g                            = 4265;
    Nu_l                            = 4260;
    NUM_COMMENTS                    = 5110;
    //HEAT
    Heat_Inp_opt                    = 4346;
    SUBGRP_HEAT_MAT                 = -1;
    // THERM_STRESS
    THERM_STRESS                    = 4555;
    SUBGRP_THERM_STRESS             = -1;
    ALE_Form                        = 4336;
    SUBGRP_ALE_MAT                  = -1;
    SUBGRP_EULER_MAT                = -1;
    LAW_NO                          = -1;
    Mat_Name_OR_LawNo               = 4538;
    IO_FLAG                         = -1;
    TITLE                           = -1;
}

DRAWABLES(COMMON) {
public:
    INITIAL_DENSITY                         = SCALAR(MAT_RHO);
}

GUI(COMMON) {
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if(Mat_Name_OR_LawNo == 2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW37/");
    }
    else 
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/BIPHAS/");
    }
    mandatory:
        SCALAR(Lqud_Rho_l)    { DIMENSION="density";}
        SCALAR(C_l)         { DIMENSION="pressure"; }
    optional:
        RADIO(ALPHA1){
            ADD(0, "0: Gas");
            ADD(1, "1: Liquid");
        }
        SCALAR(Nu_l)               { DIMENSION = "eddyviscosity"; }
        SCALAR(Bulk_Ratio_l)       { DIMENSION = "eddyviscosity"; }
    mandatory:
        SCALAR(Lqud_Rho_g)  { DIMENSION="density"; }
        SCALAR(Lqud_Gamma_bulk)    { DIMENSION = "DIMENSIONLESS";}
        SCALAR(Lqud_P0)     { DIMENSION="pressure"; }
    optional:
        SCALAR(Nu_g)               { DIMENSION = "eddyviscosity"; }
        SCALAR(Bulk_Ratio_g)       { DIMENSION = "eddyviscosity"; }
        // HEAT data
        graphical FLAG(Heat_Inp_opt);
        if (Heat_Inp_opt!= 0) {
            SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
        } 
        graphical FLAG(THERM_STRESS);
        if (THERM_STRESS!= 0) {
            SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
        }
    /*
    mandatory:
    graphical SUPPORT("Support") {
    OBJECTS=(/COMPONENT/QUAD,/COMPONENT/BRICK);
    ADD(COMPONENT,"Parts");
    }
    */
}
GUI(ALE) {
optional:
    graphical RADIO(ALE_Form) 
    {
        ADD(1,"NONE");
        ADD(2,"ALE");
        ADD(3,"EULER");
    }
    if(ALE_Form == 2)
    {    
        SUBOBJECT(SUBGRP_ALE_MAT) {SUBTYPES = (/SUBOBJECT/ALE_MAT);}
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECT(SUBGRP_EULER_MAT) {SUBTYPES = (/SUBOBJECT/EULER);}
    }
}
//File format
FORMAT(radioss120) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW37/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/BIPHAS/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    COMMENT("#blank card");
    BLANK ;
    COMMENT("#             RHO_l0                 C_l             ALPHA_l                NU_l            NU_VOL_l");
    CARD("%20lg%20lg%20lg%20lg%20lg",Lqud_Rho_l,C_l,ALPHA1,Nu_l,Bulk_Ratio_l);
    COMMENT("#             RHO_G0               GAMMA                  P0                NU_g            NU_VOL_g");
    CARD("%20lg%20lg%20lg%20lg%20lg",Lqud_Rho_g,Lqud_Gamma_bulk,Lqud_P0,Nu_g,Bulk_Ratio_g);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(ALE_Form == 2)
    {
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
    }
}
FORMAT(radioss90) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW37/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/BIPHAS/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#             RHO_l0                 C_l             ALPHA_l                NU_l    LAMBDA_ON_RHO_l0");
    CARD("%20lg%20lg%20lg%20lg%20lg",Lqud_Rho_l,C_l,ALPHA1,Nu_l,Bulk_Ratio_l);
    COMMENT("#             RHO_G0               GAMMA                  P0                NU_g    LAMBDA_ON_RHO_g0");
    CARD("%20lg%20lg%20lg%20lg%20lg",Lqud_Rho_g,Lqud_Gamma_bulk,Lqud_P0,Nu_g,Bulk_Ratio_g);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(ALE_Form == 2)
    {
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
    }
}
FORMAT(radioss51) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW37/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/BIPHAS/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#        Init. dens.          Ref. dens.");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#        Init. dens.");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#              RHO_L                  CL             ALPHA_L                NU_L     LAMBDA_ON_RHO_L");
    CARD("%20lg%20lg%20lg%20lg%20lg",Lqud_Rho_l,C_l,ALPHA1,Nu_l,Bulk_Ratio_l);
    COMMENT("#              RHO_G               GAMMA                  P0                NU_G     LAMBDA_ON_RHO_G");
    CARD("%20lg%20lg%20lg%20lg%20lg",Lqud_Rho_g,Lqud_Gamma_bulk,Lqud_P0,Nu_g,Bulk_Ratio_g);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(ALE_Form == 2)
    {
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
    }
}
FORMAT(radioss41) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    COMMENT("#    Init. dens.");
    CARD("%16lg",MAT_RHO);
    COMMENT("#          RHO_L              CL         ALPHA_L            NU_L LAMBDA_ON_RHO_L");
    CARD("%16lg%16lg%16lg%16lg%16lg",Lqud_Rho_l,C_l,ALPHA1,Nu_l,Bulk_Ratio_l);
    COMMENT("#          RHO_G           GAMMA              P0            NU_G LAMBDA_ON_RHO_G");
    CARD("%16lg%16lg%16lg%16lg%16lg",Lqud_Rho_g,Lqud_Gamma_bulk,Lqud_P0,Nu_g,Bulk_Ratio_g);
}