//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 00
//

ATTRIBUTES(COMMON)
{
    NUM_COMMENTS                        = SIZE("NUM_COMMENTS");
    COMMENTS                            = ARRAY[NUM_COMMENTS](STRING,  "Entity_Comments");
    CommentEnumField                    = VALUE(INT,  "User Comments");
    IO_FLAG                             = VALUE(INT,"");
    DUMMY                               = VALUE(STRING,"");
    TITLE                               = VALUE(STRING,"");
    KEYWORD_STR                         = VALUE(STRING, "Solver Keyword");
    MGAS_TYPE                           = VALUE(INT,  "TYPE");
    // TYPE == MASS & MOLE
    MASS                                = VALUE(FLOAT,  "Molecular Weight of Gas");
    ABG_cpai                            = VALUE(FLOAT,  "Cpa Coefficient in the Relation Cp(T)");
    ABG_cpbi                            = VALUE(FLOAT,  "Cpb Coefficient in the Relation Cp(T)");
    ABG_cpci                            = VALUE(FLOAT,  "Cpc Coefficient in the Relation Cp(T)");
    MAT_D                               = VALUE(FLOAT,  "Cpd Coefficient in the Relation Cp(T)");
    MAT_E1                              = VALUE(FLOAT,  "Cpe Coefficient in the Relation Cp(T)");
    MAT_F                               = VALUE(FLOAT,  "Cpf Coefficient in the Relation Cp(T)");
    // TYPE == PREDEF
    GAS                                 = VALUE(STRING,  "Predefined Gas Name");
    // TYPE == CSTA
    MAT_BSAT                            = VALUE(FLOAT,  "Cp Specific Heat at Constant Pressure");
    MAT_RSAT                            = VALUE(FLOAT,  "Cv Specific Heat at Constant Volume");
    // HEAT
    Heat_Inp_opt                        = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT                     = VALUE(SUBOBJECT, "");
    // THERM_STRESS
    THERM_STRESS                        = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS                 = VALUE(SUBOBJECT, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                         = 9000;
    ABG_cpai                            = 908;
    ABG_cpbi                            = 909;
    ABG_cpci                            = 910;
    GAS                                 = 4658;
    MASS                                = 167;
    MAT_D                               = 997;
    MAT_E1                              = 1127;
    MAT_F                               = 6136;
    MAT_BSAT                            = 4750;
    MAT_RSAT                            = 4751;
    MGAS_TYPE                           = 4657;
    DUMMY                               = -1;
    IO_FLAG                             = -1;
    COMMENTS                            = 5109;
    CommentEnumField                    = 7951;
    NUM_COMMENTS                        = 5110;
    //HEAT
    Heat_Inp_opt                        = 4346;
    SUBGRP_HEAT_MAT                     = -1;
    // THERM_STRESS
    THERM_STRESS                        = 4555;
    SUBGRP_THERM_STRESS                 = -1;
}


GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if( CommentEnumField == 2)
    {
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }

    RADIO(MGAS_TYPE)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "MASS");
        ADD(2, "MOLE");
        ADD(3, "PREDEF");
        ADD(4, "CSTA");

    }
    ASSIGN(KEYWORD_STR, "/MAT");
    ASSIGN(KEYWORD_STR, "/GAS");

    if(MGAS_TYPE ==1)
    { 
        ASSIGN(KEYWORD_STR, "/MASS/");
    }
    if(MGAS_TYPE ==2)
    { 
        ASSIGN(KEYWORD_STR, "/MOLE/");
    }
    if(MGAS_TYPE ==3)
    { 
        ASSIGN(KEYWORD_STR, "/PREDEF/");
    }
    if(MGAS_TYPE ==4)
    { 
        ASSIGN(KEYWORD_STR, "/CSTA/");
    }

    if( MGAS_TYPE ==1 || MGAS_TYPE ==2)
    {
        SCALAR(MASS)                { DIMENSION="molar_mass"; }
        SCALAR(ABG_cpai)            { DIMENSION="thermal_massic_capacity"; }
        SCALAR(ABG_cpbi)            { DIMENSION="thermal_massic_capacity_on_temperature"; }
        SCALAR(ABG_cpci)            { DIMENSION="thermal_massic_capacity_on_square_of_temperature"; }
        SCALAR(MAT_D)               { DIMENSION="thermal_massic_capacity_on_cube_of_temperature"; }
        SCALAR(MAT_E1)              { DIMENSION="thermal_massic_capacity"; }
    }

    if( MGAS_TYPE==1)
    {
        SCALAR(MAT_F)               { DIMENSION="thermal_massic_capacity_on_square_of_temperature"; }
    }

    if( MGAS_TYPE==3)
    {
        RADIO(GAS) 
        {
            ENUM_VALUE_FLAG=TRUE;
            ADD("N2","N2");
            ADD("O2","O2");
            ADD("CO2","CO2");
            ADD("CO","CO");
            ADD("AR","AR");
            ADD("NE","NE");
            ADD("HE","HE");
            ADD("H2","H2");
            ADD("H2O","H2O");
            ADD("NH3","NH3");
            ADD("N2S","N2S");
            ADD("C6H6","C6H6");
            ADD("N20","N20");
            ADD("AIR","AIR");
        }
    }

    if( MGAS_TYPE==4)
    {
        SCALAR(MAT_BSAT)            { DIMENSION="thermal_massic_capacity"; }
        SCALAR(MAT_RSAT)            { DIMENSION="thermal_massic_capacity"; }
    }

optional:

    // HEAT data
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }
    // THERM_STRESS
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    }

    /*mandatory:
    graphical SUPPORT("Support") {
    OBJECTS=(/PART/QUAD,/PART/BRICK,/PART/TETRA4,/PART/TETRA10,/PART/SHEL16,/PART/BRIC20,/PART/SPHCEL,
    /PART/LINEAR_3D,/PART/LINEAR_THICK,/PART/PENTA6);
    ADD(PART,"Parts");
    }
    */
}


FORMAT(radioss100) {
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);
    if(IO_FLAG == 0 &&MGAS_TYPE ==2)
    {
        HEADER("/MAT/GAS/MOLE/%d",_ID_);
    }
    else if(IO_FLAG == 0 &&MGAS_TYPE ==3)
    {
        HEADER("/MAT/GAS/PREDEF/%d",_ID_);
    }
    else if (IO_FLAG == 0)
    {
        HEADER("/MAT/GAS/MASS/%d",_ID_);
    }

    if(IO_FLAG == 0)
    {
        CARD("%-s",TITLE);
    }

    if(IO_FLAG == 1)
    {
        HEADER("/MAT/GAS/%s/%d",DUMMY,_ID_);
    }
    if(IO_FLAG == 1 && DUMMY =="MASS")
    {
        ASSIGN(MGAS_TYPE,1,IMPORT);
    }
    if(IO_FLAG == 1 && DUMMY =="MOLE")
    {
        ASSIGN(MGAS_TYPE,2,IMPORT);
    }
    if(IO_FLAG == 1 && DUMMY =="PREDEF")
    {
        ASSIGN(MGAS_TYPE,3,IMPORT);
    }

    if(MGAS_TYPE==2)
    {
        COMMENT("#                 MW");
        CARD("%20lg",MASS);
        COMMENT("#                Cpa                 Cpb                 Cpc                 Cpd                 Cpe");
        CARD("%20lg%20lg%20lg%20lg%20lg",ABG_cpai,ABG_cpbi,ABG_cpci,MAT_D,MAT_E1);  
    }
    else if(MGAS_TYPE==3)
    {
        COMMENT("#Gas Name");
        CARD("%-8s",GAS);
    }
    else
    {
        COMMENT("#                 MW");
        CARD("%20lg",MASS);
        COMMENT("#                Cpa                 Cpb                 Cpc                 Cpd                 Cpe");
        CARD("%20lg%20lg%20lg%20lg%20lg",ABG_cpai,ABG_cpbi,ABG_cpci,MAT_D,MAT_E1);  
        COMMENT("#                Cpf");
        CARD("%20lg",MAT_F);  
    }

    // HEAT data
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    // THERM_STRESS 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}

FORMAT(radioss120) {

    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);
    if(IO_FLAG == 0 &&MGAS_TYPE ==2)
    {
        HEADER("/MAT/GAS/MOLE/%d",_ID_);
    }
    else if(IO_FLAG == 0 &&MGAS_TYPE ==3)
    {
        HEADER("/MAT/GAS/PREDEF/%d",_ID_);
    }
    else if(IO_FLAG == 0 &&MGAS_TYPE ==4)
    {
        HEADER("/MAT/GAS/CSTA/%d",_ID_);
    }
    else if(IO_FLAG == 0)
    {
        HEADER("/MAT/GAS/MASS/%d",_ID_);
    }
    
    if(IO_FLAG == 0)
    {
        CARD("%-s",TITLE);
    }

    if(IO_FLAG == 1)
    {
        HEADER("/MAT/GAS/%s/%d",DUMMY,_ID_);
    }
    if(IO_FLAG == 1 && DUMMY =="MASS")
    {
        ASSIGN(MGAS_TYPE,1,IMPORT);
    }
    if(IO_FLAG == 1 && DUMMY =="MOLE")
    {
        ASSIGN(MGAS_TYPE,2,IMPORT);
    }
    if(IO_FLAG == 1 && DUMMY =="PREDEF")
    {
        ASSIGN(MGAS_TYPE,3,IMPORT);
    }
    if(IO_FLAG == 1 && DUMMY =="CSTA")
    {
        ASSIGN(MGAS_TYPE,4,IMPORT);
    }

    if(MGAS_TYPE==2)
    {
        COMMENT("#                 MW");
        CARD("%20lg",MASS);
        COMMENT("#                Cpa                 Cpb                 Cpc                 Cpd                 Cpe");
        CARD("%20lg%20lg%20lg%20lg%20lg",ABG_cpai,ABG_cpbi,ABG_cpci,MAT_D,MAT_E1);  
    }
    else if(MGAS_TYPE==3)
    {
        COMMENT("#  Gas Name");
        CARD("%-8s",GAS);
    }
    else if(MGAS_TYPE==4)
    {
        COMMENT("#                 Cp                  Cv");
        CARD("%20lg%20lg",MAT_BSAT,MAT_RSAT);
    }
    else
    {
        COMMENT("#                 MW");
        CARD("%20lg",MASS);
        COMMENT("#                Cpa                 Cpb                 Cpc                 Cpd                 Cpe");
        CARD("%20lg%20lg%20lg%20lg%20lg",ABG_cpai,ABG_cpbi,ABG_cpci,MAT_D,MAT_E1);  
        COMMENT("#                Cpf");
        CARD("%20lg",MAT_F);  
    }

    
    // HEAT data
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    // THERM_STRESS 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }

}