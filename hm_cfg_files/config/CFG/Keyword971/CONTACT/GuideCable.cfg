//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// CONTACT_GUIDED_CABLE
// 


 ATTRIBUTES(COMMON) 
 
 {
  
  // Initial and reference densities
  KEYWORD_STR                     = VALUE(STRING, "Solver Keyword");
  IdOption                        = VALUE(INT, "IDOption");
  LSDYNA_SOFT                     = VALUE(INT, "Flag for soft constraint option");
  LSDYNA_SSFAC                    = VALUE(FLOAT, "Stiffness scale factor for penalty stiffness value");
  LSDYNA_FRIC                     = VALUE(FLOAT, "Contact friction");
}

DEFAULTS(COMMON)
{
    LSDYNA_SSFAC            = 1.0;
   
}

SKEYWORDS_IDENTIFIER(COMMON)

{

 KEYWORD_STR                 = 9000;
 IdOption                    = 8113;
 LSDYNA_SOFT                 = 22;
 LSDYNA_SSFAC                = 7899;
 LSDYNA_FRIC                 = 59;
}


GUI(COMMON) 

{


    ASSIGN(KEYWORD_STR, "*CONTACT_GUIDED_CABLE");
    
    FLAG(IdOption);
    if(IdOption == TRUE)
    {
        ASSIGN(KEYWORD_STR, "_ID");
    }
    RADIO(LSDYNA_SOFT)
    {
        ADD(0, "0: Penalty formulation");
        ADD(1, "1: Soft constraint formulation");
    }
    SCALAR(LSDYNA_SSFAC);
    SCALAR(LSDYNA_FRIC);
}

// File format
FORMAT(Keyword971) {
//
COMMENT("$     NSID  PID/PSID      SOFT     SSFAC      FRIC");
CARD("                    %10d%10lg%10lg",LSDYNA_SOFT,LSDYNA_SSFAC,LSDYNA_FRIC);

}
