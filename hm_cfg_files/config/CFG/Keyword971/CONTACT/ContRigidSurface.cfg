//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// CONTACT_RIGID_SURFACE
// 


 ATTRIBUTES(COMMON) {
  
  // Initial and reference densities
  KEYWORD_STR                     = VALUE(STRING, "Solver Keyword");
  LSD_BOXID                       = VALUE(FUNCT, "BOXID");
  setSegmentType                  = VALUE(INT, "Set Segment Type");
  LSD_SETSEG                      = VALUE(FUNCT, "SEGID");
  LSD_SegGenSID                   = VALUE(FUNCT, "SEGID");
  LSDYNA_FS                       = VALUE(FLOAT, "Static coefficient of friction");
  LSDYNA_FD                       = VALUE(FLOAT, "Dynamic coefficient of friction");
  LSDYNA_DC                       = VALUE(FLOAT, "Exponential decay coefficient");
  LSDYNA_VC                       = VALUE(FLOAT, "Coefficient for viscous friction");
  LSD_LCID2                       = VALUE(FUNCT, "X-direction motion curve");
  LSD_LCID                        = VALUE(FUNCT, "Y-direction motion curve");
  LSD_LCID3                       = VALUE(FUNCT, "Z-direction motion curve");
  LSD_LCID4                       = VALUE(FUNCT, "Static coefficient of friction vs interface pressure");
  LSD_LCID5                       = VALUE(FUNCT, "Dynamic coefficient of friction vs interface pressure");
  LSDYNA_SFS                      = VALUE(FLOAT, "Scale factor on default secondary penalty stiffness");
  LSD_STTHK                       = VALUE(FLOAT, "Thickness for secondary surface");
  LSD_SFTHK                       = VALUE(FLOAT, "Scale factor for secondary surface thickness");
  LSD_XPENE                       = VALUE(FLOAT, "Maximum penetration check multiplier");
  LSD_BSORT1                      = VALUE(FLOAT, "Number of cycles between bucket sorts");
    
    
}

DEFAULTS(COMMON)
{
 LSDYNA_SFS     = 1.0;
 LSD_SFTHK      = 1.0; 
 LSD_XPENE      = 4.0; 
 LSD_BSORT1     = 10.0;
 
 
}
SKEYWORDS_IDENTIFIER(COMMON)
{

 KEYWORD_STR                 = 9000;
 LSD_BOXID                   = 4170;
 LSD_SETSEG                  = 4171;
 setSegmentType              = 5786;
 LSD_SegGenSID               = 5787;
 LSDYNA_FS                   = 5;
 LSDYNA_FD                   = 6;
 LSDYNA_DC                   = 7;
 LSDYNA_VC                   = 8;
 LSD_LCID2                   = 168;
 LSD_LCID                    = 45;
 LSD_LCID3                   = 170;
 LSD_LCID4                   = 171;
 LSD_LCID5                   = 172;
 LSDYNA_SFS                  = 13;
 LSD_STTHK                   = 4349;
 LSD_SFTHK                   = 4350;
 LSD_XPENE                   = 2126;
 LSD_BSORT1                  = 4351;

}


GUI(COMMON) {


    ASSIGN(KEYWORD_STR, "*CONTACT_RIGID_SURFACE");
    
    DATA(LSD_BOXID);
    RADIO(setSegmentType)
    {
        ADD(0, "Set Segment");
        ADD(1, "Set Segment General");
    }
    DATA(LSD_SegGenSID);
    SCALAR(LSDYNA_FS)               { DIMENSION = "DIMENSIONLESS";}
    SCALAR(LSDYNA_FD)               { DIMENSION = "DIMENSIONLESS";}
    SCALAR(LSDYNA_DC)               { DIMENSION = "DIMENSIONLESS";}
    SCALAR(LSDYNA_VC)               { DIMENSION = "DIMENSIONLESS";}
    DATA(LSD_LCID);
    DATA(LSD_LCID2);
    DATA(LSD_LCID3);
    DATA(LSD_LCID4);
    DATA(LSD_LCID5);
    SCALAR(LSDYNA_SFS)              { DIMENSION = "DIMENSIONLESS";}
    SCALAR(LSD_STTHK)               { DIMENSION="l";}
    SCALAR(LSD_SFTHK)               { DIMENSION = "DIMENSIONLESS";}
    SCALAR(LSD_XPENE)               { DIMENSION = "DIMENSIONLESS";}
    SCALAR(LSD_BSORT1)              { DIMENSION = "DIMENSIONLESS";}
    
}

// File format
FORMAT(Keyword971) {

  COMMENT("$      CID      PSID     BOXID      SSID        FS        FD        DC        VC");
  CARD("                                        %10lg%10lg%10lg%10lg",LSDYNA_FS,LSDYNA_FD,LSDYNA_DC,LSDYNA_VC);

  //COMMENT("$    LCIDX     LCIDY     LCIDZ    FSLCID    FDLCID");
  //CARD("%10d%10d%10d%10d%10d",LSD_LCID,LSD_LCID2,LSD_LCID3,LSD_LCID4,LSD_LCID5);
 BLANK;
 COMMENT("$      SFS     STTHK     SFTHK     XPENE     BSORT");
  CARD("%10lg%10lg%10lg%10lg%10lg",LSDYNA_SFS,LSD_STTHK,LSD_SFTHK,LSD_XPENE,LSD_BSORT1);
}
