//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// BOUNDARY_FLUX_SET
// 


 ATTRIBUTES(COMMON) 
 
 {
  
  // Initial and reference densities
  KEYWORD_STR                     = VALUE(STRING, "Solver Keyword");
  secondaryentityids                  = VALUE(SETS,  "Secondary Surface Type") { SUBTYPES = (/SETS/SET_NODE_IDPOOL) ; }
  tensileStressCurveFlag          = VALUE(INT, "Heat Flux Options");
  LSD_LCID4                       = VALUE(FUNCT, "LCID");
  LSD_MLC1                        = VALUE(FLOAT, "Curve multiplier at node N1");
  LSD_MLC2                        = VALUE(FLOAT, "Curve multiplier at node N2");
  LSD_MLC3                        = VALUE(FLOAT, "Curve multiplier at node N3");
  LSD_MLC4                        = VALUE(FLOAT, "Curve multiplier at node N4");
  LSD_GRAV                        = VALUE(INT, "LOC");
  
}

SKEYWORDS_IDENTIFIER(COMMON)

{

 KEYWORD_STR                 = 9000;
 tensileStressCurveFlag      = 4723;
 LSD_LCID4                   = 171;
 LSD_MLC1                    = 963;
 LSD_MLC2                    = 964;
 LSD_MLC3                    = 965;
 LSD_MLC4                    = 966;
 LSD_GRAV                    = 464;
 
}


GUI(COMMON) 

{


    ASSIGN(KEYWORD_STR, "*BOUNDARY_FLUX_SET");
    RADIO(tensileStressCurveFlag)
    {
        ADD(0, "None");
        ADD(1, "Function versus time");
        ADD(2, "Function versus temperature");
    }
    if(tensileStressCurveFlag == 1 || tensileStressCurveFlag == 2)
    {
    DATA(LSD_LCID4);
    }
    SCALAR(LSD_MLC1);
    SCALAR(LSD_MLC2);
    SCALAR(LSD_MLC3);
    SCALAR(LSD_MLC4);
    RADIO(LSD_GRAV)
    {
        ADD(-1, "-1: Lower surface of thermal shell element");
        ADD( 1, " 1: Upper surface of thermal shell element");
    }
}

// File format
FORMAT(Keyword971) {
    //
    COMMENT("$     SSID");
    CARD("%10d",secondaryentityids);
    //
    COMMENT("$     LCID      MLC1      MLC2      MLC3      MLC4       LOC");
    CARD("%10d%10lg%10lg%10lg%10lg%10d",LSD_LCID4,LSD_MLC1,LSD_MLC2,LSD_MLC3,LSD_MLC4,LSD_GRAV);
}
