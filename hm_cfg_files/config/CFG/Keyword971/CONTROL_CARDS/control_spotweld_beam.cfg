//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//CONTROL_SPOTWELD_BEAM
//

ATTRIBUTES(COMMON) {
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    LSD_LCID                                = VALUE(CURVE,"Load curve ID for scaling the response in tension based on the shell element size");
    LSD_LCID2                               = VALUE(CURVE,"Load curve ID for scaling the response in shear based on the shell element size");
    LSD_LCID3                               = VALUE(CURVE,"Table ID for scaling the tension response based on location of the beam node relative to the centroid shell");
    LSD_CONT                                = VALUE(INT,"Set this flag to 1 to print for each spot weld attachment");
    LSD_LCID4                               = VALUE(CURVE,"Optional table ID for scaling the shear response");
    LSD_DERIV                               = VALUE(INT,"Replace each spot weld beam element with a cluster of RPBHX solid elements");
    LSD_BMSID                               = VALUE(SETS,"Optional beam set ID defining the beam element ID's that are to be converted to hex assemblies");
    LSD_ID_OFF                              = VALUE(INT,"This optional ID offset applies if and only if BMSID is nonzero");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    LSD_LCID                                = 45;
    LSD_LCID2                               = 168;
    LSD_LCID3                               = 170;
    LSD_CONT                                = 5204;
    LSD_LCID4                               = 171;
    LSD_DERIV                               = 5205;
    LSD_BMSID                               = 5837;
    LSD_ID_OFF                              = 5838;
}

CHECK(COMMON) {

}

DEFAULTS(COMMON)
{
    LSD_CONT                                = 0;
    LSD_DERIV                               = 0;
    LSD_ID_OFF                              = 0; 
}

GUI(COMMON) 
{
  ASSIGN(KEYWORD_STR, "*CONTROL_SPOTWELD_BEAM");

  DATA(LSD_LCID);
  DATA(LSD_LCID2);
  DATA(LSD_LCID3);
  RADIO(LSD_CONT) 
  {
      ADD(0,"0: Off") ;
      ADD(1,"1: On") ;
  }
  DATA(LSD_LCID4);
  RADIO(LSD_DERIV)
  {
    ADD(0,"0");
    ADD(1,"1");
    ADD(4,"4");
    ADD(8,"8");
  }
  DATA(LSD_BMSID);
  SCALAR(LSD_ID_OFF) {DIMENSION="DIMENSIONLESS";}
}

//File format
FORMAT(Keyword971)
{
  HEADER("*CONTROL_SPOTWELD_BEAM");
  COMMENT("$      LCT       LCS     T_ORT    PRTFLG     T_ORS     RPBHX     BMSID    ID_OFF");
  CARD("%10d%10d%10d%10d%10d%10d%10d%10d",LSD_LCID,LSD_LCID2,LSD_LCID3,LSD_CONT,LSD_LCID4,LSD_DERIV,LSD_BMSID,LSD_ID_OFF);
}
