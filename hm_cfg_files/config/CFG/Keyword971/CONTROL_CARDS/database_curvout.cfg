//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//DATABASE_CURVOUT
//

ATTRIBUTES(COMMON)
{
// INPUT ATTRIBUTES
    LSD_DT                                    = VALUE(FLOAT,"Time interval between outputs");
    LSD_BINARY                                = VALUE(STRING,"Flag for binary file");
    LSD_LCUR                                  = VALUE(FUNCT,"Optional load curve specifying time interval between dumps");
    LSD_IOOPT                                 = VALUE(INT,"Flag to govern behavior of the plot frequency load curve defined by LCDT");

// HM INTERNAL
    KEYWORD_STR                               = VALUE(STRING, "Solver Keyword");
    IO_FLAG                                   = VALUE(INT, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    LSD_DT                                    = 2224;
    LSD_BINARY                                = 1114;
    LSD_LCUR                                  = 1115;
    LSD_IOOPT                                 = 4483;

    KEYWORD_STR                               = 9000;
    IO_FLAG                                   = -1;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{

}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*DATABASE_CURVOUT");
   
    SCALAR(LSD_DT) {DIMENSION="DIMENSIONLESS";}

  RADIO(LSD_BINARY)
  {
    ADD("0","DEFAULT");
    ADD("1","ASCII");
    ADD("2","BINARY");
    ADD("3","ASCII + BINARY");
  }

   FUNCTION(LSD_LCUR)
   {
       X_TITLE="TIME";     X_DIMENSION="t";
       Y_TITLE="OUTPUT";   Y_DIMENSION="DIMENSIONLESS";
   }

  RADIO(LSD_IOOPT)
  {
    ADD(1,"1: The load curve value is added to the current time to determine the next plot time");
    ADD(2,"2: The next plot time T is computed so that T = the current time plus the load curve value at time T");
    ADD(3,"3: A plot is generated for each abscissa point in the load curve definition. The actual value of the load curve is ignored");
  }
}

//File format
FORMAT(Keyword971)
{
    ASSIGN(IO_FLAG,0,IMPORT);
    ASSIGN(IO_FLAG,1,EXPORT);
    if(IO_FLAG == 1)
    {
        HEADER("*DATABASE_CURVOUT");
        if (LSD_BINARY == "DEFAULT")
        {
            ASSIGN(LSD_BINARY,0,EXPORT);
        }
        else if(LSD_BINARY == "ASCII")
        {
            ASSIGN(LSD_BINARY,1,EXPORT);
        }
        else if(LSD_BINARY == "BINARY")
        {
            ASSIGN(LSD_BINARY,2,EXPORT);
        }
        else if(LSD_BINARY == "ASCII-BINARY")
        {
            ASSIGN(LSD_BINARY,3,EXPORT);
        }
    }

    COMMENT("$       DT    BINARY      LCUR     IOOPT");
    CARD("%10lg%10s%10d%10d",LSD_DT,LSD_BINARY,LSD_LCUR,LSD_IOOPT);
}
