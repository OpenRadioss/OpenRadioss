//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 00
//

ATTRIBUTES(COMMON)
{

     KEYWORD_STR = VALUE(STRING, "Solver Keyword");
     Keyword    = VALUE(STRING,"");
    
     ABSTAT_Opt = VALUE(INT, "Airbag statistics");
     ABSTAT_Opt_subobj = VALUE(SUBOBJECT,"ABSTAT_Opt Subobject");

     ABSTAT_CPM_Opt = VALUE(INT, "Airbag statistics CPM");
     ABSTAT_CPM_Opt_subobj = VALUE(SUBOBJECT,"ABSTAT_CPM_Opt Subobject");

     AVSFLT_Opt = VALUE(INT, "AVS database");
     AVSFLT_Opt_subobj = VALUE(SUBOBJECT,"AVSFLT_Opt database Subobject");

     BNDOUT_Opt = VALUE(INT, "Boundary condition forces and energy");
     BNDOUT_Opt_subobj = VALUE(SUBOBJECT,"BNDOUT_Opt Subobject");

     DCFAIL_Opt = VALUE(INT, "Failure function data for *MAT_SPOTWELD_DAIMLERCHRYSLER");
     DCFAIL_Opt_subobj = VALUE(SUBOBJECT,"DCFAIL_Opt Subobject");

     DEFGEO_Opt = VALUE(INT, "Deformed geometry file");
     DEFGEO_Opt_subobj = VALUE(SUBOBJECT,"DEFGEO_Opt Subobject");

     DEFORC_Opt = VALUE(INT, "Discrete spring and damper element (*ELEMENT_DISCRETE) data");
     DEFORC_Opt_subobj = VALUE(SUBOBJECT,"DEFORC_Opt Subobject");

     ELOUT_Opt = VALUE(INT, "Element data");
     ELOUT_Opt_subobj = VALUE(SUBOBJECT,"ELOUT_Opt Subobject");

     GCEOUT_Opt = VALUE(INT, "Geometric contact entities");
     GCEOUT_Opt_subobj = VALUE(SUBOBJECT,"GCEOUT_Opt Subobject");

     GLSTAT_Opt = VALUE(INT, "Global data");
     GLSTAT_Opt_subobj = VALUE(SUBOBJECT,"GLSTAT_Opt Subobject");

     H3OUT_Opt = VALUE(INT, "Hybrid III rigid body dummies");
     H3OUT_Opt_subobj = VALUE(SUBOBJECT,"H3OUT_Opt Subobject");

     JNTFORC_Opt = VALUE(INT, "Joint force file");
     JNTFORC_Opt_subobj = VALUE(SUBOBJECT,"JNTFORC_Opt Subobject");

     MATSUM_Opt = VALUE(INT, "Material energies");
     MATSUM_Opt_subobj = VALUE(SUBOBJECT,"MATSUM_Opt Subobject");

     MOVIE_Opt = VALUE(INT, "Movie files");
     MOVIE_Opt_subobj = VALUE(SUBOBJECT,"MOVIE_Opt Subobject");

     MPGS_Opt = VALUE(INT, "MPGS Files");
     MPGS_Opt_subobj = VALUE(SUBOBJECT,"MPGS_Opt Subobject");

     NCFORC_Opt = VALUE(INT, "Nodal interface forces.");
     NCFORC_Opt_subobj = VALUE(SUBOBJECT,"NCFORC_Opt Subobject");

     NODFOR_Opt = VALUE(INT, "Nodal force groups");
     NODFOR_Opt_subobj = VALUE(SUBOBJECT,"NODFOR_Opt Subobject");

     NODOUT_Opt = VALUE(INT, "Nodal point data");
     NODOUT_Opt_subobj = VALUE(SUBOBJECT,"NODOUT_Opt Subobject");

     RBDOUT_Opt = VALUE(INT, "Rigid body data");
     RBDOUT_Opt_subobj = VALUE(SUBOBJECT,"RBDOUT_Opt Subobject");

     RCFORC_Opt = VALUE(INT, "Resultant interface forces");
     RCFORC_Opt_subobj = VALUE(SUBOBJECT,"RCFORC_Opt Subobject");

     RWFORC_Opt = VALUE(INT, "Wall forces");
     RWFORC_Opt_subobj = VALUE(SUBOBJECT,"RWFORC_Opt Subobject");

     SBTOUT_Opt = VALUE(INT, "Seat belt output file");
     SBTOUT_Opt_subobj = VALUE(SUBOBJECT,"SBTOUT_Opt Subobject");

     SECFORC_Opt = VALUE(INT, "Cross section forces");
     SECFORC_Opt_subobj = VALUE(SUBOBJECT,"SECFORC_Opt Subobject");

     SLEOUT_Opt = VALUE(INT, "Sliding interface energy");
     SLEOUT_Opt_subobj = VALUE(SUBOBJECT,"SLEOUT_Opt Subobject");

     SPCFORC_Opt = VALUE(INT, "SPC reaction forces");
     SPCFORC_Opt_subobj = VALUE(SUBOBJECT,"SPCFORC_Opt Subobject");

     SSSTAT_Opt = VALUE(INT, "Subsystem data");
     SSSTAT_Opt_subobj = VALUE(SUBOBJECT,"SSSTAT_Opt Subobject");

     SWFORC_Opt = VALUE(INT, "Nodal constraint reaction forces (spot welds and rivets)");
     SWFORC_Opt_subobj = VALUE(SUBOBJECT,"SWFORC_Opt Subobject");

     TPRINT_Opt = VALUE(INT, "Thermal output from a coupled structural/thermal or thermal only analysis");
     TPRINT_Opt_subobj = VALUE(SUBOBJECT,"TPRINT_Opt Subobject");

     TRHIST_Opt = VALUE(INT, "Tracer particle history information");
     TRHIST_Opt_subobj = VALUE(SUBOBJECT,"TRHIST_Opt Subobject");

     SPHOUT_Opt = VALUE(INT, "SPH data");
     SPHOUT_Opt_subobj = VALUE(SUBOBJECT,"SPHOUT_Opt Subobject");

     IO_FLAG  = VALUE(INT, "");
     _HAS_HEADER = VALUE(BOOL,"");
     _my_opt = VALUE(STRING,"option");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
     /// it doesn't respect customer style request 
     /// but in this card, as for elevate number of correlated variables
     /// i think it's better to group same context attributes

     KEYWORD_STR = 9000;
     Keyword     = -1;

     ABSTAT_Opt = 5896;
     ABSTAT_Opt_subobj = -1;

     ABSTAT_CPM_Opt = 5900;
     ABSTAT_CPM_Opt_subobj = -1;

     AVSFLT_Opt = 5904;
     AVSFLT_Opt_subobj = -1;

     BNDOUT_Opt = 5908;
     BNDOUT_Opt_subobj = -1;

     DCFAIL_Opt = 5912;
     DCFAIL_Opt_subobj = -1;

     DEFGEO_Opt = 5916;
     DEFGEO_Opt_subobj = -1;

     DEFORC_Opt = 5920;
     DEFORC_Opt_subobj = -1;

     ELOUT_Opt = 5924;
     ELOUT_Opt_subobj = -1;

     GCEOUT_Opt = 5928;
     GCEOUT_Opt_subobj = -1;

     GLSTAT_Opt = 5932;
     GLSTAT_Opt_subobj = -1;

     H3OUT_Opt = 6145;
     H3OUT_Opt_subobj = -1;

     JNTFORC_Opt = 5936;
     JNTFORC_Opt_subobj = -1;

     MATSUM_Opt = 5940;
     MATSUM_Opt_subobj = -1;

     MOVIE_Opt = 5944;
     MOVIE_Opt_subobj = -1;

     MPGS_Opt = 5948;
     MPGS_Opt_subobj = -1;

     NCFORC_Opt = 5952;
     NCFORC_Opt_subobj = -1;

     NODFOR_Opt = 5956;
     NODFOR_Opt_subobj = -1;

     NODOUT_Opt = 6008;
     NODOUT_Opt_subobj = -1;

     RBDOUT_Opt = 5960;
     RBDOUT_Opt_subobj = -1;

     RCFORC_Opt = 5964;
     RCFORC_Opt_subobj = -1;

     RWFORC_Opt = 5968;
     RWFORC_Opt_subobj = -1;

     SBTOUT_Opt = 5972;
     SBTOUT_Opt_subobj = -1;

     SECFORC_Opt = 5976;
     SECFORC_Opt_subobj = -1;

     SLEOUT_Opt = 5980;
     SLEOUT_Opt_subobj = -1;

     SPCFORC_Opt = 5984;
     SPCFORC_Opt_subobj = -1;

     SSSTAT_Opt = 5988;
     SSSTAT_Opt_subobj = -1;

     SWFORC_Opt = 5992;
     SWFORC_Opt_subobj = -1;

     TPRINT_Opt = 5996;
     TPRINT_Opt_subobj = -1;

     TRHIST_Opt = 6000;
     TRHIST_Opt_subobj = -1;

     SPHOUT_Opt = 6004;
     SPHOUT_Opt_subobj = -1;

     _my_opt = -1;
    _HAS_HEADER = -1;
     IO_FLAG = -1;
}

DEFAULTS(COMMON)
{
    _HAS_HEADER                             = TRUE;
}


GUI(COMMON)
{

     //ASSIGN(KEYWORD_STR, "*DATABASE_OPTION");
    
    FLAG(ABSTAT_Opt,"DATABASE_ABSTAT_CPM");
    if(ABSTAT_Opt != FALSE)
    {
        SEPARATOR("ABSTAT");
        SUBOBJECT(ABSTAT_Opt_subobj,"DATABASE_ABSTAT") {SUBTYPES = (/SUBOBJECT/DATABASE_ABSTAT);}
        SEPARATOR();
    }

    FLAG(ABSTAT_CPM_Opt,"DATABASE_ABSTAT_CPM");
    if (ABSTAT_CPM_Opt != FALSE)
    {
        SEPARATOR("ABSTAT_CPM");
        SUBOBJECT(ABSTAT_CPM_Opt_subobj,"DATABASE_ABSTAT_CPM") {SUBTYPES = (/SUBOBJECT/DATABASE_ABSTAT_CPM);}
        SEPARATOR();
    }

    FLAG(AVSFLT_Opt,"DATABASE_AVSFLT");
    if (AVSFLT_Opt != FALSE)
    {
        SEPARATOR("AVSFLT");
        SUBOBJECT(AVSFLT_Opt_subobj,"DATABASE_AVSFLT") {SUBTYPES = (/SUBOBJECT/DATABASE_AVSFLT);}
        SEPARATOR();
    }

    FLAG(BNDOUT_Opt,"DATABASE_BNDOUT");
    if (BNDOUT_Opt != FALSE)
    {
        SEPARATOR("BNDOUT");
        SUBOBJECT(BNDOUT_Opt_subobj,"DATABASE_BNDOUT") {SUBTYPES = (/SUBOBJECT/DATABASE_BNDOUT);}
        SEPARATOR();
    }

    FLAG(DCFAIL_Opt,"DATABASE_DCFAIL");
    if (DCFAIL_Opt != FALSE)
    {
        SEPARATOR("DCFAIL");
        SUBOBJECT(DCFAIL_Opt_subobj,"DATABASE_DCFAIL") {SUBTYPES = (/SUBOBJECT/DATABASE_DCFAIL);}
        SEPARATOR();
    }

    FLAG(DEFGEO_Opt,"DATABASE_DEFGEO");
    if (DEFGEO_Opt != FALSE)
    {
        SEPARATOR("DEFGEO");
        SUBOBJECT(DEFGEO_Opt_subobj,"DATABASE_DEFGEO") {SUBTYPES = (/SUBOBJECT/DATABASE_DEFGEO);}
        SEPARATOR();
    }

    FLAG(DEFORC_Opt,"DATABASE_DEFORC");
    if (DEFORC_Opt != FALSE)
    {
        SEPARATOR("DEFORC");
        SUBOBJECT(DEFORC_Opt_subobj,"DATABASE_DEFORC") {SUBTYPES = (/SUBOBJECT/DATABASE_DEFORC);}
        SEPARATOR();
    }

    FLAG(ELOUT_Opt,"DATABASE_ELOUT");
    if (ELOUT_Opt != FALSE)
    {
        SEPARATOR("ELOUT");
        SUBOBJECT(ELOUT_Opt_subobj,"DATABASE_ELOUT") {SUBTYPES = (/SUBOBJECT/DATABASE_ELOUT);}
        SEPARATOR();
    }

    FLAG(GCEOUT_Opt,"DATABASE_GCEOUT");
    if (GCEOUT_Opt != FALSE)
    {
        SEPARATOR("GCEOUT");
        SUBOBJECT(GCEOUT_Opt_subobj,"DATABASE_GCEOUT") {SUBTYPES = (/SUBOBJECT/DATABASE_GCEOUT);}
        SEPARATOR();
    }

    FLAG(GLSTAT_Opt,"DATABASE_GLSTAT_MASS_PROPERTIES");
    if (GLSTAT_Opt != FALSE)
    {
        SEPARATOR("GLSTAT_MASS_PROPERTIES");
        SUBOBJECT(GLSTAT_Opt_subobj,"DATABASE_GLSTAT_MASS_PROPERTIES") {SUBTYPES = (/SUBOBJECT/DATABASE_GLSTAT_MASS_PROPERTIES);}
        SEPARATOR();
    }

    FLAG(H3OUT_Opt,"DATABASE_H3OUT");
    if (H3OUT_Opt != FALSE)
    {
        SEPARATOR("H3OUT");
        SUBOBJECT(H3OUT_Opt_subobj,"DATABASE_H3OUT") {SUBTYPES = (/SUBOBJECT/DATABASE_H3OUT);}
        SEPARATOR();
    }

    FLAG(JNTFORC_Opt,"DATABASE_JNTFORC");
    if (JNTFORC_Opt != FALSE)
    {
        SEPARATOR("JNTFORC");
        SUBOBJECT(JNTFORC_Opt_subobj,"DATABASE_JNTFORC") {SUBTYPES = (/SUBOBJECT/DATABASE_JNTFORC);}
        SEPARATOR();
    }

    FLAG(MATSUM_Opt,"DATABASE_MATSUM");
    if (MATSUM_Opt != FALSE)
    {
        SEPARATOR("MATSUM");
        SUBOBJECT(MATSUM_Opt_subobj,"DATABASE_MATSUM") {SUBTYPES = (/SUBOBJECT/DATABASE_MATSUM);}
        SEPARATOR();
    }

    FLAG(MOVIE_Opt,"DATABASE_MOVIE");
    if (MOVIE_Opt != FALSE)
    {
        SEPARATOR("MOVIE");
        SUBOBJECT(MOVIE_Opt_subobj,"DATABASE_MOVIE") {SUBTYPES = (/SUBOBJECT/DATABASE_MOVIE);}
        SEPARATOR();
    }

    FLAG(MPGS_Opt,"DATABASE_MPGS");
    if (MPGS_Opt != FALSE)
    {
        SEPARATOR("MPGS");
        SUBOBJECT(MPGS_Opt_subobj,"DATABASE_MPGS") {SUBTYPES = (/SUBOBJECT/DATABASE_MPGS);}
        SEPARATOR();
    }

    FLAG(NCFORC_Opt,"DATABASE_NCFORC");
    if (NCFORC_Opt != FALSE)
    {
        SEPARATOR("NCFORC");
        SUBOBJECT(NCFORC_Opt_subobj,"DATABASE_NCFORC") {SUBTYPES = (/SUBOBJECT/DATABASE_NCFORC);}
        SEPARATOR();
    }

    FLAG(NODFOR_Opt,"DATABASE_NODFOR");
    if (NODFOR_Opt != FALSE)
    {
        SEPARATOR("NODFOR");
        SUBOBJECT(NODFOR_Opt_subobj,"DATABASE_NODFOR") {SUBTYPES = (/SUBOBJECT/DATABASE_NODFOR);}
        SEPARATOR();
    }

    FLAG(NODOUT_Opt,"DATABASE_NODOUT");
    if (NODOUT_Opt != FALSE)
    {
        SEPARATOR("NODOUT");
        SUBOBJECT(NODOUT_Opt_subobj,"DATABASE_NODOUT") {SUBTYPES = (/SUBOBJECT/DATABASE_NODOUT);}
        SEPARATOR();
    }

    FLAG(RBDOUT_Opt,"DATABASE_RBDOUT");
    if (RBDOUT_Opt != FALSE)
    {
        SEPARATOR("RBDOUT");
        SUBOBJECT(RBDOUT_Opt_subobj,"DATABASE_RBDOUT") {SUBTYPES = (/SUBOBJECT/DATABASE_RBDOUT);}
        SEPARATOR();
    }

    FLAG(RCFORC_Opt,"DATABASE_RCFORC");
    if (RCFORC_Opt != FALSE)
    {
        SEPARATOR("RCFORC");
        SUBOBJECT(RCFORC_Opt_subobj,"DATABASE_RCFORC") {SUBTYPES = (/SUBOBJECT/DATABASE_RCFORC);}
        SEPARATOR();
    }

    FLAG(RWFORC_Opt,"DATABASE_RWFORC");
    if (RWFORC_Opt != FALSE)
    {
        SEPARATOR("RWFORC");
        SUBOBJECT(RWFORC_Opt_subobj,"DATABASE_RWFORC") {SUBTYPES = (/SUBOBJECT/DATABASE_RWFORC);}
        SEPARATOR();
    }

    FLAG(SBTOUT_Opt,"DATABASE_SBTOUT");
    if (SBTOUT_Opt != FALSE)
    {
        SEPARATOR("SBTOUT");
        SUBOBJECT(SBTOUT_Opt_subobj,"DATABASE_SBTOUT") {SUBTYPES = (/SUBOBJECT/DATABASE_SBTOUT);}
        SEPARATOR();
    }

    FLAG(SECFORC_Opt,"DATABASE_SECFORC");
    if (SECFORC_Opt != FALSE)
    {
        SEPARATOR("SECFORC");
        SUBOBJECT(SECFORC_Opt_subobj,"DATABASE_SECFORC") {SUBTYPES = (/SUBOBJECT/DATABASE_SECFORC);}
        SEPARATOR();
    }

    FLAG(SLEOUT_Opt,"DATABASE_SLEOUT");
    if (SLEOUT_Opt != FALSE)
    {
        SEPARATOR("SLEOUT");
        SUBOBJECT(SLEOUT_Opt_subobj,"DATABASE_SLEOUT") {SUBTYPES = (/SUBOBJECT/DATABASE_SLEOUT);}
        SEPARATOR();
    }

    FLAG(SPCFORC_Opt,"DATABASE_SPCFORC");
    if (SPCFORC_Opt != FALSE)
    {
        SEPARATOR("SPCFORC");
        SUBOBJECT(SPCFORC_Opt_subobj,"DATABASE_SPCFORC") {SUBTYPES = (/SUBOBJECT/DATABASE_SPCFORC);}
        SEPARATOR();
    }

    FLAG(SSSTAT_Opt,"DATABASE_SSSTAT_MASS_PROPERTIES");
    if (SSSTAT_Opt != FALSE)
    {
        SEPARATOR("SSSTAT_MASS_PROPERTIES");
        SUBOBJECT(SSSTAT_Opt_subobj,"DATABASE_SSSTAT_MASS_PROPERTIES") {SUBTYPES = (/SUBOBJECT/DATABASE_SSSTAT_MASS_PROPERTIES);}
        SEPARATOR();
    }

    FLAG(SWFORC_Opt,"DATABASE_SWFORC");
    if (SWFORC_Opt != FALSE)
    {
        SEPARATOR("SWFORC");
        SUBOBJECT(SWFORC_Opt_subobj,"DATABASE_SWFORC") {SUBTYPES = (/SUBOBJECT/DATABASE_SWFORC);}
        SEPARATOR();
    }

    FLAG(TPRINT_Opt,"DATABASE_TPRINT");
    if (TPRINT_Opt != FALSE)
    {
        SEPARATOR("TPRINT");
        SUBOBJECT(TPRINT_Opt_subobj,"DATABASE_TPRINT") {SUBTYPES = (/SUBOBJECT/DATABASE_TPRINT);}
        SEPARATOR();
    }

    FLAG(TRHIST_Opt,"DATABASE_TRHIST");
    if (TRHIST_Opt != FALSE)
    {
        SEPARATOR("TRHIST");
        SUBOBJECT(TRHIST_Opt_subobj,"DATABASE_TRHIST") {SUBTYPES = (/SUBOBJECT/DATABASE_TRHIST);}
        SEPARATOR();
    }

    FLAG(SPHOUT_Opt,"DATABASE_SPHOUT");
    if (SPHOUT_Opt != FALSE)
    {
        SEPARATOR("SPHOUT");
        SUBOBJECT(SPHOUT_Opt_subobj,"DATABASE_SPHOUT") {SUBTYPES = (/SUBOBJECT/DATABASE_SPHOUT);}
        SEPARATOR();
    }
    
    if(ABSTAT_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_ABSTAT");
    }
    else if (ABSTAT_CPM_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_ABSTAT_CPM");
    }
    else if (AVSFLT_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_AVSFLT");
    }
    else if (BNDOUT_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_BNDOUT");
    }
    else if (DCFAIL_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_DCFAIL");
    }
    else if (DEFGEO_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_DEFGEO");
    }
    else if (DEFORC_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_DEFORC");
    }
    else if (ELOUT_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_ELOUT");
    }
    else if (GCEOUT_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_GCEOUT");
    }
    else if (GLSTAT_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_GLSTAT_MASS_PROPERTIES");
    }
    else if (H3OUT_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_H3OUT");
    }
    else if (JNTFORC_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_JNTFORC");
    }
    else if (MATSUM_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_MATSUM");
    }
    else if (MOVIE_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_MOVIE");
    }
    else if (MPGS_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_MPGS");
    }
    else if (NCFORC_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_NCFORC");
    }
    else if (NODFOR_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_NODFOR");
    }
    else if (NODOUT_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_NODOUT");
    }
    else if (RBDOUT_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_RBDOUT");
    }
    else if (RCFORC_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_RCFORC");
    }
    else if (RWFORC_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_RWFORC");
    }
    else if (SBTOUT_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_SBTOUT");
    }
    else if (SECFORC_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_SECFORC");
    }
    else if (SLEOUT_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_SLEOUT");
    }
    else if (SPCFORC_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_SPCFORC");
    }
    else if (SSSTAT_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_SSSTAT_MASS_PROPERTIES");
    }
    else if (SWFORC_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_SWFORC");
    }
    else if (TPRINT_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_TPRINT");
    }
    else if (TRHIST_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_TRHIST");
    }
    else if (SPHOUT_Opt == 1)
    {
        ASSIGN(KEYWORD_STR, "*DATABASE_SPHOUT");
    }


}

// File format
FORMAT(Keyword971)
{
     ASSIGN(IO_FLAG,0,IMPORT);
     ASSIGN(IO_FLAG,1,EXPORT);

     if(IO_FLAG == 1) 
     {
          COMMENT("$$DATABASE_OPTION -- Control Cards for ASCII output");
     }

     if(IO_FLAG == 0)
    {
        HEADER("%100s",Keyword);
        if(Keyword == "*DATABASE_ABSTAT")
        {
            ASSIGN(ABSTAT_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_ABSTAT_CPM")
        {
            ASSIGN(ABSTAT_CPM_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_AVSFLT")
        {
            ASSIGN(AVSFLT_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_BNDOUT")
        {
            ASSIGN(BNDOUT_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_DCFAIL")
        {
            ASSIGN(DCFAIL_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_DEFGEO")
        {
            ASSIGN(DEFGEO_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_DEFORC")
        {
            ASSIGN(DEFORC_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_ELOUT")
        {
            ASSIGN(ELOUT_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_GCEOUT")
        {
            ASSIGN(GCEOUT_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_GLSTAT" || Keyword == "*DATABASE_GLSTAT_MASS_PROPERTIES")
        {
            ASSIGN(GLSTAT_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_H3OUT")
        {
            ASSIGN(H3OUT_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_JNTFORC")
        {
            ASSIGN(JNTFORC_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_MATSUM")
        {
            ASSIGN(MATSUM_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_MOVIE")
        {
            ASSIGN(MOVIE_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_MPGS")
        {
            ASSIGN(MPGS_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_NCFORC")
        {
            ASSIGN(NCFORC_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_NODFOR")
        {
            ASSIGN(NODFOR_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_NODOUT")
        {
            ASSIGN(NODOUT_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_RBDOUT")
        {
            ASSIGN(RBDOUT_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_RCFORC")
        {
            ASSIGN(RCFORC_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_RWFORC")
        {
            ASSIGN(RWFORC_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_SBTOUT")
        {
            ASSIGN(SBTOUT_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_SECFORC")
        {
            ASSIGN(SECFORC_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_SPCFORC")
        {
            ASSIGN(SPCFORC_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_SLEOUT")
        {
            ASSIGN(SLEOUT_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_SSSTAT" || Keyword == "*DATABASE_SSSTAT_MASS_PROPERTIES")
        {
            ASSIGN(SSSTAT_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_SWFORC")
        {
            ASSIGN(SWFORC_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_TPRINT")
        {
            ASSIGN(TPRINT_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_TRHIST")
        {
            ASSIGN(TRHIST_Opt,1,IMPORT);
        }
        else if(Keyword == "*DATABASE_SPHOUT")
        {
            ASSIGN(SPHOUT_Opt,1,IMPORT);
        }
    }

     if(ABSTAT_Opt != FALSE)
     {
          SUBOBJECTS(ABSTAT_Opt_subobj, /SUBOBJECT/DATABASE_ABSTAT);
     }
     if(ABSTAT_CPM_Opt != FALSE)
     {
          SUBOBJECTS(ABSTAT_CPM_Opt_subobj, /SUBOBJECT/DATABASE_ABSTAT_CPM);
     }
     if(AVSFLT_Opt != FALSE)
     {
          SUBOBJECTS(AVSFLT_Opt_subobj, /SUBOBJECT/DATABASE_AVSFLT);
     }
     if(BNDOUT_Opt != FALSE)
     {
          SUBOBJECTS(BNDOUT_Opt_subobj, /SUBOBJECT/DATABASE_BNDOUT);
     }
     if(DCFAIL_Opt != FALSE)
     {
          SUBOBJECTS(DCFAIL_Opt_subobj, /SUBOBJECT/DATABASE_DCFAIL);
     }
     if(DEFGEO_Opt != FALSE)
     {
          SUBOBJECTS(DEFGEO_Opt_subobj, /SUBOBJECT/DATABASE_DEFGEO);
     }
     if(DEFORC_Opt != FALSE)
     {
          SUBOBJECTS(DEFORC_Opt_subobj, /SUBOBJECT/DATABASE_DEFORC);
     }
     if(ELOUT_Opt != FALSE)
     {
          SUBOBJECTS(ELOUT_Opt_subobj, /SUBOBJECT/DATABASE_ELOUT);
     }
     if(GCEOUT_Opt != FALSE)
     {
          SUBOBJECTS(GCEOUT_Opt_subobj, /SUBOBJECT/DATABASE_GCEOUT);
     }
     if(GLSTAT_Opt != FALSE)
     {
          SUBOBJECTS(GLSTAT_Opt_subobj, /SUBOBJECT/DATABASE_GLSTAT_MASS_PROPERTIES);
     }
     if(H3OUT_Opt != FALSE)
     {
          SUBOBJECTS(H3OUT_Opt_subobj, /SUBOBJECT/DATABASE_H3OUT);
     }
     if(JNTFORC_Opt != FALSE)
     {
          SUBOBJECTS(JNTFORC_Opt_subobj, /SUBOBJECT/DATABASE_JNTFORC);
     }
     if(MATSUM_Opt != FALSE)
     {
          SUBOBJECTS(MATSUM_Opt_subobj, /SUBOBJECT/DATABASE_MATSUM);
     }
     if(MOVIE_Opt != FALSE)
     {
          SUBOBJECTS(MOVIE_Opt_subobj, /SUBOBJECT/DATABASE_MOVIE);
     }
     if(MPGS_Opt != FALSE)
     {
          SUBOBJECTS(MPGS_Opt_subobj, /SUBOBJECT/DATABASE_MPGS);
     }
     if(NCFORC_Opt != FALSE)
     {
          SUBOBJECTS(NCFORC_Opt_subobj, /SUBOBJECT/DATABASE_NCFORC);
     }
     if(NODFOR_Opt != FALSE)
     {
          SUBOBJECTS(NODFOR_Opt_subobj, /SUBOBJECT/DATABASE_NODFOR);
     }
     if(NODOUT_Opt != FALSE)
     {
          SUBOBJECTS(NODOUT_Opt_subobj, /SUBOBJECT/DATABASE_NODOUT);
     }
     if(RBDOUT_Opt != FALSE)
     {
          SUBOBJECTS(RBDOUT_Opt_subobj, /SUBOBJECT/DATABASE_RBDOUT);
     }
     if(RCFORC_Opt != FALSE)
     {
          SUBOBJECTS(RCFORC_Opt_subobj, /SUBOBJECT/DATABASE_RCFORC);
     }
     if(RWFORC_Opt != FALSE)
     {
          SUBOBJECTS(RWFORC_Opt_subobj, /SUBOBJECT/DATABASE_RWFORC);
     }
     if(SBTOUT_Opt != FALSE)
     {
          SUBOBJECTS(SBTOUT_Opt_subobj, /SUBOBJECT/DATABASE_SBTOUT);
     }
     if(SECFORC_Opt != FALSE)
     {
          SUBOBJECTS(SECFORC_Opt_subobj, /SUBOBJECT/DATABASE_SECFORC);
     }
     if(SLEOUT_Opt != FALSE)
     {
          SUBOBJECTS(SLEOUT_Opt_subobj, /SUBOBJECT/DATABASE_SLEOUT);
     }
     if(SPCFORC_Opt != FALSE)
     {
          SUBOBJECTS(SPCFORC_Opt_subobj, /SUBOBJECT/DATABASE_SPCFORC);
     }
     if(SSSTAT_Opt != FALSE)
     {
          SUBOBJECTS(SSSTAT_Opt_subobj, /SUBOBJECT/DATABASE_SSSTAT_MASS_PROPERTIES);
     }
     if(SWFORC_Opt != FALSE)
     {
          SUBOBJECTS(SWFORC_Opt_subobj, /SUBOBJECT/DATABASE_SWFORC);
     }
     if(TPRINT_Opt != FALSE)
     {
          SUBOBJECTS(TPRINT_Opt_subobj, /SUBOBJECT/DATABASE_TPRINT);
     }
     if(TRHIST_Opt != FALSE)
     {
          SUBOBJECTS(TRHIST_Opt_subobj, /SUBOBJECT/DATABASE_TRHIST);
     }
     if(SPHOUT_Opt != FALSE)
     {
          SUBOBJECTS(SPHOUT_Opt_subobj, /SUBOBJECT/DATABASE_SPHOUT);
     }
}
