//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- control_coarsen.cfg ---
//		GROUP	control_coarsen	5073	5
//		 06/03/2020
ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");

    LSD_ICOARSE                             = VALUE(INT,  "Coarsening flag");
    LSD_ANGLE                               = VALUE(FLOAT,  "Allowable angle change between neighboring elements");
    ArrayCount                              = SIZE("Number of seed node");
    LSD_PSID                                = VALUE(SETS,  "Part set ID");
    LSD_SMAX                                = VALUE(FLOAT,  "Maximum element size");
    NID_array                               = ARRAY[ArrayCount](NODE,  "N");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;

    ArrayCount                              = 2246;
    LSD_ANGLE                               = 3109;
    LSD_ICOARSE                             = 5074;
    LSD_PSID                                = 768;
    LSD_SMAX                                = 2268;
    NID_array                               = 4410;

}

DEFAULTS(COMMON)
{
    LSD_ICOARSE=0;
    ArrayCount=0;
    LSD_SMAX = 0;
}

GUI(COMMON)
{

    ASSIGN(KEYWORD_STR, "*CONTROL_COARSEN");
    RADIO(LSD_ICOARSE,"ICOARSE")
    {
       ADD(0, "0: do not coarsen");
       ADD(1, "1: coarsen mesh at beginning of simulation for forming model");
       ADD(2, "2: coarsen mesh at beginning of simulation for crash model");
    }
    SCALAR(LSD_ANGLE,"ANGLE");
    RADIO(ArrayCount,"NSEED")
    {
       ADD(0, "0: use only automatic searching");
       ADD(1, "1");
       ADD(2, "2");
       ADD(3, "3");
       ADD(4, "4");
       ADD(5, "5");
       ADD(6, "6");
       ADD(7, "7");
       ADD(8, "8");
    }
    if( ArrayCount > 0 && ArrayCount <= 8)
    {
        SIZE(ArrayCount);
        ARRAY(ArrayCount,"N")
        {
            DATA(NID_array);
        }
    }

    DATA(LSD_PSID,"PSID");
    SCALAR(LSD_SMAX,"SMAX");  
   
}

// File format
FORMAT(Keyword971) 
{
    HEADER("*CONTROL_COARSEN");
    COMMENT("$  ICOARSE     ANGLE     NSEED      PSID      SMAX");
    CARD("%10d%10lg%10d%10d%10lg",LSD_ICOARSE,LSD_ANGLE,ArrayCount,LSD_PSID,LSD_SMAX);

    if(ArrayCount > 0)
        COMMENT("$        N         N         N         N         N         N         N         N");
    CELL_LIST(ArrayCount,"%10d",NID_array,80);
}
