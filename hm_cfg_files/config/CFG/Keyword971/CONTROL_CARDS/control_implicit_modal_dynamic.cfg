//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//CONTROL_IMPLICIT_MODES
//

ATTRIBUTES(COMMON)
{
  _HMCOMMENTSFLAG = VALUE(INT, "Write HM Comments");
  _HWCOLOR        = VALUE(INT, "Entity Color");
  TITLE           = VALUE(STRING, "Title");
  HAS_TITLE       = VALUE(STRING, "Check for Title");
  EXPORT_FLAG     = VALUE(INT, "Export flag");
  CommentEnumField = VALUE(INT, "User Comments");
  Num_Comments     = SIZE("No. of comment lines");
  Comments         = ARRAY[Num_Comments](STRING, "Entity Comments");

  
  
  MDFLAG   = VALUE(INT,"Modal Dynamic flag");
  ZETA     = VALUE(FLOAT,"Modal Dynamic damping constant") ;
  FILENAME = VALUE(STRING,"Filename") ;
}

DEFAULTS(COMMON)
{
   _HMCOMMENTSFLAG = 0;
   HAS_TITLE = "";
}

CHECK(COMMON)
{
}



SKEYWORDS_IDENTIFIER(COMMON)
{
  CommentEnumField = 3220;
  Num_Comments     = 3101;
  Comments         = 3100;


  MDFLAG   = 8201;
  ZETA     = 8202;
  FILENAME = 8203;
}

GUI(COMMON)
{
/*
  RADIO(CommentEnumField)
  {
     ENUM_VALUE_FLAG=TRUE;
     ADD(1, "Hide in Menu/Export");
     ADD(2, "Show in Menu/Export");
     ADD(3, "Do not export");
  }
 
  if(CommentEnumField == 2)
  {  
    SIZE(Num_Comments);
    ARRAY(Num_Comments,"")
    {
       SCALAR(Comments);
    }
  }
*/

  
  RADIO(MDFLAG)
  {
    ADD(0, "[0] no modal dynamic analysis");
    ADD(1, "[1] perform modal dynamic analysis");
  }
  SCALAR(ZETA);
  SCALAR(FILENAME) ;

}

//File format
FORMAT(Keyword971)
{
  ASSIGN(EXPORT_FLAG, 1, EXPORT);  
/*  
  if(EXPORT_FLAG == 1 && CommentEnumField == 2)
  {  
    CARD_LIST(Num_Comments)
    {
       CARD("$%-70s", Comments);
    }
  }
*/  

  HEADER("*CONTROL_IMPLICIT_MODAL_DYNAMIC");
  COMMENT("$   MDFLAG      ZETA"); 
  CARD("%10d%10lf", MDFLAG, ZETA);
  COMMENT("$                                  FILENAME                             ");
  CARD("%-80s",FILENAME);
}




