//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//CONTROL_ADAPTIVE_CURVE
//

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES
    LSD_SID        = VALUE(SETS,"Set id") { SUBTYPES = (/SETS/SET_SHELL_IDPOOL) ; }
    LSD_PSID       = VALUE(SETS,"Set id") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
    LSD_ITYPE      = VALUE(INT,"Set type" );
    LSD_N          = VALUE(INT,"Refinement option");
    LSD_SMIN       = VALUE(FLOAT,"Element size refine limit factor");
    LSD_ITRIOPT    = VALUE(INT,"Option to refine an enclosed area of a trim curve");

    // HM INTERNAL
    KEYWORD_STR    = VALUE(STRING, "Solver Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR     = 9000;
    LSD_SID         = 460;
    LSD_PSID        = 768;
    LSD_ITYPE       = 165;
    LSD_N           = 2003;
    LSD_SMIN        = 5117;
    LSD_ITRIOPT     = 2002;
}

DEFAULTS(COMMON)
{
    LSD_ITYPE = 1;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*CONTROL_ADAPTIVE_CURVE");
    mandatory:
    RADIO(LSD_ITYPE)
    {
        ADD(1,"1: IDSET is shell set ID");
        ADD(2,"2: IDSET is part set ID");
    }

    if(LSD_ITYPE == 2)
    {
        DATA(LSD_PSID);
    }
    else
    {
        DATA(LSD_SID);
    }

    SCALAR(LSD_N) {DIMENSION ="DIMENSIONLESS";}
    SCALAR(LSD_SMIN) {DIMENSION = "DIMENSIONLESS";}
    RADIO(LSD_ITRIOPT)
    {
        ADD(0,"0: Refine the elements along the trim curve");
        ADD(1,"1: Refine the elements along the trim curve and enclosed by the trim curve");
    }
}

//File format
FORMAT(Keyword971)
{
    HEADER("*CONTROL_ADAPTIVE_CURVE");
    COMMENT("$    IDSET     ITYPE         N      SMIN   ITRIOPT");
    CARD_PREREAD("          %10d", LSD_ITYPE);

    if(LSD_ITYPE == 1)
    {
        CARD("%10d%10d%10d%10lg%10d",LSD_SID,LSD_ITYPE,LSD_N,LSD_SMIN,LSD_ITRIOPT);
    }
    else
    {
        CARD("%10d%10d%10d%10lg%10d",LSD_PSID,LSD_ITYPE,LSD_N,LSD_SMIN,LSD_ITRIOPT);
    }
}
