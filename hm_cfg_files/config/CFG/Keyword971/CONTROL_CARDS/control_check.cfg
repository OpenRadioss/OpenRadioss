//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- control_check.cfg ---
//		GROUP	control_check	51112	5
//		 05/03/2020

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");

    SHELL_OPT                               = VALUE(INT,  "Shell");
    PSID_Sel_Opt                            = VALUE(INT,  "Shell Option");

    LSD_PID                                 = VALUE(COMPONENT,  "Part to be checked");
    LSD_PSID                                = VALUE(SETS,  "Part set ID to be checked") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
    LSD_IFAUTO                              = VALUE(INT,  "Flag to automatically correct bad elements");
    LSD_CONVEX                              = VALUE(INT,  "Check element convexity (internal angles less than 180 degrees)");
    LSD_ADPT                                = VALUE(INT,  "Check adaptive constraints");
    LSD_ARATIO                              = VALUE(FLOAT,  "Minimum allowable aspect ratio.");
    LSD_ANGLE                               = VALUE(FLOAT,  "Maximum allowable internal angle.");
    LSD_SMIN                                = VALUE(FLOAT,  "Minimum element size.");

    _option1 = VALUE(STRING,"Option 1");
    _unified_id = VALUE(INT,"Unified ID");
    IOFLAG = VALUE(INT,"IOFLAG");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    LSD_ADPT                                = 5115;
    LSD_ANGLE                               = 3109;
    LSD_ARATIO                              = 5116;
    LSD_CONVEX                              = 5114;
    LSD_IFAUTO                              = 5113;
    LSD_PID                                 = 149;
    LSD_SMIN                                = 5117;
    SHELL_OPT                               = 5118;
    PSID_Sel_Opt                            = 6303;
    LSD_PSID                                = 768;

    _option1 = -1;
    _unified_id = -1;
    IOFLAG =-1;

}

DEFAULTS(COMMON)
{

    LSD_ADPT    = 1;
    LSD_ANGLE    = 150.0;
    LSD_ARATIO    = 0.25;
    LSD_CONVEX    = 1;

}

GUI(COMMON)
{  
    FLAG( SHELL_OPT);
    if(SHELL_OPT == 1) 
    {
        ASSIGN(KEYWORD_STR, "*CONTROL_CHECK_SHELL");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "*CONTROL_CHECK");
    }
mandatory:
    RADIO(PSID_Sel_Opt)
    {
        ADD(0,"Part ID");
        ADD(1,"Part Set ID");
    }
    if(PSID_Sel_Opt == 0)
    {       
        DATA(LSD_PID);
    }
    else
    {
        DATA(LSD_PSID); 
    }
optional:
    RADIO(LSD_IFAUTO,"IFAUTO")
    {
        ADD(0,"0: write warning message only");
        ADD(1,"1: fix bad element, write message");
    }
    RADIO(LSD_CONVEX,"CONVEX")
    {
        ADD(0,"0: do not check");
        ADD(1,"1: check");
    }
    RADIO(LSD_ADPT,"ADPT")
    {
        ADD(0,"0: do not check");
        ADD(1,"1: check");
    }
    SCALAR(LSD_ARATIO,"ARATIO") {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_ANGLE,"ANGLE") {DIMENSION="a";}
    SCALAR(LSD_SMIN,"SMIN") {DIMENSION="l";}
  

}

// File format
FORMAT(Keyword971) 
{
    ASSIGN(IOFLAG,1,IMPORT);
    ASSIGN(IOFLAG,0,EXPORT);

    if(IOFLAG == 0 && SHELL_OPT == 0)
    {
        HEADER("*CONTROL_CHECK");
    }
    else if(IOFLAG == 0 && SHELL_OPT == 1) 
    {
        HEADER("*CONTROL_CHECK_SHELL");
    }

    if(IOFLAG == 1)
    {
        HEADER("*CONTROL_CHECK%s",_option1);
    }

   
    if(IOFLAG==1 && _option1 == "") 
    {
        ASSIGN(SHELL_OPT,0);
    }
    else if(IOFLAG==1 && _option1 != "") 
    {
        ASSIGN(SHELL_OPT,1);
    }

    if(IOFLAG == 0 &&  PSID_Sel_Opt == 0)
    {
        ASSIGN(_unified_id,1 * LSD_PID,EXPORT);
    }
    else
    {
        ASSIGN(_unified_id,-1 * LSD_PSID,EXPORT);
    }

    COMMENT("$    PSID    IFAUTO    CONVEX      ADPT    ARATIO     ANGLE      SMIN");
    CARD("%10d%10d%10d%10d%10lg%10lg%10lg",_unified_id,LSD_IFAUTO,LSD_CONVEX,LSD_ADPT,LSD_ARATIO,LSD_ANGLE,LSD_SMIN);

    if(IOFLAG ==1 && _unified_id > 0)
    {
        ASSIGN(LSD_PID,_unified_id,IMPORT);
        ASSIGN(PSID_Sel_Opt,0,IMPORT);
    }
    else if(IOFLAG ==1 && _unified_id < 0)
    {
        ASSIGN(LSD_PSID,_unified_id * -1,IMPORT);
        ASSIGN(PSID_Sel_Opt,1,IMPORT);
    }

}
