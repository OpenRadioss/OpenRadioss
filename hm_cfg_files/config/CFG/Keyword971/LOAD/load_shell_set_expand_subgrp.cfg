//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//LOAD_SHELL_NON_UNIFORM
//

ATTRIBUTES(COMMON) {
  //standard variables
  distribution_table_count                          = SIZE("Size of tabular");
  
  //Data names
  magnitude                                         = ARRAY[distribution_table_count](FLOAT, "Temperature at node");
  rgd_bdy_vel_opt_overwrite                         = ARRAY[distribution_table_count](INT, "Overwrite vel of all *PART_INERTIA and *CNRB");
  activation_time                                   = ARRAY[distribution_table_count](FLOAT,"Time imposed motion/constraint is activated");
  curveid                                           = ARRAY[distribution_table_count](FUNCT, "Load curve");
  location_unit_element                             = ARRAY[distribution_table_count](MULTIOBJECT,  "EID") { SUBTYPES = ( /NODE , /ELEMS , /SETS , /COMPONENT , /LINE , /POINT ) ; }
}

DEFINITIONS(COMMON) {
    MAINS               = (location_unit_element);
}

GUI(COMMON) {
/*
  mandatory:
  DATA(NID);  
  optional:
  SCALAR(VX) { DIMENSION = "SPEED"; }
  SCALAR(VY) { DIMENSION = "SPEED"; }
  SCALAR(VZ) { DIMENSION = "SPEED"; }
  SCALAR(VXR) { DIMENSION = "ANGULAR SPEED"; }
  SCALAR(VYR) { DIMENSION = "ANGULAR SPEED"; }
  SCALAR(VZR) { DIMENSION = "ANGULAR SPEED"; }
//TOOL(ICID) ;
*/
}


FORMAT(Keyword971)
{
    COMMENT("$      EID      LCID        SF        AT");
    FREE_CARD_LIST(distribution_table_count)
    {
        CARD_PREREAD("          %10d",rgd_bdy_vel_opt_overwrite);
        CARD("%10d%10d%10lg%10lg",location_unit_element,CELL_COND( if(rgd_bdy_vel_opt_overwrite > 0) curveid; else rgd_bdy_vel_opt_overwrite; ),magnitude,activation_time);
    }
}
  
  
  
  




