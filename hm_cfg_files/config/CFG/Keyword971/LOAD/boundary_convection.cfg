//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//BOUNDARY_CONVECTION
//

ATTRIBUTES(COMMON) {
  engineering_type                                  = VALUE(UINT, "engineering type");
  _HAS_HEADER                                       = VALUE(BOOL, "Header card flag");
  //
  entityid                                          = VALUE(SETS, "Node ID") { SUBTYPES = ( /SETS ) ; } 
  curveid                                           = VALUE(FUNCT, "Load curve ID");
  env_temp_evolve_fn        = VALUE(FUNCT, "Load curve ID");
  magnitude                                         = VALUE(FLOAT, "Curve multiplier for temperature");
  env_temp_const                  = VALUE(FLOAT, "Curve multiplier for temperature");
  //entityid.cardimage                                = VALUE(STRING, "cardimage");
  thk_shell_surf_temp        = VALUE(INT, "Application of surface for thermal shell elements");
}

DEFINITIONS(COMMON) {
    //_GET_ENTITY_VALUE       = (entityid.cardimage);
}

DEFAULTS(COMMON) {
   _HAS_HEADER                   = TRUE;
}

GUI(COMMON) {
/*
   
*/
}


FORMAT(Keyword971)
{
  //if(entityid.cardimage == "<None>")
  //CARD("%s",entityid.cardimage);
  if(engineering_type > 0)
  {
    HEADER("*BOUNDARY_CONVECTION_SET");
    COMMENT("$     SSID");
    CARD("%10d",entityid);
    COMMENT("$    HLCID     HMULT     TLCID     TMULT       LOC");
    CARD("%10d%10lf%10d%10lf%10d",curveid,magnitude,env_temp_evolve_fn,env_temp_const,thk_shell_surf_temp);
  }
}




