//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//LOAD_SEGMENT
//

ATTRIBUTES(COMMON) {
  //standard variables
    _HAS_HEADER                                       = VALUE(BOOL, "Header card flag");
    distribution_table_count                          = SIZE("Size of tabular");

    //Data names
    keyword_name                                      = VALUE(BOOL, "Title");
    displayname                                       = VALUE(STRING, "Heading");
    entityid                                          = VALUE(SETS, "Node ID") { SUBTYPES = ( /SETS ) ; }
    magnitude                                         = ARRAY[distribution_table_count](FLOAT, "Temperature at node");
    rgd_bdy_vel_opt_overwrite                         = ARRAY[distribution_table_count](INT, "Overwrite vel of all *PART_INERTIA and *CNRB");
    activation_time                                   = ARRAY[distribution_table_count](FLOAT,"Time imposed motion/constraint is activated");
    curveid                                           = ARRAY[distribution_table_count](FUNCT, "Load curve");
    location_unit_facet                               = ARRAY[distribution_table_count](MULTIOBJECT,  "EID") { SUBTYPES = ( /NODE , /ELEMS , /SETS , /COMPONENT, /LINE , /POINT ) ; }
    os_g1                                             = ARRAY[distribution_table_count](NODE, "G1");
    os_g2                                             = ARRAY[distribution_table_count](NODE, "G2");
    os_g3                                             = ARRAY[distribution_table_count](NODE, "G3");
    os_g4                                             = ARRAY[distribution_table_count](NODE, "G4");
}

DEFINITIONS(COMMON) {
    MAINS               = (location_unit_facet);
    GET_ALL_ELEMENT_NODES   = (entityid, os_g1,os_g2,os_g3,os_g4);
}

DEFAULTS(COMMON) {
   _HAS_HEADER                   = TRUE;
}

GUI(COMMON) {
/*
*/
}


FORMAT(Keyword971)
{
    if(keyword_name != 0 && distribution_table_count == 1)
    {
        HEADER("*LOAD_SEGMENT_ID");
        COMMENT("$       IDHEADING");
        CARD("%10d%-70s",_ID_, displayname);
    }
    else
    {
        HEADER("*LOAD_SEGMENT");
    }
    COMMENT("$     LCID        SF        AT        N1        N2        N3        N4");
    CARD_LIST(distribution_table_count)
    {
        if(rgd_bdy_vel_opt_overwrite >= 0)
        {
            CARD("%10d%10lf%10lf%10d%10d%10d%10d",curveid,magnitude,activation_time,os_g1,os_g2,os_g3,os_g4);
        }
        else
        {
            CARD("%10d%10lf%10lf%10d%10d%10d%10d",rgd_bdy_vel_opt_overwrite,magnitude,activation_time,os_g1,os_g2,os_g3,os_g4);
        }
    }
}




