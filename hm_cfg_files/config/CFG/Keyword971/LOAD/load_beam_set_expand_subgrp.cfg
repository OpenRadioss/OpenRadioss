//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//LOAD_BEAM_NON_UNIFORM
//

ATTRIBUTES(COMMON) {
  //standard variables
  distribution_table_count    = SIZE("Size of tabular");
  
  //Data names
  magnitude                                         = ARRAY[distribution_table_count](FLOAT, "Temperature at node");
  beam_axial_dir                                    = ARRAY[distribution_table_count](INT, "Direction of applied load");
  curveid                                           = ARRAY[distribution_table_count](FUNCT, "Load curve");
  location_unit_element                             = ARRAY[distribution_table_count](MULTIOBJECT,  "EID") { SUBTYPES = ( /NODE , /ELEMS , /SETS , /COMPONENT, /LINE , /POINT ) ; }
}

DEFINITIONS(COMMON) {
    MAINS               = (location_unit_element);
}

GUI(COMMON) {
/*
  mandatory:
  DATA(EID);
  RADIO(DAL) {
    ADD(1,"along r-axis of beam");
    ADD(2,"along s-axis of beam");
    ADD(3,"along t-axis of beam");
  }
  FUNCTION(LCID);
  optional:
  SCALAR(SF);
*/
}


FORMAT(Keyword971)
{
    COMMENT("$      EID       DAL      LCID        SF");
    CARD_LIST(distribution_table_count)
    {
        CARD("%10d%10d%10d%10lg",location_unit_element,beam_axial_dir,curveid,magnitude);
    }
}
