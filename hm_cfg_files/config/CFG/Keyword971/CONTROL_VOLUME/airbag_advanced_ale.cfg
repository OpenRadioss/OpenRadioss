//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// AIRBAG_ADVANCED_ALE
// 


 ATTRIBUTES(COMMON) 
 
 {
  
  // Initial and reference densities
  KEYWORD_STR                     = VALUE(STRING, "Solver Keyword");
  ALE_BAGID1                      = VALUE(DEFINE_ALEBAG_BAG,"BAGID1");           
  ALE_BAGID2                      = VALUE(DEFINE_ALEBAG_BAG,"BAGID2");
  ALE_BAGID3                      = VALUE(DEFINE_ALEBAG_BAG,"BAGID3");
  ALE_BAGID4                      = VALUE(DEFINE_ALEBAG_BAG,"BAGID4");
  ALE_BAGID5                      = VALUE(DEFINE_ALEBAG_BAG,"BAGID5");
  ALE_BAGID6                      = VALUE(DEFINE_ALEBAG_BAG,"BAGID6");
  ALE_BAGID7                      = VALUE(DEFINE_ALEBAG_BAG,"BAGID7");
  ALE_BAGID8                      = VALUE(DEFINE_ALEBAG_BAG,"BAGID8");
  ALE_HOLEID1                     = VALUE(DEFINE_ALEBAG_HOLE,"HOLEID1");
  ALE_HOLEID2                     = VALUE(DEFINE_ALEBAG_HOLE,"HOLEID2");
  ALE_HOLEID3                     = VALUE(DEFINE_ALEBAG_HOLE,"HOLEID3");
  ALE_HOLEID4                     = VALUE(DEFINE_ALEBAG_HOLE,"HOLEID4");
  ALE_HOLEID5                     = VALUE(DEFINE_ALEBAG_HOLE,"HOLEID5");
  ALE_HOLEID6                     = VALUE(DEFINE_ALEBAG_HOLE,"HOLEID6");
  ALE_HOLEID7                     = VALUE(DEFINE_ALEBAG_HOLE,"HOLEID7");
  ALE_HOLEID8                     = VALUE(DEFINE_ALEBAG_HOLE,"HOLEID8");
  ALE_INFLID1                     = VALUE(DEFINE_ALEBAG_INFLATOR,"INFLID1");
  ALE_INFLID2                     = VALUE(DEFINE_ALEBAG_INFLATOR,"INFLID2");
  ALE_INFLID3                     = VALUE(DEFINE_ALEBAG_INFLATOR,"INFLID3");
  ALE_INFLID4                     = VALUE(DEFINE_ALEBAG_INFLATOR,"INFLID4");
  ALE_INFLID5                     = VALUE(DEFINE_ALEBAG_INFLATOR,"INFLID5");
  ALE_INFLID6                     = VALUE(DEFINE_ALEBAG_INFLATOR,"INFLID6");
  ALE_INFLID7                     = VALUE(DEFINE_ALEBAG_INFLATOR,"INFLID7");
  ALE_INFLID8                     = VALUE(DEFINE_ALEBAG_INFLATOR,"INFLID8");
  LSD_MESH_OPTION                 = VALUE(INT, "ALE MESH OPTION");
  LSD_NXIDA                       = VALUE(INT, "NX");
  LSD_NYIDG                       = VALUE(INT, "NY");
  LSD_NZA                         = VALUE(INT, "NZ");
  LSD_PID                         = VALUE(COMPONENT, "IDA");
  LSD_ABGDEF_OPTION               = VALUE(INT, "UsedInAnotherAibagDefinition");
  LSD_ARSNID                      = VALUE(SETS, "ARSNID") { SUBTYPES = (/SETS/SET_NODE_IDPOOL) ; }      //Datatype have to be verify  "Group"
  LSD_IDCENT                      = VALUE(NODE, "IDCENT");
  LSD_EXSID                       = VALUE(COMPONENT, "EXSID");
  LSD_LX                          = VALUE(FLOAT, "LX");
  LSD_LY                          = VALUE(FLOAT, "LY");
  LSD_LZ                          = VALUE(FLOAT, "LZ");
  LSD_ITRANS                      = VALUE(NODE, "ITRANS");      //Datatype have to be verify  "Systcol"
  LSD_UIDAIR                      = VALUE(INT, "UIDAIR");
  LSD_ATMOST                      = VALUE(FLOAT, "ATMOST");
  LSD_ATMOSP                      = VALUE(FLOAT, "ATMOSP");
  LSD_GC                          = VALUE(FLOAT, "GC");
  LSD_CC                          = VALUE(FLOAT, "CC");
  LSD_MWD                         = VALUE(FLOAT, "MWD");
  LSD_SPSF                        = VALUE(FLOAT, "SPSF");
  LSD_PSF                         = VALUE(FLOAT, "SWTIME");
  LSD_GAMMA                       = VALUE(FLOAT, "HG");
  LSD_DATA                        = SIZE("NAIR");
  LSD_MWAIR                       = ARRAY[LSD_DATA](FLOAT, "MWAIR"); 
  LSD_INITM1                      = ARRAY[LSD_DATA](FLOAT, "INITM1");
  LSD_AIRA                        = ARRAY[LSD_DATA](FLOAT, "AIRA");
  LSD_AIRB                        = ARRAY[LSD_DATA](FLOAT, "AIRB");
  LSD_AIRC                        = ARRAY[LSD_DATA](FLOAT, "AIRC");
  
}

SKEYWORDS_IDENTIFIER(COMMON)

{

    KEYWORD_STR                 = 9000;
    ALE_BAGID1                  = 5731;
    ALE_BAGID2                  = 5732;
    ALE_BAGID3                  = 5733;
    ALE_BAGID4                  = 5734;
    ALE_BAGID5                  = 5735;
    ALE_BAGID6                  = 5736;
    ALE_BAGID7                  = 5737;
    ALE_BAGID8                  = 5738;
    ALE_HOLEID1                 = 5739;
    ALE_HOLEID2                 = 5740;
    ALE_HOLEID3                 = 5741;
    ALE_HOLEID4                 = 5742;
    ALE_HOLEID5                 = 5743;
    ALE_HOLEID6                 = 5744;
    ALE_HOLEID7                 = 5745;
    ALE_HOLEID8                 = 5746;
    ALE_INFLID1                 = 5747;
    ALE_INFLID2                 = 5748;
    ALE_INFLID3                 = 5749;
    ALE_INFLID4                 = 5750;
    ALE_INFLID5                 = 5751;
    ALE_INFLID6                 = 5752;
    ALE_INFLID7                 = 5753;
    ALE_INFLID8                 = 5754;
    LSD_MESH_OPTION             = 5756;
    LSD_NXIDA                   = 5326;
    LSD_NYIDG                   = 5327;
    LSD_NZA                     = 5328;
    LSD_PID                     = 149;
    LSD_ABGDEF_OPTION           = 5757;
    LSD_ARSNID                  = 5758;
    LSD_IDCENT                  = 5759;
    LSD_EXSID                   = 5760;
    LSD_LX                      = 5761;
    LSD_LY                      = 5762;
    LSD_LZ                      = 5763;
    LSD_ITRANS                  = 5764;
    LSD_UIDAIR                  = 5765;
    LSD_ATMOST                  = 3185;    
    LSD_ATMOSP                  = 3186;
    LSD_GC                      = 3063;
    LSD_CC                      = 3189;
    LSD_MWD                     = 3045;
    LSD_SPSF                    = 3046;
    LSD_PSF                     = 3559;
    LSD_GAMMA                   = 4336;
    LSD_DATA                    = 4622;
    LSD_MWAIR                   = 5333;
    LSD_INITM1                  = 5334;
    LSD_AIRA                    = 5335;
    LSD_AIRB                    = 5336;
    LSD_AIRC                    = 5337;
                                     
    
    

}
DEFAULTS(COMMON)
{
    LSD_NXIDA  = 1.0;
    LSD_NYIDG  = 1.0;
    LSD_NZA    = 1.0;
    LSD_LX     = 1.0;
    LSD_LY     = 1.0;
    LSD_LZ     = 1.0;
    LSD_UIDAIR = 1.0;
    LSD_CC     = 1.0;
    
}
GUI(COMMON) 

{


    ASSIGN(KEYWORD_STR, "*AIRBAG_ADVANCED_ALE");
    
    DATA(ALE_BAGID1);  
    DATA(ALE_BAGID2);  
    DATA(ALE_BAGID3);  
    DATA(ALE_BAGID4);  
    DATA(ALE_BAGID5);  
    DATA(ALE_BAGID6);  
    DATA(ALE_BAGID7);  
    DATA(ALE_BAGID8);  
    DATA(ALE_HOLEID1); 
    DATA(ALE_HOLEID2); 
    DATA(ALE_HOLEID3); 
    DATA(ALE_HOLEID4); 
    DATA(ALE_HOLEID5); 
    DATA(ALE_HOLEID6); 
    DATA(ALE_HOLEID7); 
    DATA(ALE_HOLEID8); 
    DATA(ALE_INFLID1); 
    DATA(ALE_INFLID2); 
    DATA(ALE_INFLID3); 
    DATA(ALE_INFLID4); 
    DATA(ALE_INFLID5); 
    DATA(ALE_INFLID6); 
    DATA(ALE_INFLID7); 
    DATA(ALE_INFLID8); 
    RADIO(LSD_MESH_OPTION)
    {
        ADD(0, "GENERATE MESH");
        ADD(1, "SELECT MESH");
    }
    if(LSD_MESH_OPTION == 0)
    {
        SCALAR(LSD_NXIDA);
        SCALAR(LSD_NYIDG);
        SCALAR(LSD_NZA);
    }
    if(LSD_MESH_OPTION == 1)
    {
        DATA(LSD_PID);
        FLAG(LSD_ABGDEF_OPTION);
    }
    DATA(LSD_ARSNID);
    DATA(LSD_IDCENT);
    DATA(LSD_EXSID);
    if(LSD_MESH_OPTION == 0)
    {
        SCALAR(LSD_LX);
        SCALAR(LSD_LY);
        SCALAR(LSD_LZ);
        DATA(LSD_ITRANS);
        SCALAR(LSD_UIDAIR);
    }
    SCALAR(LSD_ATMOST);
    SCALAR(LSD_ATMOSP);
    SCALAR(LSD_GC);
    SCALAR(LSD_CC);
    SCALAR(LSD_MWD);
    SCALAR(LSD_SPSF);
    SCALAR(LSD_PSF);
    SCALAR(LSD_GAMMA);
    SCALAR(LSD_DATA);
    if(LSD_DATA > 0)
    {
        SIZE(LSD_DATA);
        ARRAY(LSD_DATA,"")
            {
                SCALAR(LSD_MWAIR);
                SCALAR(LSD_INITM1);
                SCALAR(LSD_AIRA);
                SCALAR(LSD_AIRB);
                SCALAR(LSD_AIRC);
            }        
    }
    
}

// File format
FORMAT(Keyword971) 
{
    COMMENT("$   BAGID1    BAGID2    BAGID3    BAGID4    BAGID5    BAGID6    BAGID7    BAGID8");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10d",ALE_BAGID1,ALE_BAGID2,ALE_BAGID3,ALE_BAGID4,ALE_BAGID5,ALE_BAGID6,ALE_BAGID7,ALE_BAGID8);
    //
    COMMENT("$  HOLEID1   HOLEID2   HOLEID3   HOLEID4   HOLEID5   HOLEID6   HOLEID7   HOLEID8");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10d",ALE_HOLEID1,ALE_HOLEID2,ALE_HOLEID3,ALE_HOLEID4,ALE_HOLEID5,ALE_HOLEID6,ALE_HOLEID7,ALE_HOLEID8);
    //
    COMMENT("$  INFLID1   INFLID2   INFLID3   INFLID4   INFLID5   INFLID6   INFLID7   INFLID8");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10d",ALE_INFLID1,ALE_INFLID2,ALE_INFLID3,ALE_INFLID4,ALE_INFLID5,ALE_INFLID6,ALE_INFLID7,ALE_INFLID8);
    //
    if(LSD_MESH_OPTION == 0)
    {
        //
        COMMENT("$       NX        NY        NZ              ARSNID    IDCENT     EXSID");
        CARD("%10d%10d%10d          %10d%10d%10d",LSD_NXIDA,LSD_NYIDG,LSD_NZA,LSD_ARSNID,LSD_IDCENT,LSD_EXSID);
        //
        COMMENT("$       LX        LY        LZ    ITRANS    UIDAIR");
        CARD("%10lg%10lg%10lg%10d%10d",LSD_LX,LSD_LY,LSD_LZ,LSD_ITRANS,LSD_UIDAIR);
        //
    }
    if(LSD_MESH_OPTION == 0)
    {
        //
        COMMENT("$      IDA                                  ARSNID    IDCENT     EXSID");
        CARD("%10d                              %10d%10d%10d",LSD_PID,LSD_ARSNID,LSD_IDCENT,LSD_EXSID);
        //        
    }
    //
    COMMENT("$   ATMOST    ATMOSP                  GC        CC                 MWD      SPSF");
    CARD("%10lg%10lg          %10lg%10lg          %10lg%10lg",LSD_ATMOST,LSD_ATMOSP,LSD_GC,LSD_CC,LSD_MWD,LSD_SPSF);
    //
    COMMENT("$   SWTIME                  HG      NAIR");
    CARD("%10lg          %10lg%10d",LSD_PSF,LSD_GAMMA,LSD_DATA);
    //
    if(LSD_DATA > 0)
    {
        CARD_LIST(LSD_DATA)
        {
           //
           COMMENT("$                                  MWAIR     INITM      AIRA      AIRB      AIRC");
           CARD("                              %10lg%10lg%10lg%10lg%10lg",LSD_MWAIR,LSD_INITM1,LSD_AIRA,LSD_AIRB,LSD_AIRC);
           //
        }
    }

}
