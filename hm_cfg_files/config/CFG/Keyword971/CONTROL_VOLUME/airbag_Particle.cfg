//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// AIRBAG_PARTICLE
// 


ATTRIBUTES(COMMON) 

{

    // Initial and reference densities
    KEYWORD_STR                     = VALUE(STRING, "Solver Keyword");
    LSD_MPPOpt                      = VALUE(INT, "mppOption");
    LSD_SX                          = VALUE(FLOAT, "SX");
    LSD_SY                          = VALUE(FLOAT, "SY");
    LSD_SZ                          = VALUE(FLOAT, "SZ");
    LSD_STYPE1                      = VALUE(INT, "SID TYPE1");
    LSD_SET_SD1                     = VALUE(COMPONENT, "SD1");
    LSD_SD1                         = VALUE(SETS, "SD1") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
    LSD_STYPE2                      = VALUE(INT, "SID TYPE2");
    LSD_SD2                         = VALUE(SETS, "SD2") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
    LSD_SET_SD2                     = VALUE(COMPONENT, "SD2");
    LSD_NSD2                        = SIZE("SD2");
    LSD_BLOCK                       = VALUE(INT, "BLOCK"); 
    LSD_NPDATA                      = SIZE("NPDATA");
    LSDYNA_FRIC                     = VALUE(FLOAT, "FRIC"); 
    LSD_IRPD                        = VALUE(INT, "IRPD"); 
    LSD_NP                          = VALUE(INT, "NP");
    LSD_UNIT                        = VALUE(INT, "UNIT");
    LSD_VISFLAG                     = VALUE(INT, "VISFLAG");
    LSD_TATM                        = VALUE(FLOAT, "TATM");
    LSD_PATM                        = VALUE(FLOAT, "PATM");
    LSD_NVENT                       = VALUE(INT, "NVENT");
    LSD_TEND                        = VALUE(FLOAT, "TEND");
    LSD_TSW                         = VALUE(FLOAT, "TSW");
    LSD_NGAS                        = SIZE("NGAS");
    LSD_IAIR                        = VALUE(INT, "IAIR");
    LSD_NORIF                       = SIZE("NORIF");
    NID1                            = VALUE(NODE, "NID1");
    NID2                            = VALUE(NODE, "NID2");
    NID3                            = VALUE(NODE, "NID3");
    LSD_CHM                         = VALUE(CONTROLVOL, "CHM");
    LSD_CD_EXT                      = VALUE(FLOAT, "CD_EXT");
    STYUPArray_UP                   = ARRAY[LSD_NSD2](STRING, "STYUP");
    PartIdArray_UP                  = ARRAY[LSD_NSD2](COMPONENT, "SIDUP");
    LSD_PFRAC                       = ARRAY[LSD_NSD2](FLOAT, "PFRAC");
    LSD_LINKING                     = ARRAY[LSD_NSD2](COMPONENT, "LINKING");
    STYPEArray_H                    = ARRAY[LSD_NPDATA](STRING, "STYPEH");
    PartIdArray_H                   = ARRAY[LSD_NPDATA](COMPONENT, "SIDH");
    PartSetArray_H                  = ARRAY[LSD_NPDATA](COMPONENT, "SIDH");
    LSD_HCONVI                      = ARRAY[LSD_NPDATA](FLOAT, "HCONVI");
    LSD_PFRICI                      = ARRAY[LSD_NPDATA](FLOAT, "PFRIC");
    LSD_SDFBLKI                     = ARRAY[LSD_NPDATA](FLOAT, "SDFBLK");
    LSD_KPI                         = ARRAY[LSD_NPDATA](FLOAT, "KP");

    STYPE3_1                        = VALUE(INT, "STYPE3_1");
    LSD_SD3_comp_1                  = VALUE(COMPONENT, "SID3_1");
    LSD_SD3_set_1                   = VALUE(SETS, "SID3_1") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
    LSD_C23array_1                  = VALUE(FLOAT, "C23_1");
    LSD_LCTC23_1                    = VALUE(FUNCT, "LCTC23_1");
    LSD_LCPC23_1                    = VALUE(FUNCT, "LCPC23_1");
    LSD_ENH_V_1                     = VALUE(INT, "ENH_V");
    LSD_PPOP_1                      = VALUE(FLOAT, "PPOP");

    STYPE3_2                        = VALUE(INT, "STYPE3_2");
    LSD_SD3_comp_2                  = VALUE(COMPONENT, "SID3_2");
    LSD_SD3_set_2                   = VALUE(SETS, "SID3_2") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
    LSD_C23array_2                  = VALUE(FLOAT, "C23_2");
    LSD_LCTC23_2                    = VALUE(FUNCT, "LCTC23_2");
    LSD_LCPC23_2                    = VALUE(FUNCT, "LCPC23_2");
    LSD_ENH_V_2                     = VALUE(INT, "ENH_V");
    LSD_PPOP_2                      = VALUE(FLOAT, "PPOP");

    STYPE3_3                        = VALUE(INT, "STYPE3_3");
    LSD_SD3_comp_3                  = VALUE(COMPONENT, "SID3_3");
    LSD_SD3_set_3                   = VALUE(SETS, "SID3_3") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
    LSD_C23array_3                  = VALUE(FLOAT, "C23_3");
    LSD_LCTC23_3                    = VALUE(FUNCT, "LCTC23_3");
    LSD_LCPC23_3                    = VALUE(FUNCT, "LCPC23_3");
    LSD_ENH_V_3                     = VALUE(INT, "ENH_V");
    LSD_PPOP_3                      = VALUE(FLOAT, "PPOP");

    STYPE3_4                        = VALUE(INT, "STYPE3_4");
    LSD_SD3_comp_4                  = VALUE(COMPONENT, "SID3_4");
    LSD_SD3_set_4                   = VALUE(SETS, "SID3_4") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
    LSD_C23array_4                  = VALUE(FLOAT, "C23_4");
    LSD_LCTC23_4                    = VALUE(FUNCT, "LCTC23_4");
    LSD_LCPC23_4                    = VALUE(FUNCT, "LCPC23_4");
    LSD_ENH_V_4                     = VALUE(INT, "ENH_V");
    LSD_PPOP_4                      = VALUE(FLOAT, "PPOP");  

    STYPE3_5                        = VALUE(INT, "STYPE3_5");
    LSD_SD3_comp_5                  = VALUE(COMPONENT, "SID3_5");
    LSD_SD3_set_5                   = VALUE(SETS, "SID3_5") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
    LSD_C23array_5                  = VALUE(FLOAT, "C23_5");
    LSD_LCTC23_5                    = VALUE(FUNCT, "LCTC23_5");
    LSD_LCPC23_5                    = VALUE(FUNCT, "LCPC23_5");
    LSD_ENH_V_5                     = VALUE(INT, "ENH_V");
    LSD_PPOP_5                      = VALUE(FLOAT, "PPOP");

    STYPE3_6                        = VALUE(INT, "STYPE3_6");
    LSD_SD3_comp_6                  = VALUE(COMPONENT, "SID3_6");
    LSD_SD3_set_6                   = VALUE(SETS, "SID3_6") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
    LSD_C23array_6                  = VALUE(FLOAT, "C23_6");
    LSD_LCTC23_6                    = VALUE(FUNCT, "LCTC23_6");
    LSD_LCPC23_6                    = VALUE(FUNCT, "LCPC23_6");
    LSD_ENH_V_6                     = VALUE(INT, "ENH_V");
    LSD_PPOP_6                      = VALUE(FLOAT, "PPOP");

    STYPE3_7                        = VALUE(INT, "STYPE3_7");
    LSD_SD3_comp_7                  = VALUE(COMPONENT, "SID3_7");
    LSD_SD3_set_7                   = VALUE(SETS, "SID3_7") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
    LSD_C23array_7                  = VALUE(FLOAT, "C23_7");
    LSD_LCTC23_7                    = VALUE(FUNCT, "LCTC23_7");
    LSD_LCPC23_7                    = VALUE(FUNCT, "LCPC23_7");
    LSD_ENH_V_7                     = VALUE(INT, "ENH_V");
    LSD_PPOP_7                      = VALUE(FLOAT, "PPOP");

    STYPE3_8                        = VALUE(INT, "STYPE3_8");
    LSD_SD3_comp_8                  = VALUE(COMPONENT, "SID3_8");
    LSD_SD3_set_8                   = VALUE(SETS, "SID3_8") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
    LSD_C23array_8                  = VALUE(FLOAT, "C23_8");
    LSD_LCTC23_8                    = VALUE(FUNCT, "LCTC23_8");
    LSD_LCPC23_8                    = VALUE(FUNCT, "LCPC23_8");
    LSD_ENH_V_8                     = VALUE(INT, "ENH_V");
    LSD_PPOP_8                      = VALUE(FLOAT, "PPOP");

    STYPE3_9                        = VALUE(INT, "STYPE3_9");
    LSD_SD3_comp_9                  = VALUE(COMPONENT, "SID3_9");
    LSD_SD3_set_9                   = VALUE(SETS, "SID3_9") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
    LSD_C23array_9                  = VALUE(FLOAT, "C23_9");
    LSD_LCTC23_9                    = VALUE(FUNCT, "LCTC23_9");
    LSD_LCPC23_9                    = VALUE(FUNCT, "LCPC23_9");
    LSD_ENH_V_9                     = VALUE(INT, "ENH_V");
    LSD_PPOP_9                      = VALUE(FLOAT, "PPOP");

    STYPE3_10                       = VALUE(INT, "STYPE3_10");
    LSD_SD3_comp_10                 = VALUE(COMPONENT, "SID3_10");
    LSD_SD3_set_10                  = VALUE(SETS, "SID3_10") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
    LSD_C23array_10                 = VALUE(FLOAT, "C23_10");
    LSD_LCTC23_10                   = VALUE(FUNCT, "LCTC23_10");
    LSD_LCPC23_10                   = VALUE(FUNCT, "LCPC23_10");
    LSD_ENH_V_10                    = VALUE(INT, "ENH_V");
    LSD_PPOP_10                     = VALUE(FLOAT, "PPOP");

    LSD_PAIR                        = VALUE(FLOAT, "PAIR");
    LSD_TAIR                        = VALUE(FLOAT, "TAIR");
    LSD_XMAIR                       = VALUE(FLOAT, "XMAIR");
    LSD_AAIR                        = VALUE(FLOAT, "AAIR");
    LSD_BAIR                        = VALUE(FLOAT, "BAIR");
    LSD_CAIR                        = VALUE(FLOAT, "CAIR");
    LSD_NP_AIR                      = VALUE(INT, "NP_AIR");
    LSD_NP_RELAX                    = VALUE(INT, "NP_RELAX");

    LSD_LCMI                        = ARRAY[LSD_NGAS](FUNCT, "LCMi");
    LSD_LCTI                        = ARRAY[LSD_NGAS](FUNCT, "LCTi");
    LSD_XMI                         = ARRAY[LSD_NGAS](FLOAT, "XMi");
    LSD_AI                          = ARRAY[LSD_NGAS](FLOAT, "Ai");
    LSD_BI                          = ARRAY[LSD_NGAS](FLOAT, "Bi");
    LSD_CI                          = ARRAY[LSD_NGAS](FLOAT, "Ci");
    LSD_INFGI                       = ARRAY[LSD_NGAS](INT, "INFGi");

    LSD_NIDI                        = ARRAY[LSD_NORIF](NODE, "NIDi");
    LSD_ANI                         = ARRAY[LSD_NORIF](FLOAT, "ANi");
    LSD_VDI                         = ARRAY[LSD_NORIF](VECTOR, "VDi");
    LSD_CAI                         = ARRAY[LSD_NORIF](FLOAT, "CAi");
    LSD_INFOI                       = ARRAY[LSD_NORIF](INT, "INFOi");
    LSD_IMOM                        = ARRAY[LSD_NORIF](INT, "IMOM");
    LSD_IANG                        = ARRAY[LSD_NORIF](INT, "IANG");
    LSD_CHM_ID                      = ARRAY[LSD_NORIF](INT, "CHM_ID");

    IOFLAG                          = VALUE(INT,         "IOFLAG");
    TITLE                           = VALUE(STRING,      "TITLE");
    opt_                            = VALUE(INT, "If option");
    airbagoption                    = VALUE(INT, "airbagoption");
    optiontitle                     = VALUE(STRING, "Key and Option (temp)");
    negVDIFlag                      = VALUE(INT, "Vector ID");
    LSD_SHELL_NORMAL                = VALUE(FLOAT, "Shell normal vector");
}

DEFAULTS(COMMON)
{
    LSD_NP              = 200000;
    LSD_TATM            = 293;
    LSD_PATM            = 1;
    LSD_TEND            = 1.0e10;
    LSD_TSW             = 1.0e10;
    LSD_SDFBLKI         = 1.0;
    LSD_C23array_1      = 1.0;
    LSD_C23array_2      = 1.0;
    LSD_C23array_3      = 1.0;
    LSD_C23array_4      = 1.0;
    LSD_C23array_5      = 1.0;
    LSD_C23array_6      = 1.0;
    LSD_C23array_7      = 1.0;
    LSD_C23array_8      = 1.0;
    LSD_C23array_9      = 1.0;
    LSD_C23array_10     = 1.0;
    LSD_CAI             = 30.0;
    LSD_INFOI           = 1;

}
CHECK(COMMON) 
{
    LSD_PFRAC       >= 0.0;
    LSD_PFRAC       <= 1.0;
    LSD_SDFBLKI     >  0.0;
    LSD_SDFBLKI     <= 1.0;


}
SKEYWORDS_IDENTIFIER(COMMON)

{

    KEYWORD_STR                 = 9000;
    LSD_MPPOpt                  = 7783;
    LSD_SX                      = 7784;
    LSD_SY                      = 7785;
    LSD_SZ                      = 7786;
    LSD_STYPE1                  = 1080;
    LSD_SET_SD1                 = 5512;
    LSD_SD1                     = 1078;
    LSD_STYPE2                  = 1081;
    LSD_SD2                     = 1079;
    LSD_SET_SD2                 = 5513;
    LSD_NSD2                    = 7790;
    LSD_BLOCK                   = 1082;
    LSD_NPDATA                  = 7788;
    LSDYNA_FRIC                 = 59;
    LSD_IRPD                    = 7787;
    LSD_NP                      = 1083;
    LSD_UNIT                    = 1084;
    LSD_VISFLAG                 = 1085;
    LSD_TATM                    = 1086;
    LSD_PATM                    = 1087;
    LSD_NVENT                   = 787;
    LSD_TEND                    = 5107;
    LSD_TSW                     = 1088;
    LSD_IAIR                    = 1089;
    LSD_NGAS                    = 3178;
    LSD_NORIF                   = 1090;
    NID1                        = 2780;
    NID2                        = 2781;
    NID3                        = 4663;
    LSD_CHM                     = 6620;
    LSD_CD_EXT                  = 6621;
    STYUPArray_UP               = 7793;
    PartIdArray_UP              = 7791;
    LSD_PFRAC                   = 7795; 
    LSD_LINKING                 = 7797; 
    STYPEArray_H                = 7796;
    PartSetArray_H              = 7792;
    LSD_HCONVI                  = 7801;
    LSD_PFRICI                  = 7802;
    LSD_SDFBLKI                 = 7803;
    LSD_KPI                     = 7804;

    STYPE3_1                     = 1092;
    LSD_SD3_comp_1               = 5463;
    LSD_SD3_set_1                = 1091;
    LSD_C23array_1               = 1093;
    LSD_LCTC23_1                 = 1094;
    LSD_LCPC23_1                 = 1095;
    LSD_ENH_V_1                  = 7805;
    LSD_PPOP_1                   = 7806;

    STYPE3_2                     = 5459;
    LSD_SD3_set_2                = 5457;
    LSD_SD3_comp_2               = 5458;
    LSD_C23array_2               = 5460;
    LSD_LCTC23_2                 = 5461;
    LSD_LCPC23_2                 = 5462;
    LSD_ENH_V_2                  = 7807;
    LSD_PPOP_2                   = 7808;

    LSD_SD3_set_3                = 5464;
    LSD_SD3_comp_3               = 5465;
    STYPE3_3                     = 5466;
    LSD_C23array_3               = 5467;
    LSD_LCTC23_3                 = 5468;
    LSD_LCPC23_3                 = 5469;
    LSD_ENH_V_3                  = 7809;
    LSD_PPOP_3                   = 7810;

    LSD_SD3_set_4                = 5470;
    LSD_SD3_comp_4               = 5471;
    STYPE3_4                     = 5472;
    LSD_C23array_4               = 5473;
    LSD_LCTC23_4                 = 5474;
    LSD_LCPC23_4                 = 5475;
    LSD_ENH_V_4                  = 7811;
    LSD_PPOP_4                   = 7812;

    LSD_SD3_set_5                = 5476;
    LSD_SD3_comp_5               = 5477;
    STYPE3_5                     = 5478;
    LSD_C23array_5               = 5479;
    LSD_LCTC23_5                 = 5480;
    LSD_LCPC23_5                 = 5481;
    LSD_ENH_V_5                  = 7813;
    LSD_PPOP_5                   = 7814;

    LSD_SD3_set_6                = 5482;
    LSD_SD3_comp_6               = 5483;
    STYPE3_6                     = 5484;
    LSD_C23array_6               = 5485;
    LSD_LCTC23_6                 = 5486;
    LSD_LCPC23_6                 = 5487;
    LSD_ENH_V_6                  = 7815;
    LSD_PPOP_6                   = 7816;

    LSD_SD3_set_7                = 5488;
    LSD_SD3_comp_7               = 5489;
    STYPE3_7                     = 5490;
    LSD_C23array_7               = 5491;
    LSD_LCTC23_7                 = 5492;
    LSD_LCPC23_7                 = 5493;
    LSD_ENH_V_7                  = 7817;
    LSD_PPOP_7                   = 7818;

    LSD_SD3_set_8                = 5494;
    LSD_SD3_comp_8               = 5495;
    STYPE3_8                     = 5496;
    LSD_C23array_8               = 5497;
    LSD_LCTC23_8                 = 5498;
    LSD_LCPC23_8                 = 5499;
    LSD_ENH_V_8                  = 7819;
    LSD_PPOP_8                   = 7820;

    LSD_SD3_set_9                = 5500;
    LSD_SD3_comp_9               = 5501;
    STYPE3_9                     = 5502;
    LSD_C23array_9               = 5503;
    LSD_LCTC23_9                 = 5504;
    LSD_LCPC23_9                 = 5505;
    LSD_ENH_V_9                  = 7821;
    LSD_PPOP_9                   = 7822;

    LSD_SD3_set_10               = 5506;
    LSD_SD3_comp_10              = 5507;
    STYPE3_10                    = 5508;
    LSD_C23array_10              = 5509;
    LSD_LCTC23_10                = 5510;
    LSD_LCPC23_10                = 5511;
    LSD_ENH_V_10                 = 7823;
    LSD_PPOP_10                  = 7824;

    LSD_PAIR                     = 1096;
    LSD_TAIR                     = 1097;
    LSD_XMAIR                    = 1098;
    LSD_AAIR                     = 1099;
    LSD_BAIR                     = 5438;
    LSD_CAIR                     = 5439;
    LSD_NP_AIR                   = 7825;
    LSD_NP_RELAX                 = 7826;
    LSD_LCMI                     = 5440; 
    LSD_LCTI                     = 5441;
    LSD_XMI                      = 5442;
    LSD_AI                       = 5443;
    LSD_BI                       = 5444;
    LSD_CI                       = 5445;
    LSD_INFGI                    = 5446;

    LSD_NIDI                     = 5447; 
    LSD_ANI                      = 5448;
    LSD_VDI                      = 5449;
    LSD_CAI                      = 5450;
    LSD_INFOI                    = 5451;
    LSD_IMOM                     = 6622;  
    LSD_IANG                     = 6623;
    LSD_CHM_ID                   = 6624;

    IOFLAG                       = -1;
    TITLE                        = -1;
    opt_                         = -1;
    airbagoption                 = -1;
    optiontitle                  = -1;
    negVDIFlag                   = -1;
    LSD_SHELL_NORMAL             = -1;
}


GUI(COMMON) 
{
    ASSIGN(KEYWORD_STR, "*AIRBAG_PARTICLE");

    RADIO(airbagoption, "airbagoption")
    {
        ADD(1, "Mpp");
        ADD(2, "Decomposition");
        ADD(3, "Molefraction");
        ADD(4, "Id");
        ADD(5, "Title");
 //       ADD(6, "Molefraction");
    }


    FLAG(LSD_MPPOpt);
    if(LSD_MPPOpt == TRUE)
    {
        ASSIGN(KEYWORD_STR, "_MPP");

        SCALAR(LSD_SX);
        SCALAR(LSD_SY);
        SCALAR(LSD_SZ);
    }
    if(airbagoption == 1)
    {
        ASSIGN(KEYWORD_STR,"_MPP");
    }
    if(airbagoption == 2)
    {
        ASSIGN(KEYWORD_STR,"_DECOMPOSITION");
    }
    if(airbagoption == 3)
    {
        ASSIGN(KEYWORD_STR,"_MOLEFRACTION");
    }
    if(airbagoption == 4)
    {
        ASSIGN(KEYWORD_STR,"_ID");
    }
    if(airbagoption == 5)
    {
        ASSIGN(KEYWORD_STR,"_TITLE");
    }


    RADIO(LSD_STYPE1)
    {
        ADD(0, "Part Set ID");
        ADD(1, "Part ID");
    }
    if(LSD_STYPE1 == 0)
    {   
        DATA(LSD_SET_SD1);
    }
    if(LSD_STYPE1 == 1)
    {   
        DATA(LSD_SD1);
    }
    RADIO(LSD_STYPE2)           
    {
        ADD(0, "Part Set ID");
        ADD(1, "Part ID");
        ADD(2, "Number of parts to read");
    }
    if(LSD_STYPE2 == 0)
    {   
        DATA(LSD_SET_SD2);
    }
    if(LSD_STYPE2 == 1)
    {   
        DATA(LSD_SD2);
    }
    if(LSD_STYPE2 == 2)
    {   
        SCALAR(LSD_NSD2);           
    }
    if(LSD_NSD2 > 0)
    {
        SIZE(LSD_NSD2);
        ARRAY(LSD_NSD2,"")
        {
            RADIO(STYUPArray_UP)            // Value changes based on the option. which is hard coded
            {
                ADD("0","Part");
                ADD("1","Part Set");
            }
            DATA(PartIdArray_UP);
            SCALAR(LSD_PFRAC);
            DATA(LSD_LINKING);     
        }
    }

    RADIO(LSD_BLOCK)
    {
        ADD(00, "00: Consider porosity leakage: active particle method");
        ADD(01, "01: Consider porosity leakage: particle leakage");
        ADD(10, "10: Airbag node contact: active particle method");
        ADD(11, "11: Airbag node contact: particle leakage");

    }
    SCALAR(LSD_NPDATA);
    if(LSD_NPDATA > 0)
    {
        SIZE(LSD_NPDATA);
        ARRAY(LSD_NPDATA,"")
        {
            RADIO(STYPEArray_H)
            {
                ADD("0","Part");             // Value changes based on the option. which is hard coded
                ADD("1","Part Set");
            }
            DATA(PartIdArray_H);
            DATA(PartSetArray_H);
            SCALAR(LSD_HCONVI);
            SCALAR(LSD_PFRICI);
            SCALAR(LSD_SDFBLKI);
            SCALAR(LSD_KPI);
        }
    }

    SCALAR(LSDYNA_FRIC)             { DIMENSION="DIMENSIONLESS"; }
    RADIO(LSD_IRPD)
    {
        ADD(0, "OFF");
        ADD(1, "ON");
    }
    SCALAR(LSD_NP);    
    RADIO(LSD_UNIT)
    {
        ADD(0, "0: Kg-mm-ms-K");
        ADD(1, "1: SI");
        ADD(2, "2: Tonne-mm-s-K");
    }
    RADIO(LSD_VISFLAG)
    {
        ADD(0, "0: Default to 1");
        ADD(1, "1: Output particle's coordinates, velocities, mass, radius, spin energy, translational energy");
        ADD(2, "2: Output reduce data set with coordinates only");
        ADD(3, "3: Suppress CPM database");
    }
    SCALAR(LSD_TATM)                { DIMENSION="k"; }
    SCALAR(LSD_PATM)                { DIMENSION="pressure"; }
    RADIO(LSD_NVENT)            
    {
        ADD(0, "0");
        ADD(1, "1");
        ADD(2, "2");
        ADD(3, "3");
        ADD(4, "4");
        ADD(5, "5");
        ADD(6, "6");
        ADD(7, "7");
        ADD(8, "8");
        ADD(9, "9");
        ADD(10, "10");
    }
    SCALAR(LSD_TEND)                { DIMENSION="t"; }
    SCALAR(LSD_TSW)                  { DIMENSION="t"; }
    RADIO(LSD_IAIR)
    {
        ADD(0, "0: No");
        ADD(1, "1: Yes, control volume method");
        ADD(2, "2: Yes, particle method");
    }
    SIZE(LSD_NGAS); 
    if(LSD_NGAS > 0)
    {
        SIZE(LSD_NGAS);
        ARRAY(LSD_NGAS,"")
        {
            DATA(LSD_LCMI); 
            DATA(LSD_LCTI); 
            SCALAR(LSD_XMI)              {DIMENSION="density";}
            SCALAR(LSD_AI)               {DIMENSION="DIMENSIONLESS";}
            SCALAR(LSD_BI)               {DIMENSION="DIMENSIONLESS";}
            SCALAR(LSD_CI)               {DIMENSION="DIMENSIONLESS";}
            SCALAR(LSD_INFGI)            {DIMENSION="DIMENSIONLESS";}
        }
    }
    SCALAR(LSD_NORIF);      
    if(LSD_NORIF > 0)
    {
        SIZE(LSD_NORIF);
        ARRAY(LSD_NORIF,"")
        {
            DATA(LSD_NIDI);  
            SCALAR(LSD_ANI)             {DIMENSION="area";}   
            //DATA(LSD_VDI);

            FLAG(negVDIFlag);
            if(negVDIFlag == TRUE)
            {
                 SCALAR(LSD_SHELL_NORMAL)        {DIMENSION="DIMENSIONLESS";}
            }
            else
            {
                 DATA(LSD_VDI);
            }

            SCALAR(LSD_CAI)             {DIMENSION="DIMENSIONLESS";}
            SCALAR(LSD_INFOI)           {DIMENSION="DIMENSIONLESS";}
            RADIO(LSD_IMOM)
            {
                ADD(0, "Off");
                ADD(1, "On");
            }
            RADIO(LSD_IANG)
            {
                ADD(0, "Off");
                ADD(1, "On");
            }
            SCALAR(LSD_CHM_ID);
        }
    }    

    DATA(NID1);
    DATA(NID2);   
    DATA(NID3);   
    DATA(LSD_CHM);
    SCALAR(LSD_CD_EXT);

    if(LSD_NVENT > 0)
    {
        RADIO(STYPE3_1)
        {
            ADD(0, "Part ID");
            ADD(1, "Part Set ID");
        }
    }
    if(LSD_NVENT > 0 && STYPE3_1 == 0)
    {
        DATA(LSD_SD3_comp_1);
    }
    if(LSD_NVENT > 0 && STYPE3_1 == 1)
    {
        DATA(LSD_SD3_set_1);
    }
    if(LSD_NVENT > 0)
    {    
        SCALAR(LSD_C23array_1);
        DATA(LSD_LCTC23_1);  
        DATA(LSD_LCPC23_1);  
        RADIO(LSD_ENH_V_1)
        {
            ADD(0, "0");
            ADD(1, "1");
        }
        SCALAR(LSD_PPOP_1);    
    }

    if(LSD_NVENT > 1)
    {
        RADIO(STYPE3_2)
        {
            ADD(0, "Part ID");
            ADD(1, "Part Set ID");
        }
    }
    if(LSD_NVENT > 1 && STYPE3_2 == 0)
    {
        DATA(LSD_SD3_comp_2);
    }
    if(LSD_NVENT > 1 && STYPE3_2 == 1)
    {
        DATA(LSD_SD3_set_2);
    }
    if(LSD_NVENT > 1)
    {  
        SCALAR(LSD_C23array_2)              { DIMENSION="DIMENSIONLESS"; }
        DATA(LSD_LCTC23_2);               //  { X_TITLE="Time";      Y_TITLE="Vent hole coefficient"; }
        DATA(LSD_LCPC23_2);               //  { X_TITLE="Pressure";  Y_TITLE="Vent hole coefficient"; }
        RADIO(LSD_ENH_V_2)                // { DIMENSION="DIMENSIONLESS" }
        {
            ADD(0, "0");
            ADD(1, "1");
        }       
        SCALAR(LSD_PPOP_2)                  { DIMENSION="DIMENSIONLESS"; }
    }

    if(LSD_NVENT > 2)
    {
        RADIO(STYPE3_3)
        {
            ADD(0, "Part ID");
            ADD(1, "Part Set ID");
        }
    }
    if(LSD_NVENT > 2 && STYPE3_3 == 0)
    {
        DATA(LSD_SD3_comp_3);
    }
    if(LSD_NVENT > 2 && STYPE3_3 == 1)
    {
        DATA(LSD_SD3_set_3);
    }
    if(LSD_NVENT > 2)
    {  
        SCALAR(LSD_C23array_3)              { DIMENSION="DIMENSIONLESS"; }
        DATA(LSD_LCTC23_3);                  //{ X_TITLE="Time";      Y_TITLE="Vent hole coefficient"; }
        DATA(LSD_LCPC23_3);                  //{ X_TITLE="Pressure";  Y_TITLE="Vent hole coefficient"; }
        RADIO(LSD_ENH_V_3)                  //{ DIMENSION="DIMENSIONLESS" }
        {
            ADD(0, "0");
            ADD(1, "1");
        }        
        SCALAR(LSD_PPOP_3)                  { DIMENSION="DIMENSIONLESS"; }
    }
    if(LSD_NVENT > 3)
    {
        RADIO(STYPE3_4)
        {
            ADD(0, "Part ID");
            ADD(1, "Part Set ID");
        }
    }
    if(LSD_NVENT > 3 && STYPE3_4 == 0)
    {
        DATA(LSD_SD3_comp_4);
    }
    if(LSD_NVENT > 3 && STYPE3_4 == 1)
    {
        DATA(LSD_SD3_set_4);
    }
    if(LSD_NVENT > 3)
    {          
        SCALAR(LSD_C23array_4)              { DIMENSION="DIMENSIONLESS"; }
        DATA(LSD_LCTC23_4);                  //{ X_TITLE="Time";      Y_TITLE="Vent hole coefficient"; }
        DATA(LSD_LCPC23_4);                 // { X_TITLE="Pressure";  Y_TITLE="Vent hole coefficient"; }
        RADIO(LSD_ENH_V_4)                  //{ DIMENSION="DIMENSIONLESS" }
        {
            ADD(0, "0");
            ADD(1, "1");
        }        
        SCALAR(LSD_PPOP_4)                  { DIMENSION="DIMENSIONLESS"; }    
    }  

    if(LSD_NVENT > 4)
    {
        RADIO(STYPE3_5)
        {
            ADD(0, "Part ID");
            ADD(1, "Part Set ID");
        }
    }
    if(LSD_NVENT > 4 && STYPE3_5 == 0)
    {
        DATA(LSD_SD3_comp_5);
    }
    if(LSD_NVENT > 4 && STYPE3_5 == 1)
    {
        DATA(LSD_SD3_set_5);
    }
    if(LSD_NVENT > 4)
    {  
        SCALAR(LSD_C23array_5)              { DIMENSION="DIMENSIONLESS"; }
        DATA(LSD_LCTC23_5);                  //{ X_TITLE="Time";      Y_TITLE="Vent hole coefficient"; }
        DATA(LSD_LCPC23_5);                 // { X_TITLE="Pressure";  Y_TITLE="Vent hole coefficient"; }
        RADIO(LSD_ENH_V_5)                  //{ DIMENSION="DIMENSIONLESS" }
        {
            ADD(0, "0");
            ADD(1, "1");
        }        
        SCALAR(LSD_PPOP_5)                  { DIMENSION="DIMENSIONLESS"; }    
    }

    if(LSD_NVENT > 5)
    {
        RADIO(STYPE3_6)
        {
            ADD(0, "Part ID");
            ADD(1, "Part Set ID");
        }
    }
    if(LSD_NVENT > 5 && STYPE3_6 == 0)
    {
        DATA(LSD_SD3_comp_6);
    }
    if(LSD_NVENT > 5 && STYPE3_6 == 1)
    {
        DATA(LSD_SD3_set_6);
    }
    if(LSD_NVENT > 5)
    {         
        SCALAR(LSD_C23array_6)              { DIMENSION="DIMENSIONLESS"; }
        DATA(LSD_LCTC23_6);                 // { X_TITLE="Time";      Y_TITLE="Vent hole coefficient"; }
        DATA(LSD_LCPC23_6);                 // { X_TITLE="Pressure";  Y_TITLE="Vent hole coefficient"; }
        RADIO(LSD_ENH_V_6)                 // { DIMENSION="DIMENSIONLESS" }
        {
            ADD(0, "0");
            ADD(1, "1");
        }
        SCALAR(LSD_PPOP_6)                  { DIMENSION="DIMENSIONLESS"; }    
    }

    if(LSD_NVENT > 6)
    {
        RADIO(STYPE3_7)
        {
            ADD(0, "Part ID");
            ADD(1, "Part Set ID");
        }
    }
    if(LSD_NVENT > 6 && STYPE3_7 == 0)
    {
        DATA(LSD_SD3_comp_7);
    }
    if(LSD_NVENT > 6 && STYPE3_7 == 1)
    {
        DATA(LSD_SD3_set_7);
    }
    if(LSD_NVENT > 6)
    {  
        SCALAR(LSD_C23array_7)              { DIMENSION="DIMENSIONLESS"; }
        DATA(LSD_LCTC23_7);                 // { X_TITLE="Time";      Y_TITLE="Vent hole coefficient"; }
        DATA(LSD_LCPC23_7);                //  { X_TITLE="Pressure";  Y_TITLE="Vent hole coefficient"; }
        RADIO(LSD_ENH_V_7)                //  { DIMENSION="DIMENSIONLESS" }
        {
            ADD(0, "0");
            ADD(1, "1");
        }
        SCALAR(LSD_PPOP_7)                  { DIMENSION="DIMENSIONLESS"; }    
    }

    if(LSD_NVENT > 7)
    {
        RADIO(STYPE3_8)
        {
            ADD(0, "Part ID");
            ADD(1, "Part Set ID");
        }
    }
    if(LSD_NVENT > 7 && STYPE3_8 == 0)
    {
        DATA(LSD_SD3_comp_8);
    }
    if(LSD_NVENT > 7 && STYPE3_8 == 1)
    {
        DATA(LSD_SD3_set_8);
    }
    if(LSD_NVENT > 7)
    {  
        SCALAR(LSD_C23array_8)              { DIMENSION="DIMENSIONLESS"; }
        DATA(LSD_LCTC23_8);                 // { X_TITLE="Time";      Y_TITLE="Vent hole coefficient"; }
        DATA(LSD_LCPC23_8);                 // { X_TITLE="Pressure";  Y_TITLE="Vent hole coefficient"; }
        RADIO(LSD_ENH_V_8)                 // { DIMENSION="DIMENSIONLESS" }
        {
            ADD(0, "0");
            ADD(1, "1");
        }
        SCALAR(LSD_PPOP_8)                  { DIMENSION="DIMENSIONLESS"; }    
    }

    if(LSD_NVENT > 8)
    {
        RADIO(STYPE3_9)
        {
            ADD(0, "Part ID");
            ADD(1, "Part Set ID");
        }
    }
    if(LSD_NVENT > 8 && STYPE3_9 == 0)
    {
        DATA(LSD_SD3_comp_9);
    }
    if(LSD_NVENT > 8 && STYPE3_9 == 1)
    {
        DATA(LSD_SD3_set_9);
    }
    if(LSD_NVENT > 8)
    {       
        SCALAR(LSD_C23array_9)              { DIMENSION="DIMENSIONLESS"; }
        DATA(LSD_LCTC23_9);                 // { X_TITLE="Time";      Y_TITLE="Vent hole coefficient"; }
        DATA(LSD_LCPC23_9);                 // { X_TITLE="Pressure";  Y_TITLE="Vent hole coefficient"; }
        RADIO(LSD_ENH_V_9)                 // { DIMENSION="DIMENSIONLESS" }
        {
            ADD(0, "0");
            ADD(1, "1");
        }
        SCALAR(LSD_PPOP_9)                  { DIMENSION="DIMENSIONLESS"; }    
    }

    if(LSD_NVENT > 9)
    {
        RADIO(STYPE3_10)
        {
            ADD(0, "Part ID");
            ADD(1, "Part Set ID");
        }
    }
    if(LSD_NVENT > 9 && STYPE3_10 == 0)
    {
        DATA(LSD_SD3_comp_10);
    }
    if(LSD_NVENT > 9 && STYPE3_10 == 1)
    {
        DATA(LSD_SD3_set_10);
    }
    if(LSD_NVENT > 9)
    {          
        SCALAR(LSD_C23array_10)     { DIMENSION="DIMENSIONLESS"; }
        DATA(LSD_LCTC23_10);         //{ X_TITLE="Time";      Y_TITLE="Vent hole coefficient"; }
        DATA(LSD_LCPC23_10);         //{ X_TITLE="Pressure";  Y_TITLE="Vent hole coefficient"; }
        RADIO(LSD_ENH_V_10)         //{ DIMENSION="DIMENSIONLESS" }
        {
            ADD(0, "0");
            ADD(1, "1");
        }
        SCALAR(LSD_PPOP_10)         { DIMENSION="DIMENSIONLESS"; }  
    }
    if(LSD_IAIR > 0)
    {
        SCALAR(LSD_PAIR)            {DIMENSION="pressure";}
        SCALAR(LSD_TAIR)            {DIMENSION="k";}
        SCALAR(LSD_XMAIR)           {DIMENSION="density";}
        SCALAR(LSD_AAIR)            {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_BAIR)            {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_CAIR)            {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_NP_AIR)          {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_NP_RELAX)        {DIMENSION="DIMENSIONLESS";}    
    }

  /*
    optional:
  if(LSD_TitleOpt == 1)
    {
        ASSIGN(KEYWORD_STR, "_ID");
    }*/

}

// File format
FORMAT(Keyword971) 
{
    ASSIGN(IOFLAG, 0, EXPORT);
    ASSIGN(IOFLAG, 1, IMPORT);

    if(IOFLAG == 0)
    {
        ASSIGN(optiontitle,"", EXPORT);
        if(airbagoption == 1)
        {
            ASSIGN(optiontitle,_COMBINE(optiontitle,"_MPP"), EXPORT);
        }
        if(airbagoption == 2)
        {
            ASSIGN(optiontitle,_COMBINE(optiontitle,"_DECOMPOSITION"), EXPORT);
        }
        if(airbagoption == 3)
        {
            ASSIGN(optiontitle,_COMBINE(optiontitle,"_MOLEFRACTION"), EXPORT);
        }
        if(airbagoption == 4)
        {
            ASSIGN(optiontitle,_COMBINE(optiontitle,"_ID"), EXPORT);
        }
        if(airbagoption == 5)
        {
            ASSIGN(optiontitle,_COMBINE(optiontitle,"_TITLE"), EXPORT);
        }
        
    }
    
    HEADER("*AIRBAG_PARTICLE%-30s", optiontitle);
    
    if(IOFLAG == 1)
    {
        ASSIGN(opt_, _FIND(optiontitle, "_MPP"),IMPORT);
        if(opt_ == 1)
        {
            ASSIGN(airbagoption, 1, IMPORT);
        }
        ASSIGN(opt_, _FIND(optiontitle, "_DECOMPOSITION"),IMPORT);
        if(opt_ == 1)
        {
            ASSIGN(airbagoption, 2, IMPORT);
        }
        ASSIGN(opt_, _FIND(optiontitle, "_MOLEFRACTION"),IMPORT);
        if(opt_ == 1)
        {
            ASSIGN(airbagoption, 3, IMPORT);
        }
        ASSIGN(opt_, _FIND(optiontitle, "_ID"),IMPORT);
        if(opt_ == 1)
        {
            ASSIGN(airbagoption, 4, IMPORT);
        }
        ASSIGN(opt_, _FIND(optiontitle, "_TITLE"),IMPORT);
        if(opt_ == 1)
        {
            ASSIGN(airbagoption, 5, IMPORT);
        }
    //
    }




    if(airbagoption == 1)
    {
      COMMENT("$       SX        SY        SZ");
      CARD("%10lg%10lg%10lg",LSD_SX,LSD_SY,LSD_SZ);
    }
    //
    if(IOFLAG == 0 && airbagoption == 4 || airbagoption == 5)
    {
        CARD("%10d%-70s",_ID_,TITLE);
    }
    CARD_PREREAD("%10s%10d%10s%10d", _BLANK_, LSD_STYPE1, _BLANK_, LSD_STYPE2);

    //
    if(LSD_STYPE1 == 0 && LSD_STYPE2 == 0)
    {
        //
        COMMENT("$      SD1    STYPE1       SD2    STYPE2     BLOCK    NPDATA      FRIC      IRPD");
        CARD("%10d%10d%10d%10d%10d%10d%10lg%10d",LSD_SET_SD1,LSD_STYPE1,LSD_SET_SD2,LSD_STYPE2,LSD_BLOCK,LSD_NPDATA,LSDYNA_FRIC,LSD_IRPD);
        //                                                                                               
    } 
    if(LSD_STYPE1 == 0 && LSD_STYPE2 == 1)
    {
        //
        COMMENT("$      SD1    STYPE1       SD2    STYPE2     BLOCK    NPDATA      FRIC      IRPD");
        CARD("%10d%10d%10d%10d%10d%10d%10lg%10d",LSD_SET_SD1,LSD_STYPE1,LSD_SD2,LSD_STYPE2,LSD_BLOCK,LSD_NPDATA,LSDYNA_FRIC,LSD_IRPD);
        //                                                                                               
    }
    if(LSD_STYPE1 == 1 && LSD_STYPE2 == 0)
    {
        //
        COMMENT("$      SD1    STYPE1       SD2    STYPE2     BLOCK    NPDATA      FRIC      IRPD");
        CARD("%10d%10d%10d%10d%10d%10d%10lg%10d",LSD_SD1,LSD_STYPE1,LSD_SET_SD2,LSD_STYPE2,LSD_BLOCK,LSD_NPDATA,LSDYNA_FRIC,LSD_IRPD);
        //                                                                                               
    }
    if(LSD_STYPE1 == 1 && LSD_STYPE2 == 1)
    {
        //
        COMMENT("$      SD1    STYPE1       SD2    STYPE2     BLOCK    NPDATA      FRIC      IRPD");
        CARD("%10d%10d%10d%10d%10d%10d%10lg%10d",LSD_SD1,LSD_STYPE1,LSD_SD2,LSD_STYPE2,LSD_BLOCK,LSD_NPDATA,LSDYNA_FRIC,LSD_IRPD);
        //                                                                                               
    }                                                                                                    
    if(LSD_STYPE1 == 0 && LSD_STYPE2 == 2)
    {
        //
        COMMENT("$      SD1    STYPE1       SD2    STYPE2     BLOCK    NPDATA      FRIC      IRPD");
        CARD("%10d%10d%10d%10d%10d%10d%10lg%10d",LSD_SET_SD1,LSD_STYPE1,LSD_NSD2,LSD_STYPE2,LSD_BLOCK,LSD_NPDATA,LSDYNA_FRIC,LSD_IRPD);
        //                                                                                               
    } 
    if(LSD_STYPE1 == 1 && LSD_STYPE2 == 2)
    {
        //
        COMMENT("$      SD1    STYPE1       SD2    STYPE2     BLOCK    NPDATA      FRIC      IRPD");
        CARD("%10d%10d%10d%10d%10d%10d%10lg%10d",LSD_SD1,LSD_STYPE1,LSD_NSD2,LSD_STYPE2,LSD_BLOCK,LSD_NPDATA,LSDYNA_FRIC,LSD_IRPD);
        //                                                                                               
    }
    //
    COMMENT("$       NP      UNIT    VISFLG      TATM      PATM     NVENT      TEND       TSW");
    CARD("%10lg%10d%10d%10lg%10lg%10d%10lg%10lg",LSD_NP,LSD_UNIT,LSD_VISFLAG,LSD_TATM,LSD_PATM,LSD_NVENT,LSD_TEND,LSD_TSW);
    //
    COMMENT("$     IAIR      NGAS     NORIF      NID1      NID2      NID3       CHM    CD_EXT");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10lg",LSD_IAIR,LSD_NGAS,LSD_NORIF,NID1,NID2,NID3,LSD_CHM,LSD_CD_EXT);
    //
    if(LSD_STYPE2 == 2 && LSD_NSD2 > 0)
    {
        //
        COMMENT("$    SIDUP     STYUP     PFRAC   LINKING");
        CARD_LIST(LSD_NSD2) 
        {
            CARD("%10d%10d%10lg%10d",PartIdArray_UP,STYUPArray_UP,LSD_PFRAC,LSD_LINKING);
        }
        //
    }
/*    if(LSD_NPDATA > 0)
    {
        CARD_LIST(LSD_NPDATA)
        {  
            COMMENT("$     SIDH    STYPEH     HCONV     PFRIC    SDFBLK        KP");
            CARD_PREREAD("          %10d",STYPEArray_H);

            if(STYPEArray_H == 0)
            {
                CARD("%10d%10d%10lg%10lg%10lg%10lg",PartIdArray_H,STYPEArray_H,LSD_HCONVI,LSD_PFRICI,LSD_SDFBLKI,LSD_KPI);
            }
            if(STYPEArray_H == 1)
            {
                CARD(""%10d%10d%10lg%10lg%10lg%10lg",PartSetArray_H,STYPEArray_H,LSD_HCONVI,LSD_PFRICI,LSD_SDFBLKI,LSD_KPI);     
            }

        } 
    }
 */

    if(LSD_NVENT > 0) CARD_PREREAD("%10s%10d", _BLANK_, STYPE3_1);
    if(LSD_NVENT > 1) CARD_PREREAD("%10s%10d", _BLANK_, STYPE3_2);
    if(LSD_NVENT > 2) CARD_PREREAD("%10s%10d", _BLANK_, STYPE3_3);
    if(LSD_NVENT > 3) CARD_PREREAD("%10s%10d", _BLANK_, STYPE3_4);
    if(LSD_NVENT > 4) CARD_PREREAD("%10s%10d", _BLANK_, STYPE3_5);
    if(LSD_NVENT > 5) CARD_PREREAD("%10s%10d", _BLANK_, STYPE3_6);
    if(LSD_NVENT > 6) CARD_PREREAD("%10s%10d", _BLANK_, STYPE3_7);
    if(LSD_NVENT > 7) CARD_PREREAD("%10s%10d", _BLANK_, STYPE3_8);
    if(LSD_NVENT > 8) CARD_PREREAD("%10s%10d", _BLANK_, STYPE3_9);
    if(LSD_NVENT > 9) CARD_PREREAD("%10s%10d", _BLANK_, STYPE3_10);

    if(LSD_NVENT > 0 && STYPE3_1 == 0)
    {
        //
        COMMENT("$   SID3_1  STYPE3_1     C23_1  LCTC23_1  LCPC23_1     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_comp_1,STYPE3_1,LSD_C23array_1,LSD_LCTC23_1,LSD_LCPC23_1,LSD_ENH_V_1,LSD_PPOP_1);
        //
    }
    if(LSD_NVENT > 0 && STYPE3_1 == 1)
    {
        //
        COMMENT("$   SID3_1  STYPE3_1     C23_1  LCTC23_1  LCPC23_1     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_set_1,STYPE3_1,LSD_C23array_1,LSD_LCTC23_1,LSD_LCPC23_1,LSD_ENH_V_1,LSD_PPOP_1);
        //
    }
    if(LSD_NVENT > 1 && STYPE3_2 == 0)
    {
        //
        COMMENT("$   SID3_2  STYPE3_2     C23_2  LCTC23_2  LCPC23_2     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_comp_2,STYPE3_2,LSD_C23array_2,LSD_LCTC23_2,LSD_LCPC23_2,LSD_ENH_V_2,LSD_PPOP_2);
        //
    }
    if(LSD_NVENT > 1 && STYPE3_2 == 1)
    {
        //
        COMMENT("$   SID3_2  STYPE3_2     C23_2  LCTC23_2  LCPC23_2     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_set_2,STYPE3_2,LSD_C23array_2,LSD_LCTC23_2,LSD_LCPC23_2,LSD_ENH_V_2,LSD_PPOP_2);
        //
    }
    if(LSD_NVENT > 2 && STYPE3_3 == 0)
    {
        //
        COMMENT("$   SID3_3  STYPE3_3     C23_3  LCTC23_3  LCPC23_3     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_comp_3,STYPE3_3,LSD_C23array_3,LSD_LCTC23_3,LSD_LCPC23_3,LSD_ENH_V_3,LSD_PPOP_3);
        //
    }
    if(LSD_NVENT > 2 && STYPE3_3 == 1)
    {
        //
        COMMENT("$   SID3_3  STYPE3_3     C23_3  LCTC23_3  LCPC23_3     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_set_3,STYPE3_3,LSD_C23array_3,LSD_LCTC23_3,LSD_LCPC23_3,LSD_ENH_V_3,LSD_PPOP_3);
        //
    }
    if(LSD_NVENT > 3 && STYPE3_4 == 0)
    {
        //
        COMMENT("$   SID3_4  STYPE3_4     C23_4  LCTC23_4  LCPC23_4     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_comp_4,STYPE3_4,LSD_C23array_4,LSD_LCTC23_4,LSD_LCPC23_4,LSD_ENH_V_4,LSD_PPOP_4);
        //
    }
    if(LSD_NVENT > 3 && STYPE3_4 == 1)
    {
        //
        COMMENT("$   SID3_4  STYPE3_4     C23_4  LCTC23_4  LCPC23_4     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_set_4,STYPE3_4,LSD_C23array_4,LSD_LCTC23_4,LSD_LCPC23_4,LSD_ENH_V_4,LSD_PPOP_4);
        //
    }
    if(LSD_NVENT > 4 && STYPE3_5 == 0)
    {
        //
        COMMENT("$   SID3_5  STYPE3_5     C23_5  LCTC23_5  LCPC23_5     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_comp_5,STYPE3_5,LSD_C23array_5,LSD_LCTC23_5,LSD_LCPC23_5,LSD_ENH_V_5,LSD_PPOP_5);
        //
    }
    if(LSD_NVENT > 4 && STYPE3_5 == 1)
    {
        //
        COMMENT("$   SID3_5  STYPE3_5     C23_5  LCTC23_5  LCPC23_5     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_set_5,STYPE3_5,LSD_C23array_5,LSD_LCTC23_5,LSD_LCPC23_5,LSD_ENH_V_5,LSD_PPOP_5);
        //
    }
    if(LSD_NVENT > 5 && STYPE3_6 == 0)
    {
        //
        COMMENT("$   SID3_6  STYPE3_6     C23_6  LCTC23_6  LCPC23_6     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_comp_6,STYPE3_6,LSD_C23array_6,LSD_LCTC23_6,LSD_LCPC23_6,LSD_ENH_V_6,LSD_PPOP_6);
        //
    }
    if(LSD_NVENT > 5 && STYPE3_6 == 1)
    {
        //
        COMMENT("$   SID3_6  STYPE3_6     C23_6  LCTC23_6  LCPC23_6     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_set_6,STYPE3_6,LSD_C23array_6,LSD_LCTC23_6,LSD_LCPC23_6,LSD_ENH_V_6,LSD_PPOP_6);
        //
    }
    if(LSD_NVENT > 6 && STYPE3_7 == 0)
    {
        //
        COMMENT("$   SID3_7  STYPE3_7     C23_7  LCTC23_7  LCPC23_7     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_comp_7,STYPE3_7,LSD_C23array_7,LSD_LCTC23_7,LSD_LCPC23_7,LSD_ENH_V_7,LSD_PPOP_7);
        //
    }
    if(LSD_NVENT > 6 && STYPE3_7 == 1)
    {
        //
        COMMENT("$   SID3_7  STYPE3_7     C23_7  LCTC23_7  LCPC23_7     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_set_7,STYPE3_7,LSD_C23array_7,LSD_LCTC23_7,LSD_LCPC23_7,LSD_ENH_V_7,LSD_PPOP_7);
        //
    }
    if(LSD_NVENT > 7 && STYPE3_8 == 0)
    {
        //
        COMMENT("$   SID3_8  STYPE3_8     C23_8  LCTC23_8  LCPC23_8     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_comp_8,STYPE3_8,LSD_C23array_8,LSD_LCTC23_8,LSD_LCPC23_8,LSD_ENH_V_8,LSD_PPOP_8);
        //
    }
    if(LSD_NVENT > 7 && STYPE3_8 == 1)
    {
        //
        COMMENT("$   SID3_8  STYPE3_8     C23_8  LCTC23_8  LCPC23_8     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_set_8,STYPE3_8,LSD_C23array_8,LSD_LCTC23_8,LSD_LCPC23_8,LSD_ENH_V_8,LSD_PPOP_8);
        //
    }
    if(LSD_NVENT > 8 && STYPE3_9 == 0)
    {
        //
        COMMENT("$   SID3_9  STYPE3_9     C23_9  LCTC23_9  LCPC23_9     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_comp_9,STYPE3_9,LSD_C23array_9,LSD_LCTC23_9,LSD_LCPC23_9,LSD_ENH_V_9,LSD_PPOP_9);
        //
    }
    if(LSD_NVENT > 8 && STYPE3_9 == 1)
    {
        //
        COMMENT("$   SID3_9  STYPE3_9     C23_9  LCTC23_9  LCPC23_9     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_set_9,STYPE3_9,LSD_C23array_9,LSD_LCTC23_9,LSD_LCPC23_9,LSD_ENH_V_9,LSD_PPOP_9);
        //
    }
    if(LSD_NVENT > 9 && STYPE3_10 == 0)
    {
        //
        COMMENT("$  SID3_10 STYPE3_10    C23_10 LCTC23_10 LCPC23_10     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_comp_10,STYPE3_10,LSD_C23array_10,LSD_LCTC23_10,LSD_LCPC23_10,LSD_ENH_V_10,LSD_PPOP_10);
        //
    }
    if(LSD_NVENT > 9 && STYPE3_10 == 1)
    {
        //
        COMMENT("$  SID3_10 STYPE3_10    C23_10 LCTC23_10 LCPC23_10     ENH_V      PPOP");
        CARD("%10d%10d%10lg%10d%10d%10d%10lg",LSD_SD3_set_10,STYPE3_10,LSD_C23array_10,LSD_LCTC23_10,LSD_LCPC23_10,LSD_ENH_V_10,LSD_PPOP_10);
        //
    }
    if(LSD_IAIR > 0)
    {
        //
        COMMENT("$     PAIR      TAIR     XMAIR      AAIR      BAIR      CAIR    NP_AIR  NP_RELAX");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10d%10d",LSD_PAIR,LSD_TAIR,LSD_XMAIR,LSD_AAIR,LSD_BAIR,LSD_CAIR,LSD_NP_AIR,LSD_NP_RELAX);
    }
    if(LSD_NGAS > 0)
    {
        //
        COMMENT("$     LCMi      LCTi       XMi        Ai        Bi        Ci     INFGi");
        CARD_LIST(LSD_NGAS)
        {
            CARD("%10d%10d%10lg%10lg%10lg%10lg%10d",LSD_LCMI,LSD_LCTI,LSD_XMI,LSD_AI,LSD_BI,LSD_CI,LSD_INFGI);
        }
        //
    }
    if(LSD_NORIF > 0)
    {
        //
        COMMENT("$     NIDi       ANi       VDi       CAi     INFOi      IMOM      IANG    CHM_ID");
                CARD_LIST(LSD_NORIF)
        {
            CARD("%10d%10lg%10lg%10lg%10d%10d%10d%10d",LSD_NIDI,LSD_ANI,SCALAR_OR_OBJECT(negVDIFlag,LSD_SHELL_NORMAL,LSD_VDI),LSD_CAI,LSD_INFOI,LSD_IMOM,LSD_IANG,LSD_CHM_ID);
        }
        //                                                     
    }                                                          


}