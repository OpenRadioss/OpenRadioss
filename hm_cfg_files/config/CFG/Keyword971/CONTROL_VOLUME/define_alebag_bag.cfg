//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// DEFINE_ALEBAG_BAG
// 


 ATTRIBUTES(COMMON) 
 
 {
  
  // Initial and reference densities
  KEYWORD_STR                     = VALUE(STRING, "Solver Keyword");
  LSD_TitleOpt                    = VALUE(INT, "Title");
  LSD_ITYPE                       = VALUE(INT, "SID TYPE");
  LSD_PSID                        = VALUE(SETS, "SID_SET") { SUBTYPES = (/SETS/SET_NODE_IDPOOL) ; }
  LSD_SID                         = VALUE(SETS, "SID_PART") { SUBTYPES = (/SETS/SET_NODE_IDPOOL) ; }
  LSD_CVBAG                       = VALUE(INT, "CVBAG");
  LSD_VTCOEF                      = VALUE(FLOAT, "VTCOEF");
  LSD_IBLOCK                      = VALUE(INT, "IBLOCK");
  VENTYP1                         = VALUE(INT, "VENTYP");
  VENTSID_SET1                    = VALUE(SETS, "VENTSID") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
  VENTSID_COMP1                   = VALUE(COMPONENT, "VENTSID");
  VENTSID_CSURF1                  = VALUE(SETS, "VENTSID") { SUBTYPES = (/SETS/SET_SEGMENT_GENERAL_IDPOOL) ; }
  LSD_SegGenSID                   = VALUE(SETS, "VENTSID") { SUBTYPES = (/SETS/SET_SEGMENT_GENERAL_IDPOOL) ; }
  LSD_NQUAD                       = VALUE(INT, "NQUAD");
  LSD_CTYPE                       = VALUE(INT, "CTYPE");
  defineCurveFlag                 = VALUE(INT, "PFAC_Option");
  LSD_PFAC                        = VALUE(FLOAT, "PFAC");
  LSD_LCID                        = VALUE(FUNCT, "PFAC");  
  LSDYNA_FRIC                     = VALUE(FLOAT, "FRIC");
  LSD_FRCMIN                      = VALUE(FLOAT, "FRCMIN");
  LSD_NORMTYP                     = VALUE(INT, "NORMTYP");
  LSD_ILEAK                       = VALUE(INT, "ILEAK");
  LSD_PLEAK                       = VALUE(FLOAT, "PLEAK");
  LSD_NORM                        = VALUE(INT, "NORM");  
  LSD_START                       = VALUE(FLOAT, "START");
  LSD_END                         = VALUE(FLOAT, "END");
  
  
}

CHECK(COMMON) 
{
    LSD_PFAC >= 0;
}

DEFAULTS(COMMON)
{
    LSD_VTCOEF      = 1.0;
    LSD_PFAC        = 0.1;
    
    
}
SKEYWORDS_IDENTIFIER(COMMON)

{

 KEYWORD_STR                 = 9000;
 LSD_TitleOpt                = 90;
 LSD_ITYPE                   = 165;
 LSD_PSID                    = 768;
 LSD_SID                     = 460;
 LSD_CVBAG                   = 5723;
 LSD_VTCOEF                  = 5724;
 LSD_IBLOCK                  = 5324;
 VENTYP1                     = 1018;
 VENTSID_SET1                = 1003;
 VENTSID_COMP1               = 1008;
 VENTSID_CSURF1              = 1013;
 LSD_SegGenSID               = 5787;
 LSD_NQUAD                   = 4542;
 LSD_CTYPE                   = 4543;
 defineCurveFlag             = 4784;
 LSD_PFAC                    = 4546;
 LSD_LCID                    = 45;
 LSDYNA_FRIC                 = 59;
 LSD_FRCMIN                  = 4547;
 LSD_NORMTYP                 = 4549;
 LSD_ILEAK                   = 4553;
 LSD_PLEAK                   = 4554;
 LSD_NORM                    = 4548;
 LSD_START                   = 449;
 LSD_END                     = 450;

}


GUI(COMMON) 

{


    ASSIGN(KEYWORD_STR, "*DEFINE_ALEBAG_BAG");
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == TRUE)
    {
        ASSIGN(KEYWORD_STR, "_TITLE");
    }
    RADIO(LSD_ITYPE)
    {
        ADD(0, "Part Set ID");
        ADD(1, "Part ID");

    }
    if(LSD_ITYPE == 0)
    {
        DATA(LSD_PSID);
    }
    if(LSD_ITYPE == 1)
    {
        DATA(LSD_SID);
    }
    RADIO(LSD_CVBAG)
    {
        ADD(0, "0");
        ADD(1, "1");
    }
    RADIO(LSD_IBLOCK)
    {
        ADD(0, "0: No(Blockage is NOT considered, Default)");
        ADD(1, "1: Yes(Blockage is considered)");
    }
    
    SCALAR(LSD_VTCOEF);
    
    RADIO(VENTYP1)
    {   
        ADD(0, "Part Set ID");
        ADD(1, "Part ID");
        ADD(2, "Set Segment");
        ADD(3, "Set Segment General");
    }
    if(VENTYP1 == 0)
    {
        DATA(VENTSID_SET1);
    }
    if(VENTYP1 == 1)
    {
        DATA(VENTSID_COMP1);
    }
    if(VENTYP1 == 2)
    {
        DATA(VENTSID_CSURF1);
    }
    if(VENTYP1 == 3)
    {
        DATA(LSD_SegGenSID);
    }
    SCALAR(LSD_NQUAD);
    RADIO(LSD_CTYPE)
    {
        ADD(4, "4");
        ADD(6, "6");    
    }
    FLAG(defineCurveFlag);
    if(defineCurveFlag == FALSE)
    {
        SCALAR(LSD_PFAC);
    }
    if(defineCurveFlag == TRUE)
    {    
        DATA(LSD_LCID);
    }
    SCALAR(LSDYNA_FRIC);
    SCALAR(LSD_FRCMIN);
    RADIO(LSD_NORMTYP)
    {
        ADD(0, "0: Normal vectors are interpolated from nodal normals");
        ADD(1, "1: Normal vectors are interpolated from segment normals");
    }
    RADIO(LSD_ILEAK)
    {
        ADD(0, "0");
        ADD(1, "1");
        ADD(2, "2");
    }
    SCALAR(LSD_PLEAK);
    RADIO(LSD_NORM)
    {
        ADD(0, "0");
        ADD(1, "1");
    }
    SCALAR(LSD_START);
    SCALAR(LSD_END);

}

// File format
FORMAT(Keyword971) 
{
    if(LSD_ITYPE == 0 && VENTYP1 == 0)
    {
        //
        COMMENT("$    BAGID   SID_SET   SIDTYPE     CVBAG    IBLOCK    VTCOEF   VENTSID    VENTYP");
        CARD("%10d%10d%10d%10d%10d%10lg%10d%10d", _ID_,LSD_PSID,LSD_ITYPE,LSD_CVBAG ,LSD_IBLOCK,LSD_VTCOEF,VENTSID_SET1,VENTYP1);
        //
    }  
    if(LSD_ITYPE == 0 && VENTYP1 == 1)
    {
        //
        COMMENT("$    BAGID   SID_SET   SIDTYPE     CVBAG    IBLOCK    VTCOEF   VENTSID    VENTYP");
        CARD("%10d%10d%10d%10d%10d%10lg%10d%10d", _ID_,LSD_PSID,LSD_ITYPE,LSD_CVBAG ,LSD_IBLOCK,LSD_VTCOEF,VENTSID_COMP1,VENTYP1);
        //
    }  
    if(LSD_ITYPE == 0 && VENTYP1 == 2)
    {
        //
        COMMENT("$    BAGID   SID_SET   SIDTYPE     CVBAG    IBLOCK    VTCOEF   VENTSID    VENTYP");
        CARD("%10d%10d%10d%10d%10d%10lg%10d%10d", _ID_,LSD_PSID,LSD_ITYPE,LSD_CVBAG ,LSD_IBLOCK,LSD_VTCOEF,VENTSID_CSURF1,VENTYP1);
        //
    }  
    if(LSD_ITYPE == 0 && VENTYP1 == 3)
    {
        //
        COMMENT("$    BAGID   SID_SET   SIDTYPE     CVBAG    IBLOCK    VTCOEF   VENTSID    VENTYP");
        CARD("%10d%10d%10d%10d%10d%10lg%10d%10d", _ID_,LSD_PSID,LSD_ITYPE,LSD_CVBAG ,LSD_IBLOCK,LSD_VTCOEF,LSD_SegGenSID,VENTYP1);
        //
    }
     if(LSD_ITYPE == 1 && VENTYP1 == 0)
    {
        //
        COMMENT("$    BAGID   SID_SET   SIDTYPE     CVBAG    IBLOCK    VTCOEF   VENTSID    VENTYP");
        CARD("%10d%10d%10d%10d%10d%10lg%10d%10d", _ID_,LSD_SID,LSD_ITYPE,LSD_CVBAG ,LSD_IBLOCK,LSD_VTCOEF,VENTSID_SET1,VENTYP1);
        //
    }  
    if(LSD_ITYPE == 1 && VENTYP1 == 1)
    {
        //
        COMMENT("$    BAGID   SID_SET   SIDTYPE     CVBAG    IBLOCK    VTCOEF   VENTSID    VENTYP");
        CARD("%10d%10d%10d%10d%10d%10lg%10d%10d", _ID_,LSD_SID,LSD_ITYPE,LSD_CVBAG ,LSD_IBLOCK,LSD_VTCOEF,VENTSID_COMP1,VENTYP1);
        //
    }  
    if(LSD_ITYPE == 1 && VENTYP1 == 2)
    {
        //
        COMMENT("$    BAGID   SID_SET   SIDTYPE     CVBAG    IBLOCK    VTCOEF   VENTSID    VENTYP");
        CARD("%10d%10d%10d%10d%10d%10lg%10d%10d", _ID_,LSD_SID,LSD_ITYPE,LSD_CVBAG ,LSD_IBLOCK,LSD_VTCOEF,VENTSID_CSURF1,VENTYP1);
        //
    }  
    if(LSD_ITYPE == 1 && VENTYP1 == 3)
    {
        //
        COMMENT("$    BAGID   SID_SET   SIDTYPE     CVBAG    IBLOCK    VTCOEF   VENTSID    VENTYP");
        CARD("%10d%10d%10d%10d%10d%10lg%10d%10d", _ID_,LSD_SID,LSD_ITYPE,LSD_CVBAG ,LSD_IBLOCK,LSD_VTCOEF,LSD_SegGenSID,VENTYP1);
        //
    }   
    if(defineCurveFlag == FALSE)
    {
        //
        COMMENT("$    NQUAD     CTYPE      PFAC      FRIC    FRCMIN   NORMTYP     ILEAK     PLEAK");
        CARD("%10d%10d%10lg%10lg%10lg%10d%10d%10lg", LSD_NQUAD,LSD_CTYPE,LSD_PFAC,LSDYNA_FRIC,LSD_FRCMIN,LSD_NORMTYP,LSD_ILEAK,LSD_PLEAK  );
        //
    }
    if(defineCurveFlag == TRUE)
    {
        //
        COMMENT("$    NQUAD     CTYPE      PFAC      FRIC    FRCMIN   NORMTYP     ILEAK     PLEAK");
        CARD("%10d%10d%10lg%10lg%10lg%10d%10d%10lg", LSD_NQUAD,LSD_CTYPE,LSD_LCID,LSDYNA_FRIC,LSD_FRCMIN,LSD_NORMTYP,LSD_ILEAK,LSD_PLEAK  );
        //
    }
    //
    COMMENT("$     NORM     START       END");
    CARD("%10d%10lg%10lg", LSD_NORM,LSD_START,LSD_END);
    //
}
