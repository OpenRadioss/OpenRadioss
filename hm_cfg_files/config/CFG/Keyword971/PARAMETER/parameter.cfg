//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Entity 
//

ATTRIBUTES(COMMON)
{
    name               = VALUE(STRING, "Parameter name"); 
    localname         = VALUE(STRING, "Local Name");
    type               = VALUE(UINT, "Parameter Type");//TYPE_DOUBLE(0),TYPE_INTEGER, TYPE_STRING,TYPE_DOUBLE_EXPRESSION(10),TYPE_INTEGER_EXPRESSION
    valueint           = VALUE(INT, "Int Value");
    valuedouble        = VALUE(DOUBLE, "Double Value");
    valuestring        = VALUE(STRING, "String Value");
    //cardimage          = VALUE(STRING, "Card Image");
    PARAM_SCOPE         = VALUE(STRING, "");
}

DRAWABLES(COMMON)
{
     _PARAM_NAME         = SCALAR(name);
     _PARAM_SCOPE        = SCALAR(PARAM_SCOPE);
     _PARAM_VALUE_DOUBLE = SCALAR(valuedouble);
     _PARAM_VALUE_INT    = SCALAR(valueint);
     _PARAM_VALUE_STRING = SCALAR(valuestring);
     _PARAM_TYPE         = SCALAR(type);
}

GUI(COMMON)
{
	SCALAR(localname);
	RADIO(type)
	{
	    ADD(0, "Double");
		ADD(1, "Integer");
		ADD(2, "String");
	}
	if(type == 0)
	{
	   SCALAR(valuedouble);
	}
	else if(type == 1)
	{
	   SCALAR(valueint);
	}
	else if(type == 2)
	{
	   SCALAR(valuestring);
	}
}
// File format
FORMAT(Keyword971) 
{
    HEADER("*PARAMETER");
    CARD_PREREAD("%1s%9s",APPEND_OPTIONS( [type(0) , "R"], [type(1) , "I"], [type(2) , "C"]),localname);	 
     
    ASSIGN(TYPE, type, IMPORT); //int type
    ASSIGN(PARAM_SCOPE, "GLOBAL", IMPORT);
    
    if(type==0)
       CARD("R%9s%lf",name, valuedouble); 
    else if(type==1)
       CARD("I%9s%d",name, valueint);  
    else if (type==2)
       CARD("C%9s%s",name, valuestring); 
    else 
       BLANK;
}
