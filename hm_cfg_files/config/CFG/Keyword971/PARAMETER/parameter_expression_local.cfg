//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Entity 
//

ATTRIBUTES(COMMON)
{
	name               = VALUE(STRING, "Parameter name"); 
	type               = VALUE(UINT, "Parameter Type");//TYPE_DOUBLE(0),TYPE_INTEGER, TYPE_STRING,TYPE_DOUBLE_EXPRESSION(10),TYPE_INTEGER_EXPRESSION
	valueint           = VALUE(INT, "Int Value");
	valuedouble        = VALUE(DOUBLE, "Double Value");
    valueexpression    = VALUE(STRING, "Expression Value");
    PARAM_SCOPE         = VALUE(STRING, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
}
DRAWABLES(COMMON)
{
     _PARAM_NAME         = SCALAR(name);
     _PARAM_SCOPE        = SCALAR(PARAM_SCOPE);
     _PARAM_VALUE_DOUBLE = SCALAR(valuedouble);
     _PARAM_VALUE_INT    = SCALAR(valueint);
     _PARAM_TYPE         = SCALAR(type);
}
GUI(COMMON)
{
	SCALAR(name);
	RADIO(type)
	{
		ADD(10, "Double Expression");
		ADD(11, "Integer Expression");	
	}
	SCALAR(valueexpression);
	if(type == 10)
	{
	   ASSIGN(valuedouble, [$valueexpression]);
	}
	else if(type == 11)
	{
	   ASSIGN(valueint, [$valueexpression]);
	}
}

// File format
FORMAT(Keyword971) 
{
	 HEADER("*PARAMETER_EXPRESSION_LOCAL");
     
     ASSIGN(PARAM_SCOPE, "LOCAL", IMPORT);
     CARD("%1s%9s%70s",APPEND_OPTIONS( [type(0) , "R"], [type(1) , "I"], [type(2) , "C"]), name, valueexpression );
}
