//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//INITIAL_FOAM_REFERENCE_GEOMETRY
//

ATTRIBUTES {


    table_count         = SIZE("No. of nodes");   
    nodes_table_node    = ARRAY[table_count](NODE,"Node ID for which a reference configuration is defined");
    nodes_table_x       = ARRAY[table_count](FLOAT, "x-coordinate in reference configuration");
    nodes_table_y       = ARRAY[table_count](FLOAT, "y-coordinate in reference configuration");
    nodes_table_z       = ARRAY[table_count](FLOAT, "z-coordinate in reference configuration");
    
    //HM INTERNAL
    KEYWORD_STR         = VALUE(STRING,"Solver Keyword");

    IO_FLAG             = VALUE(INT, "Import/Export flag");
    _HMCOMMENTSFLAG     = VALUE(INT, "Write HM Comments");
    _HWCOLOR            = VALUE(INT, "Entity Color");  
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //HM INTERNAL
    KEYWORD_STR                             = 9000;

    IO_FLAG=-1;
    _HMCOMMENTSFLAG=-1;
    _HWCOLOR=-1;
}

DEFINITIONS(COMMON) {
  IMPORT_PREDATA_TABULAR=(nodes_table_node);
} 

DEFAULTS(COMMON)
{
    //Card 1

    //Card 2
    table_count                         = 0;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*INITIAL_FOAM_REFERENCE_GEOMETRY");

    SIZE(table_count);
    ARRAY(table_count, "Reference nodes")
    {
       DATA(nodes_table_node);
       SCALAR(nodes_table_x, "X")        { DIMENSION = "l"; }
       SCALAR(nodes_table_y, "Y")        { DIMENSION = "l"; }
       SCALAR(nodes_table_z, "Z")        { DIMENSION = "l"; }
    }
}

FORMAT(Keyword971_R6.1)
{
    
    HEADER("*INITIAL_FOAM_REFERENCE_GEOMETRY");

    COMMENT("$    NID               X               Y               Z");    
    FREE_CARD_LIST(table_count)
    {
        CARD("%8d%16lg%16lg%16lg",nodes_table_node, nodes_table_x, nodes_table_y, nodes_table_z);
    }
}


