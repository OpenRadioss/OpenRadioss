//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.

// *INCLUDE_TANSFORM
ATTRIBUTES(COMMON)
{
    filename    = VALUE(STRING, "");
    IDNOFF      = VALUE(INT, "Offset to node ID");
    IDEOFF      = VALUE(INT, "Offset to element ID");
    IDPOFF      = VALUE(INT, "Offset to part ID");
    IDMOFF      = VALUE(INT, "Offset to material ID and equation of state ID");
    IDSOFF      = VALUE(INT, "Offset to set ID");
    IDFOFF      = VALUE(INT, "Offset to function ID, table ID, and curve ID");
    IDDOFF      = VALUE(INT, "Offset to any ID defined through *DEFINE except the FUNCTION,TABLE, and CURVE options (see IDFOFF)");

    //Card 2
    IDROFF      = VALUE(INT, "");
    PREFIX      = VALUE(STRING, "");
    SUFFIX      = VALUE(STRING, "");

    //Card 3
    FCTMAS      =  VALUE(DOUBLE, "");
    FCTTIM      =  VALUE(DOUBLE, "");
    FCTLEN      =  VALUE(DOUBLE, "");
    FCTTEM      =  VALUE(STRING, "");
    INCOUT1     =  VALUE(INT, "Offset to function ID, table ID, and curve ID");

    //Card 4
    TRANID = VALUE(STRING, "");
    
    fullfilepath   = VALUE(STRING, "Full File Path");

}

SKEYWORDS_IDENTIFIER(COMMON)
{
}

DEFAULTS(COMMON)
{
}

// Id offsets of entities in *INCLUDE_TANSFORM are driven with the DRAWABLES of this cfg file:
// A drawable with a name "_[CFG_TYPE_NAME]_IDOFFSET" results in the ids of this cfg-type
// being offset by the value to which the drawable evaluates.
// The offset _DEFAULT_IDOFFSET is applied to all other entities.
DRAWABLES()
{
     _FILENAME           = SCALAR(filename);
     _FULLFILENAME       = SCALAR(fullfilepath);

    _NODE_IDOFFSET      = SCALAR(IDNOFF);
    _ELEMENT_IDOFFSET   = SCALAR(IDEOFF);
    _COMPONENT_IDOFFSET = SCALAR(IDPOFF);
    _MATERIAL_IDOFFSET  = SCALAR(IDMOFF);
    _FUNCT_IDOFFSET     = SCALAR(IDFOFF);
    _SETS_IDOFFSET      = SCALAR(IDSOFF);

    _BLOCK_IDOFFSET     = SCALAR(IDDOFF);
    _FRICTION_IDOFFSET  = SCALAR(IDDOFF);
    _POSITION_IDOFFSET  = SCALAR(IDDOFF);
    _SYSTEM_IDOFFSET    = SCALAR(IDDOFF);
    _VECTOR_IDOFFSET    = SCALAR(IDDOFF);

    _DEFAULT_IDOFFSET   = SCALAR(IDROFF);	 
}

GUI(COMMON)
{

}
FORMAT(Keyword971_R13.0)
{
    HEADER("*INCLUDE_TRANSFORM");
    CARD("%-100s",filename);
    CARD("%10d%10d%10d%10d%10d%10d%10d",IDNOFF, IDEOFF, IDPOFF, IDMOFF, IDSOFF, IDFOFF, IDDOFF);
    CARD("%10d%10s%10s%10s",IDROFF, _BLANK_,PREFIX, SUFFIX);
    CARD("%10lf%10lf%10lf%10s%10d",   FCTMAS,FCTTIM, FCTLEN, FCTTEM, INCOUT1);
    CARD("%10d",TRANID);
}