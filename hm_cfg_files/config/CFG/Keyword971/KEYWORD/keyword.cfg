//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
ATTRIBUTES(COMMON) {
   type         = VALUE(INT, "type");
   Memory       = VALUE(STRING, "Memory");
   Memory2      = VALUE(STRING, "Memory2");
   NCPU         = VALUE(INT, "NCPU");
   ID_Option    = VALUE(INT, "ID_Option");
   JOBID_Option = VALUE(INT, "JOBID_Option");
   PROJECT      = VALUE(STRING, "PROJECT");
   NUM          = VALUE(STRING, "NUM");
   STAGE        = VALUE(STRING, "STAGE");
   JBID         = VALUE(STRING, "JBID");
   type_str     = VALUE(STRING, "temp");
   type_i10str  = VALUE(STRING, "temp");
}

DRAWABLES()
{
  _FORMATTYPE = SCALAR(type);
}
GUI(COMMON)
{
   RADIO(type)
   {
     ADD(0, "Undefined");
     ADD(1, "1:Short");
     ADD(2, "2:Long");
     ADD(3, "3:I10");
   }
   SCALAR(Memory);
   SCALAR(Memory2);
   SCALAR(NCPU);
   FLAG(ID_Option);
   if(ID_Option == 1)
   {
       SCALAR(PROJECT);
       SCALAR(NUM);
       SCALAR(STAGE);
   }
   FLAG(JOBID_Option);
   if(JOBID_Option == 1)
   {
       SCALAR(JBID);
   }
}

FORMAT(Keyword971)
{
   ASSIGN(_IOMODE_, 0, IMPORT);
   ASSIGN(_IOMODE_, 1, EXPORT);

   HEADER("*KEYWORD%s %s", APPEND_OPTIONS([ID_Option(1), "_ID"], [JOBID_Option(1), "_JOBID"]), NAME_VALUE( [Memory], [Memory2, "memory2"], [NCPU ,"NCPU"], [type_str, "LONG"],[type_i10str, "I10"], "=", " " ));
   if(_IOMODE_ == 0)
   {
      if(type_str == "Y")
         ASSIGN(type, 2, IMPORT);
      else if(type_str == "S")
         ASSIGN(type, 1, IMPORT);
      if(type_i10str == "Y")
         ASSIGN(type, 3, IMPORT);
   }

   if(ID_Option == 1)
   {
       COMMENT("$            PROJECT                 NUM                                   STAGE");
       CARD("%20s%20s%40s",PROJECT,NUM,STAGE);
   }
   
   if(JOBID_Option == 1)
   {
       COMMENT("$                                                                           JBID");
       CARD("%80s",JBID);
   }
}