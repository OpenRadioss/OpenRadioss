//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Property
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    LSD_CSLH                                = VALUE(FLOAT,  "CSLH");
    LSD_HMAX                                = VALUE(FLOAT,  "HMAX");
    LSD_HMIN                                = VALUE(FLOAT,  "HMIN");
    LSD_HXCSLH                              = VALUE(FLOAT,  "HXCSLH");
    LSD_HXINI                               = VALUE(FLOAT,  "HXINI");
    LSD_HYCSLH                              = VALUE(FLOAT,  "HYCSLH");
    LSD_HYINI                               = VALUE(FLOAT,  "HYINI");
    LSD_HZCSLH                              = VALUE(FLOAT,  "HZCSLH");
    LSD_HZINI                               = VALUE(FLOAT,  "HZINI");
    LSD_SPHINI                              = VALUE(FLOAT,  "SPHINI");
    LSD_TDEATH                              = VALUE(FLOAT,  "DEATH");
    LSD_TSTART                              = VALUE(FLOAT,  "START");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    sphOption                               = VALUE(INT,  "Options");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    LSD_CSLH                                = 4886;
    LSD_HMAX                                = 4552;
    LSD_HMIN                                = 4551;
    LSD_HXCSLH                              = 1151;
    LSD_HXINI                               = 1154;
    LSD_HYCSLH                              = 1152;
    LSD_HYINI                               = 1155;
    LSD_HZCSLH                              = 1153;
    LSD_HZINI                               = 1156;
    LSD_SPHINI                              = 4887;
    LSD_TDEATH                              = 2239;
    LSD_TSTART                              = 4481;
    LSD_TitleOpt                            = 90;
    sphOption                               = 1157;

}

DEFAULTS(COMMON)
{

    LSD_CSLH    = 1.2;
    LSD_HMAX    = 2.0;
    LSD_HMIN    = 0.2;
    LSD_TDEATH    = 1.0e20;

}

DRAWABLES(COMMON) 
{
 public:
    CONSTANT_APPLIED_TO_THE_SMOOTHING_LENGTH_OF_THE_PARTICLES=SCALAR(LSD_CSLH);
    SCALE_FACTOR_FOR_THE_MINIMUM_SMOOTHING_LENGTH=SCALAR(LSD_HMIN);
    SCALE_FACTOR_FOR_THE_MAXIMUM_SMOOTHING_LENGTH=SCALAR(LSD_HMAX);
    INITIAL_SMOOTHING_LENGTH=SCALAR(LSD_SPHINI);
    TIME_IMPOSED_SPH_APPROXIMATION_IS_STOPPED=SCALAR(LSD_TDEATH);
    TIME_IMPOSED_SPH_APPROXIMATION_IS_ACTIVATED=SCALAR(LSD_TSTART);
}

GUI(COMMON)
{

    ASSIGN(KEYWORD_STR, "*SECTION_SPH");
    RADIO(sphOption)
    {
       ADD(1, "NONE");
       ADD(2, "TENSOR");
       ADD(3, "USER");
    }
    if(sphOption == 2)
    {
        ASSIGN(KEYWORD_STR, "_TENSOR");
    }
    if(sphOption == 3)
    {
        ASSIGN(KEYWORD_STR, "_USER");
    }
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == TRUE)
    {
        ASSIGN(KEYWORD_STR, "_TITLE");
    }
    SCALAR(LSD_CSLH)                    {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_HMIN)                    {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_HMAX)                    {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_SPHINI)                  {DIMENSION="l";}
    SCALAR(LSD_TDEATH)                  {DIMENSION="t";}
    SCALAR(LSD_TSTART)                  {DIMENSION="t";}
    if(sphOption == 2)
    {
       SCALAR(LSD_HXCSLH);
       SCALAR(LSD_HYCSLH);
       SCALAR(LSD_HZCSLH);
       SCALAR(LSD_HXINI)                {DIMENSION="l";}
       SCALAR(LSD_HYINI)                {DIMENSION="l";}
       SCALAR(LSD_HZINI)                {DIMENSION="l";}
    }
/*
    graphical SUPPORT("Part(s) to which property is applied") {
      OBJECTS=(/COMPONENT/SPHCEL);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$    SECID      CSLH      HMIN      HMAX    SPHINI     DEATH     START");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,LSD_CSLH,LSD_HMIN,LSD_HMAX,LSD_SPHINI,LSD_TDEATH,LSD_TSTART);
    //
    if(sphOption == 2)
    {
        //
        COMMENT("$   HXCSLH    HYCSLH    HZCSLH     HXINI     HYINI     HZINI");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_HXCSLH,LSD_HYCSLH,LSD_HZCSLH,LSD_HXINI,LSD_HYINI,LSD_HZINI);
        //
    }
}
