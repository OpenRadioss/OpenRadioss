//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Property
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    LSD_ITYPE                               = VALUE(INT,  "SID TYPE");
    LSD_PID                                 = VALUE(COMPONENT,  "PID");
    LSD_PSID                                = VALUE(SETS,  "SID")               { SUBTYPES = ( /SETS/SET_PART_IDPOOL  ) ;  }
    LSD_dampBETA                            = VALUE(FLOAT,  "COEF");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    LSD_ITYPE                               = 165;
    LSD_PID                                 = 149;
    LSD_PSID                                = 768;
    LSD_dampBETA                            = 2869;

}

GUI(COMMON)
{

    ASSIGN(KEYWORD_STR, "*DAMPING_PART_STIFFNESS");
    RADIO(LSD_ITYPE)
    {
       ADD(1, "Part ID");
       ADD(2, "Part Set ID");
    }
    if(LSD_ITYPE == 1)
    {
 mandatory:
       DATA(LSD_PID);
    }
    if(LSD_ITYPE == 2)
    {
       ASSIGN(KEYWORD_STR, "_SET");
 mandatory:
       DATA(LSD_PSID);
    }
    SCALAR(LSD_dampBETA)                            {DIMENSION="DIMENSIONLESS";}
/*
        mandatory:
        graphical SUPPORT("Support") {
          OBJECTS=(COMPONENT);
          ADD(PSID);
        }
*/
}

// File format
FORMAT(Keyword971) 
{
    if(LSD_ITYPE == 1)
    {
        //
        COMMENT("$ PID/PSID      COEF");
        CARD("%10d%10lg",LSD_PID,LSD_dampBETA);
        //
    }
    if(LSD_ITYPE == 2)
    {
        //
        COMMENT("$ PID/PSID      COEF");
        CARD("%10d%10lg",LSD_PSID,LSD_dampBETA);
        //
    }
}