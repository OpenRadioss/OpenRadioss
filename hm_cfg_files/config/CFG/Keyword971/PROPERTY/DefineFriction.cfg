//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Property
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    PART_SET__Options                       = SIZE("PART_SET__Options");
    SET__PART_Options                       =SIZE("SET__PART_Options");
    SET__SET__Options                       = SIZE("SET__SET__Options");
    PART_PART_Options                       = SIZE("PART_PART_Options");
    Define_PIDPSID_IOPTION                  = ARRAY[PART_SET__Options](STRING,  "PTYPEI");
    Define_PIDPSID_JOPTION                  = ARRAY[PART_SET__Options](STRING,  "PTYPEJ");
    Define_PID_IOPTION                      = ARRAY[PART_PART_Options](STRING,  "PTYPEI");
    Define_PID_JOPTION                      = ARRAY[PART_PART_Options](STRING,  "PTYPEJ");
    Define_PSIDPID_IOPTION                  = ARRAY[SET__PART_Options](STRING,  "PTYPEI");
    Define_PSIDPID_JOPTION                  = ARRAY[SET__PART_Options](STRING,  "PTYPEJ");
    Define_PSID_IOPTION                     = ARRAY[SET__SET__Options](STRING,  "PTYPEI");
    Define_PSID_JOPTION                     = ARRAY[SET__SET__Options](STRING,  "PTYPEJ");
    LSD_DCD                                 = VALUE(FLOAT,  "DC_D");
    LSD_FDD                                 = VALUE(FLOAT,  "FD_D");
    LSD_FSD                                 = VALUE(FLOAT,  "FS_D");
    LSD_PIDPSID_DCIJ                        = ARRAY[PART_SET__Options](FLOAT,  "DC_IJ");
    LSD_PIDPSID_FDIJ                        = ARRAY[PART_SET__Options](FLOAT,  "FD_IJ");
    LSD_PIDPSID_FSIJ                        = ARRAY[PART_SET__Options](FLOAT,  "FS_IJ");
    LSD_PIDPSID_PIDI                        = ARRAY[PART_SET__Options](COMPONENT,  "PID_I");
    LSD_PIDPSID_SET_PIDJ                    = ARRAY[PART_SET__Options](COMPONENT,  "PID_J");
    LSD_PIDPSID_VCIJ                        = ARRAY[PART_SET__Options](FLOAT,  "VC_IJ");
    LSD_PID_DCIJ                            = ARRAY[PART_PART_Options](FLOAT,  "DC_IJ");
    LSD_PID_FDIJ                            = ARRAY[PART_PART_Options](FLOAT,  "FD_IJ");
    LSD_PID_FSIJ                            = ARRAY[PART_PART_Options](FLOAT,  "FS_IJ");
    LSD_PID_PIDI                            = ARRAY[PART_PART_Options](COMPONENT,  "PID_I");
    LSD_PID_PIDJ                            = ARRAY[PART_PART_Options](COMPONENT,  "PID_J");
    LSD_PID_VCIJ                            = ARRAY[PART_PART_Options](FLOAT,  "VC_IJ");
    LSD_PSIDPID_DCIJ                        = ARRAY[SET__PART_Options](FLOAT,  "DC_IJ");
    LSD_PSIDPID_FDIJ                        = ARRAY[SET__PART_Options](FLOAT,  "FD_IJ");
    LSD_PSIDPID_FSIJ                        = ARRAY[SET__PART_Options](FLOAT,  "FS_IJ");
    LSD_PSIDPID_PIDJ                        = ARRAY[SET__PART_Options](COMPONENT,  "PID_J");
    LSD_PSIDPID_SET_PIDI                    = ARRAY[SET__PART_Options](COMPONENT,  "PID_I");
    LSD_PSIDPID_VCIJ                        = ARRAY[SET__PART_Options](FLOAT,  "VC_IJ");
    LSD_PSID_DCIJ                           = ARRAY[SET__SET__Options](FLOAT,  "DC_IJ");
    LSD_PSID_FDIJ                           = ARRAY[SET__SET__Options](FLOAT,  "FD_IJ");
    LSD_PSID_FSIJ                           = ARRAY[SET__SET__Options](FLOAT,  "FS_IJ");
    LSD_PSID_SET_PIDI                       = ARRAY[SET__SET__Options](COMPONENT,  "PID_I");
    LSD_PSID_SET_PIDJ                       = ARRAY[SET__SET__Options](COMPONENT,  "PID_J");
    LSD_PSID_VCIJ                           = ARRAY[SET__SET__Options](FLOAT,  "VC_IJ");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    LSD_VCD                                 = VALUE(FLOAT,  "VC_D");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    Define_PIDPSID_IOPTION                  = 6224;
    Define_PIDPSID_JOPTION                  = 6225;
    Define_PID_IOPTION                      = 6232;
    Define_PID_JOPTION                      = 6233;
    Define_PSIDPID_IOPTION                  = 6215;
    Define_PSIDPID_JOPTION                  = 6216;
    Define_PSID_IOPTION                     = 6206;
    Define_PSID_JOPTION                     = 6207;
    LSD_DCD                                 = 6200;
    LSD_FDD                                 = 6199;
    LSD_FSD                                 = 6198;
    LSD_PIDPSID_DCIJ                        = 6222;
    LSD_PIDPSID_FDIJ                        = 6221;
    LSD_PIDPSID_FSIJ                        = 6220;
    LSD_PIDPSID_PIDI                        = 6218;
    LSD_PIDPSID_SET_PIDJ                    = 6219;
    LSD_PIDPSID_VCIJ                        = 6223;
    LSD_PID_DCIJ                            = 6230;
    LSD_PID_FDIJ                            = 6229;
    LSD_PID_FSIJ                            = 6228;
    LSD_PID_PIDI                            = 6226;
    LSD_PID_PIDJ                            = 6227;
    LSD_PID_VCIJ                            = 6231;
    LSD_PSIDPID_DCIJ                        = 6213;
    LSD_PSIDPID_FDIJ                        = 6212;
    LSD_PSIDPID_FSIJ                        = 6211;
    LSD_PSIDPID_PIDJ                        = 6210;
    LSD_PSIDPID_SET_PIDI                    = 6217;
    LSD_PSIDPID_VCIJ                        = 6214;
    LSD_PSID_DCIJ                           = 6204;
    LSD_PSID_FDIJ                           = 6203;
    LSD_PSID_FSIJ                           = 6202;
    LSD_PSID_SET_PIDI                       = 6208;
    LSD_PSID_SET_PIDJ                       = 6209;
    LSD_PSID_VCIJ                           = 6205;
    LSD_TitleOpt                            = 90;
    LSD_VCD                                 = 6201;
    PART_PART_Options                       = 6246;
    PART_SET__Options                       = 6245;
    SET__PART_Options                       = 6244;
    SET__SET__Options                       = 6243;

}

GUI(COMMON)
{

    ASSIGN(KEYWORD_STR, "*DEFINE_FRICTION");
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == TRUE)
    {
        ASSIGN(KEYWORD_STR,"_TITLE");
    }
    SCALAR(LSD_FSD);
    SCALAR(LSD_FDD);
    SCALAR(LSD_DCD);
    SCALAR(LSD_VCD);
    SIZE(SET__SET__Options);
    if(SET__SET__Options > 0)
    {
        ARRAY(SET__SET__Options,"")
        {
              DATA(LSD_PSID_SET_PIDI);
              DATA(LSD_PSID_SET_PIDJ);
              SCALAR(LSD_PSID_FSIJ);
              SCALAR(LSD_PSID_FDIJ);
              SCALAR(LSD_PSID_DCIJ);
              SCALAR(LSD_PSID_VCIJ);
/*                                          // UNDER ARRAY THE RADIO FEATURES ARE NOT YET SUPPORTED //
              RADIO(Define_PSID_IOPTION)
              {
                  ADD(PSET, "PSET");
              }
              RADIO(Define_PSID_JOPTION)
              {
                  ADD(PSET, "PSET");
              }
*/
        }
    }
    SIZE(SET__PART_Options);
    if(SET__PART_Options > 0)
    {
        ARRAY(SET__PART_Options,"")
        {
              DATA(LSD_PSIDPID_SET_PIDI);
              DATA(LSD_PSIDPID_PIDJ);
              SCALAR(LSD_PSIDPID_FSIJ);
              SCALAR(LSD_PSIDPID_FDIJ);
              SCALAR(LSD_PSIDPID_DCIJ);
              SCALAR(LSD_PSIDPID_VCIJ);
/*                                          // UNDER ARRAY THE RADIO FEATURES ARE NOT YET SUPPORTED //
              RADIO(Define_PSIDPID_IOPTION)
              {
                  ADD(PSET, "PSET");
              }
              RADIO(Define_PSIDPID_JOPTION)
              {
                  ADD(PID, "PID");
              }
*/
        }
    }
    SIZE(PART_SET__Options);
    if(PART_SET__Options > 0)
    {
        ARRAY(PART_SET__Options,"")
        {
              DATA(LSD_PIDPSID_PIDI);
              DATA(LSD_PIDPSID_SET_PIDJ);
              SCALAR(LSD_PIDPSID_FSIJ);
              SCALAR(LSD_PIDPSID_FDIJ);
              SCALAR(LSD_PIDPSID_DCIJ);
              SCALAR(LSD_PIDPSID_VCIJ);
/*                                          // UNDER ARRAY THE RADIO FEATURES ARE NOT YET SUPPORTED //
              RADIO(Define_PIDPSID_IOPTION)
              {
                  ADD(PID, "PID");
              }
              RADIO(Define_PIDPSID_JOPTION)
              {
                  ADD(PSET, "PSET");
              }
*/
        }
    }
    SIZE(PART_PART_Options);
    if(PART_PART_Options > 0)
    {
        ARRAY(PART_PART_Options,"")
        {
              DATA(LSD_PID_PIDI);
              DATA(LSD_PID_PIDJ);
              SCALAR(LSD_PID_FSIJ);
              SCALAR(LSD_PID_FDIJ);
              SCALAR(LSD_PID_DCIJ);
              SCALAR(LSD_PID_VCIJ);
/*                                          // UNDER ARRAY THE RADIO FEATURES ARE NOT YET SUPPORTED //
              RADIO(Define_PID_IOPTION)
              {
                  ADD(PID, "PID");
              }
              RADIO(Define_PID_JOPTION)
              {
                  ADD(PID, "PID");
              }
*/
        }
    }


}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$       ID      FS_D      FD_D      DC_D      VC_D");
    CARD("%10d%10lg%10lg%10lg%10lg",_ID_,LSD_FSD,LSD_FDD,LSD_DCD,LSD_VCD);
    //
    COMMENT("$     PIDi      PIDj      FSij      FDij      DCij      VCij    PTYPEi    PTYPEj");
    CARD("%10d%10d%10lg%10lg%10lg%10lg%10s%10s", LSD_PSID_SET_PIDI, LSD_PSID_SET_PIDJ, LSD_PSID_FSIJ, LSD_PSID_FDIJ, LSD_PSID_DCIJ, LSD_PSID_VCIJ, Define_PSID_IOPTION, Define_PSID_JOPTION);
    //
    COMMENT("$     PIDi      PIDj      FSij      FDij      DCij      VCij    PTYPEi    PTYPEj");
    CARD("%10d%10d%10lg%10lg%10lg%10lg%10s%10s", LSD_PSIDPID_SET_PIDI, LSD_PSIDPID_PIDJ, LSD_PSIDPID_FSIJ, LSD_PSIDPID_FDIJ, LSD_PSIDPID_DCIJ, LSD_PSIDPID_VCIJ, Define_PSIDPID_IOPTION, Define_PSIDPID_JOPTION);
    //
    COMMENT("$     PIDi      PIDj      FSij      FDij      DCij      VCij    PTYPEi    PTYPEj");
    CARD("%10d%10d%10lg%10lg%10lg%10lg%10s%10s", LSD_PIDPSID_PIDI, LSD_PIDPSID_SET_PIDJ, LSD_PIDPSID_FSIJ, LSD_PIDPSID_FDIJ, LSD_PIDPSID_DCIJ, LSD_PIDPSID_VCIJ, Define_PIDPSID_IOPTION, Define_PIDPSID_JOPTION);
    //
    COMMENT("$     PIDi      PIDj      FSij      FDij      DCij      VCij    PTYPEi    PTYPEj");
    CARD("%10d%10d%10lg%10lg%10lg%10lg%10s%10s", LSD_PID_PIDI, LSD_PID_PIDJ, LSD_PID_FSIJ, LSD_PID_FDIJ, LSD_PID_DCIJ, LSD_PID_VCIJ, Define_PID_IOPTION, Define_PID_JOPTION);
    //
}
