//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//  integration_shell.cfg    
// CARD IntShell 6.10 2426
// 12/06/2020

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    LSD_ESOP                                = VALUE(INT,  "Equal spacing of integration points option");
    LSD_FAILOPT                             = VALUE(INT,  "Treatment of failure when mixing different constitutive types, which do and do not include failure models, through the shell thickness");
    LSD_NIP                                 = SIZE("Number of integration points");
    LSD_S                                   = ARRAY[LSD_NIP](FLOAT,  "Coordinate of integration point in range -1 to 1");
    LSD_T                                   = ARRAY[LSD_NIP](FLOAT,  "WF");
    LSD_WF                                  = ARRAY[LSD_NIP](FLOAT,  "Weighting factor");
    PID_array                               = ARRAY[LSD_NIP](COMPONENT,  "Optional part ID if different from the PID specified on the element card");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    LSD_ESOP                                = 1647;
    LSD_FAILOPT                             = 2270;
    LSD_NIP                                 = 427;
    LSD_S                                   = 1644;
    LSD_T                                   = 1645;
    LSD_WF                                  = 1646;
    PID_array                               = 4338;

}

DEFAULTS(COMMON)
{

}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*INTEGRATION_SHELL");  
 mandatory:
    SIZE(LSD_NIP);
    if(LSD_ESOP == 0 && LSD_NIP > 0)
    {
       ARRAY(LSD_NIP,"")
       {
 optional:
            SCALAR(LSD_S);
 mandatory:
            SCALAR(LSD_WF);
 optional:
            DATA(PID_array);
       }
    }
 optional:
    RADIO(LSD_ESOP)
    {
       ADD(0, "0: Integration points are defined below");
       ADD(1, "1: Integration points are equally spaced through thickness");
    }
    RADIO(LSD_FAILOPT)
    {
       ADD(0, "0: Element is deleted when the layers which include failure, fail.");
       ADD(1, "1: Element failure cannot occur since some layers do not have a failure option.");
    }
}

// File format
FORMAT(Keyword971) 
{
    HEADER("*INTEGRATION_SHELL");

    COMMENT("$     IRID       NIP      ESOP   FAILOPT");
    CARD("%10d%10d%10d%10d",_ID_,LSD_NIP,LSD_ESOP,LSD_FAILOPT);
    if(LSD_ESOP == 0)
    {        
        CARD_LIST(LSD_NIP)
        {
            COMMENT("$        S        WF       PID");
            CARD("%10lg%10lg%10d",LSD_S,LSD_WF,PID_array);
        }
    }
}
