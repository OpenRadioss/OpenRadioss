//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// CONSTRAINED_JOINT_STIFFNESS
//

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES

    //Card Title
    TITLE                                   = VALUE(STRING, "Description of joint stiffness for output files jntforc and d3hsp");

    //Card 1
    LSD_PID                                 = VALUE(COMPONENT,  "Part ID for rigid body A");
    LSD_PID2                                = VALUE(COMPONENT,  "Part ID for rigid body B");
    LSD_CID                                 = VALUE(SYSTEM,  "Coordinate ID for rigid body A");
    LSD_CID2                                = VALUE(SYSTEM,  "Coordinate ID for rigid body B");
    LSD_JID                                 = VALUE(ELEMS,  "Joint ID for the joint reaction forces");

    //FLEXION-TORSION

    //Card 2a.1
    LSD_LCID7                               = VALUE(CURVE,  "Load curve ID for alpha-moment as a function of rotation in radians");
    LSD_LCID8                               = VALUE(CURVE,  "Load curve ID for gamma as a function of a scale factor which scales the bending moment due to the apha rotation");
    LSD_LCID9                               = VALUE(CURVE,  "Load curve ID for beta-torsion moment as a function of twist in radians");
    LSD_LCID10                              = VALUE(CURVE,  "Load curve ID for alpha-damping momentas a function of rate of rotation in radians per unit time");
    LSD_LCID11                              = VALUE(CURVE,  "Load curve ID for gamma-damping scale factor as a function of rate of rotation in radians per unit time");
    LSD_LCID12                              = VALUE(CURVE,  "Load curve ID for beta-damping torque as a function of rate of twist");

    //Card 2a.2
    LSD_ESAL                                = VALUE(FLOAT,  "Elastic stiffness per unit radian for friction and stop angles for alpha rotation");
    LSD_FMAL                                = VALUE(FLOAT,  "Frictional moment limiting value for alpha rotation");
    LSD_FMAL_CURVE                          = VALUE(CURVE,  "-FMAL is the load curve or table ID defining the yield moment as a function of alpha rotation");
    LSD_ESBT                                = VALUE(FLOAT,  "Elastic stiffness per unit radian for friction and stop angles for beta twist");
    LSD_FMBT                                = VALUE(FLOAT,  "Frictional moment limiting value for beta twist");
    LSD_FMBT_CURVE                          = VALUE(CURVE,  "-FMBT is the load curve or table ID defining the yield moment versus beta rotation");

    //Card 2a.3
    LSD_SAAL                                = VALUE(FLOAT,  "Stop angle in degrees for alpha rotation");
    LSD_NSABT                               = VALUE(FLOAT,  "Stop angle in degrees for negative beta rotation");
    LSD_PSABT                               = VALUE(FLOAT,  "Stop angle in degrees for positive beta rotation");

    //GENERALIZED

    //Card 2b.1
    LSD_LCID                                = VALUE(CURVE,  "Load curve ID for Phi-moment as a function of rotation in radians");
    LSD_LCID2                               = VALUE(CURVE,  "Load curve ID for Theta-moment as a function of rotation in radians");
    LSD_LCID3                               = VALUE(CURVE,  "Load curve ID for Psi-moment as a function of rotation in radians");
    LSD_LCID4                               = VALUE(CURVE,  "Load curve ID for Phi-damping moment as a function of rate of rotation in radians per unit time");
    LSD_LCID5                               = VALUE(CURVE,  "Load curve ID for Theta-damping moment as a function of rate of rotation in radians per unit time");
    LSD_LCID6                               = VALUE(CURVE,  "Load curve ID for Psi-damping torque as a function of rate of rotation in radians per unit time");

    //Card 2b.2
    LSD_ESPH                                = VALUE(FLOAT,  "Elastic stiffness per unit radian for friction and stop angles for Phi rotation");
    LSD_FMPH                                = VALUE(FLOAT,  "Frictional moment limiting value for Phi rotation");
    LSD_FMPH_CURVE                          = VALUE(CURVE,  "-FMPH is the load curve or table ID defining the yield moment as a function of Phi rotation");
    LSD_EST                                 = VALUE(FLOAT,  "Elastic stiffness per unit radian for friction and stop angles for Theta rotation");
    LSD_FMT                                 = VALUE(FLOAT,  "Frictional moment limiting value for Theta rotation");
    LSD_FMT_CURVE                           = VALUE(CURVE,  "-FMT is the load curve or table ID defining the yield moment as a function of Theta rotation");
    LSD_ESPS                                = VALUE(FLOAT,  "Elastic stiffness per unit radian for friction and stop angles for Psi rotation");
    LSD_FMPS                                = VALUE(FLOAT,  "Frictional moment limiting value for Psi rotation");
    LSD_FMPS_CURVE                          = VALUE(CURVE,  "-FMPS is the load curve or table ID defining the yield moment as a function of Psi rotation");

    //Card 2b.3
    LSD_NSAPH                               = VALUE(FLOAT,  "Stop angle in degrees for negative Phi rotation");
    LSD_PSAPH                               = VALUE(FLOAT,  "Stop angle in degrees for positive Phi rotation");
    LSD_NSAT                                = VALUE(FLOAT,  "Stop angle in degrees for negative Theta rotation");
    LSD_PSAT                                = VALUE(FLOAT,  "Stop angle in degrees for positive Theta rotation");
    LSD_NSAPS                               = VALUE(FLOAT,  "Stop angle in degrees for negative Psi rotation");
    LSD_PSAPS                               = VALUE(FLOAT,  "Stop angle in degrees for positive Psi rotation");

    //TRANSLATIONAL

    //Card 2c.1 -->  same as Card 2b.1 - GENERALIZED
    LSD_LCIDX                               = VALUE(CURVE, "Load curve ID for x-force as a function of x-distance between the origins of CIDA and CIDB based on the x-direction of CIDB");
    LSD_LCIDY                               = VALUE(CURVE, "Load curve ID for y-force as a function of y-distance between the origins of CIDA and CIDB based on the y-direction of CIDB");
    LSD_LCIDZ                               = VALUE(CURVE, "Load curve ID for z-force as a function of z-distance between the origins of CIDA and CIDB based on the z-direction of CIDB");
    LSD_DLCIDX                              = VALUE(CURVE, "Load curve ID for x-damping force as a function of rate of x-translational displacement per unit time between the origins of CIDA and CIDB based on the x-direction of CIDB");
    LSD_DLCIDY                              = VALUE(CURVE, "Load curve ID for y-damping force as a function of rate of y-translational displacement per unit time between the origins of CIDA and CIDB based on the y-direction of CIDB");
    LSD_DLCIDZ                              = VALUE(CURVE, "Load curve ID for z-damping force as a function of rate of z-translational displacement per unit time between the origins of CIDA and CIDB based on the z-direction of CIDB");

    //Card 2c.2
    LSD_ESX                                 = VALUE(FLOAT, "Elastic stiffness for friction and stop displacement for x-translation");
    LSD_FFX                                 = VALUE(FLOAT, "Frictional force limiting value for x-translation");
    LSD_FFX_CURVE                           = VALUE(CURVE, "-FFX is the load curve ID defining the yield force as a function of x-translation");
    LSD_ESY                                 = VALUE(FLOAT, "Elastic stiffness for friction and stop displacement for y-translation");
    LSD_FFY                                 = VALUE(FLOAT, "Frictional force limiting value for y-translation");
    LSD_FFY_CURVE                           = VALUE(CURVE, "-FFX is the load curve ID defining the yield force as a function of y-translation");
    LSD_ESZ                                 = VALUE(FLOAT, "Elastic stiffness for friction and stop displacement for z-translation");
    LSD_FFZ                                 = VALUE(FLOAT, "Frictional force limiting value for z-translation");
    LSD_FFZ_CURVE                           = VALUE(CURVE, "-FFX is the load curve ID defining the yield force as a function of z-translation");

    //Card 2c.3 -->  same as Card 2b.3 - GENERALIZED
    LSD_NSDX                                = VALUE(FLOAT, "Stop displacement for negative x-translation");
    LSD_PSDX                                = VALUE(FLOAT, "Stop displacement for positive x-translation");
    LSD_NSDY                                = VALUE(FLOAT, "Stop displacement for negative y-translation");
    LSD_PSDY                                = VALUE(FLOAT, "Stop displacement for positive y-translation");
    LSD_NSDZ                                = VALUE(FLOAT, "Stop displacement for negative z-translation");
    LSD_PSDZ                                = VALUE(FLOAT, "Stop displacement for positive z-translation");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    Sect_Option1                            = VALUE(INT,  "");
    Option1                                 = VALUE(INT,  "");
    Option2                                 = VALUE(INT,  "");
    LSD_FMPH_CURVE_OPT                      = VALUE(INT,  "");
    LSD_FMT_CURVE_OPT                       = VALUE(INT,  "");
    LSD_FMPS_CURVE_OPT                      = VALUE(INT,  "");
    LSD_FFX_CURVE_OPT                       = VALUE(INT,  "");
    LSD_FFY_CURVE_OPT                       = VALUE(INT,  "");
    LSD_FFZ_CURVE_OPT                       = VALUE(INT,  "");

    IOFLAG                                  = VALUE(INT, "IOFLAG");
    _opt                                    = VALUE(STRING, "Keyword Option");
    _dummy                                  = VALUE(INT, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //Card Title
    TITLE                                   = -1;

    //Card 1
    LSD_PID                                 = 149;
    LSD_PID2                                = 150;
    LSD_CID                                 = 412;
    LSD_CID2                                = 414;
    LSD_JID                                 = 4460;

    //FLEXION-TORSION

    //Card 2a.1
    LSD_LCID7                               = 200;
    LSD_LCID8                               = 224;
    LSD_LCID9                               = 1141;
    LSD_LCID10                              = 1142;
    LSD_LCID11                              = 1175;
    LSD_LCID12                              = 1176;

    //Card 2a.2
    LSD_ESAL                                = 528;
    LSD_FMAL                                = 529;
    LSD_FMAL_CURVE                          = 1165;
    LSD_ESBT                                = 530;
    LSD_FMBT                                = 531;
    LSD_FMBT_CURVE                          = 1179;

    //Card 2a.3
    LSD_SAAL                                = 532;
    LSD_NSABT                               = 533;
    LSD_PSABT                               = 534;

    //GENERALIZED

    //Card 2b.1
    LSD_LCID                                = 45;
    LSD_LCID2                               = 168;
    LSD_LCID3                               = 170;
    LSD_LCID4                               = 171;
    LSD_LCID5                               = 172;
    LSD_LCID6                               = 199;

    //Card 2b.2
    LSD_ESPH                                = 516;
    LSD_FMPH                                = 517;
    LSD_FMPH_CURVE                          = 1183;
    LSD_EST                                 = 518;
    LSD_FMT                                 = 519;
    LSD_FMT_CURVE                           = 1184;
    LSD_ESPS                                = 520;
    LSD_FMPS                                = 521;
    LSD_FMPS_CURVE                          = 1185;

    //Card 2b.3
    LSD_NSAPH                               = 522;
    LSD_PSAPH                               = 523;
    LSD_NSAT                                = 524;
    LSD_PSAT                                = 525;
    LSD_NSAPS                               = 526;
    LSD_PSAPS                               = 527;

    //TRANSLATIONAL

    //Card 2c.1 -->  same as Card 2b.1 - GENERALIZED
    LSD_LCIDX                               = -1;
    LSD_LCIDY                               = -1;
    LSD_LCIDZ                               = -1;
    LSD_DLCIDX                              = -1;
    LSD_DLCIDY                              = -1;
    LSD_DLCIDZ                              = -1;

    //Card 2c.2
    LSD_ESX                                 = -1;
    LSD_FFX                                 = -1;
    LSD_FFX_CURVE                           = 1180;
    LSD_ESY                                 = -1;
    LSD_FFY                                 = -1;
    LSD_FFY_CURVE                           = 1181;
    LSD_ESZ                                 = -1;
    LSD_FFZ                                 = -1;
    LSD_FFZ_CURVE                           = 1182;

    //Card 2c.3 -->  same as Card 2b.3 - GENERALIZED
    LSD_NSDX                                =  -1;
    LSD_PSDX                                =  -1;
    LSD_NSDY                                =  -1;
    LSD_PSDY                                =  -1;
    LSD_NSDZ                                =  -1;
    LSD_PSDZ                                =  -1;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;
    LSD_TitleOpt                            = 90;
    Sect_Option1                            = 5287;
    Option1                                 = 686;
    Option2                                 = 687;
    LSD_FMPH_CURVE_OPT                      = 1159;
    LSD_FMT_CURVE_OPT                       = 1160;
    LSD_FMPS_CURVE_OPT                      = 1161;
    LSD_FFX_CURVE_OPT                       = 1103;
    LSD_FFY_CURVE_OPT                       = 1116;
    LSD_FFZ_CURVE_OPT                       = 1158;

    IOFLAG                                  = -1;
    _opt                                    = -1;
    _dummy                                  = -1;
}
CHECK(COMMON)
{
    LSD_FMAL                                >=0.0;
    LSD_FMBT                                >=0.0;
    LSD_FMPH                                >=0.0;
    LSD_FMPH                                >=0.0;
    LSD_FMPS                                >=0.0;
    LSD_FMPS                                >=0.0;
    LSD_FMT                                 >=0.0;
    LSD_FMT                                 >=0.0;
}

DEFAULTS(COMMON)
{
    //FLEXION-TORSION

    //Card 2a.2
    LSD_ESAL                                = 0.0;
    LSD_FMAL                                = 0.0;
    LSD_ESBT                                = 0.0;
    LSD_FMBT                                = 0.0;

    //Card 2a.3
    LSD_SAAL                                = 0.0;
    LSD_NSABT                               = 0.0;
    LSD_PSABT                               = 0.0;

    //GENERALIZED

    //Card 2b.2
    LSD_ESPH                                = 0.0;
    LSD_FMPH                                = 0.0;
    LSD_EST                                 = 0.0;
    LSD_FMT                                 = 0.0;
    LSD_ESPS                                = 0.0;
    LSD_FMPS                                = 0.0;

    //Card 2b.3
    LSD_NSAPH                               = 0.0;
    LSD_PSAPH                               = 0.0;
    LSD_NSAT                                = 0.0;
    LSD_PSAT                                = 0.0;
    LSD_NSAPS                               = 0.0;
    LSD_PSAPS                               = 0.0;

    //TRANSLATIONAL

    //Card 2c.2
    LSD_ESX                                 = 0.0;
    LSD_FFX                                 = 0.0;
    LSD_ESY                                 = 0.0;
    LSD_FFY                                 = 0.0;
    LSD_ESZ                                 = 0.0;

    //Card 2c.3 -->  same as Card 2b.3 - GENERALIZED
    LSD_NSDX                                = 0.0;
    LSD_PSDX                                = 0.0;
    LSD_NSDY                                = 0.0;
    LSD_PSDY                                = 0.0;
    LSD_NSDZ                                = 0.0;
    LSD_PSDZ                                = 0.0;
}

GUI(COMMON)
{
    SCALAR(LSD_ESPH, "ESPH")                {DIMENSION="energy";}
    SCALAR(LSD_FMPH, "FMPH")                {
                                            if (Sect_Option1==1)      { DIMENSION = "moment"; }
                                            else if (Sect_Option1==3) { DIMENSION = "force"; }
                                            else                      { DIMENSION = "DIMENSIONLESS"; }
                                            }
    SCALAR(LSD_FMT, "FMT")                  {
                                            if (Sect_Option1==1)      { DIMENSION = "moment"; }
                                            else if (Sect_Option1==3) { DIMENSION = "force"; }
                                            else                      { DIMENSION = "DIMENSIONLESS"; }
                                            }
    SCALAR(LSD_ESPS, "ESPS")                {DIMENSION="energy";}
    SCALAR(LSD_NSAPH, "NSAPH")              {
                                            if (Sect_Option1==1)      { DIMENSION = "a"; }
                                            else if (Sect_Option1==3) { DIMENSION = "l"; }
                                            else                      { DIMENSION = "DIMENSIONLESS"; }
                                            }
    SCALAR(LSD_PSAPH, "PSAPH")              {
                                            if (Sect_Option1==1)      { DIMENSION = "a"; }
                                            else if (Sect_Option1==3) { DIMENSION = "l"; }
                                            else                      { DIMENSION = "DIMENSIONLESS"; }
                                            }
    SCALAR(LSD_NSAT, "NSAT")                {
                                            if (Sect_Option1==1)      { DIMENSION = "a"; }
                                            else if (Sect_Option1==3) { DIMENSION = "l"; }
                                            else                      { DIMENSION = "DIMENSIONLESS"; }
                                            }
    SCALAR(LSD_PSAT, "PSAT")                {
                                            if (Sect_Option1==1)      { DIMENSION = "a"; }
                                            else if (Sect_Option1==3) { DIMENSION = "l"; }
                                            else                      { DIMENSION = "DIMENSIONLESS"; }
                                            }
    SCALAR(LSD_NSAPS, "NSAPS")              {
                                            if (Sect_Option1==1)      { DIMENSION = "a"; }
                                            else if (Sect_Option1==3) { DIMENSION = "l"; }
                                            else                      { DIMENSION = "DIMENSIONLESS"; }
                                            }
    SCALAR(LSD_PSAPS, "PSAPS")              {
                                            if (Sect_Option1==1)      { DIMENSION = "a"; }
                                            else if (Sect_Option1==3) { DIMENSION = "l"; }
                                            else                      { DIMENSION = "DIMENSIONLESS"; }
                                            }
    SCALAR(LSD_ESAL, "ESAL")                {DIMENSION="energy";}
    SCALAR(LSD_FMAL, "FMAL")                {DIMENSION="moment";}
    SCALAR(LSD_ESBT, "ESBT")                {DIMENSION="energy";}
    SCALAR(LSD_FMBT, "FMBT")                {DIMENSION="moment";}
    SCALAR(LSD_SAAL, "SAAL")                {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_NSABT, "NSABT")              {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_PSABT, "PSABT")              {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_ESX, "ESX")                  {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_FFX, "FFX")                  {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_ESY, "ESY")                  {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_FFY, "FFY")                  {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_FFZ, "FFZ")                  {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_NSDX, "NSDX")                {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_PSDX, "PSDX")                {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_NSDY, "NSDY")                {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_PSDY, "PSDY")                {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_NSDZ, "NSDZ")                {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_PSDZ, "PSDZ")                {DIMENSION="DIMENSIONLESS";}
}

// File format
FORMAT(Keyword971)
{
    ASSIGN(IOFLAG, 0, EXPORT);
    ASSIGN(IOFLAG, 1, IMPORT);

    //HEADER
    if(IOFLAG == 0)
    {
        if(Sect_Option1 == 1 && LSD_TitleOpt == 0)
        {
            HEADER("*CONSTRAINED_JOINT_STIFFNESS_GENERALIZED");
        }
        else if(Sect_Option1 == 1 && LSD_TitleOpt == 1)
        {
            HEADER("*CONSTRAINED_JOINT_STIFFNESS_GENERALIZED_TITLE");
        }
        else if(Sect_Option1 == 2 && LSD_TitleOpt == 0)
        {
            HEADER("*CONSTRAINED_JOINT_STIFFNESS_FLEXION-TORSION");
        }
        else if(Sect_Option1 == 2 && LSD_TitleOpt == 1)
        {
            HEADER("*CONSTRAINED_JOINT_STIFFNESS_FLEXION-TORSION_TITLE");
        }
        else if(Sect_Option1 == 3 && LSD_TitleOpt == 0)
        {
            HEADER("*CONSTRAINED_JOINT_STIFFNESS_TRANSLATIONAL");
        }
        else if(Sect_Option1 == 3 && LSD_TitleOpt == 1)
        {
            HEADER("*CONSTRAINED_JOINT_STIFFNESS_TRANSLATIONAL_TITLE");
        }
    }
    else //IMPORT
    {
        HEADER("*CONSTRAINED_JOINT_STIFFNESS%80s", _opt);

        //Flags
        ASSIGN(_dummy, _FIND(_opt, "_GENERALIZED"), IMPORT);
        if(_dummy == 1)
        {
            ASSIGN(Sect_Option1, 1, IMPORT);
        }
        else
        {
            ASSIGN(_dummy, _FIND(_opt, "_FLEXION-TORSION"), IMPORT);
            if(_dummy == 1)
            {
                ASSIGN(Sect_Option1, 2, IMPORT);
            }
            else
            {
                ASSIGN(_dummy, _FIND(_opt, "_TRANSLATIONAL"), IMPORT);
                if(_dummy == 1)
                {
                    ASSIGN(Sect_Option1, 3, IMPORT);
                }
            }
        }

        ASSIGN(LSD_TitleOpt, _FIND(_opt, "_TITLE"), IMPORT);
    }

    //Card Title
    if(IOFLAG == 0 && LSD_TitleOpt == 1)
    {
        CARD("%-80s", TITLE);
    }

    //Card 1
    COMMENT("$     JSID      PIDA      PIDB      CIDA      CIDB       JID");
    CARD("%10d%10d%10d%10d%10d%10d", _ID_, LSD_PID, LSD_PID2, LSD_CID, LSD_CID2, LSD_JID);

    //GENERALIZED Cards
    if(Sect_Option1 == 1)
    {
        //Card 2b.1
        COMMENT("$   LCIDPH     LCIDT    LCIDPS   DLCIDPH    DLCIDT   DLCIDPS");
        CARD("%10d%10d%10d%10d%10d%10d", LSD_LCID, LSD_LCID2, LSD_LCID3, LSD_LCID4, LSD_LCID5, LSD_LCID6);

        //Card 2b.2
        COMMENT("$     ESPH      FMPH       EST       FMT      ESPS      FMPS");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg", LSD_ESPH, SCALAR_OR_OBJECT(LSD_FMPH_CURVE_OPT, LSD_FMPH, LSD_FMPH_CURVE), LSD_EST, SCALAR_OR_OBJECT(LSD_FMT_CURVE_OPT, LSD_FMT, LSD_FMT_CURVE), LSD_ESPS, SCALAR_OR_OBJECT(LSD_FMPS_CURVE_OPT, LSD_FMPS, LSD_FMPS_CURVE));

        //Card 2b.3
        COMMENT("$    NSAPH     PSAPH      NSAT      PSAT     NSAPS     PSAPS");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg", LSD_NSAPH, LSD_PSAPH, LSD_NSAT, LSD_PSAT, LSD_NSAPS, LSD_PSAPS);
    }
    //FLEXION-TORSION Cards
    else if(Sect_Option1 == 2)
    {
        //Card 2a.1
        COMMENT("$   LCIDAL     LCIDG    LCIDBT   DLCIDAL    DLCIDG   DLCIDBT");
        CARD("%10d%10d%10d%10d%10d%10d", LSD_LCID7, LSD_LCID8, LSD_LCID9, LSD_LCID10, LSD_LCID11, LSD_LCID12);

        //Card 2a.2
        COMMENT("$     ESAL      FMAL      ESBT      FMBT");
        CARD("%10lg%10lg%10lg%10lg", LSD_ESAL, SCALAR_OR_OBJECT(Option1, LSD_FMAL, LSD_FMAL_CURVE), LSD_ESBT, SCALAR_OR_OBJECT(Option2, LSD_FMBT, LSD_FMBT_CURVE));

        //Card 2a.3
        COMMENT("$     SAAL     NSABT     PSABT");
        CARD("%10lg%10lg%10lg", LSD_SAAL, LSD_NSABT, LSD_PSABT);
    }
    //TRANSLATIONAL Cards
    else if(Sect_Option1 == 3)
    {
        //Card 2c.1
        COMMENT("$    LCIDX     LCIDY     LCIDZ    DLCIDX    DLCIDY    DLCIDZ");
        CARD("%10d%10d%10d%10d%10d%10d", LSD_LCIDX, LSD_LCIDY, LSD_LCIDZ, LSD_DLCIDX, LSD_DLCIDY, LSD_DLCIDZ);

        //Card 2c.2
        COMMENT("$      ESX       FFX       ESY       FFY       ESZ       FFZ");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg", LSD_ESX, SCALAR_OR_OBJECT(LSD_FFX_CURVE_OPT, LSD_FFX, LSD_FFX_CURVE), LSD_ESY, SCALAR_OR_OBJECT(LSD_FFY_CURVE_OPT, LSD_FFY, LSD_FFY_CURVE), LSD_ESZ, SCALAR_OR_OBJECT(LSD_FFZ_CURVE_OPT, LSD_FFZ, LSD_FFZ_CURVE));

        //Card 2c.3
        COMMENT("$     NSDX      PSDX      NSDY      PSDY      NSDZ      PSDZ");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg", LSD_NSDX, LSD_PSDX, LSD_NSDY, LSD_PSDY, LSD_NSDZ, LSD_PSDZ);
    }
}