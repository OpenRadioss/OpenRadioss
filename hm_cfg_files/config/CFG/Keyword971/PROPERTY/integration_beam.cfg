//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// INTEGRATION_BEAM
//

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    //Card 1
    LSD_NIP                                 = SIZE(                       "Number of integration points");
    LSD_RA                                  = VALUE(FLOAT,                "Relative area of cross section");
    LSD_ICST                                = VALUE(INT,                  "Standard cross section type");
    LSD971_K                                = VALUE(INT,                  "Integration refinement parameter");

    //Standard Cross-Section Card
    LSD_W                                   = VALUE(FLOAT,                "Cross-section dimensions");
    LSD_TF                                  = VALUE(FLOAT,                "Cross-section dimensions");
    LSD_D                                   = VALUE(FLOAT,                "Cross-section dimensions");
    LSD_TW                                  = VALUE(FLOAT,                "Cross-section dimensions");
    LSD_SREF                                = VALUE(FLOAT,                "Location of reference surface normal to s");
    LSD_TREF                                = VALUE(FLOAT,                "Location of reference surface normal to t");
    intbeam_D5                              = VALUE(FLOAT,                "Cross-section dimensions");
    intbeam_D6                              = VALUE(FLOAT,                "Cross-section dimensions");

    //Quadrature Cards
    LSD_S                                   = ARRAY[LSD_NIP](FLOAT,       "Normalized s-coordinate of integration point");
    LSD_T                                   = ARRAY[LSD_NIP](FLOAT,       "Normalized t-coordinate of integration point");
    LSD_WF                                  = ARRAY[LSD_NIP](FLOAT,       "Weighting factor");
    PID_array                               = ARRAY[LSD_NIP](MULTIOBJECT, "Optional PID");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING,               "Solver Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    //Card 1
    LSD_NIP                                 = 427;
    LSD_RA                                  = 1636;
    LSD_ICST                                = 1637;
    LSD971_K                                = 1043;

    //Standard Cross-Section Card
    LSD_W                                   = 1638;
    LSD_TF                                  = 1639;
    LSD_D                                   = 1640;
    LSD_TW                                  = 1641;
    LSD_SREF                                = 1642;
    LSD_TREF                                = 1643;
    intbeam_D5                              = 869;
    intbeam_D6                              = 870;

    //Quadrature Cards
    LSD_S                                   = 1644;
    LSD_T                                   = 1645;
    LSD_WF                                  = 1646;
    PID_array                               = 4338;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;
}

DEFAULTS(COMMON)
{
    //Card 1
    LSD_NIP                                 = 0;
    LSD_RA                                  = 0.0;
    LSD_ICST                                = 0;
    LSD971_K                                = 0;

    //Standard Cross-Section Card
    LSD_SREF                                = 0;
    LSD_TREF                                = 0;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*INTEGRATION_BEAM");

    SIZE(LSD_NIP, "NIP");
    ARRAY(LSD_NIP, "NIP")
    {
        SCALAR(LSD_S,   "S")                { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(LSD_T,   "T")                { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(LSD_WF,  "WF")               { DIMENSION = "DIMENSIONLESS" ; }
        DATA(PID_array, "PID");
    }
    SCALAR(LSD_RA, "RA")                    { DIMENSION = "DIMENSIONLESS" ; }
    RADIO(LSD_ICST, "ICST")
    {
        ADD(0, "0: Default");
        ADD(1, "1: I-Shape");
        ADD(2, "2: Channel");
        ADD(3, "3: L-Shape");
        ADD(4, "4: T-shape");
        ADD(5, "5: Tubular box");
        ADD(6, "6: Z-Shape");
        ADD(7, "7: Trapezoidal");
        ADD(8, "8: Circular");
        ADD(9, "9: Tubular");
        ADD(10, "10: I-Shape 2");
        ADD(11, "11: Solid Box");
        ADD(12, "12: Cross");
        ADD(13, "13: H-Shape");
        ADD(14, "14: T-Shape 2");
        ADD(15, "15: I-Shape 3");
        ADD(16, "16: Channel 2");
        ADD(17, "17: Channel 3");
        ADD(18, "18: T-Shape 3");
        ADD(19, "19: Box-Shape 2");
        ADD(20, "20: Hexagon");
        ADD(21, "21: Hat-Shape");
        ADD(22, "22: Hat-Shape 2");
    }
    if(LSD_ICST > 0)
    {
        SCALAR(LSD_W)                           { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(LSD_TF)                          { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(LSD_D)                           { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(LSD_TW)                          { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(LSD_SREF)                        { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(LSD_TREF)                        { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(intbeam_D5)                      { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(intbeam_D6)                      { DIMENSION = "DIMENSIONLESS" ; }
    }
}

// File format
FORMAT(Keyword971)
{
    HEADER("*INTEGRATION_BEAM");

    //Card 1
    COMMENT("$     IRID       NIP        RA      ICST         K");
    CARD("%10d%10d%10lg%10d%10d", _ID_, LSD_NIP, LSD_RA, LSD_ICST, LSD971_K);

    if(LSD_ICST > 0)
    {
        //Standard Cross-Section Card
        //Card 2
        COMMENT("$       D1        D2        D3        D4      SREF      TREF        D5        D6");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg", LSD_W, LSD_TF, LSD_D, LSD_TW, LSD_SREF, LSD_TREF, intbeam_D5, intbeam_D6);
    }

    if(LSD_ICST == 0 && LSD_NIP > 0)
    {
        CARD_LIST(LSD_NIP)
        {
            //Quadrature Cards
            //Card 3
            COMMENT("$        S         T        WF       PID");
            CARD("%10lg%10lg%10lg%10d", LSD_S, LSD_T, LSD_WF, PID_array);
        }
    }
}
