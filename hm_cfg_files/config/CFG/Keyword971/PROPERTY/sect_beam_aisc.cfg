//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- sect_beam_aisc.cfg ---
//PROPERTIES    SectBeamAISC    1147
//27/05/2020

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    LSD_AISC_K                              = VALUE(INT,  "Integration refinement parameter");
    LSD_AISC_LABEL                          = VALUE(STRING,  "AISC section label");
    LSD_AISC_LFAC                           = VALUE(FLOAT,  "Length scale factor to convert dimensions from standard units");
    LSD_ELFORM                              = VALUE(INT,  "Element formulation");
    LSD_NSLOC                               = VALUE(FLOAT,  "Location of reference surface normal to s axis");
    LSD_NSM                                 = VALUE(FLOAT,  "Nonstructural mass per unit length");
    LSD_NTLOC                               = VALUE(FLOAT,  "Location of reference surface normal to t axis");
    LSD_RAMPT                               = VALUE(FLOAT,  "Ramp up time for dynamic relaxation");
    LSD_SHRF                                = VALUE(FLOAT,  "Shear factor");
    LSD_STRESS                              = VALUE(FLOAT,  "Initial Stress for dynamic relaxation");
    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt                            = VALUE(INT,  "");

    TITLE                                   = VALUE(STRING, "TITLE");
    _opt                                    = VALUE(STRING, "Option");
    IOFLAG                                  = VALUE(INT,"IOFLAG");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    LSD_AISC_K                              = 1149;
    LSD_AISC_LABEL                          = 1148;
    LSD_AISC_LFAC                           = 1150;
    LSD_ELFORM                              = 399;
    LSD_NSLOC                               = 408;
    LSD_NSM                                 = 5296;
    LSD_NTLOC                               = 409;
    LSD_RAMPT                               = 2037;
    LSD_SHRF                                = 402;
    LSD_STRESS                              = 2038;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;
    LSD_TitleOpt                            = 90;

    TITLE                                   = -1;
    _opt                                    = -1;
    IOFLAG                                  = -1;
}

DEFAULTS(COMMON)
{
    LSD_SHRF    = 1.0;
}

GUI(COMMON)
{
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == 0)
    {
        ASSIGN(KEYWORD_STR,"*SECTION_BEAM_AISC");
    }
    else
    {
        ASSIGN(KEYWORD_STR,"*SECTION_BEAM_AISC_TITLE");
    }
    SCALAR(LSD_AISC_LABEL,"LABEL")                                          {DIMENSION="DIMENSIONLESS";}
    RADIO(LSD_ELFORM, "ELFORM")
    {
        ADD(1, "1: Hughes-Liu with cross section integration");
        ADD(2, "2: Belytschko-Schwer resultant beam");
        ADD(3, "3: Truss");
        ADD(4, "4: Belytschko-Schwer full cross-section integration");
        ADD(5, "5: Belytschko-Schwer tubular beam with cross-section integration");
        ADD(11, "11: Integrated Warped beam");
        ADD(12, "12: Resultant Warped beam");
    }
    if( LSD_ELFORM != 3 && LSD_ELFORM == 1 || LSD_ELFORM == 11)
    {
        SCALAR(LSD_SHRF, "SHRF")                                            {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_NSM, "NSM")                                              {DIMENSION="lineic_mass";}
        SCALAR(LSD_AISC_LFAC, "LFAC")                                       {DIMENSION="l";}
        SCALAR(LSD_NSLOC, "NSLOC")                                          {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_NTLOC, "NTLOC")                                          {DIMENSION="DIMENSIONLESS";}
    }
    if( LSD_ELFORM != 3 && LSD_ELFORM != 2 && LSD_ELFORM != 12)
    {
        SCALAR(LSD_SHRF, "SHRF")                                            {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_NSM, "NSM")                                              {DIMENSION="lineic_mass";}
        SCALAR(LSD_AISC_K, "K")                                             {DIMENSION="DIMENSIONLESS";}
    }
    if( LSD_ELFORM == 3)
    {
        SCALAR(LSD_AISC_LFAC, "LFAC")                                       {DIMENSION="l";}
        SCALAR(LSD_RAMPT, "RAMPT")                                          {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_STRESS, "STRESS")                                        {DIMENSION="DIMENSIONLESS";}
    }
    if( LSD_ELFORM == 5 || LSD_ELFORM == 5)
    {
        SCALAR(LSD_SHRF, "SHRF")                                            {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_NSM, "NSM")                                              {DIMENSION="lineic_mass";}
        SCALAR(LSD_AISC_LFAC, "LFAC")                                       {DIMENSION="l";}
        SCALAR(LSD_AISC_K, "K")                                             {DIMENSION="DIMENSIONLESS";}
    }
}

// File format
FORMAT(Keyword971)
{
    ASSIGN(IOFLAG, 0, EXPORT);
    ASSIGN(IOFLAG, 1, IMPORT);

    if(IOFLAG == 0)
    {
        if(LSD_TitleOpt == 1)
        {
            HEADER("*SECTION_BEAM_AISC_TITLE");
        }
        else
        {
            HEADER("*SECTION_BEAM_AISC");
        }

        //CARD 1
        CARD("%10d%-70s",_ID_,LSD_AISC_LABEL);

        //CARD 2
        if((LSD_ELFORM != 3)  &&  (LSD_ELFORM == 1 || LSD_ELFORM == 11))
        {
            COMMENT("$   ELFORM      SHRF       NSM      LFAC     NSLOC     NTLOC         K");
            CARD("%10d%10lg%10lg%10lg%10lg%10lg%10d",LSD_ELFORM,LSD_SHRF,LSD_NSM,LSD_AISC_LFAC,LSD_NSLOC,LSD_NTLOC,LSD_AISC_K);
        }
        else if((LSD_ELFORM != 3)  &&  (LSD_ELFORM == 2 || LSD_ELFORM == 12))
        {
            COMMENT("$   ELFORM      SHRF       NSM      LFAC");
            CARD("%10d%10lg%10lg%10lg",LSD_ELFORM,LSD_SHRF,LSD_NSM,LSD_AISC_LFAC);
        }
        else if( LSD_ELFORM == 3)
        {
            COMMENT("$   ELFORM      LFAC     RAMPT    STRESS");
            CARD("%10d%10lg%10lg%10lg",LSD_ELFORM,LSD_AISC_LFAC,LSD_RAMPT,LSD_STRESS);
        }
        else if(LSD_ELFORM == 4 || LSD_ELFORM == 5)
        {
            COMMENT("$   ELFORM      SHRF       NSM      LFAC         K");
            CARD("%10d%10lg%10lg%10lg%10lg",LSD_ELFORM,LSD_SHRF,LSD_NSM,LSD_AISC_LFAC,LSD_AISC_K);
        }
    }
    else
    {
        HEADER("*SECTION_BEAM_AISC%s",_opt);
        if(_opt == "_TITLE")
        {
            ASSIGN(LSD_TitleOpt, 1, IMPORT);
        }
        else
        {
            ASSIGN(LSD_TitleOpt, 0, IMPORT);
        }
        //CARD 1
        CARD("%10d%-70s",_ID_,LSD_AISC_LABEL);
        //CARD 2
        CARD_PREREAD("%10d",LSD_ELFORM);
        if((LSD_ELFORM != 3) && (LSD_ELFORM == 1 || LSD_ELFORM == 11))
        {
            CARD("%10d%10lg%10lg%10lg%10lg%10lg%10d",LSD_ELFORM,LSD_SHRF,LSD_NSM,LSD_AISC_LFAC,LSD_NSLOC,LSD_NTLOC,LSD_AISC_K);
        }
        else if((LSD_ELFORM != 3)  &&  (LSD_ELFORM == 2 || LSD_ELFORM == 12))
        {
            CARD("%10d%10lg%10lg%10lg",LSD_ELFORM,LSD_SHRF,LSD_NSM,LSD_AISC_LFAC);
        }
        else if( LSD_ELFORM == 3)
        {
            CARD("%10d%10lg%10lg%10lg",LSD_ELFORM,LSD_AISC_LFAC,LSD_RAMPT,LSD_STRESS);
        }
        else if(LSD_ELFORM == 4 || LSD_ELFORM == 5)
        {
            CARD("%10d%10lg%10lg%10lg%10lg",LSD_ELFORM,LSD_SHRF,LSD_NSM,LSD_AISC_LFAC,LSD_AISC_K);
        }
    }
}
