//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Property
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    LSD_DAMP                                = VALUE(FLOAT,  "CDAMP");
    LSD_FREQ                                = VALUE(FLOAT,  "FREQ");
    LSD_PID                                 = VALUE(COMPONENT,  "PIDRB");
    LSD_PSID                                = VALUE(SETS,  "PSID")      { SUBTYPES = ( /SETS/SET_PART_IDPOOL ) ;  }
    LSD_dampLCID                            = VALUE(FUNCT,  "LCID");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    LSD_DAMP                                = 3213;
    LSD_FREQ                                = 1611;
    LSD_PID                                 = 149;
    LSD_PSID                                = 768;
    LSD_dampLCID                            = 2867;

}

GUI(COMMON)
{

    ASSIGN(KEYWORD_STR, "*DAMPING_RELATIVE");
 mandatory:
    SCALAR(LSD_DAMP);
    SCALAR(LSD_FREQ)                    { DIMENSION="f";}
    DATA(LSD_PID);
    DATA(LSD_PSID)                      { SUBTYPES=(/MAT/MAT_RIGID); }
 optional:
    DATA(LSD_dampLCID);
/*
    graphical SUPPORT("Support") {
          OBJECTS=(COMPONENT);
          ADD(ID_PSID);
        }
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$    CDAMP      FREQ     PIDRB      PSID                LCID");
    CARD("%10lg%10lg%10d%10d          %10d",LSD_DAMP,LSD_FREQ,LSD_PID,LSD_PSID,LSD_dampLCID);
    //

}
