//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// LS-Dyna airbag shell reference geometry
//

ATTRIBUTES(COMMON) {
  // Support

    sx                  = VALUE(FLOAT, "Scale factor X direction");
    sy                  = VALUE(FLOAT, "Scale factor Y direction");
    sz                  = VALUE(FLOAT, "Scale factor Z direction");
    nid0                = VALUE(NODE, "Origin node for scale");
    
    table_count         = SIZE("No. of nodes");   
    elems_table_elem    = ARRAY[table_count](ELEMS,"Element ID") { SUBTYPES = (/ELEMENT/ELEMENT_SHELL_IDPOOL) ; }
    elems_table_component = ARRAY[table_count](COMPONENT, "Original part");
    elems_table_n1      = ARRAY[table_count](NODE, "Nodal point 1");
    elems_table_n2      = ARRAY[table_count](NODE, "Nodal point 2");
    elems_table_n3      = ARRAY[table_count](NODE, "Nodal point 3");
    elems_table_n4      = ARRAY[table_count](NODE, "Nodal point 4");
    
    //Attributes for HM usage
    IO_FLAG             = VALUE(INT, "Import/Export flag");
    _HMCOMMENTSFLAG     = VALUE(INT, "Write HM Comments");
    _HWCOLOR            = VALUE(INT, "Entity Color");
    ARG_TYPE3           = VALUE(STRING, "Options for card");
    ARG_TYPE4           = VALUE(STRING, "Options for card");
    ARG_TYPE7           = VALUE(STRING, "Options for card");
    component           = VALUE(COMPONENT, "Part ID: Optional");
    
    rdttoggle           = VALUE(BOOL, "RDT flag");
    idtoggle            = VALUE(BOOL, "ID flag");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    IO_FLAG             =-1;
    _HMCOMMENTSFLAG     =-1;
    _HWCOLOR            =-1;
    ARG_TYPE3           = -1;
    ARG_TYPE4           = -1;
    ARG_TYPE7           = -1;
}

DEFINITIONS(COMMON) {
  IMPORT_PREDATA_TABULAR=(elems_table_elem); 
} 

//File format
FORMAT(Keyword971_R9.0){

  ASSIGN(IO_FLAG, 1, IMPORT);
  ASSIGN(IO_FLAG, 0, EXPORT);

  // card options reading
  if(IO_FLAG == 1)
  {
     HEADER("*AIRBAG_SHELL_REFERENCE_GEOMETRY%3s", ARG_TYPE3);
     HEADER("*AIRBAG_SHELL_REFERENCE_GEOMETRY%4s", ARG_TYPE4);
     HEADER("*AIRBAG_SHELL_REFERENCE_GEOMETRY%7s", ARG_TYPE7);
  }  

  if(IO_FLAG == 1 && ARG_TYPE7 == "_RDT_ID")
  {
     ASSIGN(rdttoggle, 1, IMPORT); 
     ASSIGN(idtoggle, 1, IMPORT); 
  }
  else if(IO_FLAG == 1 && ARG_TYPE7 == "_ID_RDT")
  {
     ASSIGN(rdttoggle, 1, IMPORT); 
     ASSIGN(idtoggle, 1, IMPORT); 
  }
  else if(IO_FLAG == 1 && ARG_TYPE4 == "_RDT")
  {
     ASSIGN(rdttoggle, 1, IMPORT); 
  }
  else if(IO_FLAG == 1 && ARG_TYPE3 == "_ID")
  {
     ASSIGN(idtoggle, 1, IMPORT); 
  }
  
  // card options writing 
  if(IO_FLAG == 0 && rdttoggle == 0 && idtoggle == 0) {
     HEADER("*AIRBAG_SHELL_REFERENCE_GEOMETRY");
  }
  else if(IO_FLAG == 0 && rdttoggle == 0 && idtoggle == 1) {
     HEADER("*AIRBAG_SHELL_REFERENCE_GEOMETRY_ID");
  }
  else if(IO_FLAG == 0 && rdttoggle == 1 && idtoggle == 0) {
     HEADER("*AIRBAG_SHELL_REFERENCE_GEOMETRY_RDT");
  }
  else if(IO_FLAG == 0 && rdttoggle == 1 && idtoggle == 1) {
     HEADER("*AIRBAG_SHELL_REFERENCE_GEOMETRY_RDT_ID");
  }
      
  //
  if (idtoggle == 1) {
     COMMENT("$       ID        SX        SY        SZ      NID0");
     CARD("%10d%10lg%10lg%10lg%10d",_ID_,sx,sy,sz,nid0);
  }
  
  //
  COMMENT("$   EID      PID      N1      N2      N3      N4");
  FREE_CARD_LIST(table_count)
  {
    CARD("%8d%8d%8d%8d%8d%8d", elems_table_elem, elems_table_component, elems_table_n1, elems_table_n2, elems_table_n3, elems_table_n4);
  }

}
