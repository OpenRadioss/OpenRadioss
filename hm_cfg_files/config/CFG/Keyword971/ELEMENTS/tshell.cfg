//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// TSHELL elements Setup File
// 
ATTRIBUTES(COMMON) {
  // Common attributes
  NB_ELE    = SIZE("Number of elements");
  id        = ARRAY[NB_ELE](INT,"Element identifier","EID");// { SUBTYPES = (/ELEMENT/SOLID_IDPOOL) ; }
  collector = ARRAY[NB_ELE](INT,"Part","PID");
  node1  = ARRAY[NB_ELE](INT,"Node identifier 1","N1");
  node2  = ARRAY[NB_ELE](INT,"Node identifier 2","N2");
  node3  = ARRAY[NB_ELE](INT,"Node identifier 3","N3");
  node4  = ARRAY[NB_ELE](INT,"Node identifier 4","N4");
  node5  = ARRAY[NB_ELE](INT,"Node identifier 5","N5");
  node6  = ARRAY[NB_ELE](INT,"Node identifier 6","N6");
  node7  = ARRAY[NB_ELE](INT,"Node identifier 7","N7");
  node8  = ARRAY[NB_ELE](INT,"Node identifier 8","N8");
  //
  //KEYWORD_STR   = VALUE(STRING, "Solver Keyword");
 // IOFLAG        = VALUE(INT, "IOFLAG");
  //_opt          = VALUE(STRING, "Option");
}

DRAWABLES(COMMON) {
 public:
  VOLUME    = VOLUME();
  TIME_STEP = TIME_STEP();
}

GUI(COMMON) {	
 mandatory:
    SIZE(NB_ELE) ;
    ARRAY(NB_ELE,"element data")
    {
         SCALAR(id) ;
         SCALAR(collector);
         SCALAR(node1);
         SCALAR(node2);
         SCALAR(node3);
         SCALAR(node4);
 optional:
         SCALAR(node5);
         SCALAR(node6);
         SCALAR(node7);
         SCALAR(node8);
    }  
}

FORMAT(Keyword971) 
{
   // ASSIGN(IOFLAG, 0, EXPORT);
   // ASSIGN(IOFLAG, 1, IMPORT);

    HEADER("*ELEMENT_TSHELL");

    COMMENT("$    EID     PID     N1      N2      N3      N4      N5      N6      N7      N8");
    FREE_CARD_LIST(NB_ELE)
    {
        CARD("%8d%8d%8d%8d%8d%8d%8d%8d%8d%8d",id,collector,node1,node2,node3,node4,node5,node6,node7,node8);
    }
}