//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// ELEMENT_MASS_PART_SET 
// 

ATTRIBUTES(COMMON) {

    _HMCOMMENTSFLAG = VALUE(INT, "Write HM Comments");
    _HWCOLOR        = VALUE(INT, "Entity Color");
    TITLE           = VALUE(STRING, "Title");
    setid           = VALUE(SETS, "Part set") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
    masses          = VALUE(FLOAT, "Added Translation Mass");
    finalmass       = VALUE(FLOAT, "Final Translation Mass");
    curveid         = VALUE(FUNCT, "Load curve to scale the added mass vs time");
    distribution    = VALUE(INT, "Optional flag for mass-weighted distribution, valid for SET option only");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    _HMCOMMENTSFLAG   = -1;
    _HWCOLOR          = -1;
    TITLE             = -1;
}

DEFAULTS(COMMON) 
{
    masses       = 0.0;
    finalmass    = 0.0;
    distribution = 0;
}

//DEFINITIONS(COMMON) {
//    SET_PART=(SID);
//}
//GUI(COMMON)
//{  
//   mandatory:
//   graphical SUPPORT("PSID") {
//          OBJECTS=(PART);
//          ADD(SID);
//   }
//   optional:
//   SCALAR(ADDMASS) {DIMENSION = "MASS";}
//   SCALAR(FINMASS) {DIMENSION = "MASS";}
//   FUNCTION(LCID){X_TITLE="Time (begins at 0.)";Y_TITLE="Scale factor (1. for t=0)";}
//   RADIO(MWD)
//   {
//     ADD(0, "non-structural mass is distributed by area(shell)/volume(solid) weighted distribution");
//     ADD(1, "non-structural mass is distributed by mass weighted, area*density*thickness(shell)/volume*density(solid), distribution.");
//   }  
//}

FORMAT(Keyword971) 
{
    HEADER("*ELEMENT_MASS_PART_SET");

    COMMENT("$     ID         ADDMASS         FINMASS            LCID     MWD");    
    CARD("%8d%16lf%16lf%16d%8d",setid, masses,finalmass,curveid,distribution); 
}
