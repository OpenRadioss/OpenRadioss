//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
ATTRIBUTES(COMMON) {

  
    IO_FLAG                             = VALUE(INT, "Import/Export flag");
    _HMCOMMENTSFLAG                     = VALUE(INT, "Write HM Comments");
    _HWCOLOR                            = VALUE(INT, "Entity Color");
    TITLE                               = VALUE(STRING, "TITLE");
    
    offsetoption                        = VALUE(BOOL,"Option for Offset");
    nodeid                              = VALUE(NODE,"Node to which the mass is assigned");
    csid                                = VALUE(SYSTEM,"Coordinate system ID");
    compxx                              = VALUE(FLOAT,"xx component of inertia tensor");
    compxy                              = VALUE(FLOAT,"xy component of inertia tensor");
    compxz                              = VALUE(FLOAT,"xz component of inertia tensor");
    compyy                              = VALUE(FLOAT,"yy component of inertia tensor");
    compyz                              = VALUE(FLOAT,"yz component of inertia tensor");
    compzz                              = VALUE(FLOAT,"zz component of inertia tensor");
    masses                              = VALUE(FLOAT, "Lumped Mass");
    xoffset                             = VALUE(FLOAT, "x-offset from nodal point");
    yoffset                             = VALUE(FLOAT, "y-offset from nodal point");
    zoffset                             = VALUE(FLOAT, "z-offset from nodal point");
    TYPE                                = VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
  	IO_FLAG=-1;
	_HMCOMMENTSFLAG=-1;
	_HWCOLOR=-1;
    TYPE=-1;
}

// File format
FORMAT(Keyword971) {
    
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
	
    if(IO_FLAG == 2  && offsetoption == TRUE)
    {
        HEADER("*ELEMENT_INERTIA_OFFSET");
       
        COMMENT("$    EID     NID    CSID");
        CARD("%8d%8d%8d",_ID_,nodeid,csid);
        COMMENT("$      IXX       IXY       IXZ       IYY       IYZ       IZZ      MASS");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",compxx,compxy,compxz,compyy,compyz,compzz,masses);
        COMMENT("$    X-OFF     Y-OFF     Z-OFF");
        CARD("%10lg%10lg%10lg",xoffset,yoffset,zoffset);
    }
    else if(IO_FLAG == 2)
    {
        HEADER("*ELEMENT_INERTIA");
       
        COMMENT("$    EID     NID    CSID");
        CARD("%8d%8d%8d",_ID_,nodeid,csid);
        COMMENT("$      IXX       IXY       IXZ       IYY       IYZ       IZZ      MASS");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",compxx,compxy,compxz,compyy,compyz,compzz,masses);
    }
    if(IO_FLAG ==1)
   {
        HEADER("*ELEMENT_INERTIA%7s",TYPE); 
        if(TYPE =="_OFFSET")
        {
            ASSIGN(offsetoption, 1);
            COMMENT("$    EID     NID    CSID");
            CARD("%8d%8d%8d",_ID_,nodeid,csid);
            COMMENT("$      IXX       IXY       IXZ       IYY       IYZ       IZZ      MASS");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",compxx,compxy,compxz,compyy,compyz,compzz,masses);
            COMMENT("$    X-OFF     Y-OFF     Z-OFF");
            CARD("%10lg%10lg%10lg",xoffset,yoffset,zoffset);
        }
        else 
        {
            ASSIGN(offsetoption, 0);
            COMMENT("$    EID     NID    CSID");
            CARD("%8d%8d%8d",_ID_,nodeid,csid);
            COMMENT("$      IXX       IXY       IXZ       IYY       IYZ       IZZ      MASS");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",compxx,compxy,compxz,compyy,compyz,compzz,masses);
        }
    } 
}


