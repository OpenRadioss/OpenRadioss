//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Beam element Setup File
// 

ATTRIBUTES(COMMON) {
  // Common attributes
  NB_ELE    = SIZE("Number of elements");
  id        = ARRAY[NB_ELE](ELEMS,"Element identifier","EID") { SUBTYPES = (/ELEMENT/BEAM_IDPOOL) ; }
  PART      = ARRAY[NB_ELE](COMPONENT,"Part","PID");
  node_ID1  = ARRAY[NB_ELE](NODE,"Node identifier 1","N1");
  node_ID2  = ARRAY[NB_ELE](NODE,"Node identifier 2","N2");
  node_ID3  = ARRAY[NB_ELE](NODE,"Node identifier 3","N3");
  node_ID4  = ARRAY[NB_ELE](NODE,"Node identifier 4","N4");
  SLEN      = ARRAY[NB_ELE](FLOAT,"[SLEN] Initial slack length");
  SBRID     = ARRAY[NB_ELE](RETRACTOR,"[SBRID] Retractor ID");  
  //
 //  IOFLAG        = VALUE(INT, "IOFLAG");
 // _opt           = VALUE(STRING, "Option");
}

DRAWABLES(COMMON) {
 public:
  TIME_STEP = TIME_STEP();
}

GUI(COMMON) {
mandatory:
    SIZE(NB_ELE) ;
    ARRAY(NB_ELE,"element data")
    {
        DATA(id) ;
        DATA(PART);
        DATA(node_ID1);
        DATA(node_ID2);
 optional:
        DATA(node_ID3);
        DATA(node_ID4);
        DATA(SBRID);
        SCALAR(SLEN) {DIMENSION="l";}
    } 
}
FORMAT(Keyword971) 
{

    HEADER("*ELEMENT_SEATBELT");
    COMMENT("$    EID     PID      N1      N2   SBRID            SLEN      N3      N4");
    FREE_CARD_LIST(NB_ELE)
    {
        CARD("%8d%8d%8d%8d%8d%16lg%8d%8d",id,PART,node_ID1,node_ID2,SBRID,SLEN,node_ID3,node_ID4);
    }
}
