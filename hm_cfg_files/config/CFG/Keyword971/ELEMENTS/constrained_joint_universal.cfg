//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- constrained_joint_universal.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES

    //ID Card
    TITLE                                   = VALUE(STRING,    "Joint descriptor");

    //Card 1
    node1                                   = VALUE(NODE,      "Node 1, in rigid body A");
    node2                                   = VALUE(NODE,      "Node 2, in rigid body B");
    node3                                   = VALUE(NODE,      "Node 3, in rigid body A");
    node4                                   = VALUE(NODE,      "Node 4, in rigid body B");
    LSD_RPS                                 = VALUE(FLOAT,     "Relative penalty stiffness");
    LSDYNA_DAMP                             = VALUE(FLOAT,     "Damping scale factor on default damping value");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING,    "Solver Keyword");
    LSD_TitleOpt                            = VALUE(INT,       "Title flag");
    Elem_Option                             = VALUE(INT,       "Local flag");
    failureOpt                              = VALUE(INT,       "Failure flag");

    IOFLAG                                  = VALUE(INT,       "IOFLAG");
    _opt                                    = VALUE(STRING,    "_opt");
    _dummy_keyword                          = VALUE(STRING,    "_dummy_keyword");
    obj_local                               = VALUE(SUBOBJECT, "Local Option");
    obj_fail                                = VALUE(SUBOBJECT, "Failure Option");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    //ID Card
    TITLE                                   = -1;

    //Card 1
    LSD_RPS                                 = 688;
    LSDYNA_DAMP                             = 254;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;
    LSD_TitleOpt                            = 90;
    Elem_Option                             = 701;
    failureOpt                              = 4779;

    IOFLAG                                  = -1;
    _opt                                    = -1;
    _dummy_keyword                          = -1;
    obj_local                               = -1;
    obj_fail                                = -1;
}

DEFAULTS(COMMON)
{
    LSD_RPS                                 = 1.0;
    LSDYNA_DAMP                             = 1.0;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*CONSTRAINED_JOINT_UNIVERSAL");

    FLAG(Elem_Option, "LocalOption");

    FLAG(failureOpt, "Failure");

    FLAG(LSD_TitleOpt, "Title flag");
    if(LSD_TitleOpt == 1)
    {
        SCALAR(TITLE, "HEADING")            { DIMENSION = "DIMENSIONLESS" ; }
    }

    // Card 1
    DATA(node1, "N1");
    DATA(node2, "N2");
    DATA(node3, "N3");
    DATA(node4, "N4");

    SCALAR(LSD_RPS, "RPS")                  { DIMENSION = "DIMENSIONLESS"; }

    SCALAR(LSDYNA_DAMP, "DAMP")             { DIMENSION = "DIMENSIONLESS"; }

    if(Elem_Option == 1)
    {
        ASSIGN(KEYWORD_STR, "_LOCAL");
        SUBOBJECT(obj_local) {SUBTYPES = (/SUBOBJECT/CONSTRAINED_JOINT_LOCAL);}
    }

    if(failureOpt == 1)
    {
        ASSIGN(KEYWORD_STR, "_FAILURE");
        SUBOBJECT(obj_fail) {SUBTYPES = (/SUBOBJECT/CONSTRAINED_JOINT_FAILURE);}
    }

    if(LSD_TitleOpt == 1)
    {
        ASSIGN(KEYWORD_STR, "_ID");
    }
}

// File format
FORMAT(Keyword971_R6.1)
{
    ASSIGN(IOFLAG, 0, EXPORT);
    ASSIGN(IOFLAG, 1, IMPORT);

    if(IOFLAG == 0)
    {
        ASSIGN(KEYWORD_STR, *CONSTRAINED_JOINT_UNIVERSAL, EXPORT);

        if(Elem_Option == 1)
        {
            ASSIGN(_dummy_keyword, _COMBINE(_dummy_keyword, "_LOCAL"), EXPORT);
        }

        if(failureOpt == 1)
        {
            ASSIGN(_dummy_keyword, _COMBINE(_dummy_keyword, "_FAILURE"), EXPORT);
        }

        if(LSD_TitleOpt == 1)
        {
            ASSIGN(_dummy_keyword, _COMBINE(_dummy_keyword, "_ID"), EXPORT);
        }

        ASSIGN(KEYWORD_STR, _COMBINE(KEYWORD_STR, _dummy_keyword), EXPORT);
        CARD("%-s", KEYWORD_STR);
    }
    else //IMPORT
    {
        HEADER("*CONSTRAINED_JOINT_UNIVERSAL%-40s", _opt);

        ASSIGN(Elem_Option, _FIND(_opt, "_LOCAL"), IMPORT);

        ASSIGN(failureOpt, _FIND(_opt, "_FAILURE"), IMPORT);

        ASSIGN(LSD_TitleOpt ,_FIND(_opt, "_ID"),IMPORT);
    }

    if(IOFLAG == 0 && LSD_TitleOpt  == 1)
    {
        COMMENT("$      JIDHEADING                                                               ");
        CARD("%10d%-70s", _ID_, TITLE);
    }

    // Card 1
    COMMENT("$       N1        N2        N3        N4                           RPS      DAMP");
    CARD("%10d%10d%10d%10d%20s%10lg%10lg", node1, node2, node3, node4, _BLANK_, LSD_RPS, LSDYNA_DAMP);

    if(Elem_Option == 1)
    {
        SUBOBJECTS(obj_local, /SUBOBJECT/CONSTRAINED_JOINT_LOCAL);
    }

    if(failureOpt == 1)
    {
        SUBOBJECTS(obj_fail, /SUBOBJECT/CONSTRAINED_JOINT_FAILURE);
    }
}
