//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 110
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    LSDYNA_D1                               = VALUE(FLOAT,  "Parameter for plastic strain to fracture.");
    LSDYNA_D2                               = VALUE(FLOAT,  "Parameter for plastic strain to fracture.");
    LSD_A                                   = VALUE(FLOAT,  "Intact normalized strength parameter");
    LSD_B1                                  = VALUE(FLOAT,  "Intact normalized strength parameter");
    LSD_BETA                                = VALUE(FLOAT,  "Fraction of elastic energy loss converted to hydrostatic energy");
    LSD_C                                   = VALUE(FLOAT,  "Strength parameter");
    LSD_FS                                  = VALUE(FLOAT,  "Element deletion criterion");
    LSD_G                                   = VALUE(FLOAT,  "Shear modulus");
    LSD_MAT110_EPSI                         = VALUE(FLOAT,  "Quasi-static threshold strain rate");
    LSD_MAT110_HEL                          = VALUE(FLOAT,  "Hugoniot elastic limit");
    LSD_MAT110_PHEL                         = VALUE(FLOAT,  "Pressure component at the Hugoniot elastic limit");
    LSD_MAT110_SFMAX                        = VALUE(FLOAT,  "Maximum normalized fractured strength");
    LSD_MAT52_T                             = VALUE(FLOAT,  "Maximum tensile pressure strength");
    LSD_MATT2_K1                            = VALUE(FLOAT,  "First pressure coefficient (equivalent to the bulk modulus).");
    LSD_MATT2_K2                            = VALUE(FLOAT,  "Second pressure coefficient");
    LSD_MATT2_K3                            = VALUE(FLOAT,  "Third pressure coefficient.");
    LSD_MAT_M                               = VALUE(FLOAT,  "Fractured strength parameter");
    LSD_MAT_N                               = VALUE(FLOAT,  "Intact strength parameter");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    Rho                                     = VALUE(FLOAT,  "Density");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSDYNA_D1                               = 145;
    LSDYNA_D2                               = 146;
    LSD_A                                   = 718;
    LSD_B1                                  = 1517;
    LSD_BETA                                = 1662;
    LSD_C                                   = 1519;
    LSD_FS                                  = 3009;
    LSD_G                                   = 1560;
    LSD_MAT110_EPSI                         = 865;
    LSD_MAT110_HEL                          = 867;
    LSD_MAT110_PHEL                         = 868;
    LSD_MAT110_SFMAX                        = 866;
    LSD_MAT52_T                             = 1226;
    LSD_MATT2_K1                            = 2632;
    LSD_MATT2_K2                            = 2633;
    LSD_MATT2_K3                            = 2634;
    LSD_MAT_M                               = 314;
    LSD_MAT_N                               = 312;
    LSD_TitleOpt                            = 90;
    Num_Comments                            = 3101;
    Rho                                     = 118;

}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  SHEAR_MODULUS=SCALAR(LSD_G);
  INTACT_NORMALIZED_STRENGTH_PARAMETER=SCALAR(LSD_A);
  FRACTURED_NORMALIZED_STRENGTH_PARAMETER=SCALAR(LSD_B1);
  STRENGTH_PARAMETER=SCALAR(LSD_C);
  FRACTURED_STRENGTH_PARAMETER=SCALAR(LSD_MAT_M);
  INTACT_STRENGTH_PARAMETER=SCALAR(LSD_MAT_N);
  REFERENCE_STRAIN_RATE=SCALAR(LSD_MAT110_EPSI);
  MAXIMUM_TENSILE_STRENGTH=SCALAR(LSD_MAT52_T);
  MAXIMUM_NORMALIZED_FRACTURED_STRENGTH=SCALAR(LSD_MAT110_SFMAX);
  HUGONIOT_ELASTIC_LIMIT=SCALAR(LSD_MAT110_HEL);
  PRESSURE_COMPONENT_AT_THE_HUGONIOT_ELASTIC_LIMIT=SCALAR(LSD_MAT110_PHEL);
  FRACTION_OF_ELASTIC_ENERGY_LOSS_CONVERTED_TO_HYDROSTATIC_ENERGY=SCALAR(LSD_BETA);
  PARAMETER_FOR_PLASTIC_STRAIN_TO_FRACTURE=SCALAR(LSDYNA_D1);
  PARAMETER_FOR_PLASTIC_STRAIN_TO_FRACTURE_EXPONENT=SCALAR(LSDYNA_D2);
  FIRST_PRESSURE_COEFFICIENT=SCALAR(LSD_MATT2_K1);
  SECOND_PRESSURE_COEFFICIENT=SCALAR(LSD_MATT2_K2);
  ELASTIC_CONSTANTS=SCALAR(LSD_MATT2_K3);
  FAILURE_CRITERIA=SCALAR(LSD_FS);
  YOUNG_MODULUS=EVAL(2*1.463*SHEAR_MODULUS);
  POISSON_RATIO     = EVAL((3.*FIRST_PRESSURE_COEFFICIENT-2.*SHEAR_MODULUS)/(6.*FIRST_PRESSURE_COEFFICIENT+2.*SHEAR_MODULUS));
    //SOUND_SPEED is speed for ISDO = 0 and 1
    SOUND_SPEED             = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
    SOUND_SPEED_ISDO_2      = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
    SOUND_SPEED_SOLID       = EVAL(((4*SHEAR_MODULUS/3+FIRST_PRESSURE_COEFFICIENT)/MASS_DENSITY)^0.5);

}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_JOHNSON_HOLMQUIST_CERAMICS");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:    
     SCALAR(Rho)                        {DIMENSION="density";}
 optional:    
     SCALAR(LSD_G)                      {DIMENSION="pressure";}
     SCALAR(LSD_A)                      {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_B1)                     {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_C)                      {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_M)                  {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_N)                  {DIMENSION="DIMENSIONLESS";}
 mandatory:
     SCALAR(LSD_MAT110_EPSI)            {DIMENSION="DIMENSIONLESS";}
 optional:    
     SCALAR(LSD_MAT52_T)                {DIMENSION="pressure";}
     SCALAR(LSD_MAT110_SFMAX)           {DIMENSION="pressure";}
     SCALAR(LSD_MAT110_HEL)             {DIMENSION="pressure";}
     SCALAR(LSD_MAT110_PHEL)            {DIMENSION="pressure";}
     SCALAR(LSD_BETA)                   {DIMENSION="energy";}
 mandatory:
     SCALAR(LSDYNA_D1)                  {DIMENSION="DIMENSIONLESS";}
 optional:    
     SCALAR(LSDYNA_D2)                  {DIMENSION="DIMENSIONLESS";}
 mandatory:
     SCALAR(LSD_MATT2_K1)               {DIMENSION="pressure";}
 optional:    
     SCALAR(LSD_MATT2_K2)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MATT2_K3)               {DIMENSION="pressure";}
     SCALAR(LSD_FS)                     {DIMENSION="DIMENSIONLESS";}
/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID       RHO         G         A         B         C         M         N");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_G,LSD_A,LSD_B1,LSD_C,LSD_MAT_M,LSD_MAT_N);
    //
    COMMENT("$     EPSI         T     SFMAX       HEL      PHEL      BETA");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT110_EPSI,LSD_MAT52_T,LSD_MAT110_SFMAX,LSD_MAT110_HEL,LSD_MAT110_PHEL,LSD_BETA);
    //
    COMMENT("$       D1        D2        K1        K2        K3        FS");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_D1,LSDYNA_D2,LSD_MATT2_K1,LSD_MATT2_K2,LSD_MATT2_K3,LSD_FS);
    //
}
