//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material 034
// 


ATTRIBUTES(COMMON) 
{
    KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt                      = VALUE(INT, "Title");
    CommentEnumField                  = VALUE(INT, "User Comments");
    Num_Comments                      = SIZE("No. of comment lines");
    Comments                          = ARRAY[Num_Comments](STRING, "Entity Comments");
    Rho                               = VALUE(FLOAT, "Mass density");  
    LSD_MAT_EA                        = VALUE(FLOAT, "Youngs modulus");
    LSD_MAT_EB                        = VALUE(FLOAT, "Youngs modulus");
    LSD_MAT_EC                        = VALUE(FLOAT, "Youngs modulus");
    LSD_MAT_PRBA                      = VALUE(FLOAT, "Minor Poissons ratio ba direction");
    LSD_MAT_PRCA                      = VALUE(FLOAT, "Major Poissons ratio ab direction");
    LSD_MAT_PRCB                      = VALUE(FLOAT, "Major Poissons ratio cb direction");
    LSD_MAT_GAB                       = VALUE(FLOAT, "shear modulus ab direction");
    LSD_MAT_GBC                       = VALUE(FLOAT, "shear modulus bc direction");
    LSD_MAT_GCA                       = VALUE(FLOAT, "shear modulus ca direction");
    LSD_MAT_CSE                       = VALUE(FLOAT, "Compressive stress elimination option");
    LSD_MAT_EL                        = VALUE(FLOAT, "Youngs modulus for elastic liner");
    LSD_MAT_PRL                       = VALUE(FLOAT, "Poissons ratio for elastic liner");
    LSD_MAT_LRATIO                    = VALUE(FLOAT, "A non-zero value activates the elastic liner");
    LSD_MAT_DAMP                      = VALUE(FLOAT, "Rayleigh damping coefficient");
    axisOptFlag                       = VALUE(INT, "Material axes option");
    LSD_SYSTEM                        = VALUE(SYSTEM, "coordinate system ID");
    leakCoeffFlag                     = VALUE(INT, "LCID_leakCoeff");
    LSD_MAT_FLC                       = VALUE(FLOAT, "coef. of the porosity from the equation in Anagonye and Wang");
    LSD_LCID                          = VALUE(FUNCT, "Optional porous leakage flow coefficient");
    areaCoeffFlag                     = VALUE(INT, "LCID_areaCoeff");
    LSD_MAT_FAC                       = VALUE(FLOAT, "coef. of the porosity from the equation in Anagonye and Wang");
    LSD_LCID2                         = VALUE(FUNCT, "Optional characteristic fabric parameter");
    effLeakAreaFlag                   = VALUE(INT, "LCID_effLeakArea");
    LSD_MAT_ELA                       = VALUE(FLOAT, "Effective leakage area for blocked fabric");
    LSD_LCID3                         = VALUE(FUNCT, "curve defining ELA versus time");
    LSD_MAT_LNRC                      = VALUE(FLOAT, "Flag to turn off compression in liner");
    LSD_MAT34_FORM                    = VALUE(FLOAT, "Flag to modify membrane formulation for fabric material");
    LSDYNA_FVOPT                      = VALUE(FLOAT, "Fabric venting option");
    tensileStressCurveFlag            = VALUE(INT, "LCID_tensileStressCurve");  
    LSDYNA_TSRFAC                     = VALUE(FLOAT, "Strain restoration factor");
    LSD_LCID4                         = VALUE(FUNCT, "curve defining TSRFAC versus time");
    LSD_LCID5                         = VALUE(FUNCT, "new curve defining TSRFAC versus time using alternate method");
    LSD_MAT_RGBRTH                    = VALUE(FLOAT, "Material dependent birth time of airbag reference geometry");
    LSD_X0                            = VALUE(FLOAT, "Coef. of Anagonye and Wang porosity eq. for the leakage area");
    LSD_X1                            = VALUE(FLOAT, "Coef. of Anagonye and Wang porosity eq. for the leakage area");
    LSDYNA_A1                         = VALUE(FLOAT, "Components of vector a");
    LSDYNA_A2                           = VALUE(FLOAT, "Components of vector a");
    LSDYNA_A3                           = VALUE(FLOAT, "Components of vector a");
    LSDYNA_D1                           = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_D2                           = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_D3                           = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_V1                           = VALUE(FLOAT,  "Components of vector v");
    LSDYNA_V2                           = VALUE(FLOAT,  "Components of vector v");
    LSDYNA_V3                           = VALUE(FLOAT,  "Components of vector v");
    LSD_BETA                          = VALUE(FLOAT, "Material angle in degrees");
    LSD_MATL_ISREFG                   = VALUE(INT, "Initial stress by reference geometry");
    LCA                               = VALUE(FUNCT, "stress versus uniaxial strain along the a-axis fiber");
    LCB                               = VALUE(FUNCT, "stress versus uniaxial strain along the b-axis fiber");    
    LCAB                              = VALUE(FUNCT, "shear stress versus shear strain in the ab-plane");
    LCUA                              = VALUE(FUNCT, "stress versus strain along the a-axis fiber");
    LCUB                              = VALUE(FUNCT, "stress versus strain along the b-axis fiber");
    LCUAB                             = VALUE(FUNCT, "shear stress versus shear strain in the ab-plane");
    negLCUAFlag                       = VALUE(INT, "Neg_LCUA");
    negLCUBFlag                       = VALUE(INT, "Neg_LCUB");
    negLCUABFlag                      = VALUE(INT, "Neg_LCUAB");
    LSD_MATL34_RL                     = VALUE(FLOAT, "Optional reloading parameter");
    LSD_MATL34_LCAA                   = VALUE(FUNCT, "stress along the a-axis fiber VS biaxial strain");
    LSD_MATL34_LCBB                   = VALUE(FUNCT, "stress along the b-axis fiber VS biaxial strain");
    LSD_MATL34_H                      = VALUE(FLOAT, "Normalized hysteresis parameter");
    LSD_MATL34_DT                     = VALUE(FLOAT, "Strain rate averaging option");
    LSD_MATL34_ECOAT                  = VALUE(FLOAT, "Youngs modulus of coat material");
    LSD_MATL34_SCOAT                  = VALUE(FLOAT, "Yield stress of coat material");
    LSD_MATL34_TCOAT                  = VALUE(FLOAT, "Thickness of coat material");
    AOPT_SKEW_FLAG                    = VALUE(INT,  "Flag for defining coordinate system ID number");
    IO_FLAG                           = VALUE(INT, "io flag");
    _HMCOMMENTSFLAG                   = VALUE(INT, "Write HM Comments");
    TITLE                             = VALUE(STRING, "Title");
    LOC_AOPT                          = VALUE(FLOAT, "");
    //empty_string                 = VALUE(STRING, "Used as a local variable for free format case");
    TSRFAC_LOCAL                      = VALUE(INT, "Local variable to preread the  TSRAF data");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                   = 9000;
    CommentEnumField              = 3220;
    Num_Comments                  = 3101;
    LSD_TitleOpt                  = 90;
    Comments                      = 3100;
    Rho                           = 118;
    LSD_MAT_EA                    = 325;
    LSD_MAT_EB                    = 326;
    LSD_MAT_EC                    = 327;
    LSD_MAT_PRBA                  = 329;
    LSD_MAT_PRCA                  = 330;
    LSD_MAT_PRCB                  = 331;
    LSD_MAT_GAB                   = 332;
    LSD_MAT_GBC                   = 333;
    LSD_MAT_GCA                   = 334;
    LSD_MAT_CSE                   = 1117;
    LSD_MAT_EL                    = 1118;
    LSD_MAT_PRL                   = 1119;
    LSD_MAT_LRATIO                = 1120;
    LSD_MAT_DAMP                  = 1121;
    axisOptFlag                   = 4946;
    LSD_SYSTEM                    = 184;
    leakCoeffFlag                 = 4709;
    LSD_MAT_FLC                   = 4068;
    LSD_LCID                      = 45;
    areaCoeffFlag                 = 4708;
    LSD_MAT_FAC                   = 4069;
    LSD_LCID2                     = 168;
    effLeakAreaFlag               = 4710;
    LSD_MAT_ELA                   = 4070;
    LSD_LCID3                     = 170;
    LSD_MAT_LNRC                  = 4071;
    LSD_MAT34_FORM                = 4072;
    LSDYNA_FVOPT                  = 4714;
    tensileStressCurveFlag        = 4723;
    LSDYNA_TSRFAC                 = 4715;
    LSD_LCID4                     = 171;
    LSD_LCID5                     = 172;
    LSD_MAT_RGBRTH                = 8140;
    LSDYNA_A1                     = 139;
    LSDYNA_A2                     = 140;
    LSDYNA_A3                     = 141;
    LSDYNA_V1                     = 142;
    LSDYNA_V2                     = 143;
    LSDYNA_V3                     = 144;
    LSDYNA_D1                     = 145;
    LSDYNA_D2                     = 146;
    LSDYNA_D3                     = 147;
    LSD_X0                        = 4799;
    LSD_X1                        = 4763;
    LSD_BETA                      = 1662;
    LSD_MATL_ISREFG               = 4977;
    LCA                           = 4414;
    LCB                           = 4415;
    LCAB                          = 4416;
    LCUA                          = 4417;
    LCUB                          = 4418;
    LCUAB                         = 4419;
    negLCUAFlag                   = 6247;
    negLCUBFlag                   = 6248;
    negLCUABFlag                  = 6249;
    LSD_MATL34_RL                 = 6189;
    LSD_MATL34_LCAA               = 6190;
    LSD_MATL34_LCBB               = 6191;
    LSD_MATL34_H                  = 6192;
    LSD_MATL34_DT                 = 6193;
    LSD_MATL34_ECOAT              = 6194;
    LSD_MATL34_SCOAT              = 6195;
    LSD_MATL34_TCOAT              = 6196;
    AOPT_SKEW_FLAG                = -1;
    IO_FLAG                       = -1;
    TITLE                         = -1;
    LOC_AOPT                      = -1;
    //empty_string             = -1;
    TSRFAC_LOCAL                  = -1;
}

CHECK(COMMON)
{
    LSD_MAT_FLC    >=  0;
    LSD_MAT_FAC    >=  0;
    LSD_MAT_ELA    >=  0;
    LSDYNA_TSRFAC  >=   0;
    LSDYNA_TSRFAC  <   1;
    LSD_MATL34_RL  >=  0.0;
    LSD_MATL34_RL  <=  1.0;
    LSD_MATL34_H  >=  0.0;
    LSD_MATL34_H  <=  1.0;
}

DEFAULTS(COMMON)
{
    LSD_MAT_CSE    = 0.0;
    LSD_MATL_ISREFG = 0;
}

DRAWABLES(COMMON)
{
public:
  MASS_DENSITY=SCALAR(Rho);
  EA=SCALAR(LSD_MAT_EA);
  EB=SCALAR(LSD_MAT_EB);
  EB=SCALAR(LSD_MAT_EC);
 // EC=SCALAR(EC);
  POISSON_RATIO_BA=SCALAR(LSD_MAT_PRBA);
  POISSON_RATIO_CA=SCALAR(LSD_MAT_PRCA);
 // POISSON_RATIO_CB=SCALAR(PRCB);
  SHEAR_MODULUS=SCALAR(LSD_MAT_GAB);
 // SHEAR_MODULUS_BC=SCALAR(GBC);
 // SHEAR_MODULUS_CA=SCALAR(GCA);
  COMPRESSIVE_STRESS_ELIMINATION=SCALAR(LSD_MAT_CSE);
  YOUNG_MODULUS_ELASTIC_LINER=SCALAR(LSD_MAT_EL);
  POISSON_RATIO_ELASTIC_LINE=SCALAR(LSD_MAT_PRL);
  RATIO_LINER_THICKNESS=SCALAR(LSD_MAT_LRATIO);
  RAYLEIGH_DAMPING_COEFFICIENT=SCALAR(LSD_MAT_DAMP);
  MATERIAL_AXES_OPTION=SCALAR(axisOptFlag);
  FLAG__COMPRESSION_IN_LINER=SCALAR(LSD_MAT_LNRC);
  FLAG_MODIFY_MEMBRANE_FORMULATION=SCALAR(LSD_MAT34_FORM);
  FABRIC_VENTING_OPTION=SCALAR(LSDYNA_FVOPT);
  //VK COEFFICIENT_POROSITY_EQUATION_X2=SCALAR(LSD_MAT_FLC);
  //VK COEFFICIENT_POROSITY_EQUATION_X3=SCALAR(LSD_MAT_FAC);
  X0=SCALAR(LSD_X0);
  X1=SCALAR(LSD_X1);
  MATERIAL_ANGLE=SCALAR(LSD_BETA);
  YOUNG_MODULUS = MAX(EA,EB);
  POISSON_RATIO = MAX(POISSON_RATIO_BA,POISSON_RATIO_CA);
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
  private:
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*SHEAR_MODULUS/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON) 
{
    ASSIGN(KEYWORD_STR, "*MAT_FABRIC");
    RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
    FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
       {
             ASSIGN(KEYWORD_STR, "_TITLE");
       }
 mandatory:
    SCALAR(Rho)                         { DIMENSION="density";}
    SCALAR(LSD_MAT_EA)                  {DIMENSION="pressure";}
 optional:
    SCALAR(LSD_MAT_EB)                  {DIMENSION="pressure";}
    SCALAR(LSD_MAT_PRBA)                {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT_PRCA)                {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT_GAB)                 {DIMENSION="pressure";}
    RADIO(LSD_MAT_CSE)
    {
        ADD(0.0, "0.0: Don't eliminate compressive stresses (default)");
        ADD(1.0, "1.0: Eliminate compressive stresses, doesnt apply to linear");
    }
    SCALAR(LSD_MAT_EL)                  {DIMENSION="pressure";}
    SCALAR(LSD_MAT_PRL)                 {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT_LRATIO)              {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT_DAMP)                {DIMENSION="DIMENSIONLESS";}
    RADIO(axisOptFlag)
    {
        ADD(0, "0.0: Locally orthotropic : axis given by nodes 1,2, and 4");
        ADD(2, "2.0: Axis given by vectors");
        ADD(3, "3.0: Axis given by rotating the material axes by an angle BETA");
        ADD(4, "By System");
    }
    if(axisOptFlag == 4)
    {
       DATA(LSD_SYSTEM);
    }
    FLAG(leakCoeffFlag);
    if(leakCoeffFlag == FALSE)
    {
        SCALAR(LSD_MAT_FLC)             {DIMENSION="DIMENSIONLESS";}
    }
    if(leakCoeffFlag == TRUE)
    {
      FUNCTION(LSD_LCID)
      {
        X_TITLE = "Time"; X_DIMENSION = "t";
        Y_TITLE = "Leakage coefficient"; Y_DIMENSION = "DIMENSIONLESS";
      }
    }

    FLAG(areaCoeffFlag);
    if(areaCoeffFlag == FALSE)
    {
        SCALAR(LSD_MAT_FAC)             {DIMENSION="DIMENSIONLESS";}
    }
    if(areaCoeffFlag == TRUE)
    {
      FUNCTION(LSD_LCID2)
      {
        X_TITLE = "Absolute pressure"; X_DIMENSION = "pressure";
        Y_TITLE = "Fabric area coefficient"; Y_DIMENSION = "DIMENSIONLESS";
      }
    }

    FLAG(effLeakAreaFlag);
    if(effLeakAreaFlag == FALSE)
    {
        SCALAR(LSD_MAT_ELA)             {DIMENSION="DIMENSIONLESS";}
    }
    if(effLeakAreaFlag == TRUE)
    {
      FUNCTION(LSD_LCID3)
      {
        X_TITLE = "Time"; X_DIMENSION = "t";
        Y_TITLE = "Leakage area coefficient"; Y_DIMENSION = "DIMENSIONLESS";
      }
    }
    RADIO(LSD_MAT_LNRC)
    {
        ADD(0.0, "0: Off");
        ADD(1.0, "1: On");
    }
    RADIO(LSD_MAT34_FORM)
    {
        ADD( 0.0,  "  0.0: Least cost and very reliable (default)");
        ADD( 1.0,  "  1.0: Invariant local membrane coordinate system");
        ADD( 2.0,  "  2.0: Green-Largrange strain formulation");
        ADD( 3.0,  "  3.0: Large strain with nonorthogonal material angles");
        ADD( 4.0,  "  4.0: Large strain with nonorthogonal material angles and nonlinear stress strain behavior");
        ADD(12.0,  " 12.0: Updated form2");
        ADD(13.0,  " 13.0: Updated form3");
        ADD(14.0,  " 14.0: Updated form4");
        ADD(-14.0, "-14.0: Updated form14,reading of card 7");
        ADD(24.0,  " 24.0: Updated form14");
    }
    RADIO(LSDYNA_FVOPT)
    {
        ADD(1.0, "1.0: Wang-Nefske formulas for venting through an orifice are used. Blockage is not considered");
        ADD(2.0, "2.0: Wang-Nefske formulas for venting through an orifice are used. Blockage of venting area due to contact is considered");
        ADD(3.0, "3.0: Leakage formulas of Graefe, Krummheuer and Siejak are used.Blockage is not considered ");
        ADD(4.0, "4.0: Leakage formulas of Graefe, Krummheuer and Siejak are used. Blockage of venting area due to contact is considered");
        ADD(5.0, "5.0: Leakage formulas based on flow through a poutous media are used. Blockage is not considered");
        ADD(6.0, "6.0: Leakage formulas based on flow through a poutous media are used. Blockage of venting area due to contact is considered");
        ADD(7.0, "7.0: Leakage is based on gas volume outflow vs pressure load curve. Blockage is not considered");
        ADD(8.0, "8.0: Leakage is based on gas volume outflow vs pressure load curve. Blockage of venting area due to contact is considered");
    }
    RADIO(tensileStressCurveFlag) 
    {
        ADD(1,"LT.0: |TSRFAC| is the ID of the curve");
        ADD(2,"GT.0 AND LT.1: TSRFAC is a scale factor");
        ADD(3,"GT.1: TSRFAC is a curve using alternative method");
    }
    if(tensileStressCurveFlag == 2)
    {
        SCALAR(LSDYNA_TSRFAC)               {DIMENSION="DIMENSIONLESS";}
    }
    else if(tensileStressCurveFlag == 1)
    {
      FUNCTION(LSD_LCID4)
      {
        X_TITLE = "Time"; X_DIMENSION = "t";
        Y_TITLE = "Tensile stress cutoff factor"; Y_DIMENSION = "DIMENSIONLESS";
      }
    }
    else if (tensileStressCurveFlag == 3)
    {
      FUNCTION(LSD_LCID5)
      {
        X_TITLE = "Time"; X_DIMENSION = "t";
        Y_TITLE = "Tensile stress cutoff factor"; Y_DIMENSION = "DIMENSIONLESS";
      }
    }
    SCALAR(LSD_MAT_RGBRTH)               {DIMENSION="t";}

     if(axisOptFlag == 2)
     {
        SCALAR(LSDYNA_A1)               {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSDYNA_A2)               {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSDYNA_A3)               {DIMENSION="DIMENSIONLESS";}
     }
     SCALAR(LSD_X0)                     {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_X1)                     {DIMENSION="DIMENSIONLESS";}
     if(axisOptFlag == 2)
     {
        SCALAR(LSDYNA_D1)               {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSDYNA_D2)               {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSDYNA_D3)               {DIMENSION="DIMENSIONLESS";}
     }
     if(axisOptFlag == 3)
     {
        SCALAR(LSDYNA_V1)               {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSDYNA_V2)               {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSDYNA_V3)               {DIMENSION="DIMENSIONLESS";}
     }
     if(axisOptFlag == 0 || axisOptFlag == 3)
     {
        SCALAR(LSD_BETA)                {DIMENSION="a";}
     }
     if(LSD_MAT34_FORM == 12.0)
     {
        RADIO(LSD_MATL_ISREFG)
        {
            ADD(0, "0: Not active (default)");
            ADD(1, "1: Active");
        }
     }
     if(LSD_MAT34_FORM == 4.0 || LSD_MAT34_FORM == 14.0 || LSD_MAT34_FORM == -14.0 || LSD_MAT34_FORM == 24.0)
     {
            FUNCTION(LCA)
            {
              X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
              Y_TITLE = "Stress along a-axis"; Y_DIMENSION = "pressure";
            }
            FUNCTION(LCB)
            {
              X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
              Y_TITLE = "Stress along b-axis"; Y_DIMENSION = "pressure";
            }
            FUNCTION(LCAB)
            {
              X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
              Y_TITLE = "Stress in ab-plane"; Y_DIMENSION = "pressure";
            }
            FLAG(negLCUAFlag);
            FUNCTION(LCUA)
            {
              X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
              Y_TITLE = "Stress along a-axis"; Y_DIMENSION = "pressure";
            }
            FLAG(negLCUBFlag);
            FUNCTION(LCUB)
            {
              X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
              Y_TITLE = "Stress along b-axis"; Y_DIMENSION = "pressure";
            }
            FLAG(negLCUABFlag);
            FUNCTION(LCUAB)
            {
              X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
              Y_TITLE = "Stress in ab-plane"; Y_DIMENSION = "pressure";
            }
     }
     if(LSD_MAT34_FORM == 14.0 || LSD_MAT34_FORM == 24.0)
     {
        SCALAR(LSD_MATL34_RL);
     }
     if(LSD_MAT34_FORM == -14.0)
     {
            FUNCTION(LSD_MATL34_LCAA)
            {
              X_TITLE = "Biaxial Strain"; X_DIMENSION = "DIMENSIONLESS";
              Y_TITLE = "Stress along a-axis"; Y_DIMENSION = "pressure";
            }
            FUNCTION(LSD_MATL34_LCBB)
            {
              X_TITLE = "Biaxial Strain"; X_DIMENSION = "DIMENSIONLESS";
              Y_TITLE = "Stress along b-axis"; Y_DIMENSION = "pressure";
            }
            SCALAR(LSD_MATL34_H)                    {DIMENSION="DIMENSIONLESS";}
            SCALAR(LSD_MATL34_DT);
            SCALAR(LSD_MATL34_ECOAT)                {DIMENSION="pressure";}
            SCALAR(LSD_MATL34_SCOAT)                {DIMENSION="pressure";}
            SCALAR(LSD_MATL34_TCOAT)                {DIMENSION="l";} 
     }
/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/SHELL);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);

    ASSIGN(AOPT_SKEW_FLAG, 1, IMPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, EXPORT);

    if(axisOptFlag == 1 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,0.0,EXPORT);
    }
    else if(axisOptFlag == 2 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,2.0,EXPORT);
    }
    else if(axisOptFlag == 3 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,3.0,EXPORT);
    }

    COMMENT("$      MID        RO        EA        EB        EC      PRBA      PRCA      PRCB");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_MAT_EA,LSD_MAT_EB,LSD_MAT_EC,LSD_MAT_PRBA,LSD_MAT_PRCA,LSD_MAT_PRCB);

    COMMENT("$      GAB       GBC       GCA       CSE        EL       PRL    LRATIO      DAMP");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_GAB,LSD_MAT_GBC,LSD_MAT_GCA,LSD_MAT_CSE,LSD_MAT_EL,LSD_MAT_PRL,LSD_MAT_LRATIO,LSD_MAT_DAMP);

    COMMENT("$     AOPT    FLC/X2    FAC/X3       ELA      LNRC      FORM     FVOPT    TSRFAC");
    if(IO_FLAG == 2)
    {
        if(axisOptFlag != 4 && (tensileStressCurveFlag == 2))
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LOC_AOPT,SCALAR_OR_OBJECT(leakCoeffFlag,LSD_MAT_FLC,LSD_LCID),SCALAR_OR_OBJECT(areaCoeffFlag,LSD_MAT_FAC,LSD_LCID2),SCALAR_OR_OBJECT(effLeakAreaFlag,LSD_MAT_ELA,LSD_LCID3),LSD_MAT_LNRC,LSD_MAT34_FORM,LSDYNA_FVOPT,LSDYNA_TSRFAC);
        }
        else if(axisOptFlag != 4 && (tensileStressCurveFlag == 1))
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LOC_AOPT,SCALAR_OR_OBJECT(leakCoeffFlag,LSD_MAT_FLC,LSD_LCID),SCALAR_OR_OBJECT(areaCoeffFlag,LSD_MAT_FAC,LSD_LCID2),SCALAR_OR_OBJECT(effLeakAreaFlag,LSD_MAT_ELA,LSD_LCID3),LSD_MAT_LNRC,LSD_MAT34_FORM,LSDYNA_FVOPT,SCALAR_OR_OBJECT(tensileStressCurveFlag,LSDYNA_TSRFAC,LSD_LCID4));
        }
        else if(axisOptFlag != 4)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",LOC_AOPT,SCALAR_OR_OBJECT(leakCoeffFlag,LSD_MAT_FLC,LSD_LCID),SCALAR_OR_OBJECT(areaCoeffFlag,LSD_MAT_FAC,LSD_LCID2),SCALAR_OR_OBJECT(effLeakAreaFlag,LSD_MAT_ELA,LSD_LCID3),LSD_MAT_LNRC,LSD_MAT34_FORM,LSDYNA_FVOPT,LSD_LCID5);
        }
        else if(tensileStressCurveFlag == 2)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM),SCALAR_OR_OBJECT(leakCoeffFlag,LSD_MAT_FLC,LSD_LCID),SCALAR_OR_OBJECT(areaCoeffFlag,LSD_MAT_FAC,LSD_LCID2),SCALAR_OR_OBJECT(effLeakAreaFlag,LSD_MAT_ELA,LSD_LCID3),LSD_MAT_LNRC,LSD_MAT34_FORM,LSDYNA_FVOPT,LSDYNA_TSRFAC);
        }
        else if(tensileStressCurveFlag == 1)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM),SCALAR_OR_OBJECT(leakCoeffFlag,LSD_MAT_FLC,LSD_LCID),SCALAR_OR_OBJECT(areaCoeffFlag,LSD_MAT_FAC,LSD_LCID2),SCALAR_OR_OBJECT(effLeakAreaFlag,LSD_MAT_ELA,LSD_LCID3),LSD_MAT_LNRC,LSD_MAT34_FORM,LSDYNA_FVOPT,SCALAR_OR_OBJECT(tensileStressCurveFlag,LSDYNA_TSRFAC,LSD_LCID4));
        }
        else 
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM),SCALAR_OR_OBJECT(leakCoeffFlag,LSD_MAT_FLC,LSD_LCID),SCALAR_OR_OBJECT(areaCoeffFlag,LSD_MAT_FAC,LSD_LCID2),SCALAR_OR_OBJECT(effLeakAreaFlag,LSD_MAT_ELA,LSD_LCID3),LSD_MAT_LNRC,LSD_MAT34_FORM,LSDYNA_FVOPT,LSD_LCID5);
        }
    }
    CARD_PREREAD("%10lg%10s%10s%10s%10s%10s%10s%10d",LOC_AOPT,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,TSRFAC_LOCAL);
    if(LOC_AOPT == 0.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,1,IMPORT);
    }
    else if(LOC_AOPT == 2.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,2,IMPORT);
    }
    else if(LOC_AOPT == 3.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,3,IMPORT);
    }
    else
    {
        ASSIGN(axisOptFlag,4,IMPORT);
    }
    
    //Three possible values for tensileStressCurveFlag
    if(TSRFAC_LOCAL < 0 && IO_FLAG == 1)
    {
        ASSIGN(tensileStressCurveFlag,1,IMPORT);
    }
    else if(TSRFAC_LOCAL >= 0 && TSRFAC_LOCAL < 1  && IO_FLAG == 1)
    {
        ASSIGN(tensileStressCurveFlag,2,IMPORT);
    }
    else if(TSRFAC_LOCAL >= 1  && IO_FLAG == 1)
    {
        ASSIGN(tensileStressCurveFlag,3,IMPORT);
    }

    if(IO_FLAG == 1)
    {
        if(axisOptFlag != 4 && (tensileStressCurveFlag == 2))
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LOC_AOPT,SCALAR_OR_OBJECT(leakCoeffFlag,LSD_MAT_FLC,LSD_LCID),SCALAR_OR_OBJECT(areaCoeffFlag,LSD_MAT_FAC,LSD_LCID2),SCALAR_OR_OBJECT(effLeakAreaFlag,LSD_MAT_ELA,LSD_LCID3),LSD_MAT_LNRC,LSD_MAT34_FORM,LSDYNA_FVOPT,LSDYNA_TSRFAC);
        }
        else if(axisOptFlag != 4 && (tensileStressCurveFlag == 1))
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LOC_AOPT,SCALAR_OR_OBJECT(leakCoeffFlag,LSD_MAT_FLC,LSD_LCID),SCALAR_OR_OBJECT(areaCoeffFlag,LSD_MAT_FAC,LSD_LCID2),SCALAR_OR_OBJECT(effLeakAreaFlag,LSD_MAT_ELA,LSD_LCID3),LSD_MAT_LNRC,LSD_MAT34_FORM,LSDYNA_FVOPT,SCALAR_OR_OBJECT(tensileStressCurveFlag,LSDYNA_TSRFAC,LSD_LCID4));
        }
        else if(axisOptFlag != 4)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",LOC_AOPT,SCALAR_OR_OBJECT(leakCoeffFlag,LSD_MAT_FLC,LSD_LCID),SCALAR_OR_OBJECT(areaCoeffFlag,LSD_MAT_FAC,LSD_LCID2),SCALAR_OR_OBJECT(effLeakAreaFlag,LSD_MAT_ELA,LSD_LCID3),LSD_MAT_LNRC,LSD_MAT34_FORM,LSDYNA_FVOPT,LSD_LCID5);
        }
        else if(tensileStressCurveFlag == 2)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM),SCALAR_OR_OBJECT(leakCoeffFlag,LSD_MAT_FLC,LSD_LCID),SCALAR_OR_OBJECT(areaCoeffFlag,LSD_MAT_FAC,LSD_LCID2),SCALAR_OR_OBJECT(effLeakAreaFlag,LSD_MAT_ELA,LSD_LCID3),LSD_MAT_LNRC,LSD_MAT34_FORM,LSDYNA_FVOPT,LSDYNA_TSRFAC);
        }
        else if(tensileStressCurveFlag == 1)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM),SCALAR_OR_OBJECT(leakCoeffFlag,LSD_MAT_FLC,LSD_LCID),SCALAR_OR_OBJECT(areaCoeffFlag,LSD_MAT_FAC,LSD_LCID2),SCALAR_OR_OBJECT(effLeakAreaFlag,LSD_MAT_ELA,LSD_LCID3),LSD_MAT_LNRC,LSD_MAT34_FORM,LSDYNA_FVOPT,SCALAR_OR_OBJECT(tensileStressCurveFlag,LSDYNA_TSRFAC,LSD_LCID4));
        }
        else 
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM),SCALAR_OR_OBJECT(leakCoeffFlag,LSD_MAT_FLC,LSD_LCID),SCALAR_OR_OBJECT(areaCoeffFlag,LSD_MAT_FAC,LSD_LCID2),SCALAR_OR_OBJECT(effLeakAreaFlag,LSD_MAT_ELA,LSD_LCID3),LSD_MAT_LNRC,LSD_MAT34_FORM,LSDYNA_FVOPT,LSD_LCID5);
        }
    }

    COMMENT("$                                     A1        A2        A3        X0        X1");
    if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3,LSD_X0,LSD_X1);
    }
    else
    {
        CARD("%10s%10s%10s%10s%10s%10s%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_X0,LSD_X1);
    }

    COMMENT("$       V1        V2        V3        D1        D2        D3      BETA    ISREFG");
    if(axisOptFlag == 1)
    {
        CARD("%10s%10s%10s%10s%10s%10s%10lg%10d",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_BETA,CELL_COND(if(LSD_MAT34_FORM == 12.0) LSD_MATL_ISREFG;));
    }
    else if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg%10s%10d",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3,_BLANK_,CELL_COND(if(LSD_MAT34_FORM == 12.0) LSD_MATL_ISREFG;));
    }
    else if(axisOptFlag == 3)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg%10d",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,LSD_BETA,CELL_COND(if(LSD_MAT34_FORM == 12.0) LSD_MATL_ISREFG;));
    }
    else
    {
        CARD("%10s%10s%10s%10s%10s%10s%10s%10d",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,CELL_COND(if(LSD_MAT34_FORM == 12.0) LSD_MATL_ISREFG;));
    }

    if(LSD_MAT34_FORM == 4.0 || LSD_MAT34_FORM == 14.0)
    {
        COMMENT("$      LCA       LCB      LCAB      LCUA      LCUB     LCUAB        RL");
        CARD("%10d%10d%10d%10d%10d%10d%10lg",LCA,LCB,LCAB,FLAGGED_OBJECT(LCUA,negLCUAFlag),FLAGGED_OBJECT(LCUB,negLCUBFlag),FLAGGED_OBJECT(LCUAB,negLCUABFlag),CELL_COND(if(LSD_MAT34_FORM == 14.0) LSD_MATL34_RL;));
    }
    if(LSD_MAT34_FORM == -14.0)
    {
        COMMENT("$      LCA       LCB");
        CARD("%10d%10d",LCA,LCB);

        COMMENT("$     LCAA      LCBB         H        DT               ECOAT     SCOAT     TCOAT");
        CARD("%10d%10d%10lg%10lg%10s%10lg%10lg%10lg",LSD_MATL34_LCAA,LSD_MATL34_LCBB,LSD_MATL34_H,LSD_MATL34_DT,_BLANK_,LSD_MATL34_ECOAT,LSD_MATL34_SCOAT,LSD_MATL34_TCOAT);
    }
}
