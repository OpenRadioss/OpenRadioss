//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 016
// 


 ATTRIBUTES(COMMON) 
 
 {
  
  // Initial and reference densities
  KEYWORD_STR                     = VALUE(STRING, "Solver Keyword");
  LSD_TitleOpt                    = VALUE(INT, "Title");
  CommentEnumField                = VALUE(INT, "User Comments");
  Num_Comments                    = SIZE("No. of comment lines");
  Comments                        = ARRAY[Num_Comments](STRING, "Entity Comments");
  Rho                             = VALUE(FLOAT, "Rho");  
  Nu                              = VALUE(FLOAT, "PR");
  G                               = VALUE(FLOAT, "G");
  LSD_MAT72_SIGF                  = VALUE(FLOAT, "SIGF"); 
  LSD_MAT72_AO                    = VALUE(FLOAT, "AO");
  LSD_MAT72_A1                    = VALUE(FLOAT, "A1");
  LSD_MAT72_A2                    = VALUE(FLOAT, "A2");
  LSD_MAT72_A2F                   = VALUE(FLOAT, "A0F");
  LSD_MAT72_A1F                   = VALUE(FLOAT, "A1F");
  LSD_MAT72_B1                    = VALUE(FLOAT, "B1");
  LSD_MAT72_PER                   = VALUE(FLOAT, "PER");
  LSD_MAT72_ER                    = VALUE(FLOAT, "ER");
  LSD_MAT72_PRR                   = VALUE(FLOAT, "PRR");
  LSDYNA_SIGY                     = VALUE(FLOAT, "SIGY");
  LSDYNA_ETAN                     = VALUE(FLOAT, "ETAN");
  LSD_LCID                        = VALUE(FUNCT, "LCP");
  LSD_LCID2                       = VALUE(FUNCT, "LCR");
  LSD_MAT16_X1                    = VALUE(FLOAT, "X1");
  LSD_MAT16_X2                    = VALUE(FLOAT, "X2");
  LSD_MAT16_X3                    = VALUE(FLOAT, "X3");
  LSD_MAT16_X4                    = VALUE(FLOAT, "X4");
  LSD_MAT16_X5                    = VALUE(FLOAT, "X5");
  LSD_MAT16_X6                    = VALUE(FLOAT, "X6");
  LSD_MAT16_X7                    = VALUE(FLOAT, "X7");
  LSD_MAT16_X8                    = VALUE(FLOAT, "X8");
  LSD_MAT16_X9                    = VALUE(FLOAT, "X9");
  LSD_MAT16_X10                   = VALUE(FLOAT, "X10");
  LSD_MAT16_X11                   = VALUE(FLOAT, "X11");
  LSD_MAT16_X12                   = VALUE(FLOAT, "X12");
  LSD_MAT16_X13                   = VALUE(FLOAT, "X13");
  LSD_MAT16_X14                   = VALUE(FLOAT, "X14");
  LSD_MAT16_X15                   = VALUE(FLOAT, "X15");
  LSD_MAT16_X16                   = VALUE(FLOAT, "X16");
  LSD_MAT16_YS1                   = VALUE(FLOAT, "YS1");
  LSD_MAT16_YS2                   = VALUE(FLOAT, "YS2");
  LSD_MAT16_YS3                   = VALUE(FLOAT, "YS3");
  LSD_MAT16_YS4                   = VALUE(FLOAT, "YS4");
  LSD_MAT16_YS5                   = VALUE(FLOAT, "YS5");
  LSD_MAT16_YS6                   = VALUE(FLOAT, "YS6");
  LSD_MAT16_YS7                   = VALUE(FLOAT, "YS7");
  LSD_MAT16_YS8                   = VALUE(FLOAT, "YS8");
  LSD_MAT16_YS9                   = VALUE(FLOAT, "YS9");
  LSD_MAT16_YS10                  = VALUE(FLOAT, "YS10");
  LSD_MAT16_YS11                  = VALUE(FLOAT, "YS11");
  LSD_MAT16_YS12                  = VALUE(FLOAT, "YS12");
  LSD_MAT16_YS13                  = VALUE(FLOAT, "YS13");
  LSD_MAT16_YS14                  = VALUE(FLOAT, "YS14");
  LSD_MAT16_YS15                  = VALUE(FLOAT, "YS15");
  LSD_MAT16_YS16                  = VALUE(FLOAT, "YS16");
                                                                
}

SKEYWORDS_IDENTIFIER(COMMON)

{

  KEYWORD_STR                   = 9000;
  CommentEnumField              = 3220;
  Num_Comments                  = 3101;
  LSD_TitleOpt                  = 90;
  Comments                      = 3100;
  Rho                           = 118;
  Nu                            = 120;
  G                             = 121;
  LSD_MAT72_SIGF                = 2687;
  LSD_MAT72_AO                  = 2688;
  LSD_MAT72_A1                  = 2689;
  LSD_MAT72_A2                  = 2690;
  LSD_MAT72_A2F                 = 2695;
  LSD_MAT72_A1F                 = 2694;   
  LSD_MAT72_B1                  = 2696;
  LSD_MAT72_PER                 = 2699;
  LSD_MAT72_ER                  = 2700;
  LSD_MAT72_PRR                 = 2701;
  LSDYNA_SIGY                   = 152;
  LSDYNA_ETAN                   = 153;
  LSD_LCID                      = 45;
  LSD_LCID2                     = 168;
  LSD_MAT16_X1                  = 5392;
  LSD_MAT16_X2                  = 5393;
  LSD_MAT16_X3                  = 5394;
  LSD_MAT16_X4                  = 5395;
  LSD_MAT16_X5                  = 5396;
  LSD_MAT16_X6                  = 5397;
  LSD_MAT16_X7                  = 5398;
  LSD_MAT16_X8                  = 5399;
  LSD_MAT16_X9                  = 5400;
  LSD_MAT16_X10                 = 5401;
  LSD_MAT16_X11                 = 5402;
  LSD_MAT16_X12                 = 5403;
  LSD_MAT16_X13                 = 5404;
  LSD_MAT16_X14                 = 5405;
  LSD_MAT16_X15                 = 5406;
  LSD_MAT16_X16                 = 5407;
  LSD_MAT16_YS1                 = 5408;
  LSD_MAT16_YS2                 = 5409;
  LSD_MAT16_YS3                 = 5410;
  LSD_MAT16_YS4                 = 5411;
  LSD_MAT16_YS5                 = 5412;
  LSD_MAT16_YS6                 = 5413;
  LSD_MAT16_YS7                 = 5414;
  LSD_MAT16_YS8                 = 5415;
  LSD_MAT16_YS9                 = 5416;
  LSD_MAT16_YS10                = 5417;
  LSD_MAT16_YS11                = 5418;
  LSD_MAT16_YS12                = 5419;
  LSD_MAT16_YS13                = 5420;
  LSD_MAT16_YS14                = 5421;
  LSD_MAT16_YS15                = 5422;
  LSD_MAT16_YS16                = 5423;

}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  SHEAR_MODULUS=SCALAR(G);
  POISSON_RATIO=SCALAR(Nu);
  TENSILE_CUTOFF=SCALAR(LSD_MAT72_SIGF);
  COHESION=SCALAR(LSD_MAT72_AO);
  PRESSURE_HARDENING_COEFFICIENT=SCALAR(LSD_MAT72_A1);
  PRESSURE_HARDENING_COEFFICIENT=SCALAR(LSD_MAT72_A2);
  COHESION_FOR_FAILED_MATERIAL=SCALAR(LSD_MAT72_A2F);
  PRESSURE_HARDENING_COEFFICIENT=SCALAR(LSD_MAT72_A1F);
  DAMAGE_SCALING_FACTOR=SCALAR(LSD_MAT72_B1);
  PERCENT_REINFORCEMENT=SCALAR(LSD_MAT72_PER);
  ELASTIC_MODULUS=SCALAR(LSD_MAT72_ER);
  POISSON_RATIO=SCALAR(LSD_MAT72_PRR);
  INITIAL_YIELD_STRESS=SCALAR(LSDYNA_SIGY);
  TANGENT_MODULUS=SCALAR(LSDYNA_ETAN);
  YOUNG_MODULUS=EVAL(2.*(1.+POISSON_RATIO)*SHEAR_MODULUS) ;
 public:
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  BULK_MODULUS      = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*SHEAR_MODULUS/3+BULK_MODULUS)/MASS_DENSITY)^0.5);
}

GUI(COMMON) 

{

    ASSIGN(KEYWORD_STR, "*MAT_PSEUDO_TENSOR");
    RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == TRUE)
    {
          ASSIGN(KEYWORD_STR, "_TITLE");
    } 
 mandatory:
    SCALAR(Rho)                         { DIMENSION="density";}
 optional:
    SCALAR(G)                           {DIMENSION="pressure";}
    SCALAR(Nu)                          { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_MAT72_SIGF)              {DIMENSION="pressure";}
    SCALAR(LSD_MAT72_AO)                {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT72_A1)                {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT72_A2)                {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT72_A2F)               {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT72_A1F)               {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT72_B1)                {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT72_PER)               {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT72_ER)                {DIMENSION="pressure";}
    SCALAR(LSD_MAT72_PRR)               {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_SIGY)                 {DIMENSION="pressure";}
    SCALAR(LSDYNA_ETAN)                 {DIMENSION="pressure";}
    FUNCTION(LSD_LCID)
    {
      X_TITLE = "Strain rate material"; X_DIMENSION = "strain_rate";
      Y_TITLE = "Factor on yield material"; Y_DIMENSION = "DIMENSIONLESS";
    }

    FUNCTION(LSD_LCID2)
    {
      X_TITLE = "Strain rate reinforcement"; X_DIMENSION = "strain_rate";
      Y_TITLE = "Factor on yield reinforcement"; Y_DIMENSION = "DIMENSIONLESS";
    }
    SCALAR(LSD_MAT16_X1)                { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_X2)                { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_X3)                { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_X4)                { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_X5)                { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_X6)                { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_X7)                { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_X8)                { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_X9)                { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_X10)               { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_X11)               { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_X12)               { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_X13)               { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_X14)               { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_X15)               { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_X16)               { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_YS1)               { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_YS2)               { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_YS3)               { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_YS4)               { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_YS5)               { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_YS6)               { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_YS7)               { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_YS8)               { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_YS9)               { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_YS10)              { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_YS11)              { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_YS12)              { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_YS13)              { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_YS14)              { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_YS15)              { DIMENSION="pressure";}
    SCALAR(LSD_MAT16_YS16)              { DIMENSION="pressure";}
/*
 graphical SUPPORT("Part(s) to which material is applied") {
OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D);
  ADD(COMPONENT,"Parts");
}
*/
}

// File format
FORMAT(Keyword971) 
{   
    //
    COMMENT("$      MID       RHO         G        PR");
    CARD("%10d%10lg%10lg%10lg",_ID_,Rho,G,Nu);
    //
    COMMENT("$     SIGF        A0        A1        A2       A0F       A1F        B1       PER");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT72_SIGF,LSD_MAT72_AO,LSD_MAT72_A1,LSD_MAT72_A2,LSD_MAT72_A2F,LSD_MAT72_A1F,LSD_MAT72_B1,LSD_MAT72_PER);
    //
    COMMENT("$       ER       PRR      SIGY      ETAN       LCP       LCR");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT72_ER,LSD_MAT72_PRR,LSDYNA_SIGY,LSDYNA_ETAN,LSD_LCID,LSD_LCID2);
    //
    COMMENT("$       X1        X2        X3        X4        X5        X6        X7        X8");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT16_X1,LSD_MAT16_X2,LSD_MAT16_X3,LSD_MAT16_X4,LSD_MAT16_X5,LSD_MAT16_X6,LSD_MAT16_X7,LSD_MAT16_X8);
    //
    COMMENT("$       X9       X10       X11       X12       X13       X14       X15       X16");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT16_X9,LSD_MAT16_X10,LSD_MAT16_X11,LSD_MAT16_X12,LSD_MAT16_X13,LSD_MAT16_X14,LSD_MAT16_X15,LSD_MAT16_X16);
    //
    COMMENT("$      YS1       YS2       YS3       YS4       YS5       YS6       YS7       YS8");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT16_YS1,LSD_MAT16_YS2,LSD_MAT16_YS3,LSD_MAT16_YS4,LSD_MAT16_YS5,LSD_MAT16_YS6,LSD_MAT16_YS7,LSD_MAT16_YS8);
    //
    COMMENT("$      YS9      YS10      YS11      YS12      YS13      YS14      YS15      YS16");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT16_YS9,LSD_MAT16_YS10,LSD_MAT16_YS11,LSD_MAT16_YS12,LSD_MAT16_YS13,LSD_MAT16_YS14,LSD_MAT16_YS15,LSD_MAT16_YS16);
    //
}