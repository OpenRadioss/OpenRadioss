//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 003 (PLASTIC_KINEMATIC) Setup File
// 

ATTRIBUTES(COMMON)
{
    // Card1
  KEYWORD_STR    = VALUE(STRING, "Solver Keyword");
  CommentEnumField = VALUE(INT, "User Comments");
  Num_Comments     = SIZE("No. of comment lines");
  Comments         = ARRAY[Num_Comments](STRING, "Entity Comments");
  LSD_TitleOpt     = VALUE(INT, "Title");

    Rho                 = VALUE(FLOAT,"Initial density"); 
    E                   = VALUE(FLOAT, "Young modulus");
    Nu                  = VALUE(FLOAT, "Poisson ratio");
    LSDYNA_SIGY         = VALUE(FLOAT, "Yield stress");
    LSDYNA_ETAN         = VALUE(FLOAT, "Tangent modulus");
    LSDYNA_BETA         = VALUE(FLOAT, "Hardening parameter");
    // Card2  
    LSDYNA_SRC          = VALUE(FLOAT, "Strain rate parameter C for Cowper Symonds strain rate model");
    LSDYNA_SRP          = VALUE(FLOAT, " Strain rate parameter P for Cowper Symonds strain rate model ");
    LSDYNA_FS           = VALUE(FLOAT, "Failure strain for eroding elements");
    LSD_VP3             = VALUE(INT, "Formulation for rate effects");

    IO_FLAG             = VALUE(INT, "IO");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR     = 9000;
    CommentEnumField= 3220;
    Num_Comments    = 3101;
    Comments        = 3100;
    LSD_TitleOpt    = 90;
    Rho             = 118;
  E     = 119;   
    Nu              = 120;
    LSDYNA_SIGY     = 152;
    LSDYNA_ETAN     = 153;
    LSDYNA_BETA     = 148;
  
    LSDYNA_SRC      = 155;
    LSDYNA_SRP      = 156;
    LSDYNA_FS       = 5;
    LSD_VP3         = 2854;
    IO_FLAG         = -1;
}

DRAWABLES(COMMON) {
public:
    MASS_DENSITY= SCALAR(Rho);
    YOUNG_MODULUS= SCALAR(E);
    POISSON_RATIO= SCALAR(Nu);
    YIELD_STRESS = SCALAR(LSDYNA_SIGY);
    TANGENT_MODULUS= SCALAR(LSDYNA_ETAN);
    HARDENING_PARAMETER= SCALAR(LSDYNA_BETA);
    STRAINRATE_PARAMETER_C= SCALAR(LSDYNA_SRC);
    STRAINRATE_PARAMETER_P= SCALAR(LSDYNA_SRP);
    FAILURE_STRAIN= SCALAR(LSDYNA_FS);
    FORMULATION_RATE_EFFECTS= SCALAR(LSD_VP3);
public:
    //SOUND_SPEED is speed for ISDO = 0 and 1
    SOUND_SPEED        = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
    SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON) {

    ASSIGN(KEYWORD_STR, "*MAT_PLASTIC_KINEMATIC");

    RADIO(CommentEnumField)
 {
     ENUM_VALUE_FLAG=TRUE;
     ADD(1, "Hide in Menu/Export");
     ADD(2, "Show in Menu/Export");
     ADD(3, "Do not export");
 }
 
 if(CommentEnumField == 2)
 {  
    SIZE(Num_Comments);
    ARRAY(Num_Comments,"")
    {
       SCALAR(Comments);
    }
 }
 
 FLAG(LSD_TitleOpt);
  if(LSD_TitleOpt == TRUE)
    {
      ASSIGN(KEYWORD_STR, "_TITLE");
   } 
   
mandatory:
    SCALAR(Rho)      { DIMENSION="density";   }
    SCALAR(E)          { DIMENSION="pressure";       }
    SCALAR(Nu)         { DIMENSION="DIMENSIONLESS";  }
    SCALAR(LSDYNA_SIGY)       { DIMENSION="pressure";       }
optional:
    SCALAR(LSDYNA_ETAN)       { DIMENSION="pressure";       }
    SCALAR(LSDYNA_BETA)       { DIMENSION="DIMENSIONLESS";  }
    SCALAR(LSDYNA_SRC)        { DIMENSION="strain_rate";  }
    SCALAR(LSDYNA_SRP)        { DIMENSION="DIMENSIONLESS";  }
    SCALAR(LSDYNA_FS)         { DIMENSION="DIMENSIONLESS";  }
    RADIO(LSD_VP3)         
  {
    ADD(0, "0: Scale yield stress (default)");
    ADD(1, "1: Viscoplastic formulation");
  }
    /*
  graphical SUPPORT("Part(s) to which material is applied") {
    OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D,/COMPONENT/BEAM,/COMPONENT/SPRING,/COMPONENT/TRUSS,/COMPONENT/RIVET,/COMPONENT/SHELL,/COMPONENT/PENTA6,/COMPONENT/SHEL16,/COMPONENT/TSHELL);
    ADD(COMPONENT,"Parts");
  }
    */
}
// File format
FORMAT(Keyword971) {

  COMMENT("$      MID       RHO         E        PR      SIGY      ETAN      BETA"); 
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,Nu,LSDYNA_SIGY,LSDYNA_ETAN,LSDYNA_BETA);
  COMMENT("$      SRC       SRP        FS        VP");
    CARD("%10lg%10lg%10lg%10d",LSDYNA_SRC,LSDYNA_SRP,LSDYNA_FS,LSD_VP3);
}

