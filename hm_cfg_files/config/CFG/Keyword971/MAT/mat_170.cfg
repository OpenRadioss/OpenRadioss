//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 170
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    LSDYNA_A1                               = VALUE(FLOAT,  "X coord. of Vector A");
    LSDYNA_A2                               = VALUE(FLOAT,  "Y coord. of Vector A");
    LSDYNA_A3                               = VALUE(FLOAT,  "Z coord. of Vector A");
    LSDYNA_AOPT                             = VALUE(FLOAT,  "Material axes option");
    LSDYNA_BETA                             = VALUE(FLOAT,  "Material angle");
    LSDYNA_D1                               = VALUE(FLOAT,  "X coord. of Vector D");
    LSDYNA_D2                               = VALUE(FLOAT,  "Y coord. of Vector D");
    LSDYNA_D3                               = VALUE(FLOAT,  "Z coord. of Vector D");
    LSDYNA_V1                               = VALUE(FLOAT,  "X coord. of Vector V");
    LSDYNA_V2                               = VALUE(FLOAT,  "Y coord. of Vector V");
    LSDYNA_V3                               = VALUE(FLOAT,  "Z coord. of Vector V");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    Mat170_E11B                             = VALUE(FLOAT,  "for bending behavior");
    Mat170_E11P                             = VALUE(FLOAT,  "for in plane behavior");
    Mat170_E22B                             = VALUE(FLOAT,  "for bending behavior");
    Mat170_E22P                             = VALUE(FLOAT,  "for in plane behavior");
    Mat170_G12B                             = VALUE(FLOAT,  "for bending behavior");
    Mat170_G12P                             = VALUE(FLOAT,  "for in plane behavior");
    Mat170_G23P                             = VALUE(FLOAT,  "for in plane behavior");
    Mat170_G31P                             = VALUE(FLOAT,  "for in plane behavior");
    Mat170_LM11                             = VALUE(FUNCT,  "Yield curve ID for the moment");
    Mat170_LM12                             = VALUE(FUNCT,  "Yield curve ID for the moment");
    Mat170_LM22                             = VALUE(FUNCT,  "Yield curve ID for the moment");
    Mat170_LN11                             = VALUE(FUNCT,  "Yield curve ID for the in-plane force resultant");
    Mat170_LN12                             = VALUE(FUNCT,  "Yield curve ID for the in-plane force resultant");
    Mat170_LN22                             = VALUE(FUNCT,  "Yield curve ID for the in-plane force resultant");
    Mat170_LQ1                              = VALUE(FUNCT,  "Yield curve ID for the transverse shear resultant");
    Mat170_LQ2                              = VALUE(FUNCT,  "Yield curve ID for the transverse shear resultant");
    Mat170_V12B                             = VALUE(FLOAT,  "for bending behavior");
    Mat170_V12P                             = VALUE(FLOAT,  "for in plane behavior");
    Mat170_V21B                             = VALUE(FLOAT,  "for bending behavior");
    Mat170_V21P                             = VALUE(FLOAT,  "for in plane behavior");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    IO_FLAG                                 = VALUE(INT, "io flag");
    _HMCOMMENTSFLAG                         = VALUE(INT, "Write HM Comments");
    TITLE                                   = VALUE(STRING, "Title");
    EncTypeEnumField                        = VALUE(INT,  "Type");
    RegTypeEnumField                        = VALUE(INT,  "Type");
    //empty_string                       = VALUE(STRING, "Used as a local variable for free format case");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSDYNA_A1                               = 139;
    LSDYNA_A2                               = 140;
    LSDYNA_A3                               = 141;
    LSDYNA_AOPT                             = 135;
    LSDYNA_BETA                             = 148;
    LSDYNA_D1                               = 145;
    LSDYNA_D2                               = 146;
    LSDYNA_D3                               = 147;
    LSDYNA_V1                               = 142;
    LSDYNA_V2                               = 143;
    LSDYNA_V3                               = 144;
    LSD_TitleOpt                            = 90;
    Mat170_E11B                             = 229;
    Mat170_E11P                             = 218;
    Mat170_E22B                             = 230;
    Mat170_E22P                             = 219;
    Mat170_G12B                             = 239;
    Mat170_G12P                             = 226;
    Mat170_G23P                             = 227;
    Mat170_G31P                             = 228;
    Mat170_LM11                             = 245;
    Mat170_LM12                             = 247;
    Mat170_LM22                             = 246;
    Mat170_LN11                             = 240;
    Mat170_LN12                             = 242;
    Mat170_LN22                             = 241;
    Mat170_LQ1                              = 243;
    Mat170_LQ2                              = 244;
    Mat170_V12B                             = 231;
    Mat170_V12P                             = 220;
    Mat170_V21B                             = 238;
    Mat170_V21P                             = 225;
    Num_Comments                            = 3101;
    Rho                                     = 118;
    EncTypeEnumField                        = 5828;
    RegTypeEnumField                        = 5827;
    TITLE                                   = -1;
    IO_FLAG                                 = -1;
    //empty_string                       = -1;
}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  G12B_FOR_BENDING_BEHAVIOR=SCALAR(Mat170_G12B);
  MATERIAL_AXES_OPTION=SCALAR(LSDYNA_AOPT);
  MATERIAL_ANGLE=SCALAR(LSDYNA_BETA);
}

CHECK(COMMON){
}

DEFAULTS(COMMON)
{
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_RESULTANT_ANISOTROPIC");
     RADIO(CommentEnumField)
     {
         ////ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 optional:
     SCALAR(Rho)                                    {DIMENSION="density";}
     SCALAR(Mat170_E11P)                            {DIMENSION="pressure";}
     SCALAR(Mat170_E22P)                            {DIMENSION="pressure";}
     SCALAR(Mat170_V12P)                            {DIMENSION="DIMENSIONLESS";}
     SCALAR(Mat170_V21P)                            {DIMENSION="DIMENSIONLESS";}
     SCALAR(Mat170_G12P)                            {DIMENSION="pressure";}
     SCALAR(Mat170_G23P)                            {DIMENSION="pressure";}
     SCALAR(Mat170_G31P)                            {DIMENSION="pressure";}
     SCALAR(Mat170_E11B)                            {DIMENSION="pressure";}
     SCALAR(Mat170_E22B)                            {DIMENSION="pressure";}
     SCALAR(Mat170_V12B)                            {DIMENSION="DIMENSIONLESS";}
     SCALAR(Mat170_V21B)                            {DIMENSION="DIMENSIONLESS";}
     SCALAR(Mat170_G12B)                            {DIMENSION="pressure";}
     RADIO(LSDYNA_AOPT)
     {
        ADD(0.0, "0.0: Locally orthotropic: axis given by nodes 1,2, and 4");
        ADD(2.0, "2.0: Globally orthotropic: axis given by vectors");
        ADD(3.0, "3.0: Locally orthotropic: axis given by rotating the material axes by an angle BETA");
     }
     DATA(Mat170_LN11);
     DATA(Mat170_LN22);
     DATA(Mat170_LN12);
     DATA(Mat170_LQ1);
     DATA(Mat170_LQ2);
     DATA(Mat170_LM11);
     DATA(Mat170_LM22);
     DATA(Mat170_LM12);
     if(LSDYNA_AOPT == 2.0)
     {
         SCALAR(LSDYNA_A1)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSDYNA_A2)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSDYNA_A3)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSDYNA_D1)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSDYNA_D2)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSDYNA_D3)                          {DIMENSION="DIMENSIONLESS";}
     }
     if(LSDYNA_AOPT == 3.0)
     {
         SCALAR(LSDYNA_V1)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSDYNA_V2)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSDYNA_V3)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSDYNA_BETA)                        {DIMENSION="a";}
     }
/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/SHELL);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    COMMENT("$      MID       RHO");
    CARD("%10d%10lg",_ID_,Rho);
    //
    COMMENT("$     E11P      E22P      V12P      V21P      G12P      G23P      G31P");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",Mat170_E11P,Mat170_E22P,Mat170_V12P,Mat170_V21P,Mat170_G12P,Mat170_G23P,Mat170_G31P);
    //
    COMMENT("$     E11B      E22B      V12B      V21B      G12B      AOPT");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg",Mat170_E11B,Mat170_E22B,Mat170_V12B,Mat170_V21B,Mat170_G12B,LSDYNA_AOPT);
    //
    COMMENT("$     LN11      LN22      LN12       LQ1       LQ2      LM11      LM22      LM12");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10d",Mat170_LN11,Mat170_LN22,Mat170_LN12,Mat170_LQ1,Mat170_LQ2,Mat170_LM11,Mat170_LM22,Mat170_LM12);
    COMMENT("$                                     A1        A2        A3");
    if(LSDYNA_AOPT == 2)
    {
        //
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
        //
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$       V1        V2        V3        D1        D2        D3      BETA");
    if(LSDYNA_AOPT == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3);
    }
    else if(LSDYNA_AOPT == 3)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,LSDYNA_BETA);
    }
    else
    {
        BLANK;
    }

}
