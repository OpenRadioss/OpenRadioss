//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 097
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    LSDYNA_RKR                              = VALUE(FLOAT,  "Penalty stiffness scale factor for rotational constraints");
    LSDYNA_TKR                              = VALUE(FLOAT,  "Penalty stiffness scale factor for translational constraints");
    LSD_RR                                  = VALUE(INT,  "Rotational constraint code about the r-axis");
    LSD_RS                                  = VALUE(INT,  "Rotational constraint code about the s-axis");
    LSD_RT                                  = VALUE(INT,  "Rotational constraint code about the t-axis");
    LSD_TR                                  = VALUE(INT,  "Translational constraint code along the r-axis");
    LSD_TS                                  = VALUE(INT,  "Translational constraint code along the s-axis");
    LSD_TT                                  = VALUE(INT,  "Translational constraint code along the t-axis");
    LSD_TitleOpt                            = VALUE(INT,  "Title");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSDYNA_RKR                              = 268;
    LSDYNA_TKR                              = 265;
    LSD_RR                                  = 4747;
    LSD_RS                                  = 4748;
    LSD_RT                                  = 4759;
    LSD_TR                                  = 4745;
    LSD_TS                                  = 4281;
    LSD_TT                                  = 4746;
    LSD_TitleOpt                            = 90;
    Num_Comments                            = 3101;
    Rho                                     = 118;

}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  FACTOR_FOR_TRANSLATIONAL_CONSTRAINTS=SCALAR(LSDYNA_TKR);
  FACTOR_FOR_ROTATIONAL_CONSTRAINTS=SCALAR(LSDYNA_RKR);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_GENERAL_JOINT_DISCRETE_BEAM");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(Rho)                    {DIMENSION="density";}
 optional: 
     RADIO(LSD_TR)
     {
        ADD(0, "0: Free");
        ADD(1, "1: Constrained");
     }
     RADIO(LSD_TS)
     {
        ADD(0, "0: Free");
        ADD(1, "1: Constrained");
     }

     RADIO(LSD_TT)
     {
        ADD(0, "0: Free");
        ADD(1, "1: Constrained");
     }

     RADIO(LSD_RR)
     {
        ADD(0, "0: Free");
        ADD(1, "1: Constrained");
     }

     RADIO(LSD_RS)
     {
        ADD(0, "0: Free");
        ADD(1, "1: Constrained");
     }

     RADIO(LSD_RT)
     {
        ADD(0, "0: Free");
        ADD(1, "1: Constrained");
     }

     SCALAR(LSDYNA_TKR)             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_RKR)             {DIMENSION="DIMENSIONLESS";}
/*
      graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/BEAM,/COMPONENT/SPRING,/COMPONENT/TRUSS,/COMPONENT/RIVET);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID       RHO        TR        TS        TT        RR        RS        RT");
    CARD("%10d%10lg%10d%10d%10d%10d%10d%10d",_ID_,Rho,LSD_TR,LSD_TS,LSD_TT,LSD_RR,LSD_RS,LSD_RT);
    //
    COMMENT("$     RPST      RPSR");
    CARD("%10lg%10lg",LSDYNA_TKR,LSDYNA_RKR);
    //

}
