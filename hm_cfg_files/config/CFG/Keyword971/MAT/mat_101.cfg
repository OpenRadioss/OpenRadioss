//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 101
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    E                                       = VALUE(FLOAT,  "Young's Modulus");
    LSD_ALPHA                               = VALUE(FLOAT,  "Pressure sensitivity factor");
    LSD_EDOT0                               = VALUE(FLOAT,  "Reference strain rate");
    LSD_LCID                                = VALUE(FUNCT,  "Load curve ID or Table ID that defines the post yield material behavior");
    LSD_LCID2                               = VALUE(FUNCT,  "Load curve ID that defines the plastic failure strain as a function of strain rate.");
    LSD_LCID3                               = VALUE(FUNCT,  "Load curve ID that defines the Maximum principal failure stress as a function of strain rate.");
    LSD_LCID4                               = VALUE(FUNCT,  "Load curve ID that defines the Unloading moduli as a function of plastic strain.");
    LSD_RATESF                              = VALUE(FLOAT,  "Constant in plastic strain rate equation.");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    Nu                                      = VALUE(FLOAT,  "Poisson's Ratio");
    Rho                                     = VALUE(FLOAT,  "Mass density");
	IO_FLAG									= VALUE(INT,"");
	TITLE									= VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    E                                       = 119;
    LSD_ALPHA                               = 1651;
    LSD_EDOT0                               = 5280;
    LSD_LCID                                = 45;
    LSD_LCID2                               = 168;
    LSD_LCID3                               = 170;
    LSD_LCID4                               = 171;
    LSD_RATESF                              = 5279;
    LSD_TitleOpt                            = 90;
    Nu                                      = 120;
    Num_Comments                            = 3101;
    Rho                                     = 118;
	IO_FLAG									= -1;
	TITLE									= -1;
}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  YOUNG_MODULUS=SCALAR(E);
  POISSON_RATIO=SCALAR(Nu);
  CONSTANT_IN_PLASTIC_STRAIN_RATE_EQUATION=SCALAR(LSD_RATESF);
  REFERENCE_STRAIN_RATE=SCALAR(LSD_EDOT0);
  PRESSURE_SENSITIVITY_FACTOR=SCALAR(LSD_ALPHA);
 public:
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_GEPLASTIC_SRATE_2000a");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(Rho)                {DIMENSION="density";}
     SCALAR(E)                  {DIMENSION="pressure";}
 optional:
     SCALAR(Nu)                 {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_RATESF)         {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_EDOT0)          {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_ALPHA)          {DIMENSION="DIMENSIONLESS";}
     DATA(LSD_LCID);
     DATA(LSD_LCID2);
     DATA(LSD_LCID3);
     DATA(LSD_LCID4);
/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/SHELL);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
	ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);

    //
    COMMENT("$      MID       RHO         E        PR    RATESF     EDOT0     ALPHA");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,Nu,LSD_RATESF,LSD_EDOT0,LSD_ALPHA);
    //
    COMMENT("$     LCSS    LCFEPS    LCFSIG       LCE");
    CARD("%10lg%10lg%10lg%10lg",LSD_LCID,LSD_LCID2,LSD_LCID3,LSD_LCID4);
    //
}
