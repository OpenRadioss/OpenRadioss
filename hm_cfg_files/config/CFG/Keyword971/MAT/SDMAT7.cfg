//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law SDMAT7
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    LSD_MAT_BETA                            = VALUE(FLOAT,  "Decay parameter");
    LSD_MAT_COPT                            = VALUE(FLOAT,  "Time implementation option");
    LSD_MAT_FC                              = VALUE(FLOAT,  "Force/moment after cutoff time");
    LSD_MAT_K0                              = VALUE(FLOAT,  "short time stiffness");
    LSD_MAT_KI                              = VALUE(FLOAT,  "long time stiffness");
    LSD_MAT_TC                              = VALUE(FLOAT,  "Cut off time");
    LSD_TitleOpt                            = VALUE(INT,  "Title");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSD_MAT_BETA                            = 306;
    LSD_MAT_COPT                            = 1200;
    LSD_MAT_FC                              = 1199;
    LSD_MAT_K0                              = 1196;
    LSD_MAT_KI                              = 1197;
    LSD_MAT_TC                              = 1198;
    LSD_TitleOpt                            = 90;
    Num_Comments                            = 3101;

}

DEFAULTS(COMMON)
{

    LSD_MAT_TC    = 1.0E+20;

}

DRAWABLES(COMMON) {
public:
  SHORT_TIME_STIFFNESS=SCALAR(LSD_MAT_K0);
  LONG_TIME_STIFFNESS=SCALAR(LSD_MAT_KI);
  DECAY_PARAMETER=SCALAR(LSD_MAT_BETA);
  CUT_OFF_TIME=SCALAR(LSD_MAT_TC);
  FORCE_MOMENT_AFTER_CUTOFF_TIME=SCALAR(LSD_MAT_FC);
  TIME_IMPLEMENTATION_OPTION=SCALAR(LSD_MAT_COPT);
  ELASTIC_STIFFNESS = MAX(SHORT_TIME_STIFFNESS,LONG_TIME_STIFFNESS);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_SPRING_MAXWELL");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(LSD_MAT_K0)                 {DIMENSION="translation_stiffness";}
     SCALAR(LSD_MAT_KI)                 {DIMENSION="translation_stiffness";}
     SCALAR(LSD_MAT_BETA)               {DIMENSION="DIMENSIONLESS";}
 optional:
     SCALAR(LSD_MAT_TC)                 {DIMENSION="t";}
     SCALAR(LSD_MAT_FC)                 {DIMENSION="force";}
     SCALAR(LSD_MAT_COPT)               {DIMENSION="DIMENSIONLESS";}
/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/SPRING);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID        K0        K1      BETA        TC        FC      COPT");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,LSD_MAT_K0,LSD_MAT_KI,LSD_MAT_BETA,LSD_MAT_TC,LSD_MAT_FC,LSD_MAT_COPT);
    //
}
