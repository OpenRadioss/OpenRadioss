//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//Material law 193 (DRUCKER_PRAGER) Setup File
//


ATTRIBUTES(COMMON)
{
    KEYWORD_STR         = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt        = VALUE(INT, "Title");
    CommentEnumField    = VALUE(INT, "User Comments");
    Num_Comments        = SIZE("No. of comment lines");
    Comments            = ARRAY[Num_Comments](STRING, "Entity Comments");

    //Card1 of LS-Dyna manual
    Rho             = VALUE(FLOAT,"Mass density");
    LSD_GMOD        = VALUE(FLOAT,"Elastic shear modulus");
    PR              = VALUE(FLOAT,"Poisson ratio");
    LSD_RKF         = VALUE(FLOAT,"Failure surface shape parameter");
    LSD_MAT_PHI     = VALUE(FLOAT,"Angle of friction");
    LSD_CVAL        = VALUE(FLOAT,"Cohesion value");
    LSD_PSI         = VALUE(FLOAT,"Dilation angle");

    //Card2 of LS-Dyna manual
    LSD_STR_LIM     = VALUE(FLOAT,"Minimum shear strength");
  
    //Card3 of LS-Dyna manual
    LSD_GMODDP      = VALUE(FLOAT,"Depth at which shear modulus (GMOD) is correct");
    LSD_PHIDP       = VALUE(FLOAT,"Depth at which angle of friction (PHI) is correct");
    LSD_CVALDP      = VALUE(FLOAT,"Depth at which cohesion value (CVAL) is correct");
    LSD_PSIDP       = VALUE(FLOAT,"Depth at which dilation angle (PSI) is correct");
    LSD_GMODGR      = VALUE(FLOAT,"Gradient at which shear modulus (GMOD) increases with depth");
    LSD_PHIGR       = VALUE(FLOAT,"Gradient at which friction angle (PHI) increases with depth");
    LSD_CVALGR      = VALUE(FLOAT,"Gradient at which cohesion value (CVAL) increases with depth");
    LSD_PSIGR       = VALUE(FLOAT,"Gradient at which dilation angle (PSI) increases with depth");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR         = 9000;
    CommentEnumField    = 3220;
    Num_Comments        = 3101;
    LSD_TitleOpt        = 90;
    Comments            = 3100;
    Rho                 = 118;
    LSD_GMOD            = 812;
    PR                  = 120;
    LSD_RKF             = 11119;
    LSD_MAT_PHI         = 1123;
    LSD_CVAL            = 11120;
    LSD_PSI             = 11121;

    //Card2 of LS-Dyna manual
    LSD_STR_LIM         = 11122;
  
    //Card3 of LS-Dyna manual
    LSD_GMODDP          = 11123;
    LSD_PHIDP           = 11124;
    LSD_CVALDP          = 11125;
    LSD_PSIDP           = 11126;
    LSD_GMODGR          = 11127;
    LSD_PHIGR           = 11128;
    LSD_CVALGR          = 11129;
    LSD_PSIGR           = 11130;
}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  SHEAR_MODULUS=SCALAR(LSD_GMOD);
  POISSON_RATIO=SCALAR(PR);
  FAILURE_SURFACE_SHAPE_PARAMETER=SCALAR(LSD_RKF);
  ANGLE_OF_FRICTION=SCALAR(LSD_MAT_PHI);
  COHESION_VALUE=SCALAR(LSD_CVAL);
  DILATION_ANGLE=SCALAR(LSD_PSI);
  MINIMUM_SHEAR_STRENGTH=SCALAR(LSD_STR_LIM);
  DEPTH_AT_WHICH_SHEAR_MODULUS_GMOD_IS_CORRECT=SCALAR(LSD_GMODDP);
  DEPTH_AT_WHICH_ANGLE_OF_FRICTION_PHI_IS_CORRECT=SCALAR(LSD_PHIDP);
  DEPTH_AT_WHICH_COHESION_VALUE_CVAL_IS_CORRECT=SCALAR(LSD_CVALDP);
  DEPTH_AT_WHICH_DILATION_ANGLE_PSI_IS_CORRECT=SCALAR(LSD_PSIDP);
  GRADIENT_AT_WHICH_SHEAR_MODULUS_GMOD_INCREASES_WITH_DEPTH=SCALAR(LSD_GMODGR);
  GRADIENT_AT_WHICH_FRICTION_ANGLE_PHI_INCREASES_WITH_DEPTH=SCALAR(LSD_PHIGR);
  GRADIENT_AT_WHICH_COHESION_VALUE_CVAL_INCREASES_WITH_DEPTH=SCALAR(LSD_CVALGR);
  GRADIENT_AT_WHICH_DILATION_ANGLE_PSI_INCREASES_WITH_DEPTH=SCALAR(LSD_PSIGR);
  YOUNG_MODULUS= EVAL(2*(1+POISSON_RATIO)*SHEAR_MODULUS);
  BULK_MODULUS= EVAL(YOUNG_MODULUS/(3*(1-2.*POISSON_RATIO)));
 public:
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 public:
  SOUND_SPEED_SOLID = EVAL(((4*SHEAR_MODULUS/3+BULK_MODULUS)/MASS_DENSITY)^0.5);
}

GUI(COMMON){
  mandatory:
    SCALAR(Rho){DIMENSION="density";}
  optional:  
    SCALAR(LSD_GMOD){DIMENSION="pressure";}
    SCALAR(PR){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_RKF){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT_PHI){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_CVAL){DIMENSION="pressure";}
    SCALAR(LSD_PSI){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_STR_LIM){DIMENSION="pressure";}    
    SCALAR(LSD_GMODDP){DIMENSION="l";}
    SCALAR(LSD_PHIDP){DIMENSION="l";}
    SCALAR(LSD_CVALDP){DIMENSION="l";}
    SCALAR(LSD_PSIDP){DIMENSION="l";}
    SCALAR(LSD_GMODGR){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_PHIGR){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_CVALGR){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_PSIGR){DIMENSION="DIMENSIONLESS";}

  //
/* 
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/PART/BRICK,/PART/TETRA4,/PART/LINEAR_3D);
      ADD(PART,"Parts");
    }
*/
}

//File format
FORMAT(Keyword971)
{
    COMMENT("$      MID       RHO      GMOD       RNU       RKF       PHI      CVAL       PSI");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_GMOD,PR,LSD_RKF,LSD_MAT_PHI,LSD_CVAL,LSD_PSI);

    COMMENT("$  STR_LIM");
    CARD("%10lg",LSD_STR_LIM);

    COMMENT("$   GMODDP     PHIDP    CVALDP     PSIDP    GMODGR     PHIGR    CVALGR     PSIGR");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_GMODDP,LSD_PHIDP,LSD_CVALDP,LSD_PSIDP,LSD_GMODGR,LSD_PHIGR,LSD_CVALGR,LSD_PSIGR);
}
