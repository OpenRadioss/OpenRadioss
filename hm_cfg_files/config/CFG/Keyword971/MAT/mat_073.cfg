//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 073
// 


ATTRIBUTES(COMMON)
{
    // Initial and reference densities
    KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt                      = VALUE(INT, "Title");
    CommentEnumField                  = VALUE(INT, "User Comments");
    Num_Comments                      = SIZE("No. of comment lines");
    Comments                          = ARRAY[Num_Comments](STRING, "Entity Comments");
    Rho                               = VALUE(FLOAT, "Mass density");
    E                                 = VALUE(FLOAT, "Youngs modulus used in tension");
    LSD_LCID                          = VALUE(FUNCT, "Nominal stress VS strain");
    LSD_MAT73_TC                      = VALUE(FLOAT, "Tension cut-off stress");
    LSD_MAT73_HU                      = VALUE(FLOAT, "Hysteretic unloading factor between 0 and 1");
    LSD_MAT73_BETA                    = VALUE(FLOAT, "decay constant to model creep in unloading");
    LSD_LCIDOpt                       = VALUE(INT, "DAMP_Option");
    LSD_MAT73_DAMP                    = VALUE(FLOAT, "Viscous coefficient");
    LSD_LCID10                        = VALUE(FUNCT, "Damping constant VS maximum strain in compression");
    LSD_MAT73_SHAPE                   = VALUE(FLOAT, "Shape factor for unloading");
    LSD_MAT73_FAIL                    = VALUE(FLOAT, "Failure option after cutoff stress is reached");
    LSD_MAT73_BVFLAG                  = VALUE(FLOAT, "Bulk viscosity activation flag");
    LSD_MAT73_KCON                    = VALUE(FLOAT, "Stiffness coefficient for contact interface stiffness");
    LSD_LCID2                         = VALUE(FUNCT, "Load curve ID of relaxation curve.");
    LSD_MAT73_BSTART                  = VALUE(FLOAT, "Fit parameter");
    LSD_MAT73_TRAMP                   = VALUE(FLOAT, "Optional ramp time for loading");
    LSD_MAT73_NV                      = VALUE(INT, "Number of terms in fit");
    ArrayCount                        = SIZE("ArrayCount");
    LSD_MAT73_GI                      = ARRAY[ArrayCount](FLOAT, "Optional shear relaxation modulus");
    LSD_MAT73_BETAI                   = ARRAY[ArrayCount](FLOAT, "Optional decay constant");
    LSD_MAT73_REF                     = ARRAY[ArrayCount](FLOAT, "Use reference geometry to initialize the stress tensor");
    LOC_NU                       = VALUE(FLOAT, "Temp poisson ratio");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                   = 9000;
    CommentEnumField              = 3220;
    Num_Comments                  = 3101;
    LSD_TitleOpt                  = 90;
    Comments                      = 3100;
    Rho                           = 118;
    E                             = 119;
    LSD_LCID                      = 45;
    LSD_MAT73_TC                  = 2509;
    LSD_MAT73_HU                  = 2510;
    LSD_MAT73_BETA                = 2511;
    LSD_LCIDOpt                   = 5091;
    LSD_MAT73_DAMP                = 2512;
    LSD_LCID10                    = 1142;
    LSD_MAT73_SHAPE               = 2513;
    LSD_MAT73_FAIL                = 2514;
    LSD_MAT73_BVFLAG              = 2515;
    LSD_MAT73_KCON                = 2516;
    LSD_LCID2                     = 168;
    LSD_MAT73_BSTART              = 2518;
    LSD_MAT73_TRAMP               = 2519;
    LSD_MAT73_NV                  = 2520;
    ArrayCount                    = 2246;
    LSD_MAT73_GI                  = 2521;
    LSD_MAT73_BETAI               = 2522;
    LSD_MAT73_REF                 = 4361;
    LOC_NU                        = -1;
}

DEFAULTS(COMMON)
{
    LSD_MAT73_TC = 1E+20;
    LSD_MAT73_HU = 1.0;
    LSD_MAT73_DAMP = 0.05;
    LSD_MAT73_SHAPE = 1.0;
    LSD_MAT73_NV = 6;
    LOC_NU       = 0.0;
}

CHECK(COMMON)
{
    LSD_MAT73_DAMP >= 0;
}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  YOUNG_MODULUS=SCALAR(E);
  TENSION_CUT-OFF_STRESS=SCALAR(LSD_MAT73_TC);
  HYSTERETIC_UNLOADING_FACTOR=SCALAR(LSD_MAT73_HU);
  DECAY_CONSTANT=SCALAR(LSD_MAT73_BETA);
  VISCOUS_COEFFICIENT=SCALAR(LSD_MAT73_DAMP);
  SHAPE_FACTOR_FOR_UNLOADING=SCALAR(LSD_MAT73_SHAPE);
  FAILURE_OPTION=SCALAR(LSD_MAT73_FAIL);
  BULK_VISCOSITY_ACTIVATION_FLAG=SCALAR(LSD_MAT73_BVFLAG);
  STIFFNESS_COEFFICIENT=SCALAR(LSD_MAT73_KCON);
  FIT_PARAMETER=SCALAR(LSD_MAT73_BSTART);
  OPTIONAL_RAMP_TIME_FOR_LOADING=SCALAR(LSD_MAT73_TRAMP);
  POISSON_RATIO=SCALAR(LOC_NU);
 // DEFINE_DAMP=SCALAR(FLAG);
 //SOUND_SPEED is speed for ISDO = 0 and 1
      SOUND_SPEED        = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
      SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
private:
  G                 = EVAL(YOUNG_MODULUS/(2));
   C1                = EVAL(YOUNG_MODULUS/(3));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON) 
{
    ASSIGN(KEYWORD_STR, "*MAT_LOW_DENSITY_VISCOUS_FOAM");
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do not export");
    }
    if(CommentEnumField == 2)
    {  
    SIZE(Num_Comments);
    ARRAY(Num_Comments,"")
    {
        SCALAR(Comments);
    }
    }     
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == TRUE)
    {
        ASSIGN(KEYWORD_STR, "_TITLE");
    }
 mandatory:
     SCALAR(Rho)                  {DIMENSION="density";}
 optional:
     SCALAR(E)                    {DIMENSION="pressure";}
 mandatory:
    FUNCTION(LSD_LCID)
    {
      X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
      Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
    }
 optional:
     SCALAR(LSD_MAT73_TC)                   {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT73_HU)                   {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT73_BETA)                 {DIMENSION="DIMENSIONLESS";}
     FLAG(LSD_LCIDOpt);
     if(LSD_LCIDOpt == FALSE)
     {
        SCALAR(LSD_MAT73_DAMP)              {DIMENSION="DIMENSIONLESS";}
     }
     if(LSD_LCIDOpt == TRUE)
     {
        DATA(LSD_LCID10);
     }
     SCALAR(LSD_MAT73_SHAPE)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT73_FAIL)                 {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT73_BVFLAG)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT73_KCON)                 {DIMENSION="DIMENSIONLESS";}
     DATA(LSD_LCID2);
     SCALAR(LSD_MAT73_BSTART)               {DIMENSION="DIMENSIONLESS";}
 optional:
     SCALAR(LSD_MAT73_TRAMP)                {DIMENSION="t";}
     SCALAR(LSD_MAT73_NV)                   {DIMENSION="DIMENSIONLESS";}
     if(LSD_LCID2 == NONE)
     {
         SIZE_RADIO(ArrayCount)
         {
            ADD(0, "0");
            ADD(1, "1");
            ADD(2, "2");
            ADD(3, "3");
            ADD(4, "4");
            ADD(5, "5");
            ADD(6, "6");
         }
        ARRAY(ArrayCount,"")
        {
            SCALAR(LSD_MAT73_GI);
            SCALAR(LSD_MAT73_BETAI);
            SCALAR(LSD_MAT73_REF);
        }
    }
/*
     graphical SUPPORT("Part(s) to which material is applied") {
     OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D);
     ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID       RHO         E      LCID        TC        HU      BETA      DAMP");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,LSD_LCID,LSD_MAT73_TC,LSD_MAT73_HU,LSD_MAT73_BETA,SCALAR_OR_OBJECT(LSD_LCIDOpt,LSD_MAT73_DAMP,LSD_LCID10));

    COMMENT("$    SHAPE      FAIL    BVFLAG      KCON     LCID2    BSTART     TRAMP        NV");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",LSD_MAT73_SHAPE,LSD_MAT73_FAIL,LSD_MAT73_BVFLAG,LSD_MAT73_KCON,LSD_LCID2,LSD_MAT73_BSTART,LSD_MAT73_TRAMP,LSD_MAT73_NV);

    if(LSD_LCID2 == NONE)
    {
        COMMENT("$       GI     BETAI       REF");
        FREE_CARD_LIST(ArrayCount)
        {
            CARD("%10lg%10lg%10lg",LSD_MAT73_GI,LSD_MAT73_BETAI,LSD_MAT73_REF);
        }
    }
}
