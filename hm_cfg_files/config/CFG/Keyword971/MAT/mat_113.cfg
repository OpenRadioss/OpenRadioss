//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 113
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    Nu                                      = VALUE(FLOAT,  "Poissons ratio");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    E                                       = VALUE(FLOAT,  "Youngs modulus");
    LSDYNA_MAT_A                            = VALUE(FLOAT,  "Martensite rate equation parameter");
    LSDYNA_MAT_B                            = VALUE(FLOAT,  "Martensite rate equation parameter");
    LSDYNA_MAT_C                            = VALUE(FLOAT,  "Martensite rate equation parameter");
    LSDYNA_MAT_D                            = VALUE(FLOAT,  "Martensite rate equation parameter");
    LSDYNA_MAT_EPS0                         = VALUE(FLOAT,  "Hardening law parameter");
    LSDYNA_MAT_M                            = VALUE(FLOAT,  "Hardening law parameter");
    LSDYNA_MAT_N                            = VALUE(FLOAT,  "Hardening law parameter");
    LSDYNA_MAT_P                            = VALUE(FLOAT,  "Martensite rate equation parameter");
    LSDYNA_MAT_Q                            = VALUE(FLOAT,  "Martensite rate equation parameter");
    LSD_MAT_AHS                             = VALUE(FLOAT,  "Hardening law parameter");
    LSD_MAT_BHS                             = VALUE(FLOAT,  "Hardening law parameter");
    LSD_MAT_CP                              = VALUE(FLOAT,  "Adiabatic temperature calculation option");
    LSD_MAT_E0MART                          = VALUE(FLOAT,  "Martensite rate equation parameter");
    LSD_MAT_HMART                           = VALUE(FLOAT,  "Hardening law parameter");
    LSD_MAT_K1                              = VALUE(FLOAT,  "Hardening law parameter");
    LSD_MAT_K2                              = VALUE(FLOAT,  "Hardening law parameter");
    LSD_MAT_T0                              = VALUE(FLOAT,  "Initial temperature");
    LSD_MAT_TA0                             = VALUE(FLOAT,  "Reference temperature");
    LSD_MAT_VM0                             = VALUE(FLOAT,  "initial volume fraction of martensite");
    LSD_TREF                                = VALUE(FLOAT,  "Reference temperature for output of the yield stress");
    LSD_TitleOpt                            = VALUE(INT,  "Title");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    E                                       = 119;
    LSDYNA_MAT_A                            = 4911;
    LSDYNA_MAT_B                            = 4912;
    LSDYNA_MAT_C                            = 4913;
    LSDYNA_MAT_D                            = 4914;
    LSDYNA_MAT_EPS0                         = 4923;
    LSDYNA_MAT_M                            = 4921;
    LSDYNA_MAT_N                            = 4922;
    LSDYNA_MAT_P                            = 4915;
    LSDYNA_MAT_Q                            = 4916;
    LSD_MAT_AHS                             = 4919;
    LSD_MAT_BHS                             = 4920;
    LSD_MAT_CP                              = 318;
    LSD_MAT_E0MART                          = 4917;
    LSD_MAT_HMART                           = 4924;
    LSD_MAT_K1                              = 4925;
    LSD_MAT_K2                              = 4926;
    LSD_MAT_T0                              = 4909;
    LSD_MAT_TA0                             = 4910;
    LSD_MAT_VM0                             = 4918;
    LSD_TREF                                = 1643;
    LSD_TitleOpt                            = 90;
    Nu                                      = 120;
    Num_Comments                            = 3101;
    Rho                                     = 118;

}

DRAWABLES(COMMON) {
 public:
  MASS_DENSITY   = SCALAR(Rho);
  YOUNG_MODULUS     = SCALAR(E);
  POISSON_RATIO     = SCALAR(Nu);

 public:
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_TRIP");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(Rho)                    { DIMENSION="density";  } 
     SCALAR(E)                      { DIMENSION="pressure";      } 
 optional:    
     SCALAR(Nu)                     { DIMENSION="DIMENSIONLESS"; }
     SCALAR(LSD_MAT_CP)             {DIMENSION="thermal_massic_capacity";}
     SCALAR(LSD_MAT_T0)             {DIMENSION="k";}
 mandatory:
     SCALAR(LSD_TREF)               {DIMENSION="k";}
     SCALAR(LSD_MAT_TA0)            {DIMENSION="k";}
     SCALAR(LSDYNA_MAT_A)           { DIMENSION="DIMENSIONLESS"; }
     SCALAR(LSDYNA_MAT_B)           { DIMENSION="DIMENSIONLESS"; }
 optional:    
     SCALAR(LSDYNA_MAT_C)           { DIMENSION="DIMENSIONLESS"; }
     SCALAR(LSDYNA_MAT_D)           { DIMENSION="DIMENSIONLESS"; }
 mandatory:    
     SCALAR(LSDYNA_MAT_P)           { DIMENSION="DIMENSIONLESS"; }
 optional:    
     SCALAR(LSDYNA_MAT_Q)           { DIMENSION="DIMENSIONLESS"; }
     SCALAR(LSD_MAT_E0MART)         { DIMENSION="DIMENSIONLESS"; }
     SCALAR(LSD_MAT_VM0)            { DIMENSION="DIMENSIONLESS"; }
     SCALAR(LSD_MAT_AHS)            { DIMENSION="DIMENSIONLESS"; }
     SCALAR(LSD_MAT_BHS)            { DIMENSION="DIMENSIONLESS"; }
 mandatory:    
     SCALAR(LSDYNA_MAT_M)           { DIMENSION="DIMENSIONLESS"; }
     SCALAR(LSDYNA_MAT_N)           { DIMENSION="DIMENSIONLESS"; }
 optional:   
     SCALAR(LSDYNA_MAT_EPS0)        { DIMENSION="DIMENSIONLESS"; }
     SCALAR(LSD_MAT_HMART)          { DIMENSION="DIMENSIONLESS"; }
     SCALAR(LSD_MAT_K1)             { DIMENSION="DIMENSIONLESS"; }
     SCALAR(LSD_MAT_K2)             { DIMENSION="DIMENSIONLESS"; }
/*
  graphical SUPPORT("Part(s) to which material is applied") {
    OBJECTS=(/COMPONENT/SHELL);
    ADD(COMPONENT,"Parts");
  }
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID       RHO         E        PR        CP        T0      TREF       TA0");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,Nu,LSD_MAT_CP,LSD_MAT_T0,LSD_TREF,LSD_MAT_TA0);
    //
    COMMENT("$        A         B         C         D         P         Q    E0MART       VM0");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_MAT_A,LSDYNA_MAT_B,LSDYNA_MAT_C,LSDYNA_MAT_D,LSDYNA_MAT_P,LSDYNA_MAT_Q,LSD_MAT_E0MART,LSD_MAT_VM0);
    //
    COMMENT("$      AHS       BHS         M         N      EPS0     HMART        K1        K2");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_AHS,LSD_MAT_BHS,LSDYNA_MAT_M,LSDYNA_MAT_N,LSDYNA_MAT_EPS0,LSD_MAT_HMART,LSD_MAT_K1,LSD_MAT_K2);
    //

}
