//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 039
// 


 ATTRIBUTES(COMMON) 
 
 {
  
  // Initial and reference densities
  KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
  LSD_TitleOpt                      = VALUE(INT, "Title");
  CommentEnumField                  = VALUE(INT, "User Comments");
  Num_Comments                      = SIZE("No. of comment lines");
  Comments                          = ARRAY[Num_Comments](STRING, "Entity Comments");
  Rho                               = VALUE(FLOAT, "Mass density");  
  E                                 = VALUE(FLOAT, "Youngs modulus");
  Nu                                = VALUE(FLOAT, "Poissons ratio");
  LSDYNA_SIGY                       = VALUE(FLOAT, "Yield stress");
  LSDYNA_ETAN                       = VALUE(FLOAT, "Plastic hardening modulus");
  LSD_R                             = VALUE(FLOAT, "Anisotropic hardening parameter");
  LSD_LCID                          = VALUE(FUNCT, "effective stress versus effective plastic strain");
  LSD_LCID2                         = VALUE(FUNCT, "Load curve ID defining the Forming Limit Diagram");

}

SKEYWORDS_IDENTIFIER(COMMON)

{

  KEYWORD_STR                   = 9000;
  CommentEnumField              = 3220;
  Num_Comments                  = 3101;
  LSD_TitleOpt                  = 90;
  Comments                      = 3100;
  Rho                           = 118;
  E                             = 119;
  Nu                            = 120;
  LSDYNA_SIGY                   = 152;  
  LSDYNA_ETAN                   = 153;
  LSD_R                         = 1166;
  LSD_LCID                      = 45;
  LSD_LCID2                     = 168;
  
}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  YOUNG_MODULUS=SCALAR(E);
  POISSON_RATIO=SCALAR(Nu);
  YIELD_STRESS=SCALAR(LSDYNA_SIGY);
  PLASTIC_HARDENING_MODULUS=SCALAR(LSDYNA_ETAN);
  ANISOTROPIC_HARDENING_PARAMETER=SCALAR(LSD_R);
 public:
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON) 

{


     ASSIGN(KEYWORD_STR, "*MAT_FLD_TRANSVERSELY_ANISOTROPIC");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
       {
             ASSIGN(KEYWORD_STR, "_TITLE");
       } 
 mandatory:
     SCALAR(Rho)                        { DIMENSION="density";}
     SCALAR(E)                          {DIMENSION="pressure";}
 optional:
     SCALAR(Nu)                         {DIMENSION="DIMENSIONLESS";}
 mandatory:
     SCALAR(LSDYNA_SIGY)                {DIMENSION="pressure";}
 optional:
     SCALAR(LSDYNA_ETAN)                {DIMENSION="pressure";}
     SCALAR(LSD_R)                      {DIMENSION="DIMENSIONLESS";}
    FUNCTION(LSD_LCID)
    {
      X_TITLE = "Plastic strain"; X_DIMENSION = "DIMENSIONLESS";
      Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
    }
    FUNCTION(LSD_LCID2)
    {
      X_TITLE = "Minor strain"; X_DIMENSION = "DIMENSIONLESS";
      Y_TITLE = "Major strain"; Y_DIMENSION = "DIMENSIONLESS";
    }
/*
      graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/SHELL,/COMPONENT/BRICK,/COMPONENT/PENTA6,/COMPONENT/SHEL16,/COMPONENT/TSHELL);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
        //
        COMMENT("$      MID        RO         E        PR      SIGY      ETAN         R     HLCID");
        CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10d",_ID_,Rho,E,Nu,LSDYNA_SIGY,LSDYNA_ETAN,LSD_R,LSD_LCID);
        //
        COMMENT("$    LCFLD");
        CARD("%10d",LSD_LCID2);
        //

}