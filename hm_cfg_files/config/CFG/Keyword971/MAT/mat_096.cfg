//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 096
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    LSD_MAT96_PR                            = VALUE(FLOAT,  "Poissons ratio");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    E                                       = VALUE(FLOAT,  "Youngs modulus");
    LSD_MAT96_EH_RF                         = VALUE(FLOAT,  "Hardening modulus of reinforcement");
    LSD_MAT96_E_RF                          = VALUE(FLOAT,  "Youngs modulus of reinforcement");
    LSD_MAT96_FRA_RF                        = VALUE(FLOAT,  "Fraction of reinforcement in section");
    LSD_MAT96_FS_RF                         = VALUE(FLOAT,  "Failure strain (true) of reinforcement");
    LSD_MAT96_FTOUGH                        = VALUE(FLOAT,  "Fracture toughness");
    LSDYNA_SIGY                             = VALUE(FLOAT,  "Compressive yield stress");
    LSD_MAT96_SLIMIT                        = VALUE(FLOAT,  "Shear limit");
    LSD_MAT96_SRETEN                        = VALUE(FLOAT,  "Shear retention");
    LSD_MAT96_TLIMIT                        = VALUE(FLOAT,  "Tensile limit");
    LSD_MAT96_VISC                          = VALUE(FLOAT,  "Viscosity");
    LSD_MAT96_YS_RF                         = VALUE(FLOAT,  "Yield stress of reinforcement");
    LSD_TitleOpt                            = VALUE(INT,  "Title");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSDYNA_SIGY                             = 152;
    E                                       = 119;
    LSD_MAT96_EH_RF                         = 2598;
    LSD_MAT96_E_RF                          = 2596;
    LSD_MAT96_FRA_RF                        = 2595;
    LSD_MAT96_FS_RF                         = 2599;
    LSD_MAT96_FTOUGH                        = 2592;
    LSD_MAT96_PR                            = 2589;
    Rho                                     = 118;
    LSD_MAT96_SLIMIT                        = 2591;
    LSD_MAT96_SRETEN                        = 2593;
    LSD_MAT96_TLIMIT                        = 2590;
    LSD_MAT96_VISC                          = 2594;
    LSD_MAT96_YS_RF                         = 2597;
    LSD_TitleOpt                            = 90;
    Num_Comments                            = 3101;

}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  YOUNG_MODULUS=SCALAR(E);
  POISSON_RATIO=SCALAR(LSD_MAT96_PR);
  TENSILE_LIMIT=SCALAR(LSD_MAT96_TLIMIT);
  SHEAR_LIMIT=SCALAR(LSD_MAT96_SLIMIT);
  FRACTURE_TOUGHNESS=SCALAR(LSD_MAT96_FTOUGH);
  SHEAR_RETENTION=SCALAR(LSD_MAT96_SRETEN);
  VISCOSITY=SCALAR(LSD_MAT96_VISC);
  FRACTION_OF_REINFORCEMENT_IN_SECTION=SCALAR(LSD_MAT96_FRA_RF);
  YOUNG_MODULUS_OF_REINFORCEMENT=SCALAR(LSD_MAT96_E_RF);
  YIELD_STRESS_OF_REINFORCEMENT=SCALAR(LSD_MAT96_YS_RF);
  HARDENING_MODULUS_OF_REINFORCEMENT=SCALAR(LSD_MAT96_EH_RF);
  FAILURE_STRAIN_OF_REINFORCEMENT=SCALAR(LSD_MAT96_FS_RF);
  COMPRESSIVE_YIELD_STRESS=SCALAR(LSDYNA_SIGY);
 public:
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_BRITTLE_DAMAGE");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(Rho)                        {DIMENSION="density";}
 optional:
     SCALAR(E)                          {DIMENSION="pressure";}
     SCALAR(LSD_MAT96_PR)               {DIMENSION="DIMENSIONLESS";}
 mandatory:
     SCALAR(LSD_MAT96_TLIMIT)           {DIMENSION="pressure";}
     SCALAR(LSD_MAT96_SLIMIT)           {DIMENSION="pressure";}
 optional:
     SCALAR(LSD_MAT96_FTOUGH)           {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT96_SRETEN)           {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT96_VISC)             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT96_FRA_RF)           {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT96_E_RF)             {DIMENSION="pressure";}
     SCALAR(LSD_MAT96_YS_RF)            {DIMENSION="pressure";}
     SCALAR(LSD_MAT96_EH_RF)            {DIMENSION="pressure";}
     SCALAR(LSD_MAT96_FS_RF)            {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_SIGY)                {DIMENSION="pressure";}
/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID       RHO         E        PR    TLIMIT    SLIMIT    FTOUGH    SRETEN");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,LSD_MAT96_PR,LSD_MAT96_TLIMIT,LSD_MAT96_SLIMIT,LSD_MAT96_FTOUGH,LSD_MAT96_SRETEN);
    //
    COMMENT("$     VISC    FRA_RF      E_RF     YS_RF     EH_RF     FS_RF      SIGY");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT96_VISC,LSD_MAT96_FRA_RF,LSD_MAT96_E_RF,LSD_MAT96_YS_RF,LSD_MAT96_EH_RF,LSD_MAT96_FS_RF,LSDYNA_SIGY);
    //
}
