//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 130
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    LSDYNA_A1                               = VALUE(FLOAT, "Components of vector a");
    LSDYNA_A2                               = VALUE(FLOAT, "Components of vector a");
    LSDYNA_A3                               = VALUE(FLOAT, "Components of vector a");
    LSDYNA_BETA                             = VALUE(FLOAT,  "BETA");
    LSDYNA_D1                               = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_D2                               = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_D3                               = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_V1                               = VALUE(FLOAT,  "Components of vector v");
    LSDYNA_V2                               = VALUE(FLOAT,  "Components of vector v");
    LSDYNA_V3                               = VALUE(FLOAT,  "Components of vector v");
    LSD_MAT130_EP                           = VALUE(FLOAT,  "Plastic hardening modulus.");
    LSD_MAT130_YS                           = VALUE(FLOAT,  "Yield stress");
    LSD_NODE3                               = VALUE(NODE,  "Node1");
    LSD_NODE4                               = VALUE(NODE,  "Node2");
    LSD_NODE5                               = VALUE(NODE,  "Node1");
    LSD_NODE6                               = VALUE(NODE,  "Node2");
    LSD_NODE7                               = VALUE(NODE,  "Node1");
    LSD_NODE8                               = VALUE(NODE,  "Node2");
    LSD_SYSTEM                              = VALUE(SYSTEM,  "AOPT");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    Mat170_E11B                             = VALUE(FLOAT,  "E11B, for bending behavior");
    Mat170_E11P                             = VALUE(FLOAT,  "E11P, for in plane behavior");
    Mat170_E22B                             = VALUE(FLOAT,  "E22B, for bending behavior");
    Mat170_E22P                             = VALUE(FLOAT,  "E22P, for in plane behavior");
    Mat170_G12B                             = VALUE(FLOAT,  "G12B, for bending behavior");
    Mat170_G12P                             = VALUE(FLOAT,  "G12P, for in plane behavior");
    Mat170_G23P                             = VALUE(FLOAT,  "G23P, for in plane behavior");
    Mat170_G31P                             = VALUE(FLOAT,  "G31P, for in plane behavior");
    Mat170_V12B                             = VALUE(FLOAT,  "V12B, for bending behavior");
    Mat170_V12P                             = VALUE(FLOAT,  "V12P, for in plane behavior");
    Mat170_V21B                             = VALUE(FLOAT,  "V21B, for bending behavior");
    Mat170_V21P                             = VALUE(FLOAT,  "V21P, for in plane behavior");
    Rho                                     = VALUE(FLOAT,  "Rho");
    axisOptFlag                             = VALUE(INT,  "Anisotropy axis definition");
    AOPT_SKEW_FLAG                          = VALUE(INT,  "Flag for defining coordinate system ID number");
    LOC_AOPT                                = VALUE(FLOAT, "");
    IO_FLAG                                 = VALUE(INT, "io flag");
    //empty_string                       = VALUE(STRING, "Used as a local variable for free format case");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSDYNA_A1                               = 139;
    LSDYNA_A2                               = 140;
    LSDYNA_A3                               = 141;
    LSDYNA_BETA                             = 148;
    LSDYNA_D1                               = 145;
    LSDYNA_D2                               = 146;
    LSDYNA_D3                               = 147;
    LSDYNA_V1                               = 142;
    LSDYNA_V2                               = 143;
    LSDYNA_V3                               = 144;
    LSD_MAT130_EP                           = 6257;
    LSD_MAT130_YS                           = 6256;
    LSD_NODE3                               = 2802;
    LSD_NODE4                               = 2803;
    LSD_NODE5                               = 5078;
    LSD_NODE6                               = 5079;
    LSD_NODE7                               = 5080;
    LSD_NODE8                               = 5081;
    LSD_SYSTEM                              = 184;
    LSD_TitleOpt                            = 90;
    Mat170_E11B                             = 229;
    Mat170_E11P                             = 218;
    Mat170_E22B                             = 230;
    Mat170_E22P                             = 219;
    Mat170_G12B                             = 239;
    Mat170_G12P                             = 226;
    Mat170_G23P                             = 227;
    Mat170_G31P                             = 228;
    Mat170_V12B                             = 231;
    Mat170_V12P                             = 220;
    Mat170_V21B                             = 238;
    Mat170_V21P                             = 225;
    Num_Comments                            = 3101;
    Rho                                     = 118;
    axisOptFlag                             = 4946;
    AOPT_SKEW_FLAG                          = -1;
    LOC_AOPT                                = -1;
    IO_FLAG                                 = -1;
    //empty_string                       = -1;

}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  YIELD_STRESS=SCALAR(LSD_MAT130_YS);
  PLASTIC_HARDENING_MODULUS=SCALAR(LSD_MAT130_EP);
  E11P=SCALAR(Mat170_E11P);
  E22P=SCALAR(Mat170_E22P);
  V12P=SCALAR(Mat170_V12P);
  V21P=SCALAR(Mat170_V21P);
  G12P=SCALAR(Mat170_G12P);
  G23P=SCALAR(Mat170_G23P);
  G31P=SCALAR(Mat170_G31P);
  E11B=SCALAR(Mat170_E11B);
  E22B=SCALAR(Mat170_E22B);
  V12B=SCALAR(Mat170_V12B);
  V21B=SCALAR(Mat170_V21B);
  G12B=SCALAR(Mat170_G12B);
  MATERIAL_AXES_OPTION=SCALAR(axisOptFlag);
  MATERIAL_ANGLE=SCALAR(LSDYNA_BETA);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_SPECIAL_ORTHOTROPIC");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(Rho)                                {DIMENSION="density";}
 optional:
     SCALAR(LSD_MAT130_YS)                      {DIMENSION="pressure";}
     SCALAR(LSD_MAT130_EP)                      {DIMENSION="pressure";}
     SCALAR(Mat170_E11P)                        {DIMENSION="pressure";}
     SCALAR(Mat170_E22P)                        {DIMENSION="pressure";}
     SCALAR(Mat170_V12P)                        {DIMENSION="pressure";}
     SCALAR(Mat170_V21P)                        {DIMENSION="pressure";}
     SCALAR(Mat170_G12P)                        {DIMENSION="pressure";}
     SCALAR(Mat170_G23P)                        {DIMENSION="pressure";}
     SCALAR(Mat170_G31P)                        {DIMENSION="pressure";}
     SCALAR(Mat170_E11B)                        {DIMENSION="pressure";}
     SCALAR(Mat170_E22B)                        {DIMENSION="pressure";}
     SCALAR(Mat170_V12B)                        {DIMENSION="DIMENSIONLESS";}
     SCALAR(Mat170_V21B)                        {DIMENSION="DIMENSIONLESS";}
     SCALAR(Mat170_G12B)                        {DIMENSION="pressure";}
     RADIO(axisOptFlag)
     {
        ADD(1, "0: Locally orthotropic: axis given by nodes 1,2 and 4");
        ADD(2, "2: Globally orthotropic: axis given by vectors");
        ADD(3, "3: Locally orthotropic: axis given by rotating the material axes by an angle BETA");
        ADD(4, "Pick System");
     }
     if(axisOptFlag == 4)
     {
        DATA(LSD_SYSTEM);
     }
     if(axisOptFlag == 2)
     {
        DATA(LSD_NODE3);
        DATA(LSD_NODE4);
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],FALSE);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],FALSE);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],FALSE);
        DATA(LSD_NODE7);                
        DATA(LSD_NODE8);                
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],FALSE);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],FALSE);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],FALSE);
     }
     if(axisOptFlag == 3)
     {
        DATA(LSD_NODE5);
        DATA(LSD_NODE6);
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],FALSE);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],FALSE);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],FALSE);
     }     
     if(axisOptFlag == 3)
     {
        SCALAR(LSDYNA_BETA)             {DIMENSION="a";}
     }
/*
  mandatory:
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/SHELL);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{

    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, IMPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, EXPORT);

    if(LSD_NODE4 != NONE && LSD_NODE3 != NONE)
    {
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],EXPORT);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],EXPORT);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],EXPORT);
    }
    if(LSD_NODE8 != NONE && LSD_NODE7 != NONE)
    {
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],EXPORT);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],EXPORT);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],EXPORT);
    }
    if(LSD_NODE6 != NONE && LSD_NODE5 != NONE)
    {
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],EXPORT);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],EXPORT);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],EXPORT);
    }

    if(axisOptFlag == 1 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,0.0,EXPORT);
    }
    else if(axisOptFlag == 2 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,2.0,EXPORT);
    }
    else if(axisOptFlag == 3 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,3.0,EXPORT);
    }
    else if(axisOptFlag == 4 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,4.0,EXPORT);
    }

    //
    COMMENT("$      MID       RHO        YS        EP");
    CARD("%10d%10lg%10lg%10lg",_ID_,Rho,LSD_MAT130_YS,LSD_MAT130_EP);
    //
    COMMENT("$     E11P      E22P      V12P      V21P      G12P      G23P      G31P");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",Mat170_E11P,Mat170_E22P,Mat170_V12P,Mat170_V21P,Mat170_G12P,Mat170_G23P,Mat170_G31P);
    //
    COMMENT("$     E11B      E22B      V12B      V21B      G12B      AOPT");
    if(IO_FLAG == 2)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 4)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",Mat170_E11B,Mat170_E22B,Mat170_V12B,Mat170_V21B,Mat170_G12B,LOC_AOPT);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",Mat170_E11B,Mat170_E22B,Mat170_V12B,Mat170_V21B,Mat170_G12B,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM));
        }
    }

    CARD_PREREAD("%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LOC_AOPT);

    if(LOC_AOPT == 0.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,1,IMPORT);
    }
    else if(LOC_AOPT == 2.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,2,IMPORT);
    }
    else if(LOC_AOPT == 3.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,3,IMPORT);
    }
    else if(LOC_AOPT == 4.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,4,IMPORT);
    }

    if(IO_FLAG == 1)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 4)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",Mat170_E11B,Mat170_E22B,Mat170_V12B,Mat170_V21B,Mat170_G12B,LOC_AOPT);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",Mat170_E11B,Mat170_E22B,Mat170_V12B,Mat170_V21B,Mat170_G12B,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM));
            ASSIGN(axisOptFlag, 4, IMPORT);
        }
    }

    //
    COMMENT("$                                     A1        A2        A3");
    if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$       V1        V2        V3        D1        D2        D3      BETA");
    if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3);
    }
    else if(axisOptFlag == 3)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,LSDYNA_BETA);
    }
    else if(axisOptFlag == 1)
    {
        CARD("%10s%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSDYNA_BETA);
    }
    else
    {
        BLANK;
    }
    //

}
