//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 120B
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    E                                       = VALUE(FLOAT,  "Young’s modulus");
    LSDYNA_EPS1                             = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS2                             = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS3                             = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS4                             = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS5                             = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS6                             = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS7                             = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS8                             = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_ES1                              = VALUE(FLOAT,  "Corresponding yield stress values to EPS1 – EPS8.");
    LSDYNA_ES2                              = VALUE(FLOAT,  "Corresponding yield stress values to EPS1 – EPS8.");
    LSDYNA_ES3                              = VALUE(FLOAT,  "Corresponding yield stress values to EPS1 – EPS8.");
    LSDYNA_ES4                              = VALUE(FLOAT,  "Corresponding yield stress values to EPS1 – EPS8.");
    LSDYNA_ES5                              = VALUE(FLOAT,  "Corresponding yield stress values to EPS1 – EPS8.");
    LSDYNA_ES6                              = VALUE(FLOAT,  "Corresponding yield stress values to EPS1 – EPS8.");
    LSDYNA_ES7                              = VALUE(FLOAT,  "Corresponding yield stress values to EPS1 – EPS8.");
    LSDYNA_ES8                              = VALUE(FLOAT,  "Corresponding yield stress values to EPS1 – EPS8.");
    LSDYNA_ETAN                             = VALUE(FLOAT,  "Hardening modulus.");
    LSDYNA_N                                = VALUE(FLOAT,  "Exponent for Power law");
    LSDYNA_SIGY                             = VALUE(FLOAT,  "Yield stress");
    LSDYNA_SN                               = VALUE(FLOAT,  "Standard deviation of the normal distribution");
    LSD_BETA3                               = VALUE(FLOAT,  "Parameter in Lode cosine function");
    LSD_FO                                  = VALUE(FLOAT,  "Initial void volume fraction");
    LSD_KW                                  = VALUE(FLOAT,  "Parameter for void growth in shear-dominated states");
    LSD_LCID                                = VALUE(FUNCT,  "Load curve ID or Table ID");
    LSD_LCID2                               = VALUE(FUNCT,  "Load curve ID defining failure void volume fraction versus element length");
    LSD_LCID3                               = VALUE(FUNCT,  "Load curve ID defining initial void volume fraction versus element length");
    LSD_LCID4                               = VALUE(FUNCT,  "Load curve ID defining critical void volume fraction versus element length");
    LSD_LCID5                               = VALUE(FUNCT,  "Load curve ID defining void volume fraction of nucleating particles versus element length");
    LSD_M4                                  = VALUE(FLOAT,  "MParameter for generalization of Johnson-Cook damage evolution");
    LSD_MAT120B_OPT_CARD7                   = VALUE(INT,  "OptionalCard7");
    LSD_MAT120_ATYP                         = VALUE(FLOAT,  "Type of hardening");
    LSD_MAT120_DEXP                         = VALUE(FLOAT,  "Exponent value for damage history variable 16");
    LSD_MAT120_EN                           = VALUE(FLOAT,  "Mean nucleation strain");
    LSD_MAT120_FF1                          = VALUE(FLOAT,  "Johnson-Cook damage parameters");
    LSD_MAT120_FF2                          = VALUE(FLOAT,  "Johnson-Cook damage parameters");
    LSD_MAT120_FFO                          = VALUE(FLOAT,  "Failure void volume fraction");
    LSD_MAT120_FN                           = VALUE(FLOAT,  "Void volume fraction of nucleating particles");
    LSD_MAT120_LCDAM                        = VALUE(FUNCT,  "Load curve defining scaling factor versus element length. Scales the Johnson-Cook failure strain");
    LSD_MAT120_LCJC                         = VALUE(FUNCT,  "Load curve defining scaling factor for Johnson-Cook failure versus triaxiality");
    LSD_MAT120_VGTYP                        = VALUE(FLOAT,  "Type of void growth behavior");
    LSD_MAT72_L1                            = VALUE(FLOAT,  "Lower triaxiality factor defining failure evolution");
    LSD_MAT72_L2                            = VALUE(FLOAT,  "Lower triaxiality factor defining failure evolution");
    LSD_MAT72_L3                            = VALUE(FLOAT,  "Johnson-Cook damage parameters");
    LSD_MAT72_L4                            = VALUE(FLOAT,  "Johnson-Cook damage parameters");
    LSD_MAT_FC                              = VALUE(FLOAT,  "Critical void volume fraction where voids begin to aggregate");
    LSD_Q1                                  = VALUE(FLOAT,  "Gurson flow function parameter");
    LSD_Q2                                  = VALUE(FLOAT,  "Gurson flow function parameter");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    MATL123_NUMINT                          = VALUE(FLOAT,  "NUMINT");
    MATL123_PR                              = VALUE(FLOAT,  "Poisson’s ratio");
    Rho                                     = VALUE(FLOAT,  "Mass density");
	IO_FLAG									= VALUE(INT, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    E                                       = 119;
    LSDYNA_EPS1                             = 201;
    LSDYNA_EPS2                             = 202;
    LSDYNA_EPS3                             = 203;
    LSDYNA_EPS4                             = 204;
    LSDYNA_EPS5                             = 205;
    LSDYNA_EPS6                             = 206;
    LSDYNA_EPS7                             = 207;
    LSDYNA_EPS8                             = 208;
    LSDYNA_ES1                              = 209;
    LSDYNA_ES2                              = 210;
    LSDYNA_ES3                              = 211;
    LSDYNA_ES4                              = 212;
    LSDYNA_ES5                              = 213;
    LSDYNA_ES6                              = 214;
    LSDYNA_ES7                              = 215;
    LSDYNA_ES8                              = 216;
    LSDYNA_ETAN                             = 153;
    LSDYNA_N                                = 71;
    LSDYNA_SIGY                             = 152;
    LSDYNA_SN                               = 69;
    LSD_BETA3                               = 5803;
    LSD_FO                                  = 4717;
    LSD_KW                                  = 5802;
    LSD_LCID                                = 45;
    LSD_LCID2                               = 168;
    LSD_LCID3                               = 170;
    LSD_LCID4                               = 171;
    LSD_LCID5                               = 172;
    LSD_M4                                  = 5804;
    LSD_MAT120B_OPT_CARD7                   = 5801;
    LSD_MAT120_ATYP                         = 826;
    LSD_MAT120_DEXP                         = 6132;
    LSD_MAT120_EN                           = 824;
    LSD_MAT120_FF1                          = 828;
    LSD_MAT120_FF2                          = 829;
    LSD_MAT120_FFO                          = 827;
    LSD_MAT120_FN                           = 825;
    LSD_MAT120_LCDAM                        = 834;
    LSD_MAT120_LCJC                         = 6133;
    LSD_MAT120_VGTYP                        = 832;
    LSD_MAT72_L1                            = 2704;
    LSD_MAT72_L2                            = 2705;
    LSD_MAT72_L3                            = 2706;
    LSD_MAT72_L4                            = 2707;
    LSD_MAT_FC                              = 1199;
    LSD_Q1                                  = 2101;
    LSD_Q2                                  = 2102;
    LSD_TitleOpt                            = 90;
    MATL123_NUMINT                          = 4254;
    MATL123_PR                              = 4300;
    Num_Comments                            = 3101;
    Rho                                     = 118;
	IO_FLAG									= -1;
}

DEFAULTS(COMMON)
{
    LSD_M4    = 1.0;
    LSD_MAT120_DEXP    = 3.0;
    MATL123_NUMINT    = 1.0;

}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  YOUNG_MODULUS=SCALAR(E);
  POISSON_RATIO=SCALAR(MATL123_PR);
  YIELD_STRESS=SCALAR(LSDYNA_SIGY);
  EXPONENT_FOR_POWER_LAW=SCALAR(LSDYNA_N);
  CRITICAL_VOID_VOLUME_FRACTION=SCALAR(LSD_MAT_FC);
  INITIAL_VOID_VOLUME_FRACTION=SCALAR(LSD_FO);
  MEAN_NUCLEATION_STRAIN=SCALAR(LSD_MAT120_EN);
  STANDARD_DEVIATION_SN=SCALAR(LSDYNA_SN);
  VOID_VOLUME_FRACTION=SCALAR(LSD_MAT120_FN);
  HARDENING_MODULUS=SCALAR(LSDYNA_ETAN);
  TYPE_OF_HARDENING=SCALAR(LSD_MAT120_ATYP);
  FAILURE_VOID_VOLUME_FRACTION=SCALAR(LSD_MAT120_FFO);
  NUMBER_OF_THROUGH_THICKNESS_INTEGRATION_POINTS=SCALAR(MATL123_NUMINT);
 public:
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_GURSON_JC");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
        ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(Rho)                        {DIMENSION="density";}
     SCALAR(E)                          {DIMENSION="pressure";}
 optional:
     SCALAR(MATL123_PR)                 {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_SIGY)                {DIMENSION="pressure";}
     SCALAR(LSDYNA_N)                   {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_Q1)                     {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_Q2)                     {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_FC)                 {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_FO)                     {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT120_EN)              {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_SN)                  {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT120_FN)              {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_ETAN)                {DIMENSION="pressure";}
     RADIO(LSD_MAT120_ATYP)
     {
        ADD(1.0, "1.0: Power law");
        ADD(2.0, "2.0: Linear hardening");
        ADD(3.0, "3.0: 8 points curve");
     }
     SCALAR(LSD_MAT120_FFO)             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS1)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS2)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS3)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS4)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS5)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS6)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS7)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS8)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_ES1)                 {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES2)                 {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES3)                 {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES4)                 {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES5)                 {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES6)                 {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES7)                 {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES8)                 {DIMENSION="pressure";}
     DATA(LSD_MAT120_LCDAM);
     SCALAR(LSD_MAT72_L1)               {DIMENSION="l";}
     SCALAR(LSD_MAT72_L2)               {DIMENSION="l";}
     SCALAR(LSD_MAT72_L3)               {DIMENSION="l";}
     SCALAR(LSD_MAT72_L4)               {DIMENSION="l";}
     SCALAR(LSD_MAT120_FF1)             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT120_FF2)             {DIMENSION="DIMENSIONLESS";}
     DATA(LSD_MAT120_LCJC);
     DATA(LSD_LCID);
     DATA(LSD_LCID2);
     SCALAR(MATL123_NUMINT)             {DIMENSION="DIMENSIONLESS";} 
     DATA(LSD_LCID3);
     DATA(LSD_LCID4);
     DATA(LSD_LCID5);
     RADIO(LSD_MAT120_VGTYP)
     {
        ADD(0.0, "0.0: Gorwth in case of tension and contraction in case of compression but >= f0 ");
        ADD(1.0, "1.0: Growth only in case of tension");
        ADD(2.0, "2.0: Growth in case of tension and contraction in case of compression");
     }
     
     
     SCALAR(LSD_MAT120_DEXP);
     FLAG(LSD_MAT120B_OPT_CARD7);
     if(LSD_MAT120B_OPT_CARD7 == TRUE)
     {
         SCALAR(LSD_KW);
         SCALAR(LSD_BETA3);
         SCALAR(LSD_M4);
     }
/*
  mandatory:
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/SHELL);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{

	ASSIGN(IO_FLAG, 1, IMPORT);
	ASSIGN(IO_FLAG, 2, EXPORT);

    //
    COMMENT("$      MID       RHO         E        PR      SIGY         N        Q1        Q2");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,MATL123_PR,LSDYNA_SIGY,LSDYNA_N,LSD_Q1,LSD_Q2);
    //
    COMMENT("$       FC        F0        EN        SN        FN      ETAN      ATYP       FF0");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_FC,LSD_FO,LSD_MAT120_EN,LSDYNA_SN,LSD_MAT120_FN,LSDYNA_ETAN,LSD_MAT120_ATYP,LSD_MAT120_FFO);
    //
    COMMENT("$     EPS1      EPS2      EPS3      EPS4      EPS5      EPS6      EPS7      EPS8");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_EPS1,LSDYNA_EPS2,LSDYNA_EPS3,LSDYNA_EPS4,LSDYNA_EPS5,LSDYNA_EPS6,LSDYNA_EPS7,LSDYNA_EPS8);
    //
    COMMENT("$      ES1       ES2       ES3       ES4       ES5       ES6       ES7       ES8");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_ES1,LSDYNA_ES2,LSDYNA_ES3,LSDYNA_ES4,LSDYNA_ES5,LSDYNA_ES6,LSDYNA_ES7,LSDYNA_ES8);
    //
    COMMENT("$    LCDAM        L1        L2        D1        D2        D3        D4      LCJC");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",LSD_MAT120_LCDAM,LSD_MAT72_L1,LSD_MAT72_L2,LSD_MAT72_L3,LSD_MAT72_L4,LSD_MAT120_FF1,LSD_MAT120_FF2,LSD_MAT120_LCJC);
    //
    COMMENT("$     LCSS      LCFF    NUMINT      LCF0      LCFC      LCFN     VGTYP      DEXP");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_LCID,LSD_LCID2,MATL123_NUMINT,LSD_LCID3,LSD_LCID4,LSD_LCID5,LSD_MAT120_VGTYP,LSD_MAT120_DEXP);
    //
	if(IO_FLAG == 2 && LSD_MAT120B_OPT_CARD7==TRUE)
    {
		 //
		 COMMENT("$       KW      BETA         M");
         CARD("%10lg%10lg%10lg",LSD_KW,LSD_BETA3,LSD_M4);
         //
    }
    if(IO_FLAG == 1)
    {
        FREE_CARD(LSD_MAT120B_OPT_CARD7,"%10lg%10lg%10lg",LSD_KW,LSD_BETA3,LSD_M4);
    }

}
