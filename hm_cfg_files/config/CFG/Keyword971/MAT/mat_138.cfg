//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 138
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    LSDYNA_GIC                              = VALUE(FLOAT,  "Energy release rate for mode 1");
    LSDYNA_GIIC                             = VALUE(FLOAT,  "Energy release rate for mode 2");
    LSDYNA_S                                = VALUE(FLOAT,  "Peak traction in tangential direction");
    LSDYNA_T                                = VALUE(FLOAT,  "Peak traction in normal direction");
    LSDYNA_UND                              = VALUE(FLOAT,  "Ultimate displacement in the normal direction");
    LSDYNA_UTD                              = VALUE(FLOAT,  "Ultimate displacement in the tangential direction");
    LSDYNA_XMU                              = VALUE(FLOAT,  "Exponent of the mixed mode criteria");
    LSD_INTFAIL                             = VALUE(FLOAT,  "number of integration points required for the cohesive element to be deleted");
    LSD_MAT100_ET                           = VALUE(FLOAT,  "stiffness in the plane of the cohesive element");
    LSD_MAT120_EN                           = VALUE(FLOAT,  "stiffness normal to the plane of the cohesive element");
    LSD_ROFLG                               = VALUE(FLOAT,  "Flag for whether density is specified per unit area or volume");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    PTNDAsFunctionOfElemSize                = VALUE(INT,  "PeakTractionNormalDirectionAsFunctionOfElemSize");
    PTTDAsFunctionOfElemSize                = VALUE(INT,  "PeakTractionTgDirectionAsFunctionOfElemSize");
    S_AsFunctOfElemSize                     = VALUE(FUNCT,  "peak traction in tangential direction as a function of element size");
    T_AsFunctOfElemSize                     = VALUE(FUNCT,  "peak traction in normal direction as a function of element size");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSDYNA_GIC                              = 2293;
    LSDYNA_GIIC                             = 2294;
    LSDYNA_S                                = 2297;
    LSDYNA_T                                = 2296;
    LSDYNA_UND                              = 2298;
    LSDYNA_UTD                              = 2299;
    LSDYNA_XMU                              = 2295;
    LSD_INTFAIL                             = 4998;
    LSD_MAT100_ET                           = 2530;
    LSD_MAT120_EN                           = 824;
    LSD_ROFLG                               = 4997;
    LSD_TitleOpt                            = 90;
    Num_Comments                            = 3101;
    PTNDAsFunctionOfElemSize                = 6463;
    PTTDAsFunctionOfElemSize                = 6465;
    Rho                                     = 118;
    S_AsFunctOfElemSize                     = 6466;
    T_AsFunctOfElemSize                     = 6464;

}

DEFAULTS(COMMON)
{

    LSD_INTFAIL    = 1.0;

}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_COHESIVE_MIXED_MODE");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
     SCALAR(Rho)                            {DIMENSION="density";}
 optional:    
     RADIO(LSD_ROFLG)
     {
        ADD(0.0, "0.0: Density per unit Volume");
        ADD(1.0, "1.0: Density per unit Area");
     }
     RADIO(LSD_INTFAIL)
     {
        ADD(0.0, "0.0");
        ADD(1.0, "1.0");
        ADD(2.0, "2.0");
        ADD(3.0, "3.0");
        ADD(4.0, "4.0");
     }
     SCALAR(LSD_MAT120_EN)                     {DIMENSION="force_density";}
     SCALAR(LSD_MAT100_ET)                     {DIMENSION="force_density";}
     SCALAR(LSDYNA_GIC)                        {DIMENSION="translation_stiffness";}
     SCALAR(LSDYNA_GIIC)                       {DIMENSION="translation_stiffness";}
     SCALAR(LSDYNA_XMU)                     {DIMENSION="DIMENSIONLESS";}
     FLAG(PTNDAsFunctionOfElemSize);
     if(PTNDAsFunctionOfElemSize == FALSE)
     {
        SCALAR(LSDYNA_T)                    {DIMENSION="pressure";}
     }  
     if(PTNDAsFunctionOfElemSize == TRUE)
     {
        DATA(T_AsFunctOfElemSize);
     }
     FLAG(PTTDAsFunctionOfElemSize);
     if(PTTDAsFunctionOfElemSize == FALSE)
     {
        SCALAR(LSDYNA_S)                    {DIMENSION="pressure";}
     }
     if(PTTDAsFunctionOfElemSize == TRUE)
     {
        DATA(S_AsFunctOfElemSize);
     }

     SCALAR(LSDYNA_UND)                     {DIMENSION="l";}
     SCALAR(LSDYNA_UTD)                     {DIMENSION="l";}
/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D,/COMPONENT/TETRA10);
      ADD(COMPONENT,"Parts");
    }
*/
}   

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID        RO     ROFLG   INTFAIL        EN        ET       GIC      GIIC") ;
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_ROFLG,LSD_INTFAIL,LSD_MAT120_EN,LSD_MAT100_ET,LSDYNA_GIC,LSDYNA_GIIC);
    //
    COMMENT("$      XMU         T         S       UND       UTD");
    CARD("%10lg%10lg%10lg%10lg%10lg",LSDYNA_XMU,SCALAR_OR_OBJECT(PTNDAsFunctionOfElemSize,LSDYNA_T,T_AsFunctOfElemSize),SCALAR_OR_OBJECT(PTTDAsFunctionOfElemSize,LSDYNA_S,S_AsFunctOfElemSize),LSDYNA_UND,LSDYNA_UTD);
    //

}
