//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 010
// 


ATTRIBUTES(COMMON) 

{

    // Initial and reference densities
    _HMCOMMENTSFLAG               = VALUE(INT, "Write HM Comments");
    _HWCOLOR                      = VALUE(INT, "Entity Color");
    _HAS_HEADER                   = VALUE(BOOL,"Has Header Card");
    TITLE                         = VALUE(STRING, "Title");
    IO_FLAG                       = VALUE(INT, "IO");
    OPT_TYPE_STR                  = VALUE(STRING, "has spall option");
    HAS_TITLE                     = VALUE(STRING, "has title option");

    KEYWORD_STR                     = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt                    = VALUE(INT, "Title");
    CommentEnumField                = VALUE(INT, "User Comments");
    Num_Comments                    = SIZE("No. of comment lines");
    Comments                        = ARRAY[Num_Comments](STRING, "Entity Comments");
    Rho                             = VALUE(FLOAT, "Rho");  
    spall_option                    = VALUE(INT, "SPALL");
    G                               = VALUE(FLOAT, "G");
    LSDYNA_SIGY                     = VALUE(FLOAT, "SIGY");
    LSDYNA_EPS1                     = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS2                     = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS3                     = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS4                     = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS5                     = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS6                     = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS7                     = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS8                     = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS9                     = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS10                     = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS11                     = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS12                     = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS13                     = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS14                     = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS15                     = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS16                     = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_ES1                      = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES2                      = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES3                      = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES4                      = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES5                      = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES6                      = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES7                      = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES8                      = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES9                      = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES10                      = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES11                      = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES12                      = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES13                      = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES14                      = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES15                      = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES16                      = VALUE(FLOAT,  "yield stress values");
    LSD_EH                          = VALUE(FLOAT, "EH");
    LSD_PC                          = VALUE(FLOAT, "PC");
    LSD_FS                          = VALUE(FLOAT, "FS"); 
    LSD_A110                        = VALUE(FLOAT, "A1");
    LSD_A210                        = VALUE(FLOAT, "A1");
    LSD_SPALL                       = VALUE(FLOAT, "SPALL");
    LSD_CHARL                       = VALUE(FLOAT, "CHARL");
}

SKEYWORDS_IDENTIFIER(COMMON)

{
    _HMCOMMENTSFLAG             = -1;
    _HWCOLOR                    = -1;
    _HAS_HEADER                 = -1;
    TITLE                       = -1;
    IO_FLAG                     = -1;
    OPT_TYPE_STR                = -1;
    HAS_TITLE                   = -1;

    KEYWORD_STR                 = 9000;
    CommentEnumField            = 3220;
    Num_Comments                = 3101;
    LSD_TitleOpt                = 90;
    Comments                    = 3100;
    Rho                         = 118;
    spall_option                = 3010;
    G                           = 121;
    LSDYNA_SIGY                 = 152;
    LSD_EH                      = 3007;
    LSD_PC                      = 3008;
    LSD_FS                      = 3009;
    LSD_A110                    = 3011;
    LSD_A210                    = 3012;
    LSD_SPALL                   = 3013;
    LSD_CHARL                   = 1077;
    LSDYNA_EPS1                             = 201;
    LSDYNA_EPS2                             = 202;
    LSDYNA_EPS3                             = 203;
    LSDYNA_EPS4                             = 204;
    LSDYNA_EPS5                             = 205;
    LSDYNA_EPS6                             = 206;
    LSDYNA_EPS7                             = 207;
    LSDYNA_EPS8                             = 208;
    LSDYNA_ES1                              = 209;
    LSDYNA_ES2                              = 210;
    LSDYNA_ES3                              = 211;
    LSDYNA_ES4                              = 212;
    LSDYNA_ES5                              = 213;
    LSDYNA_ES6                              = 214;
    LSDYNA_ES7                              = 215;
    LSDYNA_ES8                              = 216;
    LSDYNA_EPS9                             = 11500;
    LSDYNA_EPS10                             = 11501;
    LSDYNA_EPS11                             = 11502;
    LSDYNA_EPS12                             = 11503;
    LSDYNA_EPS13                             = 11504;
    LSDYNA_EPS14                             = 11505;
    LSDYNA_EPS15                             = 11506;
    LSDYNA_EPS16                             = 11507;
    LSDYNA_ES9                               = 11515;
    LSDYNA_ES10                              = 11514;
    LSDYNA_ES11                              = 11513;
    LSDYNA_ES12                              = 11512;
    LSDYNA_ES13                              = 11511;
    LSDYNA_ES14                              = 11510;
    LSDYNA_ES15                              = 11509;
    LSDYNA_ES16                              = 11508;
}

DRAWABLES(COMMON) 
{
public:
    MASS_DENSITY=SCALAR(Rho);
    SHEAR_MODULUS=SCALAR(G);
    YIELD_STRESS=SCALAR(LSDYNA_SIGY);
    PLASTIC_HARDENING_MODULUS=SCALAR(LSD_EH);
    PRESSURE_CUTOFF=SCALAR(LSD_PC);
    FAILURE_STRAIN=SCALAR(LSD_FS);
    LINEAR_HARDENING_COEFFICIENT=SCALAR(LSD_A110);
    QUADRATIC_HARDENING_COEFFICIENT=SCALAR(LSD_A210);
    SMALL_TYPE=SCALAR(LSD_SPALL);
  //below is copied from mat_008.cfg
  // According to LS-DYNA manual POISSON_RATIO is EQUAL to 0.463
  YOUNG_MODULUS=EVAL(2*1.463*SHEAR_MODULUS); // 2(1+POISSON_RATION)*SHEAR_MODULUS
  BULK_MODULUS=EVAL(YOUNG_MODULUS/(3*0.074)); //YOUNG_MODULUS/(3*(1-2*POISSON_RATIO))
  POISSON_RATIO     = EVAL((3.*BULK_MODULUS-2.*SHEAR_MODULUS)/(6.*BULK_MODULUS+2.*SHEAR_MODULUS));

  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);

  SOUND_SPEED_SOLID = EVAL(((4*SHEAR_MODULUS/3+BULK_MODULUS)/MASS_DENSITY)^0.5);
}

DEFAULTS(COMMON) {
    _HAS_HEADER = TRUE;
}

GUI(COMMON) 

{


    ASSIGN(KEYWORD_STR, "*MAT_ELASTIC_PLASTIC_HYDRO");
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do not export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
            SCALAR(Comments);
        }
    }
    FLAG(spall_option); 
    if(spall_option == TRUE)
    {
        ASSIGN(KEYWORD_STR, "_SPALL");
    } 
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == TRUE)
    {
        ASSIGN(KEYWORD_STR, "_TITLE");
    } 
mandatory:
    SCALAR(Rho)             { DIMENSION="density";          }
optional:
    SCALAR(G)               {DIMENSION="pressure";}
    SCALAR(LSDYNA_SIGY)     {DIMENSION="pressure";}
    SCALAR(LSD_EH)          {DIMENSION="pressure";}
    SCALAR(LSD_PC)          {DIMENSION="pressure";}
    SCALAR(LSD_FS)          {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_CHARL)       {DIMENSION="l";}
    if(spall_option == TRUE)
    {
        SCALAR(LSD_A110)    {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_A210)    {DIMENSION="DIMENSIONLESS";}
        RADIO(LSD_SPALL)
        {
            ADD(0.0, "0.0");
            ADD(1.0, "1.0");
            ADD(2.0, "2.0");
            ADD(3.0, "3.0");
        }
    }
    SCALAR(LSDYNA_EPS1)                   { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSDYNA_EPS2)                   { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSDYNA_EPS3)                   { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSDYNA_EPS4)                   { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSDYNA_EPS5)                   { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSDYNA_EPS6)                   { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSDYNA_EPS7)                   { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSDYNA_EPS8)                   { DIMENSION="DIMENSIONLESS"; }

    SCALAR(LSDYNA_EPS9)                   { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSDYNA_EPS10)                  { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSDYNA_EPS11)                  { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSDYNA_EPS12)                  { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSDYNA_EPS13)                  { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSDYNA_EPS14)                  { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSDYNA_EPS15)                  { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSDYNA_EPS16)                  { DIMENSION="DIMENSIONLESS"; }

     SCALAR(LSDYNA_ES1)                   { DIMENSION="pressure"; }
     SCALAR(LSDYNA_ES2)                   { DIMENSION="pressure"; }
     SCALAR(LSDYNA_ES3)                   { DIMENSION="pressure"; }
     SCALAR(LSDYNA_ES4)                   { DIMENSION="pressure"; }
     SCALAR(LSDYNA_ES5)                   { DIMENSION="pressure"; }
     SCALAR(LSDYNA_ES6)                   { DIMENSION="pressure"; }
     SCALAR(LSDYNA_ES7)                   { DIMENSION="pressure"; }
     SCALAR(LSDYNA_ES8)                   { DIMENSION="pressure"; }

     SCALAR(LSDYNA_ES9)                   { DIMENSION="pressure"; }
     SCALAR(LSDYNA_ES10)                  { DIMENSION="pressure"; }
     SCALAR(LSDYNA_ES11)                  { DIMENSION="pressure"; }
     SCALAR(LSDYNA_ES12)                  { DIMENSION="pressure"; }
     SCALAR(LSDYNA_ES13)                  { DIMENSION="pressure"; }
     SCALAR(LSDYNA_ES14)                  { DIMENSION="pressure"; }
     SCALAR(LSDYNA_ES15)                  { DIMENSION="pressure"; } 
     SCALAR(LSDYNA_ES16)                  { DIMENSION="pressure"; }
    /*
    graphical SUPPORT("Part(s) to which material is applied") {
    OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D);
    ADD(COMPONENT,"Parts");
    }
    */ 
}

// File format
FORMAT(Keyword971) 
{

    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);

    // import time
    if(IO_FLAG == 1)
    {
        HEADER("*MAT_010_%5s",OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && OPT_TYPE_STR != "SPALL")
    {
        HEADER("*MAT_ELASTIC_PLASTIC_HYDRO_%5s%6s", OPT_TYPE_STR, HAS_TITLE);
    }
    if(IO_FLAG == 1 && OPT_TYPE_STR == "SPALL")
    {
        ASSIGN(spall_option, 1);
    }
    else if(IO_FLAG == 1 && OPT_TYPE_STR == "TITLE")
    {
        ASSIGN(LSD_TitleOpt, 1);
    }
    if(IO_FLAG == 1 && HAS_TITLE == "_TITLE")
    {
        ASSIGN(LSD_TitleOpt, 1);
    }


    // export time
    if(IO_FLAG == 2 && spall_option == 0 && LSD_TitleOpt == 0)
    {
        HEADER("*MAT_ELASTIC_PLASTIC_HYDRO");
    }
    else if(IO_FLAG == 2 && spall_option == 0 && LSD_TitleOpt == 1)
    {
        HEADER("*MAT_ELASTIC_PLASTIC_HYDRO_TITLE");
    }  
    else if(IO_FLAG == 2 && spall_option == 1 && LSD_TitleOpt == 0)
    {
        HEADER("*MAT_ELASTIC_PLASTIC_HYDRO_SPALL");
    }  
    else if(IO_FLAG == 2 && spall_option == 1 && LSD_TitleOpt == 1)
    {
        HEADER("*MAT_ELASTIC_PLASTIC_HYDRO_SPALL_TITLE");
    }  

    if(IO_FLAG == 2 && LSD_TitleOpt == 1)  
    {
        CARD("%-80s", TITLE);
    }
    //
    COMMENT("$      MID       RHO         G      SIGY        EH        PC        FS     CHARL");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,G,LSDYNA_SIGY,LSD_EH,LSD_PC,LSD_FS,LSD_CHARL);
    //
    if(spall_option == TRUE)
    {
        //
        COMMENT("$       A1        A2     SPALL");
        CARD("%10lg%10lg%10lg",LSD_A110,LSD_A210,LSD_SPALL);
        //
    }        
    
    COMMENT("$     EPS1      EPS2      EPS3      EPS4      EPS5      EPS6      EPS7      EPS8");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_EPS1,LSDYNA_EPS2,LSDYNA_EPS3,LSDYNA_EPS4,LSDYNA_EPS5,LSDYNA_EPS6,LSDYNA_EPS7,LSDYNA_EPS8);
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_EPS9,LSDYNA_EPS10,LSDYNA_EPS11,LSDYNA_EPS12,LSDYNA_EPS13,LSDYNA_EPS14,LSDYNA_EPS15,LSDYNA_EPS16);
    //
    COMMENT("$      ES1       ES2       ES3       ES4       ES5       ES6       ES7       ES8");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_ES1,LSDYNA_ES2,LSDYNA_ES3,LSDYNA_ES4,LSDYNA_ES5,LSDYNA_ES6,LSDYNA_ES7,LSDYNA_ES8);
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_ES9,LSDYNA_ES10,LSDYNA_ES11,LSDYNA_ES12,LSDYNA_ES13,LSDYNA_ES14,LSDYNA_ES15,LSDYNA_ES16);
    
}