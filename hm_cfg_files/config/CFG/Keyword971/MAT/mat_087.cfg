//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 087
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");    
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    Nu                                      = VALUE(FLOAT,  "Poissons ratio");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    LSD_G                                   = VALUE(FLOAT,  "Optional shear relaxation modulus");
    LSDYNA_BETA                             = VALUE(FLOAT,  "Optional decay constant");
    LSD_C11                                 = VALUE(FLOAT,  "Coefficient,");
    LSD_LCID                                = VALUE(FUNCT,  "force versus actual change in the gauge length");
    LSD_MAT52_C10                           = VALUE(FLOAT,  "Coefficient,");
    LSD_MAT_B                               = VALUE(FLOAT,  "Initial volumetric strain");
    LSD_MAT_C01                             = VALUE(FLOAT,  "Coefficient,");
    LSD_MAT_C02                             = VALUE(FLOAT,  "Coefficient,");
    LSD_MAT_C20                             = VALUE(FLOAT,  "Coefficient,");
    LSD_MAT_N                               = VALUE(FLOAT,  "Order of fit");
    LSD_MAT_PHI                             = VALUE(FLOAT,  "Ratio of cellular rubber to rubber density");
    LSD_MAT_SGL                             = VALUE(FLOAT,  "Specimen gauge length");
    LSD_MAT_ST                              = VALUE(FLOAT,  "Specimen thickness");
    LSD_MAT_SW                              = VALUE(FLOAT,  "Specimen width");
    LSD_PO                                  = VALUE(FLOAT,  "Initial air pressure");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSDYNA_BETA                             = 148;
    LSD_C11                                 = 1204;
    LSD_G                                   = 1560;
    LSD_LCID                                = 45;
    LSD_MAT52_C10                           = 1237;
    LSD_MAT_B                               = 311;
    LSD_MAT_C01                             = 1169;
    LSD_MAT_C02                             = 4066;
    LSD_MAT_C20                             = 1171;
    LSD_MAT_N                               = 312;
    LSD_MAT_PHI                             = 1123;
    LSD_MAT_SGL                             = 350;
    LSD_MAT_ST                              = 352;
    LSD_MAT_SW                              = 351;
    LSD_PO                                  = 4620;
    LSD_TitleOpt                            = 90;
    Nu                                      = 120;
    Num_Comments                            = 3101;
    Rho                                     = 118;

}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  POISSON_RATIO=SCALAR(Nu);
  SPECIMEN_GAUGE_LENGTH_L0=SCALAR(LSD_MAT_SGL);
  SPECIMEN_WIDTH=SCALAR(LSD_MAT_SW);
  SPECIMEN_THICKNESS=SCALAR(LSD_MAT_ST);
  COEFFICIENT_C10=SCALAR(LSD_MAT52_C10);
  COEFFICIENT_C01=SCALAR(LSD_MAT_C01);
  COEFFICIENT_C11=SCALAR(LSD_C11);
  COEFFICIENT_C20=SCALAR(LSD_MAT_C20);
  COEFFICIENT_C02=SCALAR(LSD_MAT_C02);
  INITIAL_AIR_PRESSURE=SCALAR(LSD_PO);
  RATIO_OF_CELLULAR_RUBBER_TO_RUBBER_DENSITY=SCALAR(LSD_MAT_PHI);
  INITIAL_VOLUMETRIC_STRAIN=SCALAR(LSD_MAT_B);
  SHEAR_RELAXATION_MODULUS_FOR_RATE_EFFECTS=SCALAR(LSD_G);
  DECAY_CONSTANT=SCALAR(LSDYNA_BETA);
  YOUNG_MODULUS=EVAL(2*(1+POISSON_RATIO)*SHEAR_RELAXATION_MODULUS_FOR_RATE_EFFECTS);
  BULK_MODULUS = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED        = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);

  SOUND_SPEED_SOLID = EVAL(((4*SHEAR_RELAXATION_MODULUS_FOR_RATE_EFFECTS/3+BULK_MODULUS)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_CELLULAR_RUBBER");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(Rho)                    {DIMENSION="density";}
 optional:
     SCALAR(Nu)                     {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_N)              {DIMENSION="DIMENSIONLESS";}
     if(LSD_MAT_N > 0)
     {
 mandatory:
        SCALAR(LSD_MAT_SGL)         {DIMENSION="l";}
        SCALAR(LSD_MAT_SW)          {DIMENSION="l";}
        SCALAR(LSD_MAT_ST)          {DIMENSION="l";}
        DATA(LSD_LCID);

     }
     if(LSD_MAT_N == 0)
     {
 mandatory:
         SCALAR(LSD_MAT52_C10)      {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT_C01)        {DIMENSION="DIMENSIONLESS";}
 optional:
         SCALAR(LSD_C11)            {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT_C20)        {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT_C02)        {DIMENSION="DIMENSIONLESS";}
     }  
     SCALAR(LSD_PO)                 {DIMENSION="pressure";}
     SCALAR(LSD_MAT_PHI)            {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_B)              {DIMENSION="DIMENSIONLESS";}
 optional:
     SCALAR(LSD_G)                  {DIMENSION="pressure";}
     SCALAR(LSDYNA_BETA)            {DIMENSION="DIMENSIONLESS";}
/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D);
      ADD(COMPONENT,"Parts");
    }
*/

}

// File format
FORMAT(Keyword971) 
{
  COMMENT("$      MID       RHO        PR         N");
  CARD("%10d%10lg%10lg%10lg",_ID_,Rho,Nu,LSD_MAT_N);
  if (LSD_MAT_N>0)
  {
     COMMENT("$      SGL        SW        ST      LCID");
     CARD("%10lg%10lg%10lg%10d",LSD_MAT_SGL,LSD_MAT_SW,LSD_MAT_ST,LSD_LCID);
  }
  if (LSD_MAT_N==0)
  {
     COMMENT("$      C10       C01       C11       C20       C02");
     CARD("%10lg%10lg%10lg%10lg%10lg",LSD_MAT52_C10,LSD_MAT_C01,LSD_C11,LSD_MAT_C20,LSD_MAT_C02);
  }
  COMMENT("$       P0       PHI       IVS         G      BETA");
  CARD("%10lg%10lg%10lg%10lg%10lg",LSD_PO,LSD_MAT_PHI,LSD_MAT_B,LSD_G,LSDYNA_BETA);

}
