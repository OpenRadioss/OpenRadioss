//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 062
// 


 ATTRIBUTES(COMMON)  
 {
  
  // Initial and reference densities
  KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
  LSD_TitleOpt                      = VALUE(INT, "Title");
  CommentEnumField                  = VALUE(INT, "User Comments");
  Num_Comments                      = SIZE("No. of comment lines");
  Comments                          = ARRAY[Num_Comments](STRING, "Entity Comments");
  Rho                               = VALUE(FLOAT, "Mass density");  
  Nu                                = VALUE(FLOAT, "Poissons ratio");
  LSD_MAT_E1                        = VALUE(FLOAT, "Initial Youngs modulus");
  LSD_MAT_N1                        = VALUE(FLOAT, "Exponent in power law for Youngs modulus");
  LSD_MAT_V2                        = VALUE(FLOAT, "Viscous coefficient");
  LSD_MAT_E2                        = VALUE(FLOAT, "Elastic modulus for viscosity");
  LSD_MAT_N2                        = VALUE(FLOAT, "Exponent in power law for viscosity");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

  KEYWORD_STR                   = 9000;
  CommentEnumField              = 3220;
  Num_Comments                  = 3101;
  LSD_TitleOpt                  = 90;
  Comments                      = 3100;
  Rho                           = 118;
  LSD_MAT_E1                    = 1127;
  LSD_MAT_N1                    = 1128;
  LSD_MAT_V2                    = 343;
  LSD_MAT_E2                    = 1129;
  LSD_MAT_N2                    = 1130;
  Nu                            = 120;

}

DRAWABLES(COMMON) {
 public:
      MASS_DENSITY    =SCALAR(Rho);
      YOUNG_MODULUS   =SCALAR(LSD_MAT_E1);
      YOUNG_MODULUS_EXPONENT_IN_POWER_LAW   =SCALAR(LSD_MAT_N1);
      VISCOUS_COEFFICIENT  =SCALAR(LSD_MAT_V2);
      ELASTIC_MODULUS    =SCALAR(LSD_MAT_E2);
      VISCOSITY_EXPONENT_IN_POWER_LAW    =SCALAR(LSD_MAT_N2);
      POISSON_RATIO    =SCALAR(Nu); 
 public:
      //SOUND_SPEED is speed for ISDO = 0 and 1
      SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
      SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
      G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
      C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
      SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);

}

GUI(COMMON) 
{


     ASSIGN(KEYWORD_STR, "*MAT_VISCOUS_FOAM");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
       {
             ASSIGN(KEYWORD_STR, "_TITLE");
       } 
 mandatory:
     SCALAR(Rho)                            { DIMENSION="density";}
     SCALAR(LSD_MAT_E1)                     { DIMENSION="pressure";        } 
     SCALAR(LSD_MAT_N1)                     { DIMENSION="DIMENSIONLESS";          }
     SCALAR(LSD_MAT_V2)                     { DIMENSION="DIMENSIONLESS";          }
 mandatory:
     SCALAR(LSD_MAT_E2)                     { DIMENSION="pressure";        }
 optional:
     SCALAR(LSD_MAT_N2)                     { DIMENSION="DIMENSIONLESS";          }
     SCALAR(Nu)                             { DIMENSION="DIMENSIONLESS";          }
/*
     graphical SUPPORT("Part(s) to which material is applied") {
     OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D,/COMPONENT/BEAM,/COMPONENT/SPRING,/COMPONENT/TRUSS,/COMPONENT/RIVET,/COMPONENT/SHELL,/COMPONENT/PENTA6,/COMPONENT/SHEL16);
     ADD(COMPONENT,"Parts");
   }
*/
}

// File format
FORMAT(Keyword971) 
{
      //
      COMMENT("$      MID       RHO        E1        N1        V2        E2        N2        PR");
      CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_MAT_E1,LSD_MAT_N1,LSD_MAT_V2,LSD_MAT_E2,LSD_MAT_N2,Nu);
      //

}