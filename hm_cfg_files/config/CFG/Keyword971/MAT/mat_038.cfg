//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 038
// 


 ATTRIBUTES(COMMON) 
 
 {
  
  // Initial and reference densities
  KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
  LSD_TitleOpt                      = VALUE(INT, "Title");
  CommentEnumField                  = VALUE(INT, "User Comments");
  Num_Comments                      = SIZE("No. of comment lines");
  Comments                          = ARRAY[Num_Comments](STRING, "Entity Comments");
  Rho                               = VALUE(FLOAT, "Mass density");  
  LSD_G                             = VALUE(FLOAT, "Shear modulus");
  LSD_MAT_REF                       = VALUE(FLOAT, "Use reference geometry to initialize the stress tensor");
  
}

SKEYWORDS_IDENTIFIER(COMMON)

{

  KEYWORD_STR                   = 9000;
  CommentEnumField              = 3220;
  Num_Comments                  = 3101;
  LSD_TitleOpt                  = 90;
  Comments                      = 3100;
  Rho                           = 118;
  LSD_G                         = 1560;
  LSD_MAT_REF                   = 359;
  
}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  SHEAR_MODULUS=SCALAR(LSD_G);
  REFERENCE_GEOMETRY=SCALAR(LSD_MAT_REF);
  YOUNG_MODULUS=EVAL(2*1.463*SHEAR_MODULUS);
  BULK_MODULUS=EVAL(YOUNG_MODULUS/(3*0.074));
  POISSON_RATIO     = EVAL((3.*BULK_MODULUS-2.*SHEAR_MODULUS)/(6.*BULK_MODULUS+2.*SHEAR_MODULUS));
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);

  SOUND_SPEED_SOLID = EVAL(((4*SHEAR_MODULUS/3+BULK_MODULUS)/MASS_DENSITY)^0.5);
}

GUI(COMMON) 

{


     ASSIGN(KEYWORD_STR, "*MAT_BLATZ-KO_FOAM");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
       {
             ASSIGN(KEYWORD_STR, "_TITLE");
       } 
 mandatory:
     SCALAR(Rho)                         { DIMENSION="density";}
 optional:
     SCALAR(LSD_G)                       {DIMENSION="pressure";}
     RADIO(LSD_MAT_REF)
     {
        ADD(0.0, "0.0: Off");
        ADD(1.0, "1.0: On");
     }
/*
      graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D,/COMPONENT/SHELL);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
      //
      COMMENT("$      MID       RHO         G       REF");
      CARD("%10d%10lg%10lg%10lg",_ID_,Rho,LSD_G,LSD_MAT_REF);
      //

}