//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 178
//

ATTRIBUTES(COMMON)
{
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    ArrayCount                              = SIZE("ArrayCount");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    LSDYNA_K                                = VALUE(FLOAT,  "Bulk modulus");
    LSDYNA_N                                = VALUE(FLOAT,  "Material constant");
    LSD_FITTYPE                             = VALUE(INT,  "Type of fit");
    LSD_LCID                                = VALUE(FUNCT,  "force per unit area versus the stretch ratio");
    LSD_LCID2                               = VALUE(FUNCT,  "Uniaxial or biaxial stress ratio VS the transverse stretch ratio");
    LSD_LCID3                               = VALUE(FUNCT,  "curve that defines the relaxation function in shear");
    LSD_MAT178_B1                           = VALUE(FLOAT,  "Material constant");
    LSD_MAT178_B2                           = VALUE(FLOAT,  "Material constant");
    LSD_MAT178_B3                           = VALUE(FLOAT,  "Material constant");
    LSD_MAT178_B4                           = VALUE(FLOAT,  "Material constant");
    LSD_MAT178_B5                           = VALUE(FLOAT,  "Material constant");
    LSD_MAT178_B6                           = VALUE(FLOAT,  "Material constant");
    LSD_MAT178_B7                           = VALUE(FLOAT,  "Material constant");
    LSD_MAT178_B8                           = VALUE(FLOAT,  "Material constant");
    LSD_MAT178_BETAI                        = ARRAY[ArrayCount](FLOAT,  "Optional decay constant");
    LSD_MAT178_C1                           = VALUE(FLOAT,  "Material constant");
    LSD_MAT178_C2                           = VALUE(FLOAT,  "Material constant");
    LSD_MAT178_C3                           = VALUE(FLOAT,  "Material constant");
    LSD_MAT178_C4                           = VALUE(FLOAT,  "Material constant");
    LSD_MAT178_C5                           = VALUE(FLOAT,  "Material constant");
    LSD_MAT178_C6                           = VALUE(FLOAT,  "Material constant");
    LSD_MAT178_C7                           = VALUE(FLOAT,  "Material constant");
    LSD_MAT178_C8                           = VALUE(FLOAT,  "Material constant");
    LSD_MAT178_GI                           = ARRAY[ArrayCount](FLOAT,  "Optional shear relaxation modulus");
    LSD_MU                                  = VALUE(FLOAT,  "Damping coefficient");
    LSD_NT                                  = VALUE(FLOAT,  "Number of terms used to fit the Prony series");
    LSD_START                               = VALUE(FLOAT,  "Starting value for least square fit");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    IO_FLAG                                 = VALUE(INT, "io flag");
    _HMCOMMENTSFLAG                         = VALUE(INT, "Write HM Comments");
    TITLE                                   = VALUE(STRING, "Title");
    EncTypeEnumField                        = VALUE(INT,  "Type");
    RegTypeEnumField                        = VALUE(INT,  "Type");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    ArrayCount                              = 2246;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSDYNA_K                                = 124;
    LSDYNA_N                                = 71;
    LSD_FITTYPE                             = 5241;
    LSD_LCID                                = 45;
    LSD_LCID2                               = 168;
    LSD_LCID3                               = 170;
    LSD_MAT178_B1                           = 5267;
    LSD_MAT178_B2                           = 5268;
    LSD_MAT178_B3                           = 5269;
    LSD_MAT178_B4                           = 5270;
    LSD_MAT178_B5                           = 5271;
    LSD_MAT178_B6                           = 5272;
    LSD_MAT178_B7                           = 5273;
    LSD_MAT178_B8                           = 5274;
    LSD_MAT178_BETAI                        = 5277;
    LSD_MAT178_C1                           = 5259;
    LSD_MAT178_C2                           = 5260;
    LSD_MAT178_C3                           = 5261;
    LSD_MAT178_C4                           = 5262;
    LSD_MAT178_C5                           = 5263;
    LSD_MAT178_C6                           = 5264;
    LSD_MAT178_C7                           = 5265;
    LSD_MAT178_C8                           = 5266;
    LSD_MAT178_GI                           = 5276;
    LSD_MU                                  = 3051;
    LSD_NT                                  = 5227;
    LSD_START                               = 449;
    LSD_TitleOpt                            = 90;
    Num_Comments                            = 3101;
    Rho                                     = 118;
    EncTypeEnumField                        = 5828;
    RegTypeEnumField                        = 5827;
    TITLE                                   = -1;
    IO_FLAG                                 = -1;
}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  BULK_MODULUS=SCALAR(LSDYNA_K);
  MATERIAL_CONSTANT=SCALAR(LSDYNA_N);
  DAMPING_COEFFICIENT=SCALAR(LSD_MU);
  NUMBER_OF_TERMS=SCALAR(LSD_NT);
  STARTING_VALUE_FOR_LEAST_SQUARE_FIT=SCALAR(LSD_START);
}

DEFAULTS(COMMON)
{
}

CHECK(COMMON)
{
}

GUI(COMMON)
{
     ASSIGN(KEYWORD_STR, "*MAT_VISCOELASTIC_HILL_FOAM");
     RADIO(CommentEnumField)
     {
         ////ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(Rho)                                        {DIMENSION="density";}
 optional:
     SCALAR(LSDYNA_K)                                   {DIMENSION="pressure";}
     SCALAR(LSDYNA_N)                                   {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MU)                                     {DIMENSION="DIMENSIONLESS";}
     DATA(LSD_LCID);
     RADIO(LSD_FITTYPE)
     {
        ADD(1, "1: Uniaxial data");
        ADD(2, "2: Biaxial data");
     }
     DATA(LSD_LCID2);
     DATA(LSD_LCID3);
     SCALAR(LSD_NT)                                     {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_START)                                  {DIMENSION="DIMENSIONLESS";}
     if(LSD_LCID == NONE)
     {
         SCALAR(LSD_MAT178_C1)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT178_C2)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT178_C3)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT178_C4)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT178_C5)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT178_C6)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT178_C7)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT178_C8)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT178_B1)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT178_B2)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT178_B3)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT178_B4)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT178_B5)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT178_B6)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT178_B7)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT178_B8)                          {DIMENSION="DIMENSIONLESS";}
     }
     SIZE_RADIO(ArrayCount)
     {
        ADD(0,  "OFF");
        ADD(0,  " 0");
        ADD(1,  " 1");
        ADD(2,  " 2");
        ADD(3,  " 3");
        ADD(4,  " 4");
        ADD(5,  " 5");
        ADD(6,  " 6");
        ADD(7,  " 7");
        ADD(8,  " 8");
        ADD(9,  " 9");
        ADD(10, " 10");
        ADD(11, " 11");
        ADD(12, " 12");
      }
      ARRAY(ArrayCount,"")
      {
         SCALAR(LSD_MAT178_GI)                      {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MAT178_BETAI)                   {DIMENSION="DIMENSIONLESS";}
      }
/*    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D);
      ADD(COMPONENT,"Parts");
*/
}

// File format
FORMAT(Keyword971) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    //
    COMMENT("$      MID       RHO         K         N        MU      LCID   FITTYPE      LCSR");
    CARD("%10d%10lg%10lg%10lg%10lg%10d%10d%10d",_ID_,Rho,LSDYNA_K,LSDYNA_N,LSD_MU,LSD_LCID,LSD_FITTYPE,LSD_LCID2);
    //
    COMMENT("$     LCVE        NT    GSTART");
    CARD("%10d%10lg%10lg",LSD_LCID3,LSD_NT,LSD_START);
    //
    if(LSD_LCID == NONE)
    {
        COMMENT("$       C1        C2        C3        C4        C5        C6        C7        C8");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT178_C1,LSD_MAT178_C2,LSD_MAT178_C3,LSD_MAT178_C4,LSD_MAT178_C5,LSD_MAT178_C6,LSD_MAT178_C7,LSD_MAT178_C8);
        //
        COMMENT("$       B1        B2        B3        B4        B5        B6        B7        B8");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT178_B1,LSD_MAT178_B2,LSD_MAT178_B3,LSD_MAT178_B4,LSD_MAT178_B5,LSD_MAT178_B6,LSD_MAT178_B7,LSD_MAT178_B8);
    }

    if(ArrayCount > 0)
    {
        COMMENT("$       GI     BETAI");
    }
    FREE_CARD_LIST(ArrayCount)
    {
        CARD("%10lg%10lg",LSD_MAT178_GI,LSD_MAT178_BETAI);
    }
    //

}
