//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law T2
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    LSD_HLAT                                = VALUE(FLOAT,  "Latent heat");
    LSD_MATT1_HC                            = VALUE(FLOAT,  "Specific heat");
    LSD_MATT1_TGMULT                        = VALUE(FLOAT,  "Thermal generation rate multiplier");
    LSD_MATT1_TGRLC                         = VALUE(FLOAT,  "Thermal generation rate curve number");
    LSD_MATT1_TRO                           = VALUE(FLOAT,  "Thermal density");
    LSD_MATT2_A1                            = VALUE(FLOAT,  "A1");
    LSD_MATT2_A2                            = VALUE(FLOAT,  "A2");
    LSD_MATT2_A3                            = VALUE(FLOAT,  "A3");
    LSD_MATT2_AOPT                          = VALUE(FLOAT,  "Material axes definition");
    LSD_MATT2_D1                            = VALUE(FLOAT,  "D1");
    LSD_MATT2_D2                            = VALUE(FLOAT,  "D2");
    LSD_MATT2_D3                            = VALUE(FLOAT,  "D3");
    LSD_MATT2_K1                            = VALUE(FLOAT,  "Thermal conductivity along local X-axis");
    LSD_MATT2_K2                            = VALUE(FLOAT,  "Thermal conductivity along local Y-axis");
    LSD_MATT2_K3                            = VALUE(FLOAT,  "Thermal conductivity along local Z-axis");
    LSD_MATT2_XP                            = VALUE(FLOAT,  "XP");
    LSD_MATT2_YP                            = VALUE(FLOAT,  "YP");
    LSD_MATT2_ZP                            = VALUE(FLOAT,  "ZP");
    LSD_TLAT                                = VALUE(FLOAT,  "Phase change temperature");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    //empty_string                       = VALUE(STRING, "Used as a local variable for free format case");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSD_HLAT                                = 4992;
    LSD_MATT1_HC                            = 2628;
    LSD_MATT1_TGMULT                        = 2627;
    LSD_MATT1_TGRLC                         = 2626;
    LSD_MATT1_TRO                           = 2625;
    LSD_MATT2_A1                            = 2638;
    LSD_MATT2_A2                            = 2639;
    LSD_MATT2_A3                            = 2640;
    LSD_MATT2_AOPT                          = 2631;
    LSD_MATT2_D1                            = 2641;
    LSD_MATT2_D2                            = 2642;
    LSD_MATT2_D3                            = 2643;
    LSD_MATT2_K1                            = 2632;
    LSD_MATT2_K2                            = 2633;
    LSD_MATT2_K3                            = 2634;
    LSD_MATT2_XP                            = 2635;
    LSD_MATT2_YP                            = 2636;
    LSD_MATT2_ZP                            = 2637;
    LSD_TLAT                                = 4991;
    LSD_TitleOpt                            = 90;
    Num_Comments                            = 3101;
    //empty_string                       = -1;
}

DRAWABLES(COMMON) {
public:
  THERMAL_DENSITY=SCALAR(LSD_MATT1_TRO);
  THERMAL_GENERATION_RATE_CURVE_NUMBER=SCALAR(LSD_MATT1_TGRLC);
  THERMAL_GENERATION_RATE_MULTIPLIER=SCALAR(LSD_MATT1_TGMULT);
  MATERIAL_AXES_DEFINITION=SCALAR(LSD_MATT2_AOPT);
  HEAT_CAPACITY=SCALAR(LSD_MATT1_HC);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_THERMAL_ORTHOTROPIC");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
     SCALAR(LSD_MATT1_TRO)                              {DIMENSION="density";}
     SCALAR(LSD_MATT1_TGRLC);
     SCALAR(LSD_MATT1_TGMULT)                           {DIMENSION="DIMENSIONLESS";}
     RADIO(LSD_MATT2_AOPT)
     {
        ADD(0.0, "0.0: Locally orthotropic: axis given by nodes 1,2, and 4");
        ADD(1.0, "1.0: Locally orthotropic: A-direction given by a point gloval location of element center");
        ADD(2.0, "2.0: Globally orthotropic: axis given by vectors");
     }
     SCALAR(LSD_TLAT)                                   {DIMENSION="k";}
     SCALAR(LSD_HLAT)                                   {DIMENSION="energy_per_unit_mass";}
     SCALAR(LSD_MATT1_HC)                               {DIMENSION="thermal_massic_capacity";}
     SCALAR(LSD_MATT2_K1)                               {DIMENSION="thermal_convectivity";}
     SCALAR(LSD_MATT2_K2)                               {DIMENSION="thermal_convectivity";}
     SCALAR(LSD_MATT2_K3)                               {DIMENSION="thermal_convectivity";}
     if(LSD_MATT2_AOPT == 1.0)
     {
         SCALAR(LSD_MATT2_XP)                           {DIMENSION="l";}
         SCALAR(LSD_MATT2_YP)                           {DIMENSION="l";}
         SCALAR(LSD_MATT2_ZP)                           {DIMENSION="l";}
     }
     if(LSD_MATT2_AOPT == 2.0)
     {
         SCALAR(LSD_MATT2_A1)                           {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MATT2_A2)                           {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MATT2_A3)                           {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MATT2_D1)                           {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MATT2_D2)                           {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MATT2_D3)                           {DIMENSION="DIMENSIONLESS";}
     }
/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D,/COMPONENT/SHELL);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$     TMID       TRO     TGRLC    TGMULT      AOPT      TLAT      HLAT");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,LSD_MATT1_TRO,LSD_MATT1_TGRLC,LSD_MATT1_TGMULT,LSD_MATT2_AOPT,LSD_TLAT,LSD_HLAT);
    //
    COMMENT("$       HC        K1        K2        K3");
    CARD("%10lg%10lg%10lg%10lg",LSD_MATT1_HC,LSD_MATT2_K1,LSD_MATT2_K2,LSD_MATT2_K3);
    //
    COMMENT("$       XP        YP        ZP        A1        A2        A3");
    if(LSD_MATT2_AOPT == 1)
    {   
        CARD("%10lg%10lg%10lg",LSD_MATT2_XP,LSD_MATT2_YP,LSD_MATT2_ZP);
    }
    else if (LSD_MATT2_AOPT == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSD_MATT2_A1,LSD_MATT2_A2,LSD_MATT2_A3);
    }
    else 
    {
        BLANK;
    }
    
    COMMENT("$       D1        D2        D3");
    if(LSD_MATT2_AOPT == 2)
    {
        CARD("%10lg%10lg%10lg",LSD_MATT2_D1,LSD_MATT2_D2,LSD_MATT2_D3);
    }
    else
    {
        BLANK;
    }
    //

}
