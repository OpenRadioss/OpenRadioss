//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 79
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");    
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    LSD_MAT_K0                              = VALUE(FLOAT,  "Bulk modulus at the reference pressure");
    LSDYNA_MAT_B                            = VALUE(FLOAT,  "exponent for the pressure-sensitive elastic moduli");
    LSD_DIL_A                               = VALUE(FLOAT,  "Dilation parameter");
    LSD_DIL_B                               = VALUE(FLOAT,  "Dilation parameter");
    LSD_DIL_C                               = VALUE(FLOAT,  "Dilation parameter");
    LSD_DIL_D                               = VALUE(FLOAT,  "Dilation parameter");
    LSD_GAM1                                = VALUE(FLOAT,  "shear strain");
    LSD_GAM2                                = VALUE(FLOAT,  "shear strain");
    LSD_GAM3                                = VALUE(FLOAT,  "shear strain");
    LSD_GAM4                                = VALUE(FLOAT,  "shear strain");
    LSD_GAM5                                = VALUE(FLOAT,  "shear strain");
    LSD_LCID                                = VALUE(FUNCT,  "shear strain verses shear stress");
    LSD_MAT_A0                              = VALUE(FLOAT,  "Yield function constant");
    LSD_MAT_A1                              = VALUE(FLOAT,  "Yield function constant");
    LSD_MAT_A2                              = VALUE(FLOAT,  "Yield function constant");
    LSD_MAT_DF                              = VALUE(FLOAT,  "Damping factor");
    LSD_MAT_P0                              = VALUE(FLOAT,  "Cut-off/datum pressure");
    LSD_MAT_SFLC                            = VALUE(FLOAT,  "Scale factor to apply to shear stress");
    LSD_PINIT                               = VALUE(INT,  "Flag for pressure sensitivity");
    LSD_RP                                  = VALUE(FLOAT,  "Reference pressure for following input data");
    LSD_TAU1                                = VALUE(FLOAT,  "shear stress");
    LSD_TAU2                                = VALUE(FLOAT,  "shear stress");
    LSD_TAU3                                = VALUE(FLOAT,  "shear stress");
    LSD_TAU4                                = VALUE(FLOAT,  "shear stress");
    LSD_TAU5                                = VALUE(FLOAT,  "shear stress");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    //empty_string                       = VALUE(STRING, "Used as a local variable for free format case");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSDYNA_MAT_B                            = 4912;
    LSD_DIL_A                               = 8356;
    LSD_DIL_B                               = 8357;
    LSD_DIL_C                               = 8358;
    LSD_DIL_D                               = 8359;
    LSD_GAM1                                = 8360;
    LSD_GAM2                                = 8361;
    LSD_GAM3                                = 8388;
    LSD_GAM4                                = 8389;
    LSD_GAM5                                = 8390;
    LSD_LCID                                = 45;
    LSD_MAT_A0                              = 279;
    LSD_MAT_A1                              = 280;
    LSD_MAT_A2                              = 281;
    LSD_MAT_DF                              = 353;
    LSD_MAT_K0                              = 1196;
    LSD_MAT_P0                              = 1122;
    LSD_MAT_SFLC                            = 8387;
    LSD_PINIT                               = 8365;
    LSD_RP                                  = 5376;
    LSD_TAU1                                = 7654;
    LSD_TAU2                                = 7662;
    LSD_TAU3                                = 8391;
    LSD_TAU4                                = 8392;
    LSD_TAU5                                = 8393;
    LSD_TitleOpt                            = 90;
    Num_Comments                            = 3101;
    Rho                                     = 118;
    //empty_string                       = -1;
}

DRAWABLES(COMMON) {
public:
    MASS_DENSITY=SCALAR(Rho);
}

CHECK(COMMON)
{

    LSDYNA_MAT_B                              >=0.0;
    LSDYNA_MAT_B                              <1.0;
}

DEFAULTS(COMMON)
{

    LSD_MAT_A0    = 1.0;

}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*MAT_HYSTERETIC_SOIL");
    RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
       {
             ASSIGN(KEYWORD_STR, "_TITLE");
       } 
 mandatory: 
    SCALAR(Rho)                                     { DIMENSION="density";}
    SCALAR(LSD_MAT_K0)                              {DIMENSION="pressure";}
optional:
    SCALAR(LSD_MAT_P0)                              {DIMENSION="pressure";}
    SCALAR(LSDYNA_MAT_B);
    SCALAR(LSD_MAT_A0);
    SCALAR(LSD_MAT_A1);
    SCALAR(LSD_MAT_A2);
    RADIO(LSD_MAT_DF)
    {
          ADD(0.0, "no damping,");
          ADD(1.0, "maximum damping");
    }
    SCALAR(LSD_RP)                                  {DIMENSION="pressure";}
     DATA(LSD_LCID);
    SCALAR(LSD_MAT_SFLC);
    SCALAR(LSD_DIL_A);
    SCALAR(LSD_DIL_B);
    SCALAR(LSD_DIL_C);
    SCALAR(LSD_DIL_D);
    SCALAR(LSD_GAM1);
    SCALAR(LSD_GAM2);
    SCALAR(LSD_GAM3);
    SCALAR(LSD_GAM4);
    SCALAR(LSD_GAM5);
    RADIO(LSD_PINIT)
    {
       ADD(0, "Use current pressure");
       ADD(1, "Use pressure from initial stress state");
       ADD(2, "Use initial plane stres pressure");
       ADD(3, "User (compressive) initial vertical stress");
    }
    SCALAR(LSD_TAU1)                                {DIMENSION="pressure";}
    SCALAR(LSD_TAU2)                                {DIMENSION="pressure";}
    SCALAR(LSD_TAU3)                                {DIMENSION="pressure";}
    SCALAR(LSD_TAU4)                                {DIMENSION="pressure";}
    SCALAR(LSD_TAU5)                                {DIMENSION="pressure";}

}

// File format
FORMAT(Keyword971) 
{
    COMMENT("$      MID       RHO        K0        P0         B        A0        A1        A2");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_MAT_K0,LSD_MAT_P0,LSDYNA_MAT_B,LSD_MAT_A0,LSD_MAT_A1,LSD_MAT_A2);

    COMMENT("$       DF        RP      LCID      SFLC     DIL_A     DIL_B     DIL_C     DIL_D");
    CARD("%10lg%10lg%10d%10lg%10lg%10lg%10lg%10lg",LSD_MAT_DF,LSD_RP,LSD_LCID,LSD_MAT_SFLC,LSD_DIL_A,LSD_DIL_B,LSD_DIL_C,LSD_DIL_D);

    COMMENT("$     GAM1      GAM2      GAM3      GAM4      GAM5                         PINIT");
    CARD("%10lg%10lg%10lg%10lg%10lg%10s%10s%10d",LSD_GAM1,LSD_GAM2,LSD_GAM3,LSD_GAM4,LSD_GAM5,_BLANK_,_BLANK_,LSD_PINIT);

    COMMENT("$     TAU1      TAU2      TAU3      TAU4      TAU5");
    CARD("%10lg%10lg%10lg%10lg%10lg",LSD_TAU1,LSD_TAU2,LSD_TAU3,LSD_TAU4,LSD_TAU5);
}
