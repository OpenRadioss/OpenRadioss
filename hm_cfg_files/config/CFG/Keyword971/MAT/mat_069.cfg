//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 069
// 


ATTRIBUTES(COMMON)
{
  // Initial and reference densities
  KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
  LSD_TitleOpt                      = VALUE(INT, "Title");
  CommentEnumField                  = VALUE(INT, "User Comments");
  Num_Comments                      = SIZE("No. of comment lines");
  Comments                          = ARRAY[Num_Comments](STRING, "Entity Comments");
  Rho                               = VALUE(FLOAT, "Mass density");  
  LSD_MAT_ST                        = VALUE(FLOAT, "piston stroke");
  LSD_MAT_D                         = VALUE(FLOAT, "piston diameter");
  LSD_MAT_R                         = VALUE(FLOAT, "default orifice radius");
  LSD_MAT_H                         = VALUE(FLOAT, "orifice controller position");
  LSD_LCIDOpt                       = VALUE(INT,   "K_Option");
  LSD_MAT_K                         = VALUE(FLOAT, "damping constant");
  LSD_LCID10                        = VALUE(FUNCT, "damping coefficient VS the absolute value of the relative velocity");
  LSD_MAT_C                         = VALUE(FLOAT, "discharge coefficient");
  LSD_MAT_C3                        = VALUE(FLOAT, "Coefficient for fluid inertia term");
  LSD_MAT_STF                       = VALUE(FLOAT, "stiffness coefficient if piston bottoms out");
  LSD_MAT_RHOF                      = VALUE(FLOAT, "fluid density");
  LSD_MAT_C1                        = VALUE(FLOAT, "coefficient for linear velocity term");
  LSD_MAT_C2                        = VALUE(FLOAT, "coefficient for quadratic velocity term"); 
  LSD_LCID                          = VALUE(FUNCT, "force versus piston displacement");
  LSD_LCID2                         = VALUE(FUNCT, "damping coefficient versus piston displacement");
  LSD_MAT_S0                        = VALUE(FLOAT, "Initial displacement");
  ArrayCount                        = SIZE("ArrayCount");
  LSD_MAT_ORFLOC                    = ARRAY[ArrayCount](FLOAT, "orifice location of ith orifice relative to the fixed end");
  LSD_MAT_ORFRAD                    = ARRAY[ArrayCount](FLOAT, "orifice radius of ith orifice");
  LSD_MAT69_SF                      = ARRAY[ArrayCount](FLOAT, "Scale factor on calculated force");
  LSD_MAT69_DC                      = ARRAY[ArrayCount](FLOAT, "linear viscous damping coefficient used after damper bottoms out");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
  KEYWORD_STR                   = 9000;
  CommentEnumField              = 3220;
  Num_Comments                  = 3101;
  LSD_TitleOpt                  = 90;
  Comments                      = 3100;
  Rho                           = 118;
  LSD_MAT_ST                    = 352;
  LSD_MAT_D                     = 1133;
  LSD_MAT_R                     = 1134;
  LSD_MAT_H                     = 1135;
  LSD_LCIDOpt                   = 5091;
  LSD_MAT_K                     = 1131;
  LSD_LCID10                    = 1142;
  LSD_MAT_C                     = 313;
  LSD_MAT_C3                    = 1136;
  LSD_MAT_STF                   = 1137;
  LSD_MAT_RHOF                  = 1138;
  LSD_MAT_C1                    = 1139;
  LSD_MAT_C2                    = 1140;
  LSD_LCID                      = 45;
  LSD_LCID2                     = 168;
  LSD_MAT_S0                    = 1143;
  ArrayCount                    = 2246;
  LSD_MAT_ORFLOC                = 1144;
  LSD_MAT_ORFRAD                = 1145;
  LSD_MAT69_SF                  = 4730;
  LSD_MAT69_DC                  = 4731;
}

CHECK(COMMON) 
{
    LSD_MAT_K     >=  0;
}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  PISTON_STROKE=SCALAR(LSD_MAT_ST);
  PISTON_DIAMETER=SCALAR(LSD_MAT_D);
  DEFAULT_ORIFICE_RADIUS=SCALAR(LSD_MAT_R);
  ORIFICE_CONTROLLER_POSITION=SCALAR(LSD_MAT_H);
  DAMPING_CONSTANT=SCALAR(LSD_MAT_K);
  DISCHARGE_COEFFICIENT=SCALAR(LSD_MAT_C);
  COEFFICIENT_FOR_FLUID_INERTIA_TERM=SCALAR(LSD_MAT_C3);
  STIFFNESS_COEFFICIENT=SCALAR(LSD_MAT_STF);
  FLUID_DENSITY=SCALAR(LSD_MAT_RHOF);
  LINEAR_VELOCITY_TERM_COEFFICIENT=SCALAR(LSD_MAT_C1);
  QUADRATIC_VELOCITY_TERM_COEFFICIENT=SCALAR(LSD_MAT_C2);
  INITIAL_DISPLACEMENT=SCALAR(LSD_MAT_S0);
//ORIFICE_LOCATION=SCALAR(LSD_MAT_ORFLOC);
//ORIFICE_RADIUS_OF_ITH_ORIFICE=SCALAR(LSD_MAT_ORFRAD);
//SCALE_FACTOR_ON_CALCULATED_FORCE=SCALAR(LSD_MAT69_SF);
//LINEAR_VISCOUS_DAMPING_COEFFICIENT=SCALAR(LSD_MAT69_DC);
}

GUI(COMMON) 
{
     ASSIGN(KEYWORD_STR, "*MAT_SID_DAMPER_DISCRETE_BEAM");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
           ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(Rho)                         { DIMENSION="density";}
     SCALAR(LSD_MAT_ST)                  {DIMENSION="l";}
     SCALAR(LSD_MAT_D)                   {DIMENSION="l";}
     SCALAR(LSD_MAT_R)                   {DIMENSION="l";}
 optional:
     SCALAR(LSD_MAT_H)                   {DIMENSION="l";}
     FLAG(LSD_LCIDOpt);
     if(LSD_LCIDOpt == FALSE)
     {
        SCALAR(LSD_MAT_K)                {DIMENSION="DIMENSIONLESS";}  
     }
     if(LSD_LCIDOpt == TRUE)
     {
        DATA(LSD_LCID10);    
     }
     SCALAR(LSD_MAT_C)                   {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_C3)                  {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_STF)                 {DIMENSION="pressure";}
     SCALAR(LSD_MAT_RHOF)                {DIMENSION="density";}
     SCALAR(LSD_MAT_C1)                  {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_C2)                  {DIMENSION="DIMENSIONLESS";}
     DATA(LSD_LCID);      
     DATA(LSD_LCID2);     
     SCALAR(LSD_MAT_S0)                  {DIMENSION="l";}

     SIZE_RADIO(ArrayCount)
     {
        ADD(0, "OFF");
        ADD(0, "0");
        ADD(1, "1");
        ADD(2, "2");
        ADD(3, "3");
        ADD(4, "4");
        ADD(5, "5");
        ADD(6, "6");
        ADD(7, "7");
        ADD(8, "8");
        ADD(9, "9");
        ADD(10, "10");
        ADD(11, "11");
        ADD(12, "12");
        ADD(13, "13");
        ADD(14, "14");
        ADD(15, "15");
     }
            ARRAY(ArrayCount,"")
            {
               SCALAR(LSD_MAT_ORFLOC)      {DIMENSION="l";}
               SCALAR(LSD_MAT_ORFRAD)      {DIMENSION="l";}
               SCALAR(LSD_MAT69_SF)        {DIMENSION="DIMENSIONLESS";}
               SCALAR(LSD_MAT69_DC)        {DIMENSION="DIMENSIONLESS";}
            }

/*
     graphical SUPPORT("Part(s) to which material is applied") {
     OBJECTS=(/COMPONENT/BEAM,/COMPONENT/SPRING,/COMPONENT/TRUSS,/COMPONENT/RIVET);
     ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID       RHO        ST         D         R         H         K         C");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_MAT_ST,LSD_MAT_D,LSD_MAT_R,LSD_MAT_H,SCALAR_OR_OBJECT(LSD_LCIDOpt,LSD_MAT_K,LSD_LCID10),LSD_MAT_C);
    //
    COMMENT("$       C3       STF      RHOF        C1        C2     LCIDF     LCIDD        S0");
    CARD("%10lg%10lg%10lg%10lg%10lg%10d%10d%10lg",LSD_MAT_C3,LSD_MAT_STF,LSD_MAT_RHOF,LSD_MAT_C1,LSD_MAT_C2,LSD_LCID,LSD_LCID2,LSD_MAT_S0);
    //
    if(ArrayCount > 0)
    {
    COMMENT("$   ORFLOC    ORFRAD        SF        DC");
    }
    FREE_CARD_LIST(ArrayCount)
    {
        CARD("%10lg%10lg%10lg%10lg",LSD_MAT_ORFLOC,LSD_MAT_ORFRAD,LSD_MAT69_SF,LSD_MAT69_DC);
    }
}
