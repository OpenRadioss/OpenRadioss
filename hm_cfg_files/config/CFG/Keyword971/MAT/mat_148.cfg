//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 148
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    LSD_MAT148_IADIAB                       = VALUE(INT,  "This flag is used to turn ON/OFF adiabatic compression logics for an ideal gas");
    LSD_MAT148_RUNIV                        = VALUE(FLOAT, "Universal gas constant in per-mole unit");
    LSD_MATL148_B                           = ARRAY[8](FLOAT,  "First order coefficient for a temperature dependent heat capacity at constant pressure for up to eight different gases");
    LSD_MATL148_C                           = ARRAY[8](FLOAT,  "Second order coefficient for a temperature dependent heat capacity at constant pressure for up to eight different gases");
    LSD_MATL148_CPmole                      = ARRAY[8](FLOAT,  "Heat capacity at constant pressure for up to eight different gases in per-mole unit");
    LSD_MATL148_MOLWT                       = ARRAY[8](FLOAT,  "Molecular weight of each ideal gas in the mixture");
    LSD_MATL148_pres                        = ARRAY[8](FLOAT,  "Heat capacity at constant pressure for up to eight different gases in per-mass unit");
    LSD_MATL148_vol                         = ARRAY[8](FLOAT,  "Heat capacity at constant volume for up to eight different gases in per-mass unit");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSD_MAT148_IADIAB                       = 1054;
    LSD_MAT148_RUNIV                        = 1055;
    LSD_MATL148_B                           = 1058;
    LSD_MATL148_C                           = 1059;
    LSD_MATL148_CPmole                      = 1057;
    LSD_MATL148_MOLWT                       = 1056;
    LSD_MATL148_pres                        = 4781;
    LSD_MATL148_vol                         = 4762;
    LSD_TitleOpt                            = 90;
    Num_Comments                            = 3101;

}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_GAS_MIXTURE");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 optional:
     SCALAR(LSD_MAT148_IADIAB);
     SCALAR(LSD_MAT148_RUNIV)                       {DIMENSION="thermal_molar_capacity";}
     if(LSD_MAT148_RUNIV == 0.0)
     {
        ARRAY(8,"CV per Mass")
        {
           SCALAR(LSD_MATL148_vol)                   {DIMENSION="thermal_massic_capacity";}
        }
        ARRAY(8,"CP per Mass")
        {
           SCALAR(LSD_MATL148_pres)                  {DIMENSION="thermal_massic_capacity";}
        }
        
     }  
     else
     {
        ARRAY(8,"Molecular Weight")
        {
           SCALAR(LSD_MATL148_MOLWT)                    {DIMENSION="molar_mass";}
        }
        ARRAY(8,"CP per Mole")
        {
           SCALAR(LSD_MATL148_CPmole)                   {DIMENSION="thermal_molar_capacity";}
        }
        ARRAY(8,"1st order coef. of Cp(T)")
        {
           SCALAR(LSD_MATL148_B)                        {DIMENSION="thermal_molar_capacity_on_temperature";}
        }
        ARRAY(8,"2nd order coef. of Cp(T)")
        {
           SCALAR(LSD_MATL148_C)                        {DIMENSION="thermal_molar_capacity_on_square_of_temperature";}
        }        
     }
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID    IADIAB     RUNIV");
    CARD("%10d%10d%10lg",_ID_,LSD_MAT148_IADIAB, LSD_MAT148_RUNIV) ;
    //
     if(LSD_MAT148_RUNIV == 0.0)
    {
         //
         COMMENT("$      CV1       CV2       CV3       CV4       CV5       CV6       CV7       CV8");
         CELL_LIST(8,"%10lg",LSD_MATL148_vol);
         //
         COMMENT("$      CP1       CP2       CP3       CP4       CP5       CP6       CP7       CP8");
         CELL_LIST(8,"%10lg",LSD_MATL148_pres);
         //
    }
     else
    {
         //
         COMMENT("$      MW1       MW2       MW3       MW4       MW5       MW6       MW7       MW8");
         CELL_LIST(8,"%10lg",LSD_MATL148_MOLWT);
         //
         COMMENT("$      CP1       CP2       CP3       CP4       CP5       CP6       CP7       CP8");
         CELL_LIST(8,"%10lg",LSD_MATL148_CPmole);
         //
         COMMENT("$       B1        B2        B3        B4        B5        B6        B7        B8");
         CELL_LIST(8,"%10lg",LSD_MATL148_B);
         //
         COMMENT("$       C1        C2        C3        C4        C5        C6        C7        C8");
         CELL_LIST(8,"%10lg",LSD_MATL148_C);
         //
    }


}
