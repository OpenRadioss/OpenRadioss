//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 070
// 


 ATTRIBUTES(COMMON)  
 {
  
  // Initial and reference densities
  KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
  LSD_TitleOpt                      = VALUE(INT, "Title");
  CommentEnumField                  = VALUE(INT, "User Comments");
  Num_Comments                      = SIZE("No. of comment lines");
  Comments                          = ARRAY[Num_Comments](STRING, "Entity Comments");
  Rho                               = VALUE(FLOAT, "Mass density");  
  LSD_MAT83_CO                      = VALUE(FLOAT, "Length of gas column");
  LSDYNA_N                          = VALUE(FLOAT, "Adiabatic constant");
  LSD_PO                            = VALUE(FLOAT, "Initial gas pressure");
  LSDYNA_M                          = VALUE(FLOAT, "Atmospheric pressure");
  LSDYNA_SS                         = VALUE(FLOAT, "Piston cross sectional area");
  LSDYNA_SN                         = VALUE(FLOAT, "Hydraulic constant");
  LSD_LCID                          = VALUE(FUNCT, "rifice area VS element deflection");
  LSD_PCF                           = VALUE(FLOAT, "Return factor on orifice force");
  LSD_SCALE1                        = VALUE(FLOAT, "Scale factor on force");
  LSD_SFLAG                         = VALUE(FLOAT, "Clearance");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

  KEYWORD_STR                   = 9000;
  CommentEnumField              = 3220;
  Num_Comments                  = 3101;
  LSD_TitleOpt                  = 90;
  Comments                      = 3100;
  Rho                           = 118;
  LSD_MAT83_CO                  = 2614;
  LSDYNA_N                      = 71;
  LSD_PO                        = 4620;
  LSDYNA_M                      = 72;
  LSDYNA_SS                     = 70;
  LSDYNA_SN                     = 69;
  LSD_LCID                      = 45;
  LSD_PCF                       = 4718;
  LSD_SCALE1                    = 3175;
  LSD_SFLAG                     = 4719;

}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  GAS_COLUMN_LENGTH=SCALAR(LSD_MAT83_CO);
  ADIABATIC_CONSTANT=SCALAR(LSDYNA_N);
  INITIAL_GAS_PRESSURE=SCALAR(LSD_PO);
  ATMOSPHERIC_PRESSURE=SCALAR(LSDYNA_M);
  PISTON_CROSS_SECTIONAL_AREA=SCALAR(LSDYNA_SS);
  HYDRAULIC_CONSTANT=SCALAR(LSDYNA_SN);
  ORIFICE_FORCE_RETURN_FACTOR=SCALAR(LSD_PCF);
  FORCE_SCALE_FACTOR=SCALAR(LSD_SCALE1);
  CLEARANCE=SCALAR(LSD_SFLAG);
}

GUI(COMMON) 
{


     ASSIGN(KEYWORD_STR, "*MAT_HYDRAULIC_GAS_DAMPER_DISCRETE_BEAM");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
         ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(Rho)                         { DIMENSION="density";}
     SCALAR(LSD_MAT83_CO)                {DIMENSION="l";}
 optional:
     SCALAR(LSDYNA_N)                    {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_PO)                      {DIMENSION="pressure";}
     SCALAR(LSDYNA_M)                    {DIMENSION="pressure";}
 mandatory:
     SCALAR(LSDYNA_SS)                   {DIMENSION="area";}
     SCALAR(LSDYNA_SN)                   {DIMENSION="DIMENSIONLESS";}
     FUNCTION(LSD_LCID)
     {
       X_TITLE = "Deflexion"; X_DIMENSION = "l";
       Y_TITLE = "Orifice area"; Y_DIMENSION = "area";
     }   
     SCALAR(LSD_PCF)                     {DIMENSION="DIMENSIONLESS";}
 optional:
     SCALAR(LSD_SCALE1)                  {DIMENSION="DIMENSIONLESS";}
 mandatory:
     SCALAR(LSD_SFLAG)                   {DIMENSION="DIMENSIONLESS";}
/*
     optional:
     graphical SUPPORT("Part(s) to which material is applied") {
     OBJECTS=(/COMPONENT/BEAM);
     ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
      //
      COMMENT("$      MID       RHO        CO         N        P0        PA        AP        KH");
      CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_MAT83_CO,LSDYNA_N,LSD_PO,LSDYNA_M,LSDYNA_SS,LSDYNA_SN);
      //
      COMMENT("$     LCID        FR      SCLF     CLEAR");
      CARD("%10d%10lg%10lg%10lg",LSD_LCID,LSD_PCF,LSD_SCALE1,LSD_SFLAG);
      //
}