//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 093
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    MATL93_RPIDR                            = VALUE(INT,  "Rotational motion about the local r-axis");
    MATL93_RPIDS                            = VALUE(INT,  "Rotational motion about the local s-axis");
    MATL93_RPIDT                            = VALUE(INT,  "Rotational motion about the local t-axis");
    MATL93_TPIDR                            = VALUE(INT,  "Translational motion in the local r-direction");
    MATL93_TPIDS                            = VALUE(INT,  "Translational motion in the local s-direction");
    MATL93_TPIDT                            = VALUE(INT,  "Translational motion in the local t-direction");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSD_TitleOpt                            = 90;
    MATL93_RPIDR                            = 4223;
    MATL93_RPIDS                            = 4224;
    MATL93_RPIDT                            = 4225;
    MATL93_TPIDR                            = 4220;
    MATL93_TPIDS                            = 4221;
    MATL93_TPIDT                            = 4222;
    Num_Comments                            = 3101;
    Rho                                     = 118;

}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);

}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_ELASTIC_6DOF_SPRING_DISCRETE_BEAM");
     RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do not export");
    }
    if( CommentEnumField == 2)
    {
       SIZE(Num_Comments);
       ARRAY(Num_Comments,"")
       {
          SCALAR(Comments);
       }
    } 
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(Rho)                        {DIMENSION="density";}
 optional:
     SCALAR(MATL93_TPIDR)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MATL93_TPIDS)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MATL93_TPIDT)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MATL93_RPIDR)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MATL93_RPIDS)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MATL93_RPIDT)               {DIMENSION="DIMENSIONLESS";}
/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/BEAM);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID       RHO     TPIDR     TPIDS     TPIDT     RPIDR     RPIDS     RPIDT");
    CARD("%10d%10lg%10d%10d%10d%10d%10d%10d",_ID_,Rho,MATL93_TPIDR,MATL93_TPIDS,MATL93_TPIDT,MATL93_RPIDR,MATL93_RPIDS,MATL93_RPIDT);
    //

}
