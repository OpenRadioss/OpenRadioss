//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 230
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    E                                       = VALUE(FLOAT,  "Youngs modulus");
    LSDYNA_K                                = VALUE(FLOAT,  "Bulk modulus");
    OPT_TYPE_STR                            = VALUE(STRING, "OPT");
    LSDYNA_VC                               = VALUE(FLOAT,  "Tensor viscosity coefficient");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    MATL_OPTION                             = VALUE(INT,  "Fluid_Option");
    Nu                                      = VALUE(FLOAT,  "Poissons ratio.");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    IO_FLAG                                 = VALUE(INT, "io flag");
    _HMCOMMENTSFLAG                         = VALUE(INT, "Write HM Comments");
    TITLE                                   = VALUE(STRING, "Title");
    _HAS_HEADER                             = VALUE(BOOL,"Has Header Card");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    E                                       = 119;
    LSDYNA_K                                = 124;
    LSDYNA_VC                               = 8;
    LSD_TitleOpt                            = 90;
    MATL_OPTION                             = 999;
    Nu                                      = 120;
    Num_Comments                            = 3101;
    Rho                                     = 118;
    IO_FLAG                                 = -1;
    OPT_TYPE_STR                            = -1;
    TITLE                                   = -1;
    _HAS_HEADER                             = -1;
}

DRAWABLES(COMMON) {
public:
    MASS_DENSITY=SCALAR(Rho);
    YOUNG_MODULUS = SCALAR(E);
    POISSON_RATIO = SCALAR(Nu);
        //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

DEFAULTS(COMMON)
{
    _HAS_HEADER = TRUE;
}

CHECK(COMMON)
{
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_PML_ELASTIC");
     RADIO(CommentEnumField)
     {
         //ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(MATL_OPTION);
     if(MATL_OPTION == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_FLUID");
     } 
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
     SCALAR(Rho)                            {DIMENSION="density";} 
     if(MATL_OPTION == FALSE)
     {
         SCALAR(E)                          {DIMENSION="pressure";}
         SCALAR(Nu)                         {DIMENSION="DIMENSIONLESS";}
     }
     if(MATL_OPTION == TRUE)
     {
         SCALAR(LSDYNA_K)                   {DIMENSION="pressure";}
         SCALAR(LSDYNA_VC)                  {DIMENSION="DIMENSIONLESS";}
     }
/*
     graphical SUPPORT("Part(s) to which material is applied") {
        OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/TETRA10,/COMPONENT/3D_LIN);
        ADD(COMPONENT,"Parts");
     }
*/
}

// File format
FORMAT(Keyword971) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);

    if(IO_FLAG == 1 )
    {
         HEADER("*MAT_230_%5s", OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && OPT_TYPE_STR != "FLUID")
    {
         HEADER("*MAT_PML_ELASTIC_%5s", OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && OPT_TYPE_STR == "FLUID")
    {
        ASSIGN(MATL_OPTION, 1);
    }
    if(IO_FLAG == 2 && MATL_OPTION == 1 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_PML_ELASTIC_FLUID");
    }   
    else if(IO_FLAG == 2 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_PML_ELASTIC");
    }
    else if(IO_FLAG == 2 && MATL_OPTION == 1 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_PML_ELASTIC_FLUID_TITLE");
        CARD("%-80s", TITLE);
    }   
    else if(IO_FLAG == 2 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_PML_ELASTIC_TITLE");
        CARD("%-80s", TITLE);
    }

    if(MATL_OPTION == FALSE)
    {
        //
        COMMENT("$      MID       RHO         E        PR");
        CARD("%10d%10lg%10lg%10lg",_ID_,Rho,E,Nu);
        //
    }
    if(MATL_OPTION == TRUE)
    {
        //
        COMMENT("$      MID       RHO         K        VC");
        CARD("%10d%10lg%10lg%10lg",_ID_,Rho,LSDYNA_K,LSDYNA_VC);
        //
    }
}
