//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 172
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    MATL172_ESOFT                           = VALUE(FLOAT,  "Tension stiffening");
    MATL172_FC                              = VALUE(FLOAT,  "Compressive strength of concrete");
    MATL172_FRACRX                          = VALUE(FLOAT,  "Fraction of reinforcement(x-axis)");
    MATL172_FRACRY                          = VALUE(FLOAT,  "Fraction of reinforcement(y-axis)");
    MATL172_FT                              = VALUE(FLOAT,  "Tensile strength to cause cracking");
    MATL172_GAMSC                           = VALUE(FLOAT,  "Load factor");
    MATL172_ISHCHK                          = VALUE(INT,  "Flag to input data for shear capacity check");
    MATL172_LCALPC                          = VALUE(FUNCT,  "Optional loadcurve giving thermal expansion coefficient of concrete vs temperature");
    MATL172_LCALPS                          = VALUE(FUNCT,  "Optional loadcurve giving thermal expansion coefficient of reinforcement vs temperature");
    MATL172_LCHAR                           = VALUE(FLOAT,  "Characteristic length at which ESOFT applies");
    MATL172_LCRSU                           = VALUE(FUNCT,  "gives non-dimensional factor on SUREINF versus plastic strain");
    MATL172_MU                              = VALUE(FLOAT,  "Friction on crack planes");
    MATL172_PRREINF                         = VALUE(FLOAT,  "Poisson ratio of reinforcement");
    MATL172_P_OR_F                          = VALUE(FLOAT,  "shear check");
    MATL172_SUREINF                         = VALUE(FLOAT,  "Ultimate stress of reinforcement");
    MATL172_TYPEC                           = VALUE(FLOAT,  "Concrete aggregate type for stress-strain-temperature relationship");
    MATL172_TYPER                           = VALUE(FLOAT,  "Type of reinforcement for stress-strain-temperature relationship");
    MATL172_TYPSEC                          = VALUE(FLOAT,  "Type of shear capacity check");
    MATL172_UNITC                           = VALUE(FLOAT,  "Factor to convert stress units to MPa");
    MATL172_YMREINF                         = VALUE(FLOAT,  "Young modulus of reinforcement");
    Rho                                     = VALUE(FLOAT,  "Mass density");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSD_TitleOpt                            = 90;
    MATL172_ESOFT                           = 1859;
    MATL172_FC                              = 1853;
    MATL172_FRACRX                          = 1871;
    MATL172_FRACRY                          = 1872;
    MATL172_FT                              = 1854;
    MATL172_GAMSC                           = 1885;
    MATL172_ISHCHK                          = 1880;
    MATL172_LCALPC                          = 1878;
    MATL172_LCALPS                          = 1874;
    MATL172_LCHAR                           = 1860;
    MATL172_LCRSU                           = 1873;
    MATL172_MU                              = 1861;
    MATL172_PRREINF                         = 1868;
    MATL172_P_OR_F                          = 1883;
    MATL172_SUREINF                         = 1869;
    MATL172_TYPEC                           = 1855;
    MATL172_TYPER                           = 1870;
    MATL172_TYPSEC                          = 1882;
    MATL172_UNITC                           = 1856;
    MATL172_YMREINF                         = 1867;
    Num_Comments                            = 3101;
    Rho                                     = 118;

}

DEFAULTS(COMMON)
{

    MATL172_MU          = 0.4;
    MATL172_TYPEC       = 1.0;
    MATL172_TYPER       = 1.0;
    MATL172_UNITC       = 1.0;

}

DRAWABLES(COMMON)
{
  public:  
  MASS_DENSITY=SCALAR(Rho);  
  COMPRESSIVE_STRENGTH=SCALAR(MATL172_FC);  
  TENSILE_STRENGTH=SCALAR(MATL172_FT);  
  FACTOR_TO_CONVERT_STRESS_UNITS_TO_MPA=SCALAR(MATL172_UNITC);  
  FRICTION_ON_CRACK_PLANES=SCALAR(MATL172_MU);  
  CHARACTERISTIC_LENGTH_AT_WHICH_ESOFT_APPLIES=SCALAR(MATL172_LCHAR);  
  YOUNG_MODULUS=SCALAR(MATL172_YMREINF);  
  POISSON_RATIO=SCALAR(MATL172_PRREINF);
  ULTIMATE_STRESS_OF_REINFORCEMENT=SCALAR(MATL172_SUREINF);  
  public:
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED= EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
  private:
  G = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1 = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
  public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5); 
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_CONCRETE_EC2");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
mandatory:
     SCALAR(Rho)                                    {DIMENSION="density";} 
optional:
     SCALAR(MATL172_FC)                             {DIMENSION="pressure";}
     SCALAR(MATL172_FT)                             {DIMENSION="pressure";}
     RADIO(MATL172_TYPEC)
     {
        ADD(1.0, "1.0: Siliceous, relationships from Draft EC2 ANNEX");
        ADD(2.0, "2.0: Calcareous, relationships from Draft EC2 ANNEX");
     }
     SCALAR(MATL172_UNITC)                          {DIMENSION="DIMENSIONLESS";}
     SCALAR(MATL172_ESOFT)                          {DIMENSION="DIMENSIONLESS";}  
     SCALAR(MATL172_LCHAR)                          {DIMENSION="l";}  
     SCALAR(MATL172_MU)                             {DIMENSION="DIMENSIONLESS";}
     SCALAR(MATL172_YMREINF)                        {DIMENSION="pressure";}  
     SCALAR(MATL172_PRREINF)                        {DIMENSION="DIMENSIONLESS";}
     SCALAR(MATL172_SUREINF)                        {DIMENSION="pressure";}
     RADIO(MATL172_TYPER)
     {
        ADD(1.0, "1.0: Hot rolled reinforcing steel, from Draft EC2 Annex");
        ADD(2.0, "2.0: Cold worked reinforcing steel,default, from Draft EC2");
        ADD(3.0, "3.0: Quenched and tempered prestressing steel");
        ADD(4.0, "4.0: Cold worked prestressingn steel");
     }
     SCALAR(MATL172_FRACRX)                         {DIMENSION="DIMENSIONLESS";}  
     SCALAR(MATL172_FRACRY)                         {DIMENSION="DIMENSIONLESS";}  
/*
  graphical SUPPORT("Part(s) to which material is applied")
  {
    OBJECTS=(/COMPONENT/SHELL,/COMPONENT/BEAM);
    ADD(COMPONENT,"Parts");
  }  
*/

}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID       RHO        FC        FT     TYPEC     UNITC");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,MATL172_FC,MATL172_FT,MATL172_TYPEC,MATL172_UNITC);
    //
    COMMENT("$    ESOFT     LCHAR        MU");
    CARD("%10lg%10lg%10lg",MATL172_ESOFT,MATL172_LCHAR,MATL172_MU);
    //
    COMMENT("$  YMREINF   PRREINF   SUREINF     TYPER    FRACRX     FRACY");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg",MATL172_YMREINF,MATL172_PRREINF,MATL172_SUREINF,MATL172_TYPER,MATL172_FRACRX,MATL172_FRACRY);
    //


}
