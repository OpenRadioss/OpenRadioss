//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 017
// 


ATTRIBUTES(COMMON) 

{

    // Initial and reference densities
    KEYWORD_STR                     = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt                    = VALUE(INT, "Title");
    CommentEnumField                = VALUE(INT, "User Comments");
    Num_Comments                    = SIZE("No. of comment lines");
    Comments                        = ARRAY[Num_Comments](STRING, "Entity Comments");
    Rho                             = VALUE(FLOAT, "Rho");  
    E                               = VALUE(FLOAT, "E");  
    LSD_MAT_D4                      = VALUE(FLOAT, "PR");
    LSDYNA_SIGY                     = VALUE(FLOAT, "SIGY");
    LSDYNA_ETAN                     = VALUE(FLOAT, "ETAN");  
    LSD_MAT_D2                      = VALUE(FLOAT, "FS");
    LSD_MAT_D3                      = VALUE(FLOAT, "PRF");

    optionalCards                   = VALUE(INT, "OptionalCard");
    LSD_SOFT                        = VALUE(FLOAT, "SOFT");
    LSD_CVELO                       = VALUE(FLOAT, "CVELO");

    IO_FLAG                         = VALUE(INT, "IO");

}

SKEYWORDS_IDENTIFIER(COMMON)

{

    KEYWORD_STR                 = 9000;
    CommentEnumField            = 3220;
    Num_Comments                = 3101;
    LSD_TitleOpt                = 90;
    Comments                    = 3100;
    Rho                         = 118;
    E                           = 119;
    LSD_MAT_D4                  = 323;
    LSDYNA_SIGY                 = 152;
    LSDYNA_ETAN                 = 153;
    LSD_MAT_D2                  = 321;
    LSD_MAT_D3                  = 322;

    optionalCards               = 4772;
    LSD_SOFT                    = 362;
    LSD_CVELO                   = 8408;

    IO_FLAG                     = -1;
}

DRAWABLES(COMMON) {
public:
    MASS_DENSITY=SCALAR(Rho);
    YOUNG_MODULUS=SCALAR(E);
    POISSON_RATIO=SCALAR(LSD_MAT_D4);
    YIELD_STRESS=SCALAR(LSDYNA_SIGY);
    PLASTIC_HARDENING_MODULUS=SCALAR(LSDYNA_ETAN);
    FRACTURE_STRESS=SCALAR(LSD_MAT_D2);
    CUTOFF_PRESSURE=SCALAR(LSD_MAT_D3);
    //SOUND_SPEED is speed for ISDO = 0 and 1
    SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
    SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
private:
    G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
    C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
public:
    SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

DEFAULTS(COMMON)
{
    LSD_SOFT                 = 1.0;
}

GUI(COMMON) 

{


    ASSIGN(KEYWORD_STR, "*MAT_ORIENTED_CRACK");
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do not export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
            SCALAR(Comments);
        }
    }     
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == TRUE)
    {
        ASSIGN(KEYWORD_STR, "_TITLE");
    } 
mandatory:
    SCALAR(Rho)         { DIMENSION="density";}
    SCALAR(E)           {DIMENSION="pressure";}
optional:
    SCALAR(LSD_MAT_D4)  {DIMENSION="DIMENSIONLESS";}
mandatory:
    SCALAR(LSDYNA_SIGY) {DIMENSION="pressure";}
optional:
    SCALAR(LSDYNA_ETAN) {DIMENSION="pressure";}
    SCALAR(LSD_MAT_D2)  {DIMENSION="pressure";}
    SCALAR(LSD_MAT_D3)  {DIMENSION="pressure";}
    FLAG(optionalCards);
    if(optionalCards == TRUE)
    {
        SCALAR(LSD_SOFT)   {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_CVELO)  {DIMENSION="velocity";}
    }
    /*
    graphical SUPPORT("Part(s) to which material is applied") {
    OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D);
    ADD(COMPONENT,"Parts");
    }
    */
}

// File format
FORMAT(Keyword971) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);

    //
    COMMENT("$      MID       RHO         E        PR      SIGY      ETAN        FS       PRF");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,LSD_MAT_D4,LSDYNA_SIGY,LSDYNA_ETAN,LSD_MAT_D2,LSD_MAT_D3);
    //
    if(optionalCards == 1)
    {
        COMMENT("$     SOFT     CVELO");
    }
    FREE_CARD(optionalCards, "%10lg%10lg", LSD_SOFT, LSD_CVELO);
}