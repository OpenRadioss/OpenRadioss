//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 064
// 


 ATTRIBUTES(COMMON)  
 {
  
  // Initial and reference densities
  KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
  LSD_TitleOpt                      = VALUE(INT, "Title");
  CommentEnumField                  = VALUE(INT, "User Comments");
  Num_Comments                      = SIZE("No. of comment lines");
  Comments                          = ARRAY[Num_Comments](STRING, "Entity Comments");
  Rho                               = VALUE(FLOAT, "Mass density");  
  E                                 = VALUE(FLOAT, "Youngs modulus of elasticity");
  Nu                                = VALUE(FLOAT, "Poissons ratio");
  LSD_LCIDOpt                       = VALUE(INT, "K_Option");
  LSD_MAT_K                         = VALUE(FLOAT, "Material constant");
  LSD_LCID10                        = VALUE(FUNCT, "k as a function of effective plastic strain.");
  LSD_MAT_M                         = VALUE(FLOAT, "Strain hardening coefficient");
  LSD_MAT_N                         = VALUE(FLOAT, "Strain rate sensitivity coefficient");
  LSD_MAT_E0                        = VALUE(FLOAT, "Initial strain rate");
  LSD_VP64                          = VALUE(FLOAT, "Formulation for rate effects");
  LSD_EPS0                          = VALUE(FLOAT, "Quasi-static threshold strain rate");
  
}

SKEYWORDS_IDENTIFIER(COMMON)
{

  KEYWORD_STR                   = 9000;
  CommentEnumField              = 3220;
  Num_Comments                  = 3101;
  LSD_TitleOpt                  = 90;
  Comments                      = 3100;
  Rho                           = 118;
  E                             = 119;
  Nu                            = 120;
  LSD_LCIDOpt                   = 5091;
  LSD_MAT_K                     = 1131;
  LSD_LCID10                    = 1142;
  LSD_MAT_M                     = 314;
  LSD_MAT_N                     = 312;
  LSD_MAT_E0                    = 1132;
  LSD_VP64                      = 2858;
  LSD_EPS0                      = 2860;
  
}

DEFAULTS(COMMON)
{
    LSD_MAT_M   = 0.0001;
    LSD_MAT_E0  = 0.0002;
}

CHECK(COMMON) 
{
    LSD_MAT_K     >=  0;
}

DRAWABLES(COMMON) {
 public:
  MASS_DENSITY    =SCALAR(Rho);
  YOUNG_MODULUS   =SCALAR(E);
  POISSON_RATIO   =SCALAR(Nu);
  MATERIAL_CONSTANT  =SCALAR(LSD_MAT_K);
  STRAIN_HARDENING_COEFFICIENT    =SCALAR(LSD_MAT_M);
  STRAIN_RATE_SENSITIVITY_COEFFICIENT    =SCALAR(LSD_MAT_N);
  INITIAL_STRAIN_RATE    =SCALAR(LSD_MAT_E0); 
  RATE_EFFECTS_FORMULATION    =SCALAR(LSD_VP64);
  FACTOR_TO_NORMALIZE_STRAIN_RATE    =SCALAR(LSD_EPS0); 
 public:
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON) 
{


     ASSIGN(KEYWORD_STR, "*MAT_RATE_SENSITIVE_POWERLAW_PLASTICITY");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
       {
             ASSIGN(KEYWORD_STR, "_TITLE");
       } 
 mandatory:
     SCALAR(Rho)                        { DIMENSION="density";}
     SCALAR(E)                          {DIMENSION="pressure";}
 optional:
     SCALAR(Nu)                         {DIMENSION="DIMENSIONLESS";}
     FLAG(LSD_LCIDOpt);
     if(LSD_LCIDOpt == FALSE)
     {
        SCALAR(LSD_MAT_K)               { DIMENSION="DIMENSIONLESS";}
     }
     if(LSD_LCIDOpt == TRUE)
     {
        DATA(LSD_LCID10);
     }
     SCALAR(LSD_MAT_M)                  { DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_N)                  { DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_E0)                 { DIMENSION="strain_rate";}
     RADIO(LSD_VP64) 
     {
        ADD(0.0, "0.0: Scale yield stress (default)");
        ADD(1.0, "1.0: Viscoplastic formulation");
     }
     SCALAR(LSD_EPS0);
/*
  graphical SUPPORT("Part(s) to which material is applied") {
OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D,/COMPONENT/BEAM,/COMPONENT/SPRING,/COMPONENT/TRUSS,/COMPONENT/RIVET,/COMPONENT/SHELL,/COMPONENT/PENTA6,/COMPONENT/SHEL16,/COMPONENT/TSHELL);
    ADD(COMPONENT,"Parts");
  }
*/
}

// File format
FORMAT(Keyword971) 
{
      //
      COMMENT("$      MID       RHO         E        PR         K         M         N        E0");
      CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,Nu,SCALAR_OR_OBJECT(LSD_LCIDOpt,LSD_MAT_K,LSD_LCID10),LSD_MAT_M,LSD_MAT_N,LSD_MAT_E0);
      //
      COMMENT("$       VP      EPS0");
      CARD("%10lg%10lg",LSD_VP64,LSD_EPS0);
      //
}