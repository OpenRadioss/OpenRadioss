//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 065
// 


 ATTRIBUTES(COMMON) 
 {
  
  // Initial and reference densities
  KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
  LSD_TitleOpt                      = VALUE(INT, "Title");
  CommentEnumField                  = VALUE(INT, "User Comments");
  Num_Comments                      = SIZE("No. of comment lines");
  Comments                          = ARRAY[Num_Comments](STRING, "Entity Comments");
  Rho                               = VALUE(FLOAT, "Mass density");  
  LSD_G                             = VALUE(FLOAT, "Shear modulus");
  E                                 = VALUE(FLOAT, "factor to normalize strain rate");
  LSD_MAT_N                         = VALUE(FLOAT, "exponent for bcc metal");
  LSD_MASS                          = VALUE(FLOAT, "room temperature");
  LSD_MAT_PC                        = VALUE(FLOAT, "Pressure cutoff");
  LSD_SPALL                         = VALUE(FLOAT, "Spall Type");
  LSD_C1                            = VALUE(FLOAT, "coefficients for flow stress");
  LSD_C2                            = VALUE(FLOAT, "coefficients for flow stress");
  LSD_MAT_C3                        = VALUE(FLOAT, "coefficients for flow stress");
  LSD_MAT_C4                        = VALUE(FLOAT, "coefficients for flow stress");
  LSD_MAT52_C5                      = VALUE(FLOAT, "coefficients for flow stress");
  LSD_MAT52_C6                      = VALUE(FLOAT, "coefficients for flow stress");
  LSD_MAT100_EFAIL                  = VALUE(FLOAT, "Failure strain for erosion");
  LSD_MAT_VP                        = VALUE(FLOAT, "Formulation for rate effects");
  LSD_MAT72_B1                      = VALUE(FLOAT, "coef. for polynomial to represent temp. dependency of flow stress yield");
  LSD_MAT72_B2                      = VALUE(FLOAT, "coef. for polynomial to represent temp. dependency of flow stress yield");
  LSD_MAT72_B3                      = VALUE(FLOAT, "coef. for polynomial to represent temp. dependency of flow stress yield");
  LSD_H                             = VALUE(FLOAT, "coef. for defining heat capacity and temp. dependency of heat capacity");
  LSD_AE                            = VALUE(FLOAT, "coef. for defining heat capacity and temp. dependency of heat capacity");
  LSD_BE                            = VALUE(FLOAT, "coef. for defining heat capacity and temp. dependency of heat capacity");
  LSD_R1E                           = VALUE(FLOAT, "coef. for defining heat capacity and temp. dependency of heat capacity");
  LSD_MAT_BULK                      = VALUE(FLOAT, "Bulk modulus defined for shell elements");


}

SKEYWORDS_IDENTIFIER(COMMON)
{

  KEYWORD_STR                   = 9000;
  CommentEnumField              = 3220;
  Num_Comments                  = 3101;
  LSD_TitleOpt                  = 90;
  Comments                      = 3100;
  Rho                           = 118;
  LSD_G                         = 1560;
  E                             = 119;
  LSD_MAT_N                     = 312; 
  LSD_MASS                      = 76;
  LSD_MAT_PC                    = 282;
  LSD_SPALL                     = 3013;
  LSD_C1                        = 1501;
  LSD_C2                        = 1502;
  LSD_MAT_C3                    = 1136;
  LSD_MAT_C4                    = 5215;
  LSD_MAT52_C5                  = 1232;
  LSD_MAT52_C6                  = 1233;
  LSD_MAT100_EFAIL              = 2532;
  LSD_MAT_VP                    = 4391;
  LSD_MAT72_B1                  = 2696;
  LSD_MAT72_B2                  = 2697;
  LSD_MAT72_B3                  = 2698;
  LSD_H                         = 1561;
  LSD_AE                        = 1562;
  LSD_BE                        = 1563;
  LSD_R1E                       = 1564;
  LSD_MAT_BULK                  = 278;
  
}

DRAWABLES(COMMON) {
  public:
      MASS_DENSITY                      =SCALAR(Rho);
      SHEAR_MODULUS                     =SCALAR(LSD_G);
      FACTOR_TO_NORMALIZE_STRAIN_RATE   =SCALAR(E);
      BCC_METAL_EXPONENT                =SCALAR(LSD_MAT_N);
      ROOM_TEMPERATURE                  =SCALAR(LSD_MASS);
      PRESSURE_CUTOFF                   =SCALAR(LSD_MAT_PC);
      SPALL_TYPE                        =SCALAR(LSD_SPALL);
      FAILURE_STRAIN                    =SCALAR(LSD_MAT100_EFAIL);
      RATE_EFFECTS_FORMULATION          =SCALAR(LSD_MAT_VP);
      SHELL_ELEMENTS_BULK_MODULUS       =SCALAR(LSD_MAT_BULK);
      YOUNG_MODULUS         = EVAL((9*SHELL_ELEMENTS_BULK_MODULUS*SHEAR_MODULUS)/(3.*SHELL_ELEMENTS_BULK_MODULUS+SHEAR_MODULUS)) ;
      POISSON_RATIO         = EVAL((3.*SHELL_ELEMENTS_BULK_MODULUS-2.*SHEAR_MODULUS)/(6.*SHELL_ELEMENTS_BULK_MODULUS+2.*SHEAR_MODULUS));
  public:
      //SOUND_SPEED is speed for ISDO = 0 and 1
      SOUND_SPEED           = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
      SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
   SOUND_SPEED_SOLID = EVAL(((4*SHEAR_MODULUS/3+SHELL_ELEMENTS_BULK_MODULUS)/MASS_DENSITY)^0.5);
}

GUI(COMMON) 
{


     ASSIGN(KEYWORD_STR, "*MAT_MODIFIED_ZERILLI_ARMSTRONG");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
       {
             ASSIGN(KEYWORD_STR, "_TITLE");
       } 
 mandatory:
     SCALAR(Rho)                        { DIMENSION="density";}
     SCALAR(LSD_G)                      { DIMENSION="pressure";}
 optional:
     SCALAR(E)                          { DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_N)                  { DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MASS)                   { DIMENSION="k";}
     SCALAR(LSD_MAT_PC)                 { DIMENSION="pressure";}
     RADIO(LSD_SPALL)
     {
            ADD(1.0, "1.0: Tensile pressure is limited by PC (p >= PC)");
            ADD(2.0, "2.0: Sigma max >= -PC triggers shell elements deletion and tensile stress in solid reset to 0");
            ADD(3.0, "3.0: p < PC triggers shell element deletion and pressure to be reset to zero in soild elements");
     }     
     SCALAR(LSD_C1)                     { DIMENSION="pressure";}
     SCALAR(LSD_C2)                     { DIMENSION="pressure";}
     SCALAR(LSD_MAT_C3)                 { DIMENSION="pressure";}
     SCALAR(LSD_MAT_C4)                 { DIMENSION="pressure";}
     SCALAR(LSD_MAT52_C5)               { DIMENSION="pressure";}
     SCALAR(LSD_MAT52_C6)               { DIMENSION="pressure";}
     SCALAR(LSD_MAT100_EFAIL)           { DIMENSION="DIMENSIONLESS";}
     RADIO(LSD_MAT_VP)
     {
            ADD(0.0, "0.0: Scale yield stress (default)");
            ADD(1.0, "1.0: Viscoplastic formulation");
     }     
     SCALAR(LSD_MAT72_B1)               { DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT72_B2)               { DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT72_B3)               { DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_H)                      { DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_AE)                     { DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_BE)                     { DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_R1E)                    { DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_BULK)               { DIMENSION="pressure";}
/*
     graphical SUPPORT("Part(s) to which material is applied") {
     OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D,/COMPONENT/BEAM,/COMPONENT/SPRING,/COMPONENT/TRUSS,/COMPONENT/RIVET,/COMPONENT/SHELL,/COMPONENT/PENTA6,/COMPONENT/SHEL16);
     ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID       RHO         G        E0         N     TROOM        PC     SPALL");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_G,E,LSD_MAT_N,LSD_MASS,LSD_MAT_PC,LSD_SPALL);
    //
    COMMENT("$       C1        C2        C3        C4        C5        C6     EFAIL        VP");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_C1,LSD_C2,LSD_MAT_C3,LSD_MAT_C4,LSD_MAT52_C5,LSD_MAT52_C6,LSD_MAT100_EFAIL,LSD_MAT_VP);
    //
    COMMENT("$       B1        B2        B3        G1        G2        G3        G4      BULK");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT72_B1,LSD_MAT72_B2,LSD_MAT72_B3,LSD_H,LSD_AE,LSD_BE,LSD_R1E,LSD_MAT_BULK);
    //
}