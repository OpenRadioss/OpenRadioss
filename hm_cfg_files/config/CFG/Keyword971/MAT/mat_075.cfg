//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 075
// 


ATTRIBUTES(COMMON) 
{
  
  // Initial and reference densities
  KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
  LSD_TitleOpt                      = VALUE(INT, "Title");
  CommentEnumField                  = VALUE(INT, "User Comments");
  Num_Comments                      = SIZE("No. of comment lines");
  Comments                          = ARRAY[Num_Comments](STRING, "Entity Comments");
  Rho                               = VALUE(FLOAT, "Mass density");  
  E                                 = VALUE(FLOAT, "Youngs modulus");
  Nu                                = VALUE(FLOAT, "Poisson coefficient");
  LSD_LCID                          = VALUE(FUNCT, "pressure for plastic yielding versus volumetric strain");
  LSD_LCID2                         = VALUE(FUNCT, "uniaxial yield stress versus volumetric strain");
  LSDYNA_VC                         = VALUE(FLOAT, "Viscous damping coefficient");
  LSD_MAT_PC                        = VALUE(FLOAT, "Pressure cutoff for hydrostatic tension");
  LSD_VPC                           = VALUE(FLOAT, "Variable pressure cutoff for hydrostatic tension");
  LSD_TSC                           = VALUE(FLOAT, "Tension cutoff for uniaxial tensile stress");
  LSD_VTSC                          = VALUE(FLOAT, "Variable tension cutoff for uniaxial tensile stress");
  LSD_LCRATE                        = VALUE(FUNCT, "scale factor for the previous yield curves");
  LSDYNA_KCON                       = VALUE(FLOAT, "Stiffness coefficient for contact interface stiffness");
  LSD_MATL75_ISFLG                  = VALUE(FLOAT, "Flag for tensile response");
  
}

SKEYWORDS_IDENTIFIER(COMMON)
{

  KEYWORD_STR                   = 9000;
  CommentEnumField              = 3220;
  Num_Comments                  = 3101;
  LSD_TitleOpt                  = 90;
  Comments                      = 3100;
  Rho                           = 118;
  E                             = 119;
  LSD_LCID                      = 45;
  LSD_LCID2                     = 168;
  LSDYNA_VC                     = 8;
  LSD_MAT_PC                    = 282;
  LSD_VPC                       = 5219;
  LSD_TSC                       = 5220;
  LSD_VTSC                      = 5221;
  LSD_LCRATE                    = 5222;
  Nu                            = 120;
  LSDYNA_KCON                   = 260;
  LSD_MATL75_ISFLG              = 5354;
 
}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  YOUNG_MODULUS=SCALAR(E);
  VISCOUS_DAMPING_COEFFICIENT=SCALAR(LSDYNA_VC);
  PRESSURE_CUTOFF=SCALAR(LSD_MAT_PC);
  VARIABLE_PRESSURE_CUTOFF=SCALAR(LSD_VPC);
  VARIABLE_TENSION_CUTOFF=SCALAR(LSD_VTSC);
  POISSON_RATIO=SCALAR(Nu);
  STIFFNESS_COEFFICIENT=SCALAR(LSDYNA_KCON);
  FLAG_FOR_TENSILE_RESPONSE=SCALAR(LSD_MATL75_ISFLG);
 public:
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON) 
{


     ASSIGN(KEYWORD_STR, "*MAT_BILKHU/DUBOIS_FOAM");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
           ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:  
     SCALAR(Rho)                        {DIMENSION="density";}
     SCALAR(E)                          {DIMENSION="pressure";}
    FUNCTION(LSD_LCID)
    {
      X_TITLE = "Volumetric strain"; X_DIMENSION = "DIMENSIONLESS";
      Y_TITLE = "pressure"; Y_DIMENSION = "pressure";
    }      
    FUNCTION(LSD_LCID2)
    {
      X_TITLE = "Volumetric strain"; X_DIMENSION = "DIMENSIONLESS";
      Y_TITLE = "Yield stress"; Y_DIMENSION = "pressure";
    }       
 optional:
     SCALAR(LSDYNA_VC)                  {DIMENSION="dynamicviscosity";}
     SCALAR(LSD_MAT_PC)                 {DIMENSION="pressure";}
     SCALAR(LSD_VPC)                    {DIMENSION="pressure";}
     SCALAR(LSD_TSC)                    {DIMENSION="pressure";}
     SCALAR(LSD_VTSC)                   {DIMENSION="pressure";}
     FUNCTION(LSD_LCRATE)
     {
       X_TITLE = "Volumetric strain"; X_DIMENSION = "DIMENSIONLESS";
       Y_TITLE = "Scale factor"; Y_DIMENSION = "DIMENSIONLESS";
     }       
     SCALAR(Nu)                         {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_KCON)                {DIMENSION="pressure";}
     RADIO(LSD_MATL75_ISFLG)            
     {
        ADD(0.0, "0.0: Load curve abscissa in tensile region correspond to volumetric strain");
        ADD(1.0, "1.0: Load curve abscissa in tensile region correspond to effective strain");
     }
/*
     graphical SUPPORT("Part(s) to which material is applied") {
     OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D);
     ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID       RHO        YM      LCPY     LCUYS        VC        PC       VPC");
    CARD("%10d%10lg%10lg%10d%10d%10lg%10lg%10lg",_ID_,Rho,E,LSD_LCID,LSD_LCID2,LSDYNA_VC,LSD_MAT_PC,LSD_VPC);
    //
    COMMENT("$      TSC      VTSC    LCRATE        PR      KCON     ISFLG");
    CARD("%10lg%10lg%10d%10lg%10lg%10lg",LSD_TSC,LSD_VTSC,LSD_LCRATE,Nu,LSDYNA_KCON,LSD_MATL75_ISFLG);
    //
}