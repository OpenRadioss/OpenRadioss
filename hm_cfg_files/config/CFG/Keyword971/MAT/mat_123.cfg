//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 123
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    ArrayCount                              = SIZE("ArrayCount");
    CMoption                                = VALUE(INT,  "Options");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    E                                       = VALUE(FLOAT,  "Young’s modulus");
    EncTypeEnumField                        = VALUE(INT,  "Type");
    LSDYNA_C                                = VALUE(FLOAT,  "Strain rate parameter");
    LSDYNA_ETAN                             = VALUE(FLOAT,  "Tangent modulus");
    LSDYNA_FAIL                             = VALUE(FLOAT,  "Failure flag");
    LSDYNA_P                                = VALUE(FLOAT,  "Strain rate parameter");
    LSDYNA_SIGY                             = VALUE(FLOAT,  "Yield stress");
    LSDYNA_TDEL                             = VALUE(FLOAT,  "Minimum time step size for automatic element deletion");
    LSD_LCID                                = VALUE(FUNCT,  "Load curve ID or Table ID");
    LSD_LCID8                               = VALUE(FUNCT,  "Load curve ID defining strain rate scaling effect on yield stress");
    LSD_LCTSRF                              = VALUE(FUNCT,  "Load curve that defines the thinning strain at failure as a function of the plastic strain rate");
    LSDYNA_EPS1                             = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS2                             = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS3                             = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS4                             = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS5                             = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS6                             = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS7                             = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS8                             = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_ES1                              = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES2                              = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES3                              = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES4                              = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES5                              = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES6                              = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES7                              = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES8                              = VALUE(FLOAT,  "yield stress values");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    MATL123_EPS0                            = VALUE(FLOAT,  "EPS0 parameter for RTCL damage");
    MATL123_EPSMAJ                          = VALUE(FLOAT,  "Major in plane strain at failure");
    MATL123_EPSTHIN                         = VALUE(FLOAT,  "Thinning strain at failure");
    MATL123_NUMINT                          = VALUE(FLOAT,  "Number of integration points which must fail before the element is deleted");
    MATL123_PR                              = VALUE(FLOAT,  "Poisson's Ratio");
    MATL123_VP                              = VALUE(FLOAT,  "Formulation for rate effects");
    RegTypeEnumField                        = VALUE(INT,  "Type");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    IO_FLAG                                 = VALUE(INT, "");   
    OPT_TYPE_STR                            = VALUE(STRING, "");
    TITLE                                   = VALUE(STRING, "Title");
    Array                                   = VALUE(STRING , "");
    _HAS_HEADER                             = VALUE(BOOL,"Has Header Card");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    ArrayCount                              = 2246;
    CMoption                                = 5313;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    E                                       = 119;
    EncTypeEnumField                        = 5828;
    LSDYNA_C                                = 197;
    LSDYNA_ETAN                             = 153;
    LSDYNA_FAIL                             = 256;
    LSDYNA_P                                = 198;
    LSDYNA_SIGY                             = 152;
    LSDYNA_TDEL                             = 173;
    LSD_LCID                                = 45;
    LSD_LCID8                               = 224;
    LSD_LCTSRF                              = 5356;
    LSDYNA_EPS1                             = 201;
    LSDYNA_EPS2                             = 202;
    LSDYNA_EPS3                             = 203;
    LSDYNA_EPS4                             = 204;
    LSDYNA_EPS5                             = 205;
    LSDYNA_EPS6                             = 206;
    LSDYNA_EPS7                             = 207;
    LSDYNA_EPS8                             = 208;
    LSDYNA_ES1                              = 209;
    LSDYNA_ES2                              = 210;
    LSDYNA_ES3                              = 211;
    LSDYNA_ES4                              = 212;
    LSDYNA_ES5                              = 213;
    LSDYNA_ES6                              = 214;
    LSDYNA_ES7                              = 215;
    LSDYNA_ES8                              = 216;
    LSD_TitleOpt                            = 90;
    MATL123_EPS0                            = 1838;
    MATL123_EPSMAJ                          = 4253;
    MATL123_EPSTHIN                         = 4252;
    MATL123_NUMINT                          = 4254;
    MATL123_PR                              = 4300;
    MATL123_VP                              = 4250;
    Num_Comments                            = 3101;
    RegTypeEnumField                        = 5827;
    Rho                                     = 118;
    IO_FLAG                                 = -1;
    OPT_TYPE_STR                            = -1;
    TITLE                                   = -1;
    Array                                   = -1;
    _HAS_HEADER                             = -1;
}

DEFAULTS(COMMON)
{
    LSDYNA_FAIL     = 10E+20;
    _HAS_HEADER     = TRUE;
}

DRAWABLES(COMMON) {
 public:
  MASS_DENSITY    =SCALAR(Rho);
  YOUNG_MODULUS   =SCALAR(E);
  POISSON_RATIO   =SCALAR(MATL123_PR);
  YIELD_STRESS    =SCALAR(LSDYNA_SIGY);
  TANGENT_MODULUS     =SCALAR(LSDYNA_ETAN);
  FAILURE_FLAG        =SCALAR(LSDYNA_FAIL);
  MINI_TIME_STEP_SIZE   =SCALAR(LSDYNA_TDEL); 
  STRAIN_RATE_C   = SCALAR(LSDYNA_C);
  STRAIN_RATE_P   = SCALAR(LSDYNA_P);
  //LOAD_CURVE_STRESS_STRAIN   =EVAL(LSD_LCID);
  //LOAD_CURVE_STRAIN_RATE     =EVAL(LSD_LCID8);
  FORMU_RATE_EFFECTS    =SCALAR(MATL123_VP);
  THIN_PLASTIC_STRAIN   =SCALAR(MATL123_EPSTHIN); 
  MAJOR_PLANE_STRAIN    =SCALAR(MATL123_EPSMAJ); 
  UNMBER_INTEGRATION_POINTS   =SCALAR(MATL123_NUMINT);
  //EFFECTIVE_PLASTIC_STRAIN_VALUE1   =SCALAR(LSD_MAT123_EPS);
/*  EFFECTIVE_PLASTIC_STRAIN_VALUE2   =SCALAR(EPS2);
  EFFECTIVE_PLASTIC_STRAIN_VALUE3   =SCALAR(EPS3);
  EFFECTIVE_PLASTIC_STRAIN_VALUE4   =SCALAR(EPS4);
  EFFECTIVE_PLASTIC_STRAIN_VALUE5   =SCALAR(EPS5); 
  EFFECTIVE_PLASTIC_STRAIN_VALUE6   =SCALAR(EPS6);
  EFFECTIVE_PLASTIC_STRAIN_VALUE7   =SCALAR(EPS7);
  EFFECTIVE_PLASTIC_STRAIN_VALUE8   =SCALAR(EPS8);
*/
  //YIELD_STRESS_VALUE1   =SCALAR(LSD_MAT123_ES);
/*  YIELD_STRESS_VALUE2   =SCALAR(ES2);
  YIELD_STRESS_VALUE3   =SCALAR(ES3);
  YIELD_STRESS_VALUE4   =SCALAR(ES4); 
  YIELD_STRESS_VALUE5   =SCALAR(ES5);
  YIELD_STRESS_VALUE6   =SCALAR(ES6);
  YIELD_STRESS_VALUE7   =SCALAR(ES7);
  YIELD_STRESS_VALUE8   =SCALAR(ES8);
*/ 
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_MODIFIED_PIECEWISE_LINEAR_PLASTICITY");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }  
     RADIO(EncTypeEnumField)
     {
        ADD(0, "Regular");
     }
     RADIO(CMoption)
     {
        ADD(1, "None");
        ADD(2, "RATE");
        ADD(3, "RTCL");
     }
    if(CMoption == 2)
     {
        ASSIGN(KEYWORD_STR, "_RATE");
     }
     if(CMoption == 3)
     {
        ASSIGN(KEYWORD_STR, "_RTCL");
     }
     if(CMoption == 2 || CMoption == 3)
     {
         DATA(LSD_LCTSRF);
         SCALAR(MATL123_EPS0);
     }

     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(Rho)                            { DIMENSION="density";}
     SCALAR(E)                              { DIMENSION="pressure";}
 optional:
     SCALAR(MATL123_PR)                     { DIMENSION="DIMENSIONLESS";}
 mandatory:
     SCALAR(LSDYNA_SIGY)                    { DIMENSION="pressure";}
 optional:
     SCALAR(LSDYNA_ETAN)                    { DIMENSION="pressure";} 
     SCALAR(LSDYNA_FAIL)                    { DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_TDEL)                    { DIMENSION="t";} 
     SCALAR(LSDYNA_C)                       { DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_P)                       { DIMENSION="DIMENSIONLESS";}
    FUNCTION(LSD_LCID)
    {
      X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
      Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
      Z_TITLE = "Strain Rate"; Z_DIMENSION = "strain_rate";
    }
     FUNCTION(LSD_LCID8)
     {
       X_TITLE = "Strain rate"; X_DIMENSION = "strain_rate";
       Y_TITLE = "Yield stress scale factor"; Y_DIMENSION = "DIMENSIONLESS";
     }
     RADIO(MATL123_VP)
     {
        ADD(0.0, "0.0: Scale yield stress (default)");
        ADD(1.0, "1.0: Viscoplastic formulation (recommended)");
     }
     SCALAR(MATL123_EPSTHIN)                { DIMENSION="DIMENSIONLESS";}
     SCALAR(MATL123_EPSMAJ)                 { DIMENSION="DIMENSIONLESS";}
     SCALAR(MATL123_NUMINT)                 { DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS1)                    {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS2)                    {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS3)                    {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS4)                    {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS5)                    {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS6)                    {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS7)                    {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS8)                    {DIMENSION="DIMENSIONLESS";}

     SCALAR(LSDYNA_ES1)                     {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES2)                     {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES3)                     {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES4)                     {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES5)                     {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES6)                     {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES7)                     {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES8)                     {DIMENSION="pressure";}
     if(CMoption == 1 || CMoption == 2)
     {
        FUNCTION(LSD_LCTSRF)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "strain_rate";
          Y_TITLE = "Plastic strain"; Y_DIMENSION = "DIMENSIONLESS";
        }
         SCALAR(MATL123_EPS0);
     }

/*
        graphical SUPPORT("Part(s) to which material is applied") {
        OBJECTS=(/COMPONENT/SHELL,/COMPONENT/BRICK,/COMPONENT/PENTA6,/COMPONENT/SHEL16,/COMPONENT/TSHELL,/COMPONENT/TETRA4,/COMPONENT/TETRA10);
        ADD(COMPONENT,"Parts");
       }
*/     
}

// File format
FORMAT(Keyword971) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);

    if(IO_FLAG == 1)
    {
        HEADER("*MAT_123%11s", OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "" || (OPT_TYPE_STR != "_TITLE" && OPT_TYPE_STR != "_RATE" && OPT_TYPE_STR != "_RATE_TITLE" && OPT_TYPE_STR != "_RTCL" && OPT_TYPE_STR != "_RTCL_TITLE")))
    {
        HEADER("*MAT_MODIFIED_PIECEWISE_LINEAR_PLASTICITY%11s", OPT_TYPE_STR);
    }

    if(IO_FLAG == 1 && (OPT_TYPE_STR == "" || OPT_TYPE_STR == "_TITLE"))
    {
        ASSIGN(CMoption, 1);
    }
    else if(IO_FLAG == 1 && (OPT_TYPE_STR == "_RATE" || OPT_TYPE_STR == "_RATE_TITLE"))
    {
        ASSIGN(CMoption, 2);
    }
    else if(IO_FLAG == 1 && (OPT_TYPE_STR == "_RTCL" || OPT_TYPE_STR == "_RTCL_TITLE"))
    {
        ASSIGN(CMoption, 3);
    }

    if(IO_FLAG == 2 && CMoption == 2 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_MODIFIED_PIECEWISE_LINEAR_PLASTICITY_RATE");
    }
    else if(IO_FLAG == 2 && CMoption == 2 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_MODIFIED_PIECEWISE_LINEAR_PLASTICITY_RATE_TITLE");
        CARD("%-80s", TITLE);
    }
    else if(IO_FLAG == 2 && CMoption == 3 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_MODIFIED_PIECEWISE_LINEAR_PLASTICITY_RTCL");
    }
    else if(IO_FLAG == 2 && CMoption == 3 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_MODIFIED_PIECEWISE_LINEAR_PLASTICITY_RTCL_TITLE");
        CARD("%-80s", TITLE);
    }
    else if(IO_FLAG == 2 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_MODIFIED_PIECEWISE_LINEAR_PLASTICITY");
    }
    else if(IO_FLAG == 2 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_MODIFIED_PIECEWISE_LINEAR_PLASTICITY_TITLE");
        CARD("%-80s", TITLE);
    }
    //
    COMMENT("$      MID       RHO         E        PR      SIGY      ETAN      FAIL      TDEL");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,MATL123_PR,LSDYNA_SIGY,LSDYNA_ETAN,LSDYNA_FAIL,LSDYNA_TDEL);
    //
    COMMENT("$        C         P      LCSS      LCSR        VP   EPSTHIN    EPSMAJ    NUMINT");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_C,LSDYNA_P,LSD_LCID,LSD_LCID8,MATL123_VP,MATL123_EPSTHIN,MATL123_EPSMAJ,MATL123_NUMINT);
    //
    COMMENT("$     EPS1      EPS2      EPS3      EPS4      EPS5      EPS6      EPS7      EPS8");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_EPS1,LSDYNA_EPS2,LSDYNA_EPS3,LSDYNA_EPS4,LSDYNA_EPS5,LSDYNA_EPS6,LSDYNA_EPS7,LSDYNA_EPS8);
    //
    COMMENT("$      ES1       ES2       ES3       ES4       ES5       ES6       ES7       ES8");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_ES1,LSDYNA_ES2,LSDYNA_ES3,LSDYNA_ES4,LSDYNA_ES5,LSDYNA_ES6,LSDYNA_ES7,LSDYNA_ES8);
    //
    if(CMoption == 2 || CMoption == 3)
    {
        COMMENT("$   LCTSRF      EPSO");
        CARD("%10lg%10lg",LSD_LCTSRF,MATL123_EPS0);
    }
    //
}
