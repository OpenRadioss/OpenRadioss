//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law SDMAT6
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    LSD_LCID                                = VALUE(FUNCT,  "describing force/torque versus displacement/rotation relationship for loading");
    LSD_LCID2                               = VALUE(FUNCT,  "force/torque versus displacement/rotation relationship for unloading");
    LSD_MAT_BETA                            = VALUE(FLOAT,  "Hardening parameter");
    LSD_MAT_CYI                             = VALUE(FLOAT,  "Initial yield force in compression");
    LSD_MAT_TYI                             = VALUE(FLOAT,  "Initial yield force in tension");
    LSD_TitleOpt                            = VALUE(INT,  "Title");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSD_LCID                                = 45;
    LSD_LCID2                               = 168;
    LSD_MAT_BETA                            = 306;
    LSD_MAT_CYI                             = 1195;
    LSD_MAT_TYI                             = 1194;
    LSD_TitleOpt                            = 90;
    Num_Comments                            = 3101;

}

CHECK(COMMON)
{

    LSD_MAT_CYI                               <0;
    LSD_MAT_TYI                               >0;
}

DRAWABLES(COMMON) {
public:
  HARDENING_PARAMETER=SCALAR(LSD_MAT_BETA);
  INITIAL_YIELD_FORCE_IN_TENSION=SCALAR(LSD_MAT_TYI);
  INITIAL_YIELD_FORCE_IN_COMPRESSION=SCALAR(LSD_MAT_CYI);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_SPRING_GENERAL_NONLINEAR");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
    FUNCTION(LSD_LCID)
    {
      X_TITLE = "Displacement"; X_DIMENSION = "l";
      Y_TITLE = "Force"; Y_DIMENSION = "force";
    }
    FUNCTION(LSD_LCID2)
    {
      X_TITLE = "Displacement"; X_DIMENSION = "l";
      Y_TITLE = "Force"; Y_DIMENSION = "force";
    }
 optional:
     SCALAR(LSD_MAT_BETA)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_TYI)                {DIMENSION="force";}
     SCALAR(LSD_MAT_CYI)                {DIMENSION="force";}
/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/SPRING);
      ADD(COMPONENT,"Parts");
    }
*/

}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID      LCDL      LCDU      BETA       TYI       CYI");
    CARD("%10d%10d%10d%10lg%10lg%10lg",_ID_,LSD_LCID,LSD_LCID2,LSD_MAT_BETA,LSD_MAT_TYI,LSD_MAT_CYI);
    //
}
