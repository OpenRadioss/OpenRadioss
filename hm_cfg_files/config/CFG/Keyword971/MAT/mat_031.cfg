//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 031
// 


 ATTRIBUTES(COMMON) 
 
 {
  
  // Initial and reference densities
  KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
  LSD_TitleOpt                      = VALUE(INT, "Title");
  CommentEnumField                  = VALUE(INT, "User Comments");
  Num_Comments                      = SIZE("No. of comment lines");
  Comments                          = ARRAY[Num_Comments](STRING, "Entity Comments");
  Rho                               = VALUE(FLOAT, "Mass density");  
  Nu                                = VALUE(FLOAT, "Poissons ratio");
  LSD_MAT_C100                      = VALUE(FLOAT, "C100");
  LSD_MAT_C200                      = VALUE(FLOAT, "C200");
  LSD_MAT_C300                      = VALUE(FLOAT, "C300");
  LSD_MAT_C400                      = VALUE(FLOAT, "C400");
  LSD_MAT_C110                      = VALUE(FLOAT, "C110");
  LSD_MAT_C210                      = VALUE(FLOAT, "C210");
  LSD_MAT_C010                      = VALUE(FLOAT, "C010");
  LSD_MAT_C020                      = VALUE(FLOAT, "C020");
  LSD_MAT_EXIT                      = VALUE(FLOAT, "Exit option");
  LSD_MAT_EMAX                      = VALUE(FLOAT, "Maximum strain limit");
  LSD_MAT_EMIN                      = VALUE(FLOAT, "Minimum strain limit");
  LSD_MAT_REF                       = VALUE(FLOAT, "Use reference geometry to initialize the stress tensor");
  LSD_MAT_SGL                       = VALUE(FLOAT, "Specimen gauge length");
  LSD_MAT_SW                        = VALUE(FLOAT, "Specimen width");
  LSD_MAT_ST                        = VALUE(FLOAT, "Specimen thickness");
  LSD_LCID                          = VALUE(FUNCT, "force versus actual change in gauge length");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

  KEYWORD_STR                   = 9000;
  CommentEnumField              = 3220;
  Num_Comments                  = 3101;
  LSD_TitleOpt                  = 90;
  Comments                      = 3100;
  Rho                           = 118;
  Nu                            = 120;
  LSD_MAT_C100                  = 388;
  LSD_MAT_C200                  = 389;
  LSD_MAT_C300                  = 390;
  LSD_MAT_C400                  = 391;
  LSD_MAT_C110                  = 392;
  LSD_MAT_C210                  = 393;
  LSD_MAT_C010                  = 394;
  LSD_MAT_C020                  = 395;
  LSD_MAT_EXIT                  = 396;
  LSD_MAT_EMAX                  = 1100;
  LSD_MAT_EMIN                  = 1101;
  LSD_MAT_REF                   = 359;
  LSD_MAT_SGL                   = 350;
  LSD_MAT_SW                    = 351;
  LSD_MAT_ST                    = 352;
  LSD_LCID                      = 45;
}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  POISSON_RATIO=SCALAR(Nu);
  C100=SCALAR(LSD_MAT_C100);
  C200=SCALAR(LSD_MAT_C200);
  C300=SCALAR(LSD_MAT_C300);
  C400=SCALAR(LSD_MAT_C400);
  C110=SCALAR(LSD_MAT_C110);
  C210=SCALAR(LSD_MAT_C210);
  C010=SCALAR(LSD_MAT_C010);
  C020=SCALAR(LSD_MAT_C020);
  EXIT_OPTION=SCALAR(LSD_MAT_EXIT);
  MAXIMUM_STRAIN_LIMIT=SCALAR(LSD_MAT_EMAX);
  MINIMUM_STRAIN_LIMIT=SCALAR(LSD_MAT_EMIN);
  REFERENCE_GEOMETRY=SCALAR(LSD_MAT_REF);
  SPECIMEN_GAUGE_LENGTH=SCALAR(LSD_MAT_SGL);
  SPECIMEN_WIDTH=SCALAR(LSD_MAT_SW);
  SPECIMEN_THICKNESS=SCALAR(LSD_MAT_ST);
}

GUI(COMMON) 
{

     ASSIGN(KEYWORD_STR, "*MAT_FRAZER_NASH_RUBBER_MODEL");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
           ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(Rho)                         { DIMENSION="density";}
 optional:
     SCALAR(Nu)                          {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_C100)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_C200)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_C300)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_C400)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_C110)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_C210)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_C010)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_C020)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_EXIT)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_EMAX)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_EMIN)                {DIMENSION="DIMENSIONLESS";}
     RADIO(LSD_MAT_REF)
     {
        ADD(0.0, "0: Off");
        ADD(1.0, "1: On");
     }
     SCALAR(LSD_MAT_SGL)                {DIMENSION="l";}
     SCALAR(LSD_MAT_SW)                 {DIMENSION="l";}
     SCALAR(LSD_MAT_ST)                 {DIMENSION="l";}
     FUNCTION(LSD_LCID)
     {
       X_TITLE = "Gauge delta length"; X_DIMENSION = "l";
       Y_TITLE = "Force"; Y_DIMENSION = "force";
     }  
/*
     graphical SUPPORT("Part(s) to which material is applied") {
    OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID       RHO        PR      C100      C200      C300      C400");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,Nu,LSD_MAT_C100,LSD_MAT_C200,LSD_MAT_C300,LSD_MAT_C400);
    //
    COMMENT("$     C110      C210      C010      C020      EXIT      EMAX      EMIN       REF");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_C110,LSD_MAT_C210,LSD_MAT_C010,LSD_MAT_C020,LSD_MAT_EXIT,LSD_MAT_EMAX,LSD_MAT_EMIN,LSD_MAT_REF);
    //
    COMMENT("$      SGL        SW        ST      LCID");
    CARD("%10lg%10lg%10lg%10d",LSD_MAT_SGL,LSD_MAT_SW,LSD_MAT_ST,LSD_LCID);
    //
}