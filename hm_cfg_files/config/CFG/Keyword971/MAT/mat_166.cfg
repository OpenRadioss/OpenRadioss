//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 166
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    E                                       = VALUE(FLOAT,  "E");
    LSDYNA_CFA                              = VALUE(FLOAT,  "CFA");
    LSDYNA_CFB                              = VALUE(FLOAT,  "CFB");
    LSDYNA_CFT                              = VALUE(FLOAT,  "CFT");
    LSDYNA_CTA                              = VALUE(FLOAT,  "CTA");
    LSDYNA_CTB                              = VALUE(FLOAT,  "CTB");
    LSDYNA_CTT                              = VALUE(FLOAT,  "CTT");
    LSDYNA_EPFLG                            = VALUE(FLOAT,  "EPFLG");
    LSDYNA_HRULE                            = VALUE(FLOAT,  "HRULE");
    LSDYNA_N1                               = VALUE(FLOAT,  "N1");
    LSDYNA_N2                               = VALUE(FLOAT,  "N2");
    LSDYNA_N3                               = VALUE(FLOAT,  "N3");
    LSDYNA_N4                               = VALUE(FLOAT,  "N4");
    LSDYNA_N5                               = VALUE(FLOAT,  "N5");
    LSDYNA_N6                               = VALUE(FLOAT,  "N6");
    LSDYNA_N7                               = VALUE(FLOAT,  "N7");
    LSDYNA_N8                               = VALUE(FLOAT,  "N8");
    LSDYNA_RBETA                            = VALUE(FLOAT,  "RBETA");
    LSDYNA_RCAPAY                           = VALUE(FLOAT,  "RCAPAY");
    LSDYNA_RCAPAZ                           = VALUE(FLOAT,  "RCAPAZ");
    LSDYNA_REPS                             = VALUE(FLOAT,  "REPS");
    LSD_LCID                                = VALUE(FUNCT,  "LCMS1");
    LSD_LCID10                              = VALUE(FUNCT,  "LCMT2");
    LSD_LCID11                              = VALUE(FUNCT,  "LCMT3");
    LSD_LCID12                              = VALUE(FUNCT,  "LCMT4");
    LSD_LCID13                              = VALUE(FUNCT,  "LCMT5");
    LSD_LCID14                              = VALUE(FUNCT,  "LCMT6");
    LSD_LCID15                              = VALUE(FUNCT,  "LCMT7");
    LSD_LCID16                              = VALUE(FUNCT,  "LCMT8");
    LSD_LCID17                              = VALUE(FUNCT,  "LCT1");
    LSD_LCID18                              = VALUE(FUNCT,  "LCT2");
    LSD_LCID19                              = VALUE(FUNCT,  "LCT3");
    LSD_LCID2                               = VALUE(FUNCT,  "LCMS2");
    LSD_LCID20                              = VALUE(FUNCT,  "LCT4");
    LSD_LCID21                              = VALUE(FUNCT,  "LCT5");
    LSD_LCID22                              = VALUE(FUNCT,  "LCT6");
    LSD_LCID23                              = VALUE(FUNCT,  "LCT7");
    LSD_LCID24                              = VALUE(FUNCT,  "LCT8");
    LSD_LCID3                               = VALUE(FUNCT,  "LCMS3");
    LSD_LCID4                               = VALUE(FUNCT,  "LCMS4");
    LSD_LCID5                               = VALUE(FUNCT,  "LCMS5");
    LSD_LCID6                               = VALUE(FUNCT,  "LCMS6");
    LSD_LCID7                               = VALUE(FUNCT,  "LCMS7");
    LSD_LCID8                               = VALUE(FUNCT,  "LCMS8");
    LSD_LCID9                               = VALUE(FUNCT,  "LCMT1");
    LSD_LCIDDR                              = VALUE(FUNCT,  "ELAF");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    Rho                                     = VALUE(FLOAT,  "Rho");
    LOC_NU                                  = VALUE(FLOAT, "Temp poisson ratio");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    E                                       = 119;
    LSDYNA_CFA                              = 2284;
    LSDYNA_CFB                              = 2285;
    LSDYNA_CFT                              = 2286;
    LSDYNA_CTA                              = 2273;
    LSDYNA_CTB                              = 2274;
    LSDYNA_CTT                              = 2275;
    LSDYNA_EPFLG                            = 2272;
    LSDYNA_HRULE                            = 2287;
    LSDYNA_N1                               = 2276;
    LSDYNA_N2                               = 2277;
    LSDYNA_N3                               = 2278;
    LSDYNA_N4                               = 2279;
    LSDYNA_N5                               = 2280;
    LSDYNA_N6                               = 2281;
    LSDYNA_N7                               = 2282;
    LSDYNA_N8                               = 2283;
    LSDYNA_RBETA                            = 2289;
    LSDYNA_RCAPAY                           = 2290;
    LSDYNA_RCAPAZ                           = 2291;
    LSDYNA_REPS                             = 2288;
    LSD_LCID                                = 45;
    LSD_LCID10                              = 1142;
    LSD_LCID11                              = 1175;
    LSD_LCID12                              = 1176;
    LSD_LCID13                              = 1189;
    LSD_LCID14                              = 4602;
    LSD_LCID15                              = 4603;
    LSD_LCID16                              = 4604;
    LSD_LCID17                              = 4605;
    LSD_LCID18                              = 4606;
    LSD_LCID19                              = 4607;
    LSD_LCID2                               = 168;
    LSD_LCID20                              = 4608;
    LSD_LCID21                              = 4609;
    LSD_LCID22                              = 4610;
    LSD_LCID23                              = 4611;
    LSD_LCID24                              = 4612;
    LSD_LCID3                               = 170;
    LSD_LCID4                               = 171;
    LSD_LCID5                               = 172;
    LSD_LCID6                               = 199;
    LSD_LCID7                               = 200;
    LSD_LCID8                               = 224;
    LSD_LCID9                               = 1141;
    LSD_LCIDDR                              = 5310;
    LSD_TitleOpt                            = 90;
    Num_Comments                            = 3101;
    Rho                                     = 118;
    LOC_NU                                  = -1;

}

CHECK(COMMON)
{

    LSDYNA_HRULE                              >=0.0;
    LSDYNA_HRULE                              <=1.0;
}

DEFAULTS(COMMON)
{

    LSDYNA_CFA    = 1.0;
    LSDYNA_CFB    = 1.0;
    LSDYNA_CFT    = 1.0;
    LSDYNA_RBETA    = 1E+20;
    LSDYNA_RCAPAY    = 1E+20;
    LSDYNA_RCAPAZ    = 1E+20;
    LSDYNA_REPS    = 1E+20;
    LOC_NU         = 0.0;
}

DRAWABLES(COMMON)
{
 public:  
  MASS_DENSITY=SCALAR(Rho);
  YOUNG_MODULUS=SCALAR(E); 
  AXIAL_FORCE_STRAIN=SCALAR(LSDYNA_CTA);
  MOMENT_CURVATURE=SCALAR(LSDYNA_CTB);
  TORQUE_TWIST=SCALAR(LSDYNA_CTT);  
  HARDENING_RULE=SCALAR(LSDYNA_HRULE);
  POISSON_RATIO=SCALAR(LOC_NU);
 //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_MOMENT_CURVATURE_BEAM");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
     SCALAR(Rho)                                        {DIMENSION="density";}
     SCALAR(E)                                          {DIMENSION="pressure";}
     DATA(LSD_LCIDDR);
     RADIO(LSDYNA_EPFLG)
     {
        ADD(0.0, "0.0: Nonlinear elastic analysis");
        ADD(1.0, "1.0: Multi-linear plastic analysis");
     }
     RADIO(LSDYNA_CTA)
     {
        ADD(0.0, "0.0: Curve is symmetric");
        ADD(1.0, "1.0: Curve is asymmetric");
     }
     RADIO(LSDYNA_CTB)
     {
        ADD(0.0, "0.0: Curve is symmetric");
        ADD(1.0, "1.0: Curve is asymmetric");
     }
     RADIO(LSDYNA_CTT)
     {
        ADD(0.0, "0.0: Curve is symmetric");
        ADD(1.0, "1.0: Curve is asymmetric");
     }

     SCALAR(LSDYNA_N1)                                  {DIMENSION="moment";}
     SCALAR(LSDYNA_N2)                                  {DIMENSION="moment";}
     SCALAR(LSDYNA_N3)                                  {DIMENSION="moment";}
     SCALAR(LSDYNA_N4)                                  {DIMENSION="moment";}
     SCALAR(LSDYNA_N5)                                  {DIMENSION="moment";}
     SCALAR(LSDYNA_N6)                                  {DIMENSION="moment";}
     SCALAR(LSDYNA_N7)                                  {DIMENSION="moment";}
     SCALAR(LSDYNA_N8)                                  {DIMENSION="moment";}
     DATA(LSD_LCID);
     DATA(LSD_LCID2);
     DATA(LSD_LCID3);
     DATA(LSD_LCID4);
     DATA(LSD_LCID5);
     DATA(LSD_LCID6);
     DATA(LSD_LCID7);
     DATA(LSD_LCID8);
     DATA(LSD_LCID9);
     DATA(LSD_LCID10);
     DATA(LSD_LCID11);
     DATA(LSD_LCID12);
     DATA(LSD_LCID13);
     DATA(LSD_LCID14);
     DATA(LSD_LCID15);
     DATA(LSD_LCID16);
     DATA(LSD_LCID17);
     DATA(LSD_LCID18);
     DATA(LSD_LCID19);
     DATA(LSD_LCID20);
     DATA(LSD_LCID21);
     DATA(LSD_LCID22);
     DATA(LSD_LCID23);
     DATA(LSD_LCID24);
     if(LSDYNA_EPFLG == 1.0)
     {
         SCALAR(LSDYNA_CFA)                             {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSDYNA_CFB)                             {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSDYNA_CFT)                             {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSDYNA_HRULE);
         SCALAR(LSDYNA_REPS)                            {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSDYNA_RBETA)                           {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSDYNA_RCAPAY)                          {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSDYNA_RCAPAZ)                          {DIMENSION="DIMENSIONLESS";}
     }
/*
  graphical SUPPORT("Part(s) to which material is applied")
  {
    OBJECTS=(/COMPONENT/BEAM);
    ADD(COMPONENT,"Parts");
  }  
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID       RHO         E      ELAF     EPFLG       CTA       CTB       CTT");
    CARD("%10d%10lg%10lg%10d%10lg%10lg%10lg%10lg",_ID_,Rho,E,LSD_LCIDDR,LSDYNA_EPFLG,LSDYNA_CTA,LSDYNA_CTB,LSDYNA_CTT);
    //
    COMMENT("$       N1        N2        N3        N4        N5        N6        N7        N8");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_N1,LSDYNA_N2,LSDYNA_N3,LSDYNA_N4,LSDYNA_N5,LSDYNA_N6,LSDYNA_N7,LSDYNA_N8);  
    //
    COMMENT("$    LCMS1     LCMS2     LCMS3     LCMS4     LCMS5     LCMS6     LCMS7     LCMS8");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10d",LSD_LCID,LSD_LCID2,LSD_LCID3,LSD_LCID4,LSD_LCID5,LSD_LCID6,LSD_LCID7,LSD_LCID8);  
    //
    COMMENT("$    LCMT1     LCMT2     LCMT3     LCMT4     LCMT5     LCMT6     LCMT7     LCMT8");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10d",LSD_LCID9,LSD_LCID10,LSD_LCID11,LSD_LCID12,LSD_LCID13,LSD_LCID14,LSD_LCID15,LSD_LCID16);  
    //
    COMMENT("$     LCT1      LCT2      LCT3      LCT4      LCT5      LCT6      LCT7      LCT8");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10d",LSD_LCID17,LSD_LCID18,LSD_LCID19,LSD_LCID20,LSD_LCID21,LSD_LCID22,LSD_LCID23,LSD_LCID24);  
    //
    if(LSDYNA_EPFLG == 1.0)
    {
        //
        COMMENT("$      CFA       CFB       CFT     HRULE      REPS     RBETA    RCAPAY    RCAPAZ");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_CFA,LSDYNA_CFB,LSDYNA_CFT,LSDYNA_HRULE,LSDYNA_REPS,LSDYNA_RBETA,LSDYNA_RCAPAY,LSDYNA_RCAPAZ);
        //
    }


}
