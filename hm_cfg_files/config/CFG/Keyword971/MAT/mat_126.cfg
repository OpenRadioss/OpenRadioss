//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 126
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    E                                       = VALUE(FLOAT,  "Young’s modulus for compacted honeycomb material");
    EncTypeEnumField                        = VALUE(INT,  "Type");
    LCABoption                              = VALUE(INT,  "LCABoption");
    LCAoption                               = VALUE(INT,  "LCAoption");
    LCBCoption                              = VALUE(INT,  "LCBCoption");
    LCBoption                               = VALUE(INT,  "LCBoption");
    LCCAoption                              = VALUE(INT,  "LCCAoption");
    LCCoption                               = VALUE(INT,  "LCCoption");
    LCSRoption                              = VALUE(INT,  "LCSRoption");
    LCSoption                               = VALUE(INT,  "LCSoption");
    LSDYNA_A1                               = VALUE(FLOAT,  "Components of vector a for AOPT = 2.");
    LSDYNA_A2                               = VALUE(FLOAT,  "Components of vector a for AOPT = 2.");
    LSDYNA_A3                               = VALUE(FLOAT,  "Components of vector a for AOPT = 2.");
    LSDYNA_BULK                             = VALUE(FLOAT,  "Bulk viscosity flag");
    LSDYNA_D1                               = VALUE(FLOAT,  "Components of vector d for AOPT = 2.");
    LSDYNA_D2                               = VALUE(FLOAT,  "Components of vector d for AOPT = 2.");
    LSDYNA_D3                               = VALUE(FLOAT,  "Components of vector d for AOPT = 2.");
    LSDYNA_EAAU                             = VALUE(FLOAT,  "Elastic modulus Eaau in uncompressed configuration");
    LSDYNA_EBBU                             = VALUE(FLOAT,  "Elastic modulus Ebbu in uncompressed configuration");
    LSDYNA_ECCU                             = VALUE(FLOAT,  "Elastic modulus Eccu in uncompressed configuration");
    LSDYNA_EPSF                             = VALUE(FLOAT,  "Shear strain at element failure");
    LSDYNA_GABU                             = VALUE(FLOAT,  "Shear modulus Gabu in uncompressed configuration");
    LSDYNA_GBCU                             = VALUE(FLOAT,  "Shear modulus Gbcu in uncompressed configuration");
    LSDYNA_GCAU                             = VALUE(FLOAT,  "Shear modulus Gcau in uncompressed configuration");
    LSDYNA_MU                               = VALUE(FLOAT,  "material viscosity coefficient");
    LSDYNA_SIGF                             = VALUE(FLOAT,  "Tensile strain at element failure");
    LSDYNA_SIGY                             = VALUE(FLOAT,  "Yield stress for fully compacted honeycomb");
    LSDYNA_V1                               = VALUE(FLOAT,  "Define components of vector v for AOPT = 3 and 4.");
    LSDYNA_V2                               = VALUE(FLOAT,  "Define components of vector v for AOPT = 3 and 4.");
    LSDYNA_V3                               = VALUE(FLOAT,  "Define components of vector v for AOPT = 3 and 4.");
    LSDYNA_VF                               = VALUE(FLOAT,  "Relative volume at which the honeycomb is fully compacted");
    LSDYNA_XP                               = VALUE(FLOAT,  "Coordinates of point p for AOPT = 1 and 4.");
    LSDYNA_YP                               = VALUE(FLOAT,  "Coordinates of point p for AOPT = 1 and 4.");
    LSDYNA_ZP                               = VALUE(FLOAT,  "Coordinates of point p for AOPT = 1 and 4.");
    LSD_LCID                                = VALUE(FUNCT,  "Load curve ID");
    LSD_LCID2                               = VALUE(FUNCT,  "Load curve ID");
    LSD_LCID3                               = VALUE(FUNCT,  "Load curve ID");
    LSD_LCID4                               = VALUE(FUNCT,  "Load curve ID");
    LSD_LCID5                               = VALUE(FUNCT,  "Load curve ID");
    LSD_LCID6                               = VALUE(FUNCT,  "Load curve ID");
    LSD_LCID7                               = VALUE(FUNCT,  "Load curve ID");
    LSD_LCID8                               = VALUE(FUNCT,  "Load curve ID");
    LSD_MAT142_MACF                         = VALUE(INT,    "Load curve ID");
    LSD_NODE1                               = VALUE(NODE,  "Node");
    LSD_NODE3                               = VALUE(NODE,  "Node1");
    LSD_NODE4                               = VALUE(NODE,  "Node2");
    LSD_NODE5                               = VALUE(NODE,  "Node1");
    LSD_NODE6                               = VALUE(NODE,  "Node2");
    LSD_NODE7                               = VALUE(NODE,  "Node1");
    LSD_NODE8                               = VALUE(NODE,  "Node2");
    LSD_SYSTEM                              = VALUE(SYSTEM,  "AOPT");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    MATL126_LCSRA                           = VALUE(FUNCT,  "Optional load curve ID if LCSR = -1");
    MATL126_LCSRAB                          = VALUE(FUNCT,  "Similar definition as for LCSA and LCSB above");
    MATL126_LCSRB                           = VALUE(FUNCT,  "Optional load curve ID if LCSR = -1");
    MATL126_LCSRBC                          = VALUE(FUNCT,  "Similar definition as for LCSA and LCSB above");
    MATL126_LCSRC                           = VALUE(FUNCT,  "Similar definition as for LCSA and LCSB above");
    MATL126_LCSRCA                          = VALUE(FUNCT,  "Similar definition as for LCSA and LCSB above");
    MATL126_SHDFLG                          = VALUE(FLOAT,  "Flag defining treatment of damage from curves LCS, LCAB, LCBC and LCCA");
    MATL126_TREF                            = VALUE(FLOAT,  "This is an optional input parameter for solid elements types 1, 2, 3, 4, and 10");
    MATL126_VREF                            = VALUE(FLOAT,  "This is an optional input parameter for solid elements types 1, 2, 3, 4, and 10");
    Nu                                      = VALUE(FLOAT,  "Poisson's Ratio");
    RegTypeEnumField                        = VALUE(INT,  "Type");
    Rho                                     = VALUE(FLOAT, "Mass Density");
    LOC_AOPT                                = VALUE(FLOAT, "");
    IO_FLAG                                 = VALUE(INT, "io flag");
    axisOptFlag                             = VALUE(INT,  "Anisotropy axis definition");
    AOPT_SKEW_FLAG                          = VALUE(INT,  "Flag for defining coordinate system ID number");
    LCSR_TEMP                               = VALUE(INT, "");
    TEMP_1                                  = VALUE(INT, "");
    //empty_string                       = VALUE(STRING, "Used as a local variable for free format case");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    E                                       = 119;
    EncTypeEnumField                        = 5828;
    LCABoption                              = 5435;
    LCAoption                               = 5431;
    LCBCoption                              = 5436;
    LCBoption                               = 5432;
    LCCAoption                              = 5437;
    LCCoption                               = 5433;
    LCSRoption                              = 6402;
    LCSoption                               = 5434;
    LSDYNA_A1                               = 139;
    LSDYNA_A2                               = 140;
    LSDYNA_A3                               = 141;
    LSDYNA_BULK                             = 223;
    LSDYNA_D1                               = 145;
    LSDYNA_D2                               = 146;
    LSDYNA_D3                               = 147;
    LSDYNA_EAAU                             = 232;
    LSDYNA_EBBU                             = 233;
    LSDYNA_ECCU                             = 234;
    LSDYNA_EPSF                             = 68;
    LSDYNA_GABU                             = 235;
    LSDYNA_GBCU                             = 236;
    LSDYNA_GCAU                             = 237;
    LSDYNA_MU                               = 222;
    LSDYNA_SIGF                             = 248;
    LSDYNA_SIGY                             = 152;
    LSDYNA_V1                               = 142;
    LSDYNA_V2                               = 143;
    LSDYNA_V3                               = 144;
    LSDYNA_VF                               = 221;
    LSDYNA_XP                               = 136;
    LSDYNA_YP                               = 137;
    LSDYNA_ZP                               = 138;
    LSD_LCID                                = 45;
    LSD_LCID2                               = 168;
    LSD_LCID3                               = 170;
    LSD_LCID4                               = 171;
    LSD_LCID5                               = 172;
    LSD_LCID6                               = 199;
    LSD_LCID7                               = 200;
    LSD_LCID8                               = 224;
    LSD_MAT142_MACF                         = 1045;
    LSD_NODE1                               = 86;
    LSD_NODE3                               = 2802;
    LSD_NODE4                               = 2803;
    LSD_NODE5                               = 5078;
    LSD_NODE6                               = 5079;
    LSD_NODE7                               = 5080;
    LSD_NODE8                               = 5081;
    LSD_SYSTEM                              = 184;
    LSD_TitleOpt                            = 90;
    MATL126_LCSRA                           = 6403;
    MATL126_LCSRAB                          = 6406;
    MATL126_LCSRB                           = 6404;
    MATL126_LCSRBC                          = 6407;
    MATL126_LCSRC                           = 6405;
    MATL126_LCSRCA                          = 6408;
    MATL126_SHDFLG                          = 1060;
    MATL126_TREF                            = 3237;
    MATL126_VREF                            = 3238;
    Nu                                      = 120;
    Num_Comments                            = 3101;
    RegTypeEnumField                        = 5827;
    Rho                                     = 118;
    axisOptFlag                             = 4946;
    AOPT_SKEW_FLAG                          = -1;
    IO_FLAG                                 = -1;
    LOC_AOPT                                = -1;
    LCSR_TEMP                               = -1;
    TEMP_1                                  = -1;
    //empty_string                       = -1;
}

DEFAULTS(COMMON)
{

    LSDYNA_MU    = 0.05;

}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  YOUNG_MODULUS=SCALAR(E);
  POISSON_RATIO=SCALAR(Nu);
  YIELD_STRESS=SCALAR(LSDYNA_SIGY);
  RELATIVE_VOLUME=SCALAR(LSDYNA_VF);
  MATERIAL_VISCOSITY_COEFFICIENT=SCALAR(LSDYNA_MU);
  BULK_VISCOSITY_FLAG=SCALAR(LSDYNA_BULK);
  ELASTIC_MODULUS_EAAU=SCALAR(LSDYNA_EAAU);
  ELASTIC_MODULUS_EBBU=SCALAR(LSDYNA_EBBU);
  ELASTIC_MODULUS_ECCU=SCALAR(LSDYNA_ECCU);
  SHEAR_MODULUS_GABU=SCALAR(LSDYNA_GABU);
  SHEAR_MODULUS_GBCU=SCALAR(LSDYNA_GBCU);
  SHEAR_MODULUS_GCAU=SCALAR(LSDYNA_GCAU);
  MATERIAL_AXES_OPTION=SCALAR(axisOptFlag);
  TENSILE_STRAIN_AT_ELEMENT_FAILURE=SCALAR(LSDYNA_SIGF);
  SHEAR_STRAIN_AT_ELEMENT_FAILURE=SCALAR(LSDYNA_EPSF);
  SOLID_ELEMENTS_TYPES_VREF=SCALAR(MATL126_VREF);
  SOLID_ELEMENTS_TYPES_TREF=SCALAR(MATL126_TREF);
 public:
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_MODIFIED_HONEYCOMB");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }  
     RADIO(RegTypeEnumField)
     {
        ADD(0, "Regular");
     }
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(Rho)                                {DIMENSION="density";}
     SCALAR(E)                                  {DIMENSION="pressure";}
 optional:
     SCALAR(Nu)                                 {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_SIGY)                        {DIMENSION="pressure";}
     SCALAR(LSDYNA_VF)                          {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_MU)                          {DIMENSION="DIMENSIONLESS";}
     RADIO(LSDYNA_BULK)
     {
        ADD(0.0, "0.0: Bulk viscosity is not used, recommeneded");
        ADD(1.0, "1.0: Bulk viscosity is active");
     }
     
     FLAG(LCAoption);
     if(LCAoption ==  FALSE)
     {
     FUNCTION(LSD_LCID)
     {
       X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
       Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
     }
     }
     
     FLAG(LCBoption);
 mandatory:
     if(LCBoption ==  FALSE)
     {
     FUNCTION(LSD_LCID2)
     {
       X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
       Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
     }
     }
     
     FLAG(LCCoption);
     if(LCCoption ==  FALSE)
     {
     FUNCTION(LSD_LCID3)
     {
       X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
       Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
     }
     }
     
     FLAG(LCSoption);
     if(LCSoption ==  FALSE)
     {
     FUNCTION(LSD_LCID4)
     {
       X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
       Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
     }
     }
     
     FLAG(LCABoption);
     if(LCABoption ==  FALSE)
     {
     FUNCTION(LSD_LCID5)
     {
       X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
       Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
     }
     }
     
     FLAG(LCBCoption);
     if(LCBCoption ==  FALSE)
     {
     FUNCTION(LSD_LCID6)
     {
       X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
       Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
     }
     }
     
     FLAG(LCCAoption);
     if(LCCAoption == FALSE)
     {
     FUNCTION(LSD_LCID7)
     {
       X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
       Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
     }
     }

     FLAG(LCSRoption);
     if(LCSRoption ==  FALSE)
     {
     FUNCTION(LSD_LCID8)
     {
       X_TITLE = "Strain rate"; X_DIMENSION = "DIMENSIONLESS";
       Y_TITLE = "Factor on stresses"; Y_DIMENSION = "DIMENSIONLESS";
     }
     }
     
     SCALAR(LSDYNA_EAAU)                                    {DIMENSION="pressure";}
     SCALAR(LSDYNA_EBBU)                                    {DIMENSION="pressure";}
     SCALAR(LSDYNA_ECCU)                                    {DIMENSION="pressure";}
     SCALAR(LSDYNA_GABU)                                    {DIMENSION="pressure";}
     SCALAR(LSDYNA_GBCU)                                    {DIMENSION="pressure";}
     SCALAR(LSDYNA_GCAU)                                    {DIMENSION="pressure";}
     
     
     RADIO(axisOptFlag)
     {
        ADD(1, "0.0: Locally orthotropic: axis given by nodes 1,2 and 4");
        ADD(2, "1.0: Locally orthotropic: a-dir given by a point and global location of element center");
        ADD(3, "2.0: Globally orthotropic: axis given by vectors");
        ADD(4, "3.0: Locally orthotropic: axis given by rotating the material axes by an angle BETA");
        ADD(5, "4.0: Locally orhtotropic: cylindrical coordinate given by vector v and point P");
        ADD(6, "By System");
     }
     if(axisOptFlag == 6)
     {
        DATA(LSD_SYSTEM);
     }
     RADIO(LSD_MAT142_MACF)
     {
        ADD(1, "1: No change (default)");
        ADD(2, "2: Switch material axes a and b");
        ADD(3, "3: Switch material axes a and c");
        ADD(4, "4: Switch material axes b and c");
     }
     if(axisOptFlag == 2 || axisOptFlag == 5)
     {
        DATA(LSD_NODE1);
        ASSIGN(LSDYNA_XP,[@getentityvalue(nodes,$LSD_NODE1,x)],FALSE);
        ASSIGN(LSDYNA_YP,[@getentityvalue(nodes,$LSD_NODE1,y)],FALSE);
        ASSIGN(LSDYNA_ZP,[@getentityvalue(nodes,$LSD_NODE1,z)],FALSE);
     }
     if(axisOptFlag == 3)
     {
        DATA(LSD_NODE3);
        DATA(LSD_NODE4);
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],FALSE);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],FALSE);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],FALSE);
        DATA(LSD_NODE7);                
        DATA(LSD_NODE8);                
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],FALSE);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],FALSE);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],FALSE);
     }
     
     SCALAR(LSDYNA_SIGF)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPSF)                {DIMENSION="DIMENSIONLESS";}
 optional:
     SCALAR(MATL126_VREF)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MATL126_TREF)               {DIMENSION="t";}
     RADIO(MATL126_SHDFLG)
     {
        ADD(0.0, "0.0");
        ADD(1.0, "1.0");
     }
     if(LCSRoption == TRUE)
     {
        FUNCTION(MATL126_LCSRA)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "DIMENSIONLESS";
          Y_TITLE = "Factor on yield stress in a-direction"; Y_DIMENSION = "DIMENSIONLESS";
        }
        FUNCTION(MATL126_LCSRB)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "DIMENSIONLESS";
          Y_TITLE = "Factor on yield stress in b-direction"; Y_DIMENSION = "DIMENSIONLESS";
        }
        FUNCTION(MATL126_LCSRC)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "DIMENSIONLESS";
          Y_TITLE = "Factor on yield stress in c-direction"; Y_DIMENSION = "DIMENSIONLESS";
        }
        FUNCTION(MATL126_LCSRAB)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "DIMENSIONLESS";
          Y_TITLE = "Factor on yield stress in ab-direction"; Y_DIMENSION = "DIMENSIONLESS";
        }
        FUNCTION(MATL126_LCSRBC)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "DIMENSIONLESS";
          Y_TITLE = "Factor on yield stress in bc-direction"; Y_DIMENSION = "DIMENSIONLESS";
        }
        FUNCTION(MATL126_LCSRCA)
        {
          X_TITLE = "Strain rate"; X_DIMENSION = "DIMENSIONLESS";
          Y_TITLE = "Factor on yield stress in ca-direction"; Y_DIMENSION = "DIMENSIONLESS";
        }
     }
     if(axisOptFlag == 4 || axisOptFlag == 5)
     {
        DATA(LSD_NODE5);
        DATA(LSD_NODE6);
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],FALSE);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],FALSE);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],FALSE);
     }     

/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, IMPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, EXPORT);

    ASSIGN(TEMP_1, -1, IMPORT);
    ASSIGN(TEMP_1, -1, EXPORT);

    //
    if(LSD_NODE1 != NONE)
    {
        ASSIGN(LSDYNA_XP,[@getentityvalue(nodes,$LSD_NODE1,x)],EXPORT);
        ASSIGN(LSDYNA_YP,[@getentityvalue(nodes,$LSD_NODE1,y)],EXPORT);
        ASSIGN(LSDYNA_ZP,[@getentityvalue(nodes,$LSD_NODE1,z)],EXPORT);
    }
    if(LSD_NODE4 != NONE && LSD_NODE3 != NONE)
    {
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],EXPORT);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],EXPORT);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],EXPORT);
    }
    if(LSD_NODE8 != NONE && LSD_NODE7 != NONE)
    {
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],EXPORT);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],EXPORT);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],EXPORT);
    }
    if(LSD_NODE6 != NONE && LSD_NODE5 != NONE)
    {
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],EXPORT);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],EXPORT);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],EXPORT);
    }
    //
    
    if(axisOptFlag == 1 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,0.0,EXPORT);
    }
    else if(axisOptFlag == 2 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,1.0,EXPORT);
    }
    else if(axisOptFlag == 3 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,2.0,EXPORT);
    }
    else if(axisOptFlag == 4 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,3.0,EXPORT);
    }
    else if(axisOptFlag == 5 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,4.0,EXPORT);
    }

    //
    COMMENT("$      MID       RHO         E        PR      SIGY        VF        MU      BULK");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,Nu,LSDYNA_SIGY,LSDYNA_VF,LSDYNA_MU,LSDYNA_BULK);
    //

    COMMENT("$      LCA       LCB       LCC       LCS      LCAB      LCBC      LCCA      LCSR");
    if(IO_FLAG == 2)
    {
        CARD("%10d%10d%10d%10d%10d%10d%10d%10d",FLAGGED_OBJECT(LSD_LCID,LCAoption),FLAGGED_OBJECT(LSD_LCID2, LCBoption),FLAGGED_OBJECT(LSD_LCID3,LCCoption), FLAGGED_OBJECT(LSD_LCID4, LCSoption), FLAGGED_OBJECT(LSD_LCID5, LCABoption),FLAGGED_OBJECT(LSD_LCID6, LCBCoption),FLAGGED_OBJECT(LSD_LCID7, LCCAoption),CELL_COND(if(LCSRoption == TRUE) TEMP_1; else LSD_LCID8;));
    }
    if(IO_FLAG == 1)
    {
        CARD_PREREAD("%10s%10s%10s%10s%10s%10s%10s%10d",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LCSR_TEMP);
        if(LCSR_TEMP == -1)
        {
            CARD("%10d%10d%10d%10d%10d%10d%10d%10d",FLAGGED_OBJECT(LSD_LCID,LCAoption),FLAGGED_OBJECT(LSD_LCID2, LCBoption),FLAGGED_OBJECT(LSD_LCID3,LCCoption), FLAGGED_OBJECT(LSD_LCID4, LCSoption), FLAGGED_OBJECT(LSD_LCID5, LCABoption),FLAGGED_OBJECT(LSD_LCID6, LCBCoption),FLAGGED_OBJECT(LSD_LCID7, LCCAoption), LCSR_TEMP);
            ASSIGN(LCSRoption,1);
        }
        else
        {
            CARD("%10d%10d%10d%10d%10d%10d%10d%10d",FLAGGED_OBJECT(LSD_LCID,LCAoption),FLAGGED_OBJECT(LSD_LCID2, LCBoption),FLAGGED_OBJECT(LSD_LCID3,LCCoption), FLAGGED_OBJECT(LSD_LCID4, LCSoption), FLAGGED_OBJECT(LSD_LCID5, LCABoption),FLAGGED_OBJECT(LSD_LCID6, LCBCoption),FLAGGED_OBJECT(LSD_LCID7, LCCAoption), LSD_LCID8);
        }
    }

    //
    COMMENT("$     EAAU      EBBU      ECCU      GABU      GBCU      GCAU      AOPT      MACF");
    if(IO_FLAG == 2)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 6)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",LSDYNA_EAAU,LSDYNA_EBBU,LSDYNA_ECCU,LSDYNA_GABU,LSDYNA_GBCU,LSDYNA_GCAU,LOC_AOPT,LSD_MAT142_MACF);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",LSDYNA_EAAU,LSDYNA_EBBU,LSDYNA_ECCU,LSDYNA_GABU,LSDYNA_GBCU,LSDYNA_GCAU,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM),LSD_MAT142_MACF);
        }
    }
    CARD_PREREAD("%10s%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LOC_AOPT);

    if(LOC_AOPT == 0.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,1,IMPORT);
    }
    else if(LOC_AOPT == 1.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,2,IMPORT);
    }
    else if(LOC_AOPT == 2.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,3,IMPORT);
    }
    else if(LOC_AOPT == 3.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,4,IMPORT);
    }
    else if(LOC_AOPT == 4.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,5,IMPORT);
    }

    if(IO_FLAG == 1)
    {
        if(axisOptFlag >= 1 && axisOptFlag <  6)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",LSDYNA_EAAU,LSDYNA_EBBU,LSDYNA_ECCU,LSDYNA_GABU,LSDYNA_GBCU,LSDYNA_GCAU,LOC_AOPT,LSD_MAT142_MACF);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",LSDYNA_EAAU,LSDYNA_EBBU,LSDYNA_ECCU,LSDYNA_GABU,LSDYNA_GBCU,LSDYNA_GCAU,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM),LSD_MAT142_MACF);
            ASSIGN(axisOptFlag, 6, IMPORT);
        }
    }
    //    
    COMMENT("$       XP        YP        ZP        A1        A2        A3");
    if(axisOptFlag == 2 || axisOptFlag == 5)
    {
        CARD("%10lg%10lg%10lg",LSDYNA_XP,LSDYNA_YP,LSDYNA_ZP);
    }
    else if(axisOptFlag == 3)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
    }
    else
    {
        BLANK;
    }

    //
    COMMENT("$       D1        D2        D3      TSEF      SSEF      VREF      TREF    SHDFLG");
    if(axisOptFlag == 3)
    {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_D1,LSDYNA_D2,LSDYNA_D3,LSDYNA_SIGF,LSDYNA_EPSF,MATL126_VREF,MATL126_TREF,MATL126_SHDFLG);
    }
    else
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_SIGF,LSDYNA_EPSF,MATL126_VREF,MATL126_TREF,MATL126_SHDFLG);
    }

    if (axisOptFlag == 4 || axisOptFlag == 5)
    {
        COMMENT("$       V1        V2        V3");
        CARD("%10lg%10lg%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3);
    }

    if (LCSRoption == TRUE)
    {
         COMMENT("$    LCSRA     LCSRB     LCSRC    LCSRAB    LCSRBC    LCSRCA");
         CARD("%10lg%10lg%10lg%10lg%10lg%10lg",MATL126_LCSRA,MATL126_LCSRB,MATL126_LCSRC,MATL126_LCSRAB,MATL126_LCSRBC,MATL126_LCSRCA) ;
    }
}
