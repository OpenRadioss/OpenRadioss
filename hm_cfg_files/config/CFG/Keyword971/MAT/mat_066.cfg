//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 066
// 

 ATTRIBUTES(COMMON)  
 {
    // Initial and reference densities
    KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt                      = VALUE(INT, "Title");
    CommentEnumField                  = VALUE(INT, "User Comments");
    Num_Comments                      = SIZE("No. of comment lines");
    Comments                          = ARRAY[Num_Comments](STRING, "Entity Comments");
    Rho                               = VALUE(FLOAT, "Mass density");  
    LSDYNA_TKR                        = VALUE(FLOAT, "Translational stiffness along local r-axis");
    LSDYNA_TKS                        = VALUE(FLOAT, "Translational stiffness along local S-axis");
    LSDYNA_TKT                        = VALUE(FLOAT, "Translational stiffness along local T-axis");
    LSDYNA_RKR                        = VALUE(FLOAT, "Rotational stiffness about the local r-axis");
    LSDYNA_RKS                        = VALUE(FLOAT, "Rotational stiffness about the local S-axis");
    LSDYNA_RKT                        = VALUE(FLOAT, "Rotational stiffness about the local T-axis");
    LSDYNA_TDR                        = VALUE(FLOAT, "Translational viscous damper along local r-axis");
    LSDYNA_TDS                        = VALUE(FLOAT, "Translational viscous damper along local s-axis");
    LSDYNA_TDT                        = VALUE(FLOAT, "Translational viscous damper along local t-axis");
    LSDYNA_RDR                        = VALUE(FLOAT, "Rotational viscous damper about the local r-axis");
    LSDYNA_RDS                        = VALUE(FLOAT, "Rotational viscous damper about the local s-axis");
    LSDYNA_RDT                        = VALUE(FLOAT, "Rotational viscous damper about the local t-axis");
    LSDYNA_FOR                        = VALUE(FLOAT, "Preload force in r-direction");
    LSDYNA_FOS                        = VALUE(FLOAT, "Preload force in s-direction");
    LSDYNA_FOT                        = VALUE(FLOAT, "Preload force in t-direction");
    LSDYNA_MOR                        = VALUE(FLOAT, "Preload moment about r-axis");
    LSDYNA_MOS                        = VALUE(FLOAT, "Preload moment about s-axis");
    LSDYNA_MOT                        = VALUE(FLOAT, "Preload moment about t-axis");
    OptionalCard                      = VALUE(INT,   "Optional card");
    OptionalCard2                     = VALUE(INT,   "Optional card 2");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                   = 9000;
    CommentEnumField              = 3220;
    Num_Comments                  = 3101;
    LSD_TitleOpt                  = 90;
    Comments                      = 3100;
    Rho                           = 118;
    LSDYNA_TKR                    = 265;
    LSDYNA_TKS                    = 266;
    LSDYNA_TKT                    = 267;
    LSDYNA_RKR                    = 268;
    LSDYNA_RKS                    = 269;
    LSDYNA_RKT                    = 270;
    LSDYNA_TDR                    = 271;
    LSDYNA_TDS                    = 272;
    LSDYNA_TDT                    = 273;
    LSDYNA_RDR                    = 274;
    LSDYNA_RDS                    = 275;
    LSDYNA_RDT                    = 276;
    LSDYNA_FOR                    = 5517;
    LSDYNA_FOS                    = 5518;
    LSDYNA_FOT                    = 5519;
    LSDYNA_MOR                    = 5520;
    LSDYNA_MOS                    = 5521;
    LSDYNA_MOT                    = 5522;
    OptionalCard                  = -1;
    OptionalCard2                 = -1;
}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  R-AXIS_TRANSLATIONAL=SCALAR(LSDYNA_TKR);
  S-AXIS_TRANSLATIONAL=SCALAR(LSDYNA_TKS);
  T-AXIS_TRANSLATIONAL=SCALAR(LSDYNA_TKT);
  R-AXIS_ROTATIONAL=SCALAR(LSDYNA_RKR);
  S-AXIS_ROTATIONAL=SCALAR(LSDYNA_RKS);
  T-AXIS_ROTATIONAL=SCALAR(LSDYNA_RKT);
  R-AXIS_TRANSLATIONAL_VISCOUS_DAMPER=SCALAR(LSDYNA_TDR);
  S-AXIS_TRANSLATIONAL_VISCOUS_DAMPER=SCALAR(LSDYNA_TDS);
  T-AXIS_TRANSLATIONAL_VISCOUS_DAMPER=SCALAR(LSDYNA_TDT);
  R-AXIS_ROTATIONAL_VISCOUS_DAMPER=SCALAR(LSDYNA_RDR);
  S-AXIS_ROTATIONAL_VISCOUS_DAMPER=SCALAR(LSDYNA_RDS);
  T-AXIS_ROTATIONAL_VISCOUS_DAMPER=SCALAR(LSDYNA_RDT);
}

GUI(COMMON) 
{
    ASSIGN(KEYWORD_STR, "*MAT_LINEAR_ELASTIC_DISCRETE_BEAM");
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do not export");
    }
    if(CommentEnumField == 2)
    {  
    SIZE(Num_Comments);
    ARRAY(Num_Comments,"")
    {
        SCALAR(Comments);
    }
    }     
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == TRUE)
    {
        ASSIGN(KEYWORD_STR, "_TITLE");
    } 
 mandatory:
    SCALAR(Rho)                         {DIMENSION="density";}
 optional:
    SCALAR(LSDYNA_TKR)                  {DIMENSION="translation_stiffness";}
    SCALAR(LSDYNA_TKS)                  {DIMENSION="translation_stiffness";}
    SCALAR(LSDYNA_TKT)                  {DIMENSION="translation_stiffness";}
    SCALAR(LSDYNA_RKR)                  {DIMENSION="torsion_stiffness";}
    SCALAR(LSDYNA_RKS)                  {DIMENSION="torsion_stiffness";}
    SCALAR(LSDYNA_RKT)                  {DIMENSION="torsion_stiffness";}
    SCALAR(LSDYNA_TDR)                  {DIMENSION="damping";}
    SCALAR(LSDYNA_TDS)                  {DIMENSION="damping";}
    SCALAR(LSDYNA_TDT)                  {DIMENSION="damping";}
    SCALAR(LSDYNA_RDR)                  {DIMENSION="torsion_damping";}
    SCALAR(LSDYNA_RDS)                  {DIMENSION="torsion_damping";}
    SCALAR(LSDYNA_RDT)                  {DIMENSION="torsion_damping";}
    SCALAR(LSDYNA_FOR)                  {DIMENSION="force";}
    SCALAR(LSDYNA_FOS)                  {DIMENSION="force";}
    SCALAR(LSDYNA_FOT)                  {DIMENSION="force";}
    SCALAR(LSDYNA_MOR)                  {DIMENSION="moment";}
    SCALAR(LSDYNA_MOS)                  {DIMENSION="moment";}
    SCALAR(LSDYNA_MOT)                  {DIMENSION="moment";}
/*
    graphical SUPPORT("Part(s) to which material is applied") {
        OBJECTS=(/COMPONENT/BEAM,/COMPONENT/SPRING,/COMPONENT/TRUSS,/COMPONENT/RIVET);
        ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    COMMENT("$      MID       RHO       TKR       TKS       TKT       RKR       RKS       RKT");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSDYNA_TKR,LSDYNA_TKS,LSDYNA_TKT,LSDYNA_RKR,LSDYNA_RKS,LSDYNA_RKT);

    ASSIGN(OptionalCard, 1, EXPORT);
    COMMENT("$      TDR       TDS       TDT       RDR       RDS       RDT");
    FREE_CARD(OptionalCard,"%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_TDR,LSDYNA_TDS,LSDYNA_TDT,LSDYNA_RDR,LSDYNA_RDS,LSDYNA_RDT);

    ASSIGN(OptionalCard2, 1, EXPORT);
    COMMENT("$      FOR       FOS       FOT       MOR       MOS       MOT");
    FREE_CARD(OptionalCard2,"%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_FOR,LSDYNA_FOS,LSDYNA_FOT,LSDYNA_MOR,LSDYNA_MOS,LSDYNA_MOT);
}