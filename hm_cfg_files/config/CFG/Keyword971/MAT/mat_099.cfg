//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 099
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    Nu                                      = VALUE(FLOAT,  "Poissons ratio");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    E                                       = VALUE(FLOAT,  "Youngs modulus");
    LSDYNA_N                                = VALUE(FLOAT,  "input constants");
    LSDYNA_NUMINT                           = VALUE(INT,  "Number of through thickness integration points which must fail");
    LSD_LCID                                = VALUE(FUNCT,  "nonlinear damage curve");
    LSD_MAT_A                               = VALUE(FLOAT,  "input constants");
    LSD_MAT_B                               = VALUE(FLOAT,  "input constants");
    LSD_MAT_C                               = VALUE(FLOAT,  "input constants");
    LSD_MAT_EPPFR                           = VALUE(FLOAT,  "Plastic strain at which material ruptures");
    LSD_MAT_EPSO                            = VALUE(FLOAT,  "Quasi-static threshold strain rate");
    LSD_MAT_VP                              = VALUE(FLOAT,  "Formulation for rate effects");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    MAT99_PSFAIL                            = VALUE(FLOAT,  "Principal plastic strain at failure");
    MAT99_SIGMAX                            = VALUE(FLOAT,  "Maximum stress obtainable from work hardening");
    MAT99_SIGSAT                            = VALUE(FLOAT,  "Saturation stress which limits the maximum value of effective stress");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    E                                       = 119;
    LSDYNA_N                                = 71;
    LSDYNA_NUMINT                           = 35;
    LSD_LCID                                = 45;
    LSD_MAT_A                               = 310;
    LSD_MAT_B                               = 311;
    LSD_MAT_C                               = 313;
    LSD_MAT_EPPFR                           = 1177;
    LSD_MAT_EPSO                            = 317;
    LSD_MAT_VP                              = 4391;
    LSD_TitleOpt                            = 90;
    MAT99_PSFAIL                            = 4487;
    MAT99_SIGMAX                            = 4488;
    MAT99_SIGSAT                            = 4489;
    Nu                                      = 120;
    Num_Comments                            = 3101;
    Rho                                     = 118;

}

DEFAULTS(COMMON)
{

    LSD_MAT_EPPFR    = 1.000e+16;
    LSD_MAT_EPSO     = 1.0;
    MAT99_PSFAIL     = 1.000e+17;
    MAT99_SIGSAT     = 1.000e+28;

}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  YOUNG_MODULUS=SCALAR(E);
  POISSON_RATIO=SCALAR(Nu);
  FORMULATION_FOR_RATE_EFFECTS=SCALAR(LSD_MAT_VP);
  PLASTIC_STRAIN_AT_WHICH_MATERIAL_RUPTURES=SCALAR(LSD_MAT_EPPFR);
  INPUT_CONSTANTSA=SCALAR(LSD_MAT_A);
  INPUT_CONSTANTSB=SCALAR(LSD_MAT_B);
  INPUT_CONSTANTSN=SCALAR(LSDYNA_N);
  INPUT_CONSTANTSC=SCALAR(LSD_MAT_C);
  EFFECTIVE_PLALSTIC_STRAIN_AT_FAILURE=SCALAR(MAT99_PSFAIL);
  MAXIMUM_STRESS=SCALAR(MAT99_SIGMAX);
  SATURATION_STRESS=SCALAR(MAT99_SIGSAT);
  EFFECTIVE_PLASTIC_STRAIN_RATE=SCALAR(LSD_MAT_EPSO);
 public:
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_SIMPLIFIED_JOHNSON_COOK_ORTHOTROPIC_DAMAGE");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:     
     SCALAR(Rho)                        {DIMENSION="density";}
     SCALAR(E)                          {DIMENSION="pressure";}
 optional:     
     SCALAR(Nu)                         {DIMENSION="DIMENSIONLESS";}
     RADIO(LSD_MAT_VP)
     {
        ADD(0.0, "0.0: Scale yield stress (default)");
        ADD(1.0, "1.0: Viscoplastic formulation");
     }
     SCALAR(LSD_MAT_EPPFR)              {DIMENSION="DIMENSIONLESS";}
     FUNCTION(LSD_LCID)
     {
       X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
       Y_TITLE = "Damage"; Y_DIMENSION = "DIMENSIONLESS";
     }
 mandatory: 
     SCALAR(LSDYNA_NUMINT)              {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_A)                  {DIMENSION="pressure";}
     SCALAR(LSD_MAT_B)                  {DIMENSION="pressure";}
     SCALAR(LSDYNA_N)                   {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_C)                  {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT99_PSFAIL)               {DIMENSION="DIMENSIONLESS";} 
     SCALAR(MAT99_SIGMAX)               {DIMENSION="pressure";}
     SCALAR(MAT99_SIGSAT)               {DIMENSION="pressure";}
     SCALAR(LSD_MAT_EPSO)               {DIMENSION="strain_rate";}
/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D,/COMPONENT/BEAM,/COMPONENT/TRUSS,/COMPONENT/RIVET,/COMPONENT/SHELL,/COMPONENT/PENTA6,/COMPONENT/SHEL16);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID       RHO         E        PR        VP     EPPFR      LCDM    NUMINT");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10d%10d",_ID_,Rho,E,Nu,LSD_MAT_VP,LSD_MAT_EPPFR,LSD_LCID,LSDYNA_NUMINT);
    //
    COMMENT("$        A         B         N         C    PSFAIL    SIGMAX    SIGSAT      EPSO");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_A,LSD_MAT_B,LSDYNA_N,LSD_MAT_C,MAT99_PSFAIL,MAT99_SIGMAX,MAT99_SIGSAT,LSD_MAT_EPSO);
    //
}
