//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- mat_add_erosion.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    node1                                   = VALUE(NODE, "Node 1 ID");
    node2                                   = VALUE(NODE, "Node 2 ID");
    node3                                   = VALUE(NODE, "Node 3 ID");
    curve_id                                = VALUE(CURVE, "Gravitational accelerations due to body force loads.");
    igrav_gt                                = VALUE(INT,"");
    igrav                                   = VALUE(INT, "Gravitational accelerations due to body force loads.");
    intopt                                  = VALUE(INT, "Integration option");
    mass                                    = VALUE(FLOAT, "Optional added mass for accelerometer");

    IOFLAG                                  = VALUE(INT, "IOFLAG");
    KEYWORD_STR                             = VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    IOFLAG                                  = -1;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*ELEMENT_SEATBELT_ACCELEROMETER");

    //check for all DIMENSIONS
    DATA(node1,      "NID1");
    DATA(node2,      "NID2");
    DATA(node3,      "NID3");
    FLAG(igrav_gt);
    if(igrav_gt == 1)
    {
        FUNCTION(curve_id)
        {
          X_TITLE = ""; X_DIMENSION = "t";
          Y_TITLE = ""; Y_DIMENSION = "acceleration";
        }
    }
    else
    {
        RADIO(igrav)
        {
           ADD(-6, "-6: Z and X components removed from acceleration output ");
           ADD(-5, "-5: Y and Z components removed from acceleration output");
           ADD(-4, "-4: X and Y components removed from acceleration output");
           ADD(-3, "-3: Z component removed from acceleration output");
           ADD(-2, "-2: Y component removed from acceleration output");
           ADD(-1, "-1: X component removed from acceleration output");
           ADD( 0, " 0: all components included in acceleration output");
           ADD( 1, " 1: all components removed from acceleration output");
        }
    }

    RADIO(intopt)
    {
        ADD(0, " 0: velocities are integrated from the global accelerations");
        ADD(1, "1: velocities are integrated directly from the local accelerations");
    }

    SCALAR(mass)   {DIMENSION="m";}
}

// File format
FORMAT(Keyword971)
{
    ASSIGN(IOFLAG, 0, EXPORT);
    ASSIGN(IOFLAG, 1, IMPORT);

    HEADER("*ELEMENT_SEATBELT_ACCELEROMETER");

    //Card 1
    COMMENT("$   SBACID      NID1      NID2      NID3     IGRAV    INTOPT      MASS");
    CARD("%10d%10d%10d%10d%10d%10d%10lg", _ID_, node1, node2, node3, igrav, intopt, mass);

    if(igrav > 1 && IOFLAG == 1)
    {
        ASSIGN(curve_id, igrav, IMPORT);
    }
}
