//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//DEFINE_VECTOR
//

ATTRIBUTES(COMMON) {
  //VID Vector id    
  
  EXPORT_FLAG = VALUE(INT, "Export flag");
  
  Elem_Option = VALUE(INT, "Vector option");
  OPTION = VALUE(STRING,"Vector option string");
  /*
  XT        = VALUE(FLOAT, "X-coordinate of tail of vector");
  YT        = VALUE(FLOAT, "Y-coordinate of tail of vector");
  ZT        = VALUE(FLOAT, "Z-coordinate of tail of vector");
  XH        = VALUE(FLOAT, "X-coordinate of head of vector");
  YH        = VALUE(FLOAT, "Y-coordinate of head of vector");
  ZH        = VALUE(FLOAT, "Z-coordinate of head of vector");
  */
  CID       = VALUE(SYSTEM, "Coordinate system for local definition"); 
  
  unit    =   ARRAY[3](FLOAT, "tail of vector");
  dist    =   ARRAY[3](FLOAT, "hail of vector");
}


DEFAULTS(COMMON) {
}

DEFINITIONS(COMMON) {
   DATA_NAMES=(unit,dist);
}

SKEYWORDS_IDENTIFIER(COMMON)
{
  //CommentEnumField = 3220;
  //Num_Comments     = 3101;
  //Comments         = 3100;
  //LSD_TitleOpt     = 90;
 /* 
 XT=52;
 YT=53;
 ZT=54;
 XH=55;
 YH=56;
 ZH=57;
 */
 Elem_Option = 701;
 CID        = 3522;
}



GUI(COMMON) {

  RADIO(Elem_Option)
  {
     ADD(1, "SD_ORIENTATION");
     ADD(2, "VECTOR");
     ADD(3, "VECTOR_NODES");
  }
  if(Elem_Option == 2)
  {
  /*
	POINT(XT,YT,ZT,"[XT YT ZT] Coordinates of tail")
	{ 
		DIMENSION="l";
	}
	POINT(XH,YH,ZH,"[XH YH ZH] Coordinates of head")
	{ 
		DIMENSION="l";
		TYPE=RELATIVE;
	}
   
       SCALAR(XT);
       SCALAR(YT);
       SCALAR(ZT);
       SCALAR(XH);
       SCALAR(YH);
       SCALAR(ZH);
    
   
       //ARRAY(3,"Coordinate of tail of vector") {
       //  SCALAR(points);
       //}   
       
       //ARRAY(3,"Coordinate of head of vector") {
       //  SCALAR(points);
       //}      
       
       SCALAR(unit[0]);
       SCALAR(unit[1]);
       SCALAR(unit[2]);
       
       SCALAR(dist[0]);
       SCALAR(dist[1]);
       SCALAR(dist[2]);      
   */     
       
       optional:
       SCALAR(CID);  
  }
}


FORMAT(Keyword971){
 
  ASSIGN(EXPORT_FLAG, 1, EXPORT);
  
  if(EXPORT_FLAG == 0)
  {
     HEADER("*DEFINE_VECTOR%s",OPTION);
  }
  if(EXPORT_FLAG == 0 && (OPTION == "" || OPTION == "_TITLE"))
  {
     ASSIGN(Elem_Option, 2, IMPORT);
  }
  else if(EXPORT_FLAG == 0 && (OPTION == "_NODES" || OPTION == "_NODES_TITLE"))
  {
     ASSIGN(Elem_Option, 3, IMPORT);
  }
  else if(EXPORT_FLAG == 0 && (OPTION == "_SD_ORIENTATION" || OPTION == "_SD_ORIENTATION_TITLE"))
  {
    ASSIGN(Elem_Option, 1, IMPORT);
  }

  if(EXPORT_FLAG == 1 && Elem_Option == 2)
  {
     HEADER("*DEFINE_VECTOR");
  }
  else if(EXPORT_FLAG == 1 && Elem_Option == 3)
  {
     HEADER("*DEFINE_VECTOR_NODES");
  }  
  else if(EXPORT_FLAG == 1 && Elem_Option == 1)
  {
     HEADER("*DEFINE_SD_ORIENTATION");
  } 
    
    
    
  if(Elem_Option == 2)
  {
     COMMENT("$      VID        XT        YT        ZT        XH        YH        ZH       CID");
     //CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10d",_ID_,XT,YT,ZT,XH,YH,ZH,CID);
     //FREE_CELL_LIST
  }
  else if(Elem_Option == 3)
  {
     
  }  
  else if(Elem_Option == 1)
  {
     
  } 
}
  
  
  
  




