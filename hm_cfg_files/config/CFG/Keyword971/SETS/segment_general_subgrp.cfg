//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Group Setup File
// *SET_SEGMENT_GENERAL
// 

// MCDS attributes description
ATTRIBUTES {
  // Access to nodes
    idsmax        =   SIZE("No. Set item"); 
    ids           =   ARRAY[idsmax](MULTIOBJECT, "Set list item") { SUBTYPES = (  /COMPONENT , /BOX, /SETS/SET_SOLID_IDPOOL, /SETS/SET_TSHELL_IDPOOL, /ASSEMBLY  ) ; }    
//
    ids0          =   VALUE(MULTIOBJECT, "Set list item") { SUBTYPES = (  /COMPONENT , /BOX, /SETS/SET_SOLID_IDPOOL, /SETS/SET_TSHELL_IDPOOL, /ASSEMBLY  ) ; }    
    ids1          =   VALUE(MULTIOBJECT, "Set list item") { SUBTYPES = (  /COMPONENT , /BOX, /SETS/SET_SOLID_IDPOOL, /SETS/SET_TSHELL_IDPOOL, /ASSEMBLY  ) ; }    
    ids2          =   VALUE(MULTIOBJECT, "Set list item") { SUBTYPES = (  /COMPONENT , /BOX, /SETS/SET_SOLID_IDPOOL, /SETS/SET_TSHELL_IDPOOL, /ASSEMBLY  ) ; }    
    iface         =  VALUE(INT, "i face");
    fakeid        =  VALUE(INT, "id");
//
    ids_type      =   VALUE(STRING, "Type of multi object");
//
    N1            = VALUE(NODE, "Node 1 Segment  list item"); 
    N2            = VALUE(NODE, "Node 2 Segment  list item"); 
    N3            = VALUE(NODE, "Node 3 Segment  list item"); 
    N4            = VALUE(NODE, "Node 4 Segment  list item"); 
//
    A1            = VALUE(FLOAT, "A1");
    A2            = VALUE(FLOAT, "A2");
    A3            = VALUE(FLOAT, "A3");
    A4            = VALUE(FLOAT, "A4");
    A5            = VALUE(FLOAT, "A4");  
    A6            = VALUE(FLOAT, "A4");      
// HM INTERNAL
    KEY      =  VALUE(STRING, "Key type");
    opt_         =  VALUE(INT, "option");
 /*   KEYWORD_STR                               = VALUE(STRING, "Solver Keyword");*/
    NUM_COMMENTS                              = SIZE("NUM_COMMENTS");
    CommentEnumField                          = VALUE(INT,"User Comments");
    COMMENTS                                  = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
}
SKEYWORDS_IDENTIFIER(COMMON)
{   
 /*   KEYWORD_STR                               = 9000;*/
    COMMENTS                                  = 5109;
    CommentEnumField                          = 7951;
    NUM_COMMENTS                              = 5110;
//
    ids_type = -1;
 /*   TITLE = -1;*/
    KEY = -1;
    opt_ =-1;
    N1     = -1;
    N2     = -1;
    N3     = -1;
    N4     = -1;
    A1     = -1;
    A2     = -1;
    A3     = -1;
    A4     = -1;
    A5     = -1;
    A6     = -1;
    ids0 = -1;
    ids1 = -1;
    ids2 = -1;
    iface = -1;
    fakeid = -1;
//    ids3 = -1;
}
DEFAULTS(COMMON)
{
  ids_type = "ELEM";
  KEY="SEGMENT";
  opt_ = 0;
  A1 = 0;
  A2 = 0;
  A3 = 0;
  A4 = 0;
  A5 = 0;
  A6 = 0;
  
}

GUI(COMMON)
{
   mandatory:
   RADIO(KEY, "Set Type is") {
        ADD("SEG", "SEG :SEG");
        ADD("DSEG", "DSEG :DSEG");
        ADD("BOX", "BOX :BOX");
        ADD("DBOX", "DBOX :DBOX");
        ADD("BOX_SHELL", "BOX_SHELL :BOX_SHELL");
        ADD("DBOX_SHELL", "DBOX_SHELL :DBOX_SHELL");        
        ADD("BOX_SLDIO", "BOX_SLDIO :BOX_SLDIO");
        ADD("BOX_SOLID", "BOX_SOLID :BOX_SOLID");
        ADD("DBOX_SOLID", "DBOX_SOLID :DBOX_SOLID");
        ADD("BRANCH", "BRANCH :BRANCH");
        ADD("BRANCH_IO", "BRANCH :BRANCH_IO");
        ADD("BRSLDF", "BRSLDFi :BRSLDFi");
        ADD("PART", "PART :PART");
        ADD("DPART", "DPART :DPART");
        ADD("PART_IO", "PART :PART_IO");
        ADD("PSLDF", "PSLDFi :PSLDFi");
        ADD("SALECPT", "SALECPT :SALECPT");
        ADD("SALEFAC", "SALEFAC :SALEFAC");
        ADD("SET_SHELL", "SET_SHELL :SET_SHELL");
        ADD("SET_SOLID", "SET_SOLID :SET_SOLID");
        ADD("SET_SLDIO", "SET_SLDIO :SET_SLDIO");
        ADD("SET_SLDF", "SET_SLDFi :SET_SLDFi");
        ADD("SET_TSHELL", "SET_TSHELL :SET_TSHELL");
        ADD("SET_TSHIO", "SET_TSHIO :SET_TSHIO");
        ADD("SHELL", "SHELL :SHELL");
        ADD("VOL", "VOL :VOL");
        ADD("DVOL", "DVOL :DVOL");
        ADD("VOL_SHELL", "VOL_SHELL :VOL_SHELL");
        ADD("VOL_SLDIO", "VOL_SLDIO :VOL_SLDIO");
        ADD("VOL_SOLID", "VOL_SOLID :VOL_SOLID");
        ADD("ALL", "ALL :ALL");
    }

    if(KEY=="SEG" || KEY=="DSEG" )
    {
       // SIZE(segidsmax) ;
        //ARRAY(segidsmax,"Elements") {
            DATA(N1);
            DATA(N2);
            DATA(N3);
            DATA(N4);
        //    SCALAR(A1);
        //    SCALAR(A2);
        //    SCALAR(A3);
        //    SCALAR(A4);
         // }
    }  
    else if(KEY== "SALECPT" || KEY=="SALEFAC" ) 
    {
      /*  DATA(ids0);*/ /*{ SUBTYPES = (  /MSHID? ) ; }*/
        SCALAR(fakeid);
    }        
    else if(KEY=="PART" || KEY=="PART_IO" ||KEY=="PSLDF" )
    {
        DATA(ids0) { SUBTYPES = (  /COMPONENT ) ; }
        DATA(ids1) { SUBTYPES = (  /COMPONENT ) ; }
        DATA(ids2) { SUBTYPES = (  /COMPONENT ) ; }
    }
    else if(KEY=="BOX" || KEY=="BOX_SHELL" ||KEY=="BOX_SLDIO" ||KEY=="BOX_SOLID" )
    {
        DATA(ids0) { SUBTYPES = (  /BOX ) ; }
        DATA(ids1) { SUBTYPES = (  /BOX ) ; }
        DATA(ids2) { SUBTYPES = (  /BOX ) ; }
    }
    else if(KEY=="BRANCH" || KEY=="BRANCH_IO" ||KEY=="BRSLDF" )
    {
        DATA(ids0) { SUBTYPES = (  /ASSEMBLY ) ; }
        DATA(ids1) { SUBTYPES = (  /ASSEMBLY ) ; }
        DATA(ids2) { SUBTYPES = (  /ASSEMBLY ) ; }
    }
    else if(KEY=="VOL" || KEY=="VOL_SHELL" || 
           KEY=="VOL_SLDIO" ||KEY=="VOL_SOLID" )
    {
        DATA(ids0);/*{ SUBTYPES = ( /DEFINE_CONTACT_VOLUME ) ; } ? */
        DATA(ids1); /*{ SUBTYPES = ( /DEFINE_CONTACT_VOLUME ) ; } ? */
        DATA(ids2); /*{ SUBTYPES = ( /DEFINE_CONTACT_VOLUME ) ; } ? */
    }
    else if(KEY=="SHELL" )
    {
        DATA(ids0) { SUBTYPES = (  /ELEMS ) ; }
        DATA(ids1) { SUBTYPES = (  /ELEMS ) ; }
        DATA(ids2) { SUBTYPES = (  /ELEMS ) ; }
    }
    else if(KEY=="SET_SHELL" )
    {
        DATA(ids0) { SUBTYPES = (  /SETS/SET_SHELL_IDPOOL ) ; }
        DATA(ids1) { SUBTYPES = (  /SETS/SET_SHELL_IDPOOL  ) ; }
        DATA(ids2) { SUBTYPES = (  /SETS/SET_SHELL_IDPOOL  ) ; }
    }
    else if(KEY=="SET_SOLID"  || KEY=="SET_SLDIO"  || KEY=="SET_SLDF" )
    {
        DATA(ids0) { SUBTYPES = (  /SETS/SET_SOLID_IDPOOL ) ; }
        DATA(ids1) { SUBTYPES = (  /SETS/SET_SOLID_IDPOOL  ) ; }
        DATA(ids2) { SUBTYPES = (  /SETS/SET_SOLID_IDPOOL  ) ; }
    }
    else if(KEY=="SET_TSHELL"  || KEY=="SET_TSHIO"   )
    {
        DATA(ids0) { SUBTYPES = (  /SETS/SET_TSHELL_IDPOOL ) ; }
        DATA(ids1) { SUBTYPES = (  /SETS/SET_TSHELL_IDPOOL  ) ; }
        DATA(ids2) { SUBTYPES = (  /SETS/SET_TSHELL_IDPOOL  ) ; }
    }
    else if(KEY!="ALL")
    {
        SIZE(idsmax) ;
        ARRAY(idsmax,"") 
        {
            if(KEY=="DPART" )
            {
               DATA(ids) { SUBTYPES = ( /BOX ) ; }
            }
            else if(KEY=="DBOX" || KEY=="DBOX_SHELL"|| KEY=="DBOX_SOLID")
            {
               DATA(ids) { SUBTYPES = ( /BOX ) ; }
            }
            else if( KEY=="DVOL" )
            {
               DATA(ids) ;/*{ SUBTYPES = ( /DEFINE_CONTACT_VOLUME ) ; } ? */
            }
            else if(KEY!="SALECPT" && KEY!="SALEFAC" )
            {
               DATA(ids) { SUBTYPES = ( /SETS ) ; }
            }
        }
    }
optional:
    if(KEY== "BOX" || KEY== "BOX_SHELL"|| 
           KEY== "BOX_SOLID" || KEY== "BOX_SLDIO" ||
           KEY== "PART"  || KEY=="PART_IO" ||
           KEY== "BRANCH" || KEY=="BRANCH_IO" ||
           KEY== "SET_SHELL" || KEY=="SET_SOLID"|| KEY=="SET_SLDIO" ||
           KEY=="SET_TSHELL" || KEY=="SET_TSHIO"||
           KEY=="SHELL" || KEY=="VOL"||
           KEY=="VOL_SHELL" || KEY=="VOL_SLDIO"|| KEY=="VOL_SOLID" ||
           KEY== "PSLDF"||KEY== "BRSLDF"||KEY== "SET_SLDF"||
           KEY== "SALECPT" || KEY=="SALEFAC")
    {
        SCALAR(A1);
        SCALAR(A2);
        SCALAR(A3);
        SCALAR(A4);
    }   
    if(KEY== "SALECPT" || KEY=="SALEFAC")
    {
        SCALAR(A5);
        SCALAR(A6);
    }
     
    if(KEY=="PSLDF" || KEY== "BRSLDF" || KEY=="SET_SLDF" )
    {
        SCALAR(iface);
    }
}
FORMAT(Keyword971) {
    CARD_PREREAD("%-10s", KEY);  
//
   if(KEY== "ALL")
   {
        CARD("%-10s",KEY);
   }
   else if(KEY== "SEG" || KEY== "DSEG")
   {
  //      CARD("%-10s",KEY){NO_END;}
   //     FREE_CELL_LIST(segidsmax,"%10d%10d%10d%10d",N1,N2,N3,N4,50){OFFSET("%-10s", "");}
        CARD("%-10s%10d%10d%10d%10d",KEY,N1,N2,N3,N4);
   }
   else if(KEY== "BOX" || KEY== "BOX_SHELL"|| 
           KEY== "BOX_SOLID" || KEY== "BOX_SLDIO" ||
           KEY== "PART"  || KEY=="PART_IO" ||
           KEY== "BRANCH" || KEY=="BRANCH_IO" ||
           KEY== "SET_SHELL" || KEY=="SET_SOLID"|| KEY=="SET_SLDIO" ||
           KEY=="SET_TSHELL" || KEY=="SET_TSHIO"||
           KEY=="SHELL" || KEY=="VOL"||
           KEY=="VOL_SHELL" || KEY=="VOL_SLDIO"|| KEY=="VOL_SOLID")
   {
       CARD("%-10s%10d%10d%10d%10lg%10lg%10lg%10lg",KEY,ids0,ids1,ids2,A1,A2,A3,A4);
        //LIST("%-10s%10d%10lg%10lg%10lg%10lg",KEY,ids3,A1,A2,A3,A4);
       // CARD("%-10s",KEY){NO_END;}
        //LIST("%10d%10lg%10lg%10lg%10lg",ids3,A1,A2,A3,A4);
   }   
   else if(KEY== "PSLDF")
   {
       CARD("%-5s%-5d%10d%10d%10d%10lg%10lg%10lg%10lg",KEY,iface,ids0,ids1,ids2,A1,A2,A3,A4);
   }
   else if(KEY== "BRSLDF")
   {
       CARD("%-6s%-4d%10d%10d%10d%10lg%10lg%10lg%10lg",KEY,iface,ids0,ids1,ids2,A1,A2,A3,A4);
   }
   else if(KEY== "SET_SLDF")
   {
       CARD("%-8s%-2d%10d%10d%10d%10lg%10lg%10lg%10lg",KEY,iface,ids0,ids1,ids2,A1,A2,A3,A4);
   }
   else if(KEY== "SALECPT" || KEY=="SALEFAC" )
   {
     //  CARD("%-10s%10d%10lg%10lg%10lg%10lg%10lg%10lg",KEY,ids0,A1,A2,A3,A4,A5,A6);
       CARD("%-10s%10d%10lg%10lg%10lg%10lg%10lg%10lg",KEY,fakeid,A1,A2,A3,A4,A5,A6);
   }
   else
   {
        CARD("%-10s",KEY){NO_END;}
        FREE_CELL_LIST(idsmax,"%10d",ids,80){OFFSET("%-10s", "");}
   }
}
