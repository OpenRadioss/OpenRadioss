//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Group Setup File
// *SET_TSHELL_GENERAL
// 

// MCDS attributes description
ATTRIBUTES {
  // Access to nodes
    idsmax                      = SIZE("No. Set item"); 
    ids                         = ARRAY[idsmax](MULTIOBJECT, "Set list item") { SUBTYPES = ( /ELEMS/SET_TSHELL_IDPOOL , /COMPONENT , /BOX ) ; }    
    KEY                         = VALUE(STRING, "Key type");
    opt_D                       = VALUE(INT, "delete (remove) the entities from the set");
// HM INTERNAL
    ids_type                    = VALUE(STRING, "Type of multi object");
    Key_option_import           = VALUE(STRING,"temporary variable");
    Key_option_export           = VALUE(STRING,"temporary variable");
    IO_FLAG                     = VALUE(INT, "Import/Export flag");
}
SKEYWORDS_IDENTIFIER(COMMON)
{
    ids_type                    = -1;
    KEY                         = -1;
    opt_D                       = -1;
    IO_FLAG                     = -1;
    Key_option_import           = -1;
    Key_option_export           = -1;
}
DEFAULTS(COMMON)
{
  ids_type                      = "/ELEMS/SET_TSHELL_IDPOOL";
  KEY                           = "ELEM";
  opt_D                         = 0;
}

GUI(COMMON)
{
   mandatory:
    RADIO(KEY, "Set Type is") {
        ADD("ELEM", "ELEM :ELEM");
        ADD("PART", "PART :PART");
        ADD("BOX", "BOX :BOX");
        ADD("ALL", "ALL :ALL");
    }
    FLAG(opt_D);
    if(KEY=="ELEM")
    {
        ASSIGN(ids_type, /ELEMS/SET_TSHELL_IDPOOL);
    }
    else if(KEY=="PART")
    {
        ASSIGN(ids_type, /COMPONENT);
    }
    else if(KEY=="BOX")
    {
        ASSIGN(ids_type, /BOX);
    }

   SIZE(idsmax) ;
   ARRAY(idsmax,"") 
   {
       if(KEY=="ELEM")
       {
           DATA(ids) { SUBTYPES = ( /ELEMS/SET_TSHELL_IDPOOL ) ; }
       }
       else if(KEY=="PART")
       {
           DATA(ids) { SUBTYPES = (  /COMPONENT ) ; } 
       }
       else if(KEY=="BOX" )
       {
           DATA(ids) { SUBTYPES = ( /BOX ) ; }
       }
   }
}

FORMAT(Keyword971) {
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    //----------------------- IMPORT -------------------------------------------------
    CARD_PREREAD("%-10s", Key_option_import);
    ASSIGN(opt_D, _FIND(Key_option_import, "D"),IMPORT);
    if(IO_FLAG == 1 && (Key_option_import == "ALL"))
    {
        ASSIGN(KEY,ALL,IMPORT);
    }
    else if(IO_FLAG == 1 && (Key_option_import == "PART" || Key_option_import == "DPART"))
    {
        ASSIGN(KEY,PART,IMPORT);
        ASSIGN(ids_type, /COMPONENT,IMPORT);
    }
    else if(IO_FLAG == 1 && (Key_option_import == "BOX" || Key_option_import == "DBOX"))
    {
        ASSIGN(KEY,BOX,IMPORT);
        ASSIGN(ids_type, /BOX,IMPORT);
    }
    else if(IO_FLAG == 1 && (Key_option_import == "ELEM" || Key_option_import == "DELEM"))
    {
        ASSIGN(KEY,ELEM,IMPORT);
        ASSIGN(ids_type, /ELEMS/SET_TSHELL_IDPOOL,IMPORT);
    }

    if(IO_FLAG == 1 && Key_option_import == "ALL")
    {
        CARD("%-10s",Key_option_import);
    }
    else if(IO_FLAG == 1 )
    {
        CARD("%-10s",Key_option_import){NO_END;}
        FREE_CELL_LIST(idsmax,"%10d",ids,80){OFFSET("%-10s", "");}
    }

    //----------------------- EXPORT -------------------------------------------------
    if(IO_FLAG == 2 && opt_D == 1)
    {
        ASSIGN(Key_option_export,D,EXPORT);
    }
    if(IO_FLAG == 2 && KEY == "ALL")
    {
        ASSIGN(Key_option_export,ALL,EXPORT);
    }
    else if(IO_FLAG == 2 && KEY == "PART")
    {
        ASSIGN(Key_option_export,_COMBINE(Key_option_export,"PART"), EXPORT);
    }
    else if(IO_FLAG == 2 && KEY == "BOX")
    {
        ASSIGN(Key_option_export,_COMBINE(Key_option_export,"BOX"), EXPORT);
    }
    else
    {
        ASSIGN(Key_option_export,_COMBINE(Key_option_export,"ELEM"), EXPORT);
    }

    if(IO_FLAG == 2 && KEY== "ALL")
    {
        CARD("%-10s",KEY);
    }
    else if(IO_FLAG == 2 )
    {
        CARD("%-10s",Key_option_export){NO_END;}
        FREE_CELL_LIST(idsmax,"%10d",ids,80){OFFSET("%-10s", "");}
    }
}
