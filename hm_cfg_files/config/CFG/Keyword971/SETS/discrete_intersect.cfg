//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Group Setup File
// *SET_BEAM_INTERSECT
// 

// MCDS attributes description
ATTRIBUTES {
  // Access to nodes
    idsmax                      =   SIZE("No. Set item"); 
    ids                         =   ARRAY[idsmax](SETS, "Set list item"){ SUBTYPES = ( /SETS/SET_DISCRETE_IDPOOL) ; }    
    LSD_COLLECT_OPT             = VALUE(INT, "Flag to set COLLECT");
//
    TITLE                       = VALUE(STRING, "TITLE");
    LSD_TitleOpt                = VALUE(INT, "Title");

// HM INTERNAL
    set_Type                    = VALUE(STRING, "Set Type");
    option_Type                 = VALUE(STRING, "Set Type");
    KEY                         = VALUE(STRING, "header Type");
 /*   KEYWORD_STR               = VALUE(STRING, "Solver Keyword");*/
    NUM_COMMENTS                = SIZE("NUM_COMMENTS");
    CommentEnumField            = VALUE(INT,"User Comments");
    COMMENTS                    = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    _IDPOOL                     = VALUE(INT, "Set Element Id pool");
    IO_FLAG                     = VALUE(INT, "Import/Export flag");
}
SKEYWORDS_IDENTIFIER(COMMON)
{   
 /*   KEYWORD_STR               = 9000;*/
    COMMENTS                    = 5109;
    CommentEnumField            = 7951;
    NUM_COMMENTS                = 5110;
    LSD_TitleOpt                = 90;
    option_Type                 = -1;
    IO_FLAG                     =-1;
    LSD_COLLECT_OPT             = 9001;
    KEY                         = -1;
}
DEFAULTS(COMMON)
{
  _IDPOOL                       = 42;
  set_Type                      = "";
  LSD_TitleOpt                  = 0;
  LSD_COLLECT_OPT               =0;
  KEY                           ="*SET_DISCRETE_INTERSECT";
}

GUI(COMMON)
{
 mandatory:
   SIZE(idsmax) ;
   ARRAY(idsmax,"") {
    DATA(ids){ SUBTYPES = ( /SETS/SET_DISCRETE_IDPOOL) ; }    
  }
optional:   
  FLAG(LSD_TitleOpt);
/*  FLAG(LSD_COLLECT_OPT);*/

  
}
FORMAT(Keyword971) {
  ASSIGN(IO_FLAG, 1, IMPORT);
  ASSIGN(IO_FLAG, 0, EXPORT);
//import header and option
  if(IO_FLAG == 1)
  {
     HEADER("*SET_DISCRETE_INTERSECT%s", option_Type);
  }

  ASSIGN(LSD_TitleOpt, _FIND(option_Type, "TITLE"),IMPORT);
//
//export header
  ASSIGN(KEY,*SET_DISCRETE_INTERSECT, EXPORT);
  if(IO_FLAG == 0 && LSD_TitleOpt == 1)
  {
      ASSIGN(KEY,_COMBINE(KEY,"_TITLE"), EXPORT);
  }
  if(IO_FLAG == 0)
  {
      HEADER("%s",KEY);
  }
  if(IO_FLAG == 0 && LSD_TitleOpt == 1)  
  {
        CARD("%-80s", TITLE);
  }
// card I/O
  COMMENT("$      SID");
  CARD("%10d",_ID_);
//
  COMMENT("$     DSID      DSID      DSID      DSID      DSID      DSID      DSID      DSID");
  FREE_OBJECT_LIST("%10d",ids); 
  
}
