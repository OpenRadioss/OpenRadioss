//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// initial_strain_tshell
//
// --- initial_strain_tshell_subobj.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    //Card 1
    eid                                     = VALUE(ELEMS,  "Element ID", "EID");
    //ngaussianpoints                         = VALUE(INT,    "Number of in plane integration points being output","NPLANE");
    nintegrationpoints                      = VALUE(INT,    "Number of integration points through the thickness","NTHICK");

    //Stress Card. Additional Card
   tot_nintegrationpoints                  = SIZE("nintegrationpoints");
    xx                                      = ARRAY[tot_nintegrationpoints](FLOAT, "Define the ij stress component", "SIGXX");
    yy                                      = ARRAY[tot_nintegrationpoints](FLOAT, "Define the ij stress component", "SIGYY");
    zz                                      = ARRAY[tot_nintegrationpoints](FLOAT, "Define the ij stress component", "SIGZZ");
    xy                                      = ARRAY[tot_nintegrationpoints](FLOAT, "Define the ij stress component", "SIGXY");
    yz                                      = ARRAY[tot_nintegrationpoints](FLOAT, "Define the ij stress component", "SIGYZ");
    zx                                      = ARRAY[tot_nintegrationpoints](FLOAT, "Define the ij stress component", "SIGZX");

    //HM INTERNAL
    solverkeyword                           = VALUE(STRING, "Solver Keyword");
    IOFLAG                                  = VALUE(INT,    "IOFLAG");
    option                                  = VALUE(STRING, "Option keyword in IMPORT");
}


DEFAULTS(COMMON)
{
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    //Card 1
    IOFLAG                                  = -1;
	solverkeyword                           = -1;
}

GUI(COMMON)
{
    ASSIGN(solverkeyword, "*INITIAL_STRAIN_TSHELL");

    DATA(eid);	
    SIZE(tot_nintegrationpoints);
    ARRAY(tot_nintegrationpoints, "")
    {
        SCALAR(xx);         
        SCALAR(yy);         
        SCALAR(zz);         
        SCALAR(xy);         
        SCALAR(yz);         
        SCALAR(zx);         
    }
}

// File format
FORMAT(Keyword971)
{
   /*    if(eid != NONE)
       {*/
            ASSIGN(tot_nintegrationpoints,nintegrationpoints, IMPORT);
           //Card 1
            if(tot_nintegrationpoints > 0)
            {
                //COMMENT("$  EID/SID                                                        ");
                CARD("%10d%10s%10s%10s%10s%10s%10s%10s", eid, _BLANK_, _BLANK_, _BLANK_,_BLANK_,_BLANK_,_BLANK_, _BLANK_);
                //card 2
                CARD_LIST(tot_nintegrationpoints)
                {
                    //COMMENT("$        EPSxx     EPSyy     EPSzz     EPSxy     EPSyz     EPSzx        ");
                    CARD("%10lg%10lg%10lg%10lg%10lg%10lg", xx, yy, zz, xy, yz, zx);

                }
            }
      /* }*/
}
