//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// initial_strain
//
// --- initial_strain.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    nrows                                   = SIZE("Total of shell elements");
    Card_Sets_per_Element_subobj            = ARRAY[nrows](SUBOBJECT, "Card set per element");

    solverkeyword                           = VALUE(STRING,"");
    distributionentitytype                        = VALUE(UINT,    "Initial State Type");
    IOFLAG                                  = VALUE(INT,    "IOFLAG");
    option                                  = VALUE(STRING, "Option keyword in IMPORT");
}

DEFAULTS(COMMON)
{
   distributionentitytype = 1;
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    //No_of_Element                     = -1;
    Card_Sets_per_Element_subobj        = -1;
    solverkeyword                       = -1;
    IOFLAG                              = -1;
    option                              = -1;
}

GUI(COMMON)
{
    ASSIGN(solverkeyword, "*INITIAL_STRAIN");
    RADIO(distributionentitytype)
    {
       ADD(1, "Initial Strain Shell");
       ADD(3, "Initial Strain Shell Set");
    }
    if(distributionentitytype == 3)
    {
        ASSIGN(solverkeyword, "_STRAIN_SET");
        SUBOBJECT(Card_Sets_per_Element_subobj) {SUBTYPES = (/SUBOBJECT/INITIAL_STRAIN_SHELL_SUBOBJ);}
    }
    else if(distributionentitytype == 1)
    {
        ASSIGN(solverkeyword, "_SHELL");
        SUBOBJECT(Card_Sets_per_Element_subobj) {SUBTYPES = (/SUBOBJECT/INITIAL_STRAIN_SHELL_SUBOBJ);}
    }
    else if(distributionentitytype == 4)
    {
        ASSIGN(solverkeyword, "_SOLID");
        SUBOBJECT(Card_Sets_per_Element_subobj) {SUBTYPES = (/SUBOBJECT/INITIAL_STRAIN_SOLID_SUBOBJ);}
    }
    else if(distributionentitytype == 7)
    {
       ASSIGN(solverkeyword, "_SOLID_SET");
	   SUBOBJECT(Card_Sets_per_Element_subobj) {SUBTYPES = (/SUBOBJECT/INITIAL_STRAIN_SOLID_SUBOBJ);}
    }
    else if(distributionentitytype == 6)
    {
       ASSIGN(solverkeyword, "_TSHELL");
       SUBOBJECT(Card_Sets_per_Element_subobj) {SUBTYPES = (/SUBOBJECT/INITIAL_STRAIN_TSHELL_SUBOBJ);}
    }
}

// File format
FORMAT(Keyword971)
{
    HEADER("*INITIAL_STRAIN%s", APPEND_OPTIONS( [ distributionentitytype(1) , "_SHELL" ],  [ distributionentitytype(3) , "_SHELL_SET" ],
                                                [ distributionentitytype(6) , "_TSHELL" ] ));

    if(distributionentitytype == 1 || distributionentitytype == 3)
    {
        COMMENT("$      EID    NPLANE    NTHICK     LARGE");
        SUBOBJECTS(Card_Sets_per_Element_subobj, /SUBOBJECT/INITIAL_STRAIN_SHELL_SUBOBJ);
    }
    else if(distributionentitytype == 4)
    {
       COMMENT("$  EID/SID");
       SUBOBJECTS(Card_Sets_per_Element_subobj, /SUBOBJECT/INITIAL_STRAIN_SOLID_SUBOBJ);
    }
    else if(distributionentitytype == 6)
    {
       COMMENT("$  EID/SID");
       SUBOBJECTS(Card_Sets_per_Element_subobj, /SUBOBJECT/INITIAL_STRAIN_TSHELL_SUBOBJ);
    }
}
