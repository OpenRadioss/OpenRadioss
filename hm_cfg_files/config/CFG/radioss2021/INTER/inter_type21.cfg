//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- inter_type21.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    secondaryentityids                      = VALUE(SETS,         "Secondary surface identifier") { SUBTYPES = (/SETS/SURF) ; }
    mainentityids                           = VALUE(SETS,         "Main surface identifier")      { SUBTYPES = (/SETS/SURF) ; }
    Istf                                    = VALUE(INT,          "Stiffness definition flag");
    Ithe                                    = VALUE(INT,          "Heat transfer flag");
    Igap                                    = VALUE(INT,          "Gap/element option flag");
    Multimp                                 = VALUE(INT,          "Maximum average number of impacted main segments per secondary node");
    TYPE21_Idel                             = VALUE(INT,          "Secondary node deletion flag");
    TYPE21_Invn                             = VALUE(INT,          "Test flag for inverted main normals");
    Iadm                                    = VALUE(INT,          "Computing local curvature flag for adaptive meshing");

    GAPSCALE                                = VALUE(FLOAT,        "Gap scale factor");
    GAPMAX                                  = VALUE(FLOAT,        "Maximum gap");
    DIST                                    = VALUE(FLOAT,        "The drawbead depth");
    PMAX                                    = VALUE(FLOAT,        "Maximum contact pressure, due to thickening");
    TYPE21_ITim                             = VALUE(INT,          "Activate tangential force limitations");

    STMIN                                   = VALUE(FLOAT,        "Minimum stiffness");
    STMAX                                   = VALUE(FLOAT,        "Maximum stiffness");
    Pskid                                   = VALUE(FLOAT,        "Maximum contact pressure used for defining a limit tangential force for skid line output (/H3D/NODA/SKID_LINE)");

    STFAC                                   = VALUE(FLOAT,        "Interface stiffness (if Istf = 1) or Stiffness scale factor for the interface (if Istf = 0)");
    FRIC                                    = VALUE(FLOAT,        "Coulomb friction (if fct_IDF = 0) or Coulomb friction scale factor (if fct_IDF not equals to 0)");
    MINI                                    = VALUE(FLOAT,        "Minimum gap for impact activation");
    TSTART                                  = VALUE(FLOAT,        "Start time");
    TSTOP                                   = VALUE(FLOAT,        "Time for temporary deactivation");

    Deactivate_X_BC                         = VALUE(INT,          "Deactivation flag of boundary conditions at impact");
    Deactivate_Y_BC                         = VALUE(INT,          "Deactivation flag of boundary conditions at impact");
    Deactivate_Z_BC                         = VALUE(INT,          "Deactivation flag of boundary conditions at impact");
    INACTIV                                 = VALUE(INT,          "Deactivation flag of stiffness in case of initial penetrations");
    VISC                                    = VALUE(FLOAT,        "Critical damping coefficient on interface stiffness");
    SORT_FACT                               = VALUE(FLOAT,        "Sorting factor is used to speed up the sorting algorithm");

    Ifric                                   = VALUE(INT,          "Friction formulation flag");
    Ifiltr                                  = VALUE(INT,          "Friction filtering flag");
    Xfreq                                   = VALUE(FLOAT,        "Filtering coefficient");
    ISENSOR                                 = VALUE(SENSOR,       "Sensor identifier to activate/deactivate the interface");
    Crx_Fun                                 = VALUE(FUNCT,        "Function identifier for friction coefficient with temperature");
    scale1                                  = VALUE(FLOAT,        "Abscissa scale factor on fct_IDF");

    //Ifric > 0
    C1                                      = VALUE(FLOAT,        "Friction law coefficient");
    C2                                      = VALUE(FLOAT,        "Friction law coefficient");
    C3                                      = VALUE(FLOAT,        "Friction law coefficient");
    C4                                      = VALUE(FLOAT,        "Friction law coefficient");
    C5                                      = VALUE(FLOAT,        "Friction law coefficient");

    //Ifric > 1
    C6                                      = VALUE(FLOAT,        "Friction law coefficient");

    NRadm                                   = VALUE(INT,          "Number of elements through a 90Â° radius");
    Padm                                    = VALUE(FLOAT,        "Criteria on the percentage of penetration");
    Angladm                                 = VALUE(FLOAT,        "Angle criteria");
    MASS                                    = VALUE(FLOAT,        "Mass of the main surface");
    Iskew                                   = VALUE(SYSTEM,       "Skew identifier");
    Irot                                    = VALUE(INT,          "Rotational dofs computation flag");
    ICOG                                    = VALUE(INT,          "Center of mass computation flag");
    

    xg                                      = VALUE(FLOAT,        "Center of mass reference coordinates");
    yg                                      = VALUE(FLOAT,        "Center of mass reference coordinates");
    zg                                      = VALUE(FLOAT,        "Center of mass reference coordinates");

    JXX                                     = VALUE(FLOAT,        "Inertia Jxx");
    JYY                                     = VALUE(FLOAT,        "Inertia Jyy");
    JZZ                                     = VALUE(FLOAT,        "Inertia Jzz");

    JXY                                     = VALUE(FLOAT,        "Inertia Jxy");
    JYZ                                     = VALUE(FLOAT,        "Inertia Jyz");
    JZX                                     = VALUE(FLOAT,        "Inertia Jxz");

    Kthe                                    = VALUE(FLOAT,        "Heat exchange coefficient (if fct_IDK = 0) or Heat exchange scale factor (if fct_IDK not equals to 0)");
    fct_ID_k                                = VALUE(FUNCT,        "Function identifier for heat exchange definition with contact pressure");
    A_scale_k                               = VALUE(FLOAT,        "Abscissa scale factor on fct_IDK");
    Tint                                    = VALUE(FLOAT,        "Interface temperature");
    Ithe_form                               = VALUE(INT,          "Heat contact formulation flag");

    F_RAD                                   = VALUE(FLOAT,        "Radiation factor");
    D_RAD                                   = VALUE(FLOAT,        "Maximum distance for radiation computation");
    HEAT_AL                                 = VALUE(FLOAT,        "Frictional heating factor");
    D_COND                                  = VALUE(FLOAT,"Maximum conduction distance");
    F_COND                                  = VALUE(FUNCT,"Function identifier for the conductive heat exchange coefficient definition as a function of distance  ");

    ID_RBY                                  = VALUE(ELEMS,        "Rigid body identifier");
    InterfaceId                             = VALUE(GROUP,        "Reference interface TYPE21 identifier for damping");
    DAMP1                                   = VALUE(FLOAT,        "Translational critical damping factor");
    DAMP2                                   = VALUE(FLOAT,        "Rotational critical damping factor");

    NUM_X                                   = SIZE(               "Boundary Conditions");
    DIR_X_ARRAY                             = ARRAY[NUM_X](STRING,"Direction for which this condition applies");
    condition_type_X                        = ARRAY[NUM_X](INT,   "Type for the condition");
    Tstart_arr_X                            = ARRAY[NUM_X](FLOAT, "Start time for applying the condition");
    Tstop_arr_X                             = ARRAY[NUM_X](FLOAT, "Stop time for applying the condition");
    Ifunct_x                                = ARRAY[NUM_X](FUNCT, "Function defining the imposed velocity, displacement or concentrated load");

    Fport                                   = ARRAY[NUM_X](FLOAT, "Abscissa scale factor on Ifunct");
    Fporp                                   = ARRAY[NUM_X](FLOAT, "Ordinate scale factor on Ifunct");

    NUM_Y                                   = SIZE(               "Boundary Conditions");
    DIR_Y_ARRAY                             = ARRAY[NUM_Y](STRING,"Direction for which this condition applies");
    condition_type_Y                        = ARRAY[NUM_Y](INT,   "Type for the condition");
    Tstart_arr_Y                            = ARRAY[NUM_Y](FLOAT, "Start time for applying the condition");
    Tstop_arr_Y                             = ARRAY[NUM_Y](FLOAT, "Stop time for applying the condition");
    Ifunct_y                                = ARRAY[NUM_Y](FUNCT, "Function defining the imposed velocity, displacement or concentrated load");

    Fp1                                     = ARRAY[NUM_Y](FLOAT, "Abscissa scale factor on Ifunct");
    Fp2                                     = ARRAY[NUM_Y](FLOAT, "Ordinate scale factor on Ifunct");

    NUM_Z                                   = SIZE(               "Boundary Conditions");
    DIR_Z_ARRAY                             = ARRAY[NUM_Z](STRING,"Direction for which this condition applies");
    condition_type_Z                        = ARRAY[NUM_Z](INT,   "Type for the condition");
    Tstart_arr_Z                            = ARRAY[NUM_Z](FLOAT, "Start time for applying the condition");
    Tstop_arr_Z                             = ARRAY[NUM_Z](FLOAT, "Stop time for applying the condition");
    Ifunct_z                                = ARRAY[NUM_Z](FUNCT, "Function defining the imposed velocity, displacement or concentrated load");

    Fport1                                  = ARRAY[NUM_Z](FLOAT, "Abscissa scale factor on Ifunct");
    Fporp1                                  = ARRAY[NUM_Z](FLOAT, "Ordinate scale factor on Ifunct");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING,       "Solver Keyword");

    TITLE                                   = VALUE(STRING,       "Interface title");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    Istf                                    = 8044;
    Ithe                                    = 4735;
    Igap                                    = 8045;
    Multimp                                 = 8046;
    TYPE21_Idel                             = 2568;
    TYPE21_Invn                             = 1874;
    Iadm                                    = 4356;

    GAPSCALE                                = 4021;
    GAPMAX                                  = 4022;
    DIST                                    = 5315;
    PMAX                                    = 8146;
    TYPE21_ITim                             = 2567;

    STMIN                                   = 4023;
    STMAX                                   = 4024;
    Pskid                                   = 2795;

    STFAC                                   = 4253;
    FRIC                                    = 5;
    MINI                                    = 4109;
    TSTART                                  = 11;
    TSTOP                                   = 12;

    Deactivate_X_BC                         = 7020;
    Deactivate_Y_BC                         = 7021;
    Deactivate_Z_BC                         = 7022;
    INACTIV                                 = 94;
    VISC                                    = 7026;
    SORT_FACT                               = 5321;

    Ifric                                   = 6303;
    Ifiltr                                  = 6304;
    Xfreq                                   = 6305;
    ISENSOR                                 = 5157;
    Crx_Fun                                 = 4125;
    scale1                                  = 4528;

    //Ifric > 0
    C1                                      = 6306;
    C2                                      = 6307;
    C3                                      = 6308;
    C4                                      = 6309;
    C5                                      = 6310;

    //Ifric > 1
    C6                                      = 6311;

    NRadm                                   = 4475;
    Padm                                    = 4476;
    Angladm                                 = 4477;
    MASS                                    = 167;
    Iskew                                   = 4738;
    Irot                                    = 4739;
    ICOG                                    = 8048;

    xg                                      = 4740;
    yg                                      = 4408;
    zg                                      = 4409;

    JXX                                     = 471;
    JYY                                     = 474;
    JZZ                                     = 476;

    JXY                                     = 472;
    JYZ                                     = 475;
    JZX                                     = 473;

    Kthe                                    = 4736;
    fct_ID_k                                = 695;
    A_scale_k                               = 696;
    Tint                                    = 4737;
    Ithe_form                               = 1058;

    F_RAD                                   = 697;
    D_RAD                                   = 698;
    HEAT_AL                                 = 4344;

    ID_RBY                                  = 699;
    InterfaceId                             = 4566;
    DAMP1                                   = 254;
    DAMP2                                   = 5179;

    NUM_X                                   = 4626;
    DIR_X_ARRAY                             = 4629;
    condition_type_X                        = 4644;
    Tstart_arr_X                            = 4635;
    Tstop_arr_X                             = 4636;
    Ifunct_x                                = 4641;

    Fport                                   = 4110;
    Fporp                                   = 4111;

    NUM_Y                                   = 4627;
    DIR_Y_ARRAY                             = 4630;
    condition_type_Y                        = 4633;
    Tstart_arr_Y                            = 4637;
    Tstop_arr_Y                             = 4638;
    Ifunct_y                                = 4642;

    Fp1                                     = 4114;
    Fp2                                     = 4115;

    NUM_Z                                   = 4628;
    DIR_Z_ARRAY                             = 4631;
    condition_type_Z                        = 4634;
    Tstart_arr_Z                            = 4639;
    Tstop_arr_Z                             = 4640;
    Ifunct_z                                = 4643;

    Fport1                                  = 4119;
    Fporp1                                  = 4120;
    D_COND                                  = -1;
    F_COND                                  = -1;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;

    TITLE                                   = -1;
}

CHECK(COMMON)
{
    Xfreq                                   >= 0.0;
    Xfreq                                   <= 1.0;
}

DEFAULTS(COMMON)
{
    Igap                                    = 2;
    Multimp                                 = 4;
    TYPE21_Idel                             = 0;
    TYPE21_Invn                             = 0;
    Iadm                                    = 2;

    GAPSCALE                                = 1.0;
    PMAX                                    = 1e30;
    TYPE21_ITim                             = 0;

    STMAX                                   = 1e30;
    Pskid                                   = 1e30;

    STFAC                                   = 0.01;
    FRIC                                    = 0.0;
    TSTOP                                   = 1.0e+30;

    VISC                                    = 1.0;
    SORT_FACT                               = 0.20;

    Ifric                                   = 0;
    Ifiltr                                  = 0;
    scale1                                  = 1.0;

    NRadm                                   = 3;
    Padm                                    = 1.0;
    Angladm                                 = 30.0;

    Kthe                                    = 0.0;
    A_scale_k                               = 1.0;

    D_RAD                                   = 1.0;
    F_RAD                                   = 1.0;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/INTER/TYPE21/");

    DATA(secondaryentityids, "surf_IDs");
    DATA(mainentityids, "surf_IDm");

    RADIO(Istf, "Istf")
    {
        ADD(0, "0: Stfac is a stiffness scale factor and the stiffness is computed according to the secondary side characteristics");
        ADD(1, "1: Stfac is a stiffness value");
    }

    RADIO(Ithe, "Ithe")
    {
        ADD(0, "0: No heat transfer");
        ADD(1, "1: Heat transfer is activated, and the temperature of the tool is considered as constant");
        ADD(2, "2: Heat transfer is activated and the temperature can be variable over the main surface and time");
    }

    RADIO(Igap, "Igap")
    {
        ADD(0, "0: Gap is constant and equal to the minimum gap");
        ADD(1, "1: Gap is computed accordingly to the characteristics of the impacted secondary node; gap does not take into account variation of shells and 3-node shells thickness along the time");
        ADD(2, "2: Gap is computed accordingly to the characteristics of the impacted secondary node + gap will vary along the time according to the variation of shells and 3-node shells thickness on the secondary side");
    }

    RADIO(TYPE21_Idel, "Idel")
    {
        ADD(0, "0: (Default) No deletion of secondary nodes");
        ADD(1, "1: When all the elements (4-node shells, 3-node shells, solids) associated to one secondary node are deleted, the secondary node is removed from the secondary side of the interface");
    }

    RADIO(TYPE21_Invn, "Invn")
    {
        ADD(0, "0: (Default) Orientation of main normal will not be checked");
        ADD(1, "1: Orientation of main normal will be checked");
    }

    RADIO(Iadm, "Iadm")
    {
        ADD(0, "0: Local curvature for adaptive meshing is not computed");
        ADD(1, "1: If the contact occurs in a zone (main side) whose radius of curvature is lower than the element size (secondary side), the element on the secondary side will be divided ");
        ADD(2, "2: If the contact occurs in a zone (main side) whose radius of curvature is lower than NRadm times the element size (secondary side), the element on the secondary side will be divided");
    }

    SCALAR(GAPSCALE,   "Fscalegap")                 { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(GAPMAX,     "Gapmax")                    { DIMENSION = "l" ; }
    SCALAR(DIST,       "DEPTH")                     { DIMENSION = "l" ; }
    SCALAR(PMAX,       "Pmax")                      { DIMENSION = "pressure" ; }

    RADIO(TYPE21_ITim, "ITlim")
    {
        ADD(0, "0: (Default) Tangential force is limited using Pmax");
        ADD(1, "1: Deactivates tangential force limitation");
    }

    SCALAR(STMIN, "Stmin")                          { DIMENSION = "translation_stiffness" ; }
    SCALAR(STMAX, "Stmax")                          { DIMENSION = "translation_stiffness" ; }
    SCALAR(Pskid, "Pskid")                          { DIMENSION = "pressure" ; }

    SCALAR(STFAC, "Stfac")
    {
       if (Istf==1)   { TITLE = "Interface stiffness"  ; DIMENSION = "translation_stiffness"; }
       else           { TITLE = "Stiffness scale factor for the interface" ; DIMENSION = "DIMENSIONLESS"; }
    }
    SCALAR(FRIC,          "Fric")                   { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(MINI,          "Gapmin")                 { DIMENSION = "l" ; }
    SCALAR(TSTART,        "Tstart")                 { DIMENSION = "t" ; }
    SCALAR(TSTOP,         "Tstop")                  { DIMENSION = "t" ; }
    FLAG(Deactivate_X_BC, "IBC_x");
    FLAG(Deactivate_Y_BC, "IBC_y");
    FLAG(Deactivate_Z_BC, "IBC_z");

    RADIO(INACTIV, "Inacti")
    {
        ADD(0, "0: No action");
        ADD(1, "1: Deactivation of stiffness on nodes");
        ADD(5, "5: Gap is variable with time and initial gap is computed as: gap0=GapâP0, with P0 as the initial penetration");
        ADD(6, "6: Gap is variable with time, but initial penetration is computed as (the node is slightly depenetrated):gap0=GapâP0â5%*(GapâP0)");
    }

    SCALAR(VISC,      "VISs")                       { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(SORT_FACT, "Bumult")                     { DIMENSION = "DIMENSIONLESS" ; }

    RADIO(Ifric, "Ifric")
    {
        ADD(0, "0: (Default) Static Coulomb friction law");
        ADD(1, "1: Generalized viscous friction law");
        ADD(2, "2: (Modified) Darmstad friction law");
        ADD(3, "3: Renard friction law");
    }

    RADIO(Ifiltr, "Ifiltr")
    {
        ADD(0, "0: (Default) No filter is used");
        ADD(1, "1: Simple numerical filter");
        ADD(2, "2: Standard -3dB filter with filtering period");
        ADD(3, "3: Standard -3dB filter with cutting frequency");
    }

    SCALAR(Xfreq, "Xfreq")                          {DIMENSION="f";}
    DATA(ISENSOR, "sens_ID");
    DATA(Crx_Fun, "fct_IDF");
    SCALAR(scale1, "AscaleF")                       { DIMENSION = "k" ; }//as per manual. but should it be dimensionless?

    if(Ifric>0) 
    {
      SCALAR(C1) {
        if (Ifric==1)      { TITLE = "Friction C1 (Viscous law)"  ; DIMENSION = "inverse_of_pressure"; }
        else if (Ifric==2) { TITLE = "Friction C1 (Darmstad law)" ; DIMENSION = "inverse_of_square_of_pressure"; }
        else if (Ifric==3) { TITLE = "Friction C1 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
                 }  
      SCALAR(C2) {
        if (Ifric==1)      { TITLE = "Friction C2 (Viscous law)"  ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==2) { TITLE = "Friction C2 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==3) { TITLE = "Friction C2 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }      }  
      SCALAR(C3) {
        if (Ifric==1)      { TITLE = "Friction C3 (Viscous law)"  ; DIMENSION = "inverse_surfacic_power"; }
        else if (Ifric==2) { TITLE = "Friction C3 (Darmstad law)" ; DIMENSION = "inverse_of_pressure"; }
        else if (Ifric==3) { TITLE = "Friction C3 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
                 }  
      SCALAR(C4) {
        if (Ifric==1)      { TITLE = "Friction C4 (Viscous law)"  ; DIMENSION = "inverse_of_square_of_pressure"; }
        else if (Ifric==2) { TITLE = "Friction C4 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==3) { TITLE = "Friction C4 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
                 }  
      SCALAR(C5) {
        if (Ifric==1)      { TITLE = "Friction C5 (Viscous law)"  ; DIMENSION = "inverse_of_square_of_speed"; }
        else if (Ifric==2) { TITLE = "Friction C5 (Darmstad law)" ; DIMENSION = "DIMENSIONLESS"; }
        else if (Ifric==3) { TITLE = "Friction C5 (Renard law)"   ; DIMENSION = "velocity"; }
                 }
    }
    if(Ifric>1) {
      SCALAR(C6) {
       if (Ifric==2)      { TITLE = "Friction C6 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
       else if (Ifric==3) { TITLE = "Friction C6 (Renard law)"   ; DIMENSION = "velocity"; }
                } 
    }

    SCALAR(NRadm, "NRadm")                          { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(Padm, "Padm")                            { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(Angladm, "Angladm")                      { DIMENSION = "a" ; }
    SCALAR(Kthe, "Kthe")
    {
           if (fct_ID_k==NONE)      { TITLE = "Heat exchange coefficient"  ; DIMENSION = "thermal_convectivity"; }
           else                     { TITLE = "Heat exchange scale factor" ; DIMENSION = "DIMENSIONLESS"; }
    }
    DATA(fct_ID_k, "fct_IDK");
    SCALAR(A_scale_k, "AscaleK")                    { DIMENSION = "pressure" ; }
    SCALAR(Tint, "Tint")                            { DIMENSION = "k" ; }

    RADIO(Ithe_form, "Ithe_form")
    {
        ADD(0, "0: Exchange only between interface (constant temperature) and shells (secondary side)");
        ADD(1, "1: Heat exchange between all pieces in contact");
    }

    SCALAR(F_RAD, "Frad")                          { DIMENSION = "stefan_lorentz_constant" ;}
    SCALAR(D_RAD, "Drad")                           { DIMENSION = "l" ; }

    SCALAR(HEAT_AL, "Fheat")                    { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(D_COND)                                { DIMENSION="l"; }
    DATA(F_COND); 

    DATA(ID_RBY, "IDrby");
    DATA(InterfaceId, "IDref");
    SCALAR(DAMP1, "Damp")                           { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(DAMP2, "Dampr")                          { DIMENSION = "DIMENSIONLESS" ; }
}

// File format
FORMAT(radioss100)
{
    HEADER("/INTER/TYPE21/%d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("#surfIDslvsurfIDmast      Istf                Igap   Multimp                                    Iadm");
    CARD("%10d%10d%10d%10s%10d%10d%30s%10d", secondaryentityids, mainentityids, Istf, _BLANK_, Igap, Multimp, _BLANK_, Iadm);

    COMMENT("#          Fscalegap             Gap_max               Depth                Pmax");
    CARD("%20lg%20lg%20lg%20lg", GAPSCALE, GAPMAX, DIST, PMAX);

    COMMENT("#              Stmin               Stmax");
    CARD("%20lg%20lg", STMIN, STMAX);

    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", STFAC, FRIC, MINI, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VisS                                  Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20s%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_,INACTIV, VISC, _BLANK_, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq");
    CARD("%10d%10d%20lg", Ifric, Ifiltr, Xfreq);

    COMMENT("#                 C1                  C2                  C3                  C4                  C5");
    CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);

    COMMENT("#                 C6");
    CARD("%20lg", C6);

    COMMENT("#    NRadm                Padm             Angladm");
    CARD("%10d%20lg%20lg", NRadm, Padm, Angladm);

    CARD("%100s", _BLANK_);

    COMMENT("#               Mass");
    CARD("%20lg", MASS);

    FREE_CARD_LIST(NUM_X)
    {
        COMMENT("#      Dir      Type          Tstartcond           Tstopcond    Ifunct");
        CARD("         X%10d%20lg%20lg%10d", condition_type_X, Tstart_arr_X, Tstop_arr_X, Ifunct_x);

        COMMENT("#            Ascalex             Fscaley");
        CARD("%20lg%20lg", Fport, Fporp);
    } { TOKEN_END = ("         Y", "         Z") ; }

    FREE_CARD_LIST(NUM_Y)
    {
        COMMENT("#      Dir      Type          Tstartcond           Tstopcond    Ifunct");
        CARD("         Y%10d%20lg%20lg%10d", condition_type_Y, Tstart_arr_Y, Tstop_arr_Y, Ifunct_y);

        COMMENT("#            Ascalex             Fscaley");
        CARD("%20lg%20lg", Fp1, Fp2);
    } { TOKEN_END = ("         X", "         Z") ; }

    FREE_CARD_LIST(NUM_Z)
    {
        COMMENT("#      Dir      Type          Tstartcond           Tstopcond    Ifunct");
        CARD("         Z%10d%20lg%20lg%10d", condition_type_Z, Tstart_arr_Z, Tstop_arr_Z, Ifunct_z);

        COMMENT("#            Ascalex             Fscaley");
        CARD("%20lg%20lg", Fport1, Fporp1);
    } { TOKEN_END = ("         X", "         Y") ; }
}

FORMAT(radioss110)
{
    HEADER("/INTER/TYPE21/%d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("# surf_IDs  surf_IDm      Istf      Ithe      Igap   Multimp                                    Iadm");
    CARD("%10d%10d%10d%10d%10d%10d%30s%10d", secondaryentityids, mainentityids, Istf, Ithe, Igap, Multimp, _BLANK_, Iadm);

    COMMENT("#          Fscalegap             Gap_max               Depth                Pmax");
    CARD("%20lg%20lg%20lg%20lg", GAPSCALE, GAPMAX, DIST, PMAX);

    COMMENT("#              Stmin               Stmax");
    CARD("%20lg%20lg", STMIN, STMAX);

    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", STFAC, FRIC, MINI, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VisS                                  Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20s%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_,INACTIV, VISC, _BLANK_, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq");
    CARD("%10d%10d%20lg", Ifric, Ifiltr, Xfreq);

    COMMENT("#                 C1                  C2                  C3                  C4                  C5");
    CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);

    COMMENT("#                 C6");
    CARD("%20lg", C6);

    COMMENT("#    NRadm                Padm             Angladm");
    CARD("%10d%20lg%20lg", NRadm, Padm, Angladm);

    COMMENT("#               Kthe                                    Tint   fct_IDK             AscaleK");
    CARD("%20lg%20s%20lg%10d%20lg", Kthe, _BLANK_, Tint, fct_ID_k, A_scale_k);

    COMMENT("#               Mass     Iskew      Irot      ICoG     IDref                Damp               Dampr");
    CARD("%20lg%10d%10d%10d%10d%20lg%20lg", MASS, Iskew, Irot, ICOG, InterfaceId, DAMP1, DAMP2);

    COMMENT("#                 Xg                  Yg                  Zg");
    CARD("%20lg%20lg%20lg", xg, yg, zg);

    COMMENT("#                Jxx                 Jyy                 Jzz");
    CARD("%20lg%20lg%20lg", JXX, JYY, JZZ);

    COMMENT("#                Jxy                 Jyz                 Jxz");
    CARD("%20lg%20lg%20lg", JXY, JYZ, JZX);

    FREE_CARD_LIST(NUM_X)
    {
        COMMENT("#      Dir      Type          Tstartcond           Tstopcond    Ifunct");
        CARD("         X%10d%20lg%20lg%10d", condition_type_X, Tstart_arr_X, Tstop_arr_X, Ifunct_x);

        COMMENT("#            Ascalex             Fscaley");
        CARD("%20lg%20lg", Fport, Fporp);
    } { TOKEN_END = ("         Y", "         Z") ; }

    FREE_CARD_LIST(NUM_Y)
    {
        COMMENT("#      Dir      Type          Tstartcond           Tstopcond    Ifunct");
        CARD("         Y%10d%20lg%20lg%10d", condition_type_Y, Tstart_arr_Y, Tstop_arr_Y, Ifunct_y);

        COMMENT("#            Ascalex             Fscaley");
        CARD("%20lg%20lg", Fp1, Fp2);
    } { TOKEN_END = ("         X", "         Z") ; }

    FREE_CARD_LIST(NUM_Z)
    {
        COMMENT("#      Dir      Type          Tstartcond           Tstopcond    Ifunct");
        CARD("         Z%10d%20lg%20lg%10d", condition_type_Z, Tstart_arr_Z, Tstop_arr_Z, Ifunct_z);

        COMMENT("#            Ascalex             Fscaley");
        CARD("%20lg%20lg", Fport1, Fporp1);
    } { TOKEN_END = ("         X", "         Y") ; }
}

FORMAT(radioss120)
{
    HEADER("/INTER/TYPE21/%d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("# surf_IDs  surf_IDm      Istf      Ithe      Igap   Multimp                                    Iadm");
    CARD("%10d%10d%10d%10d%10d%10d%30s%10d", secondaryentityids, mainentityids, Istf, Ithe, Igap, Multimp, _BLANK_, Iadm);

    COMMENT("#          Fscalegap             Gap_max               Depth                Pmax");
    CARD("%20lg%20lg%20lg%20lg", GAPSCALE, GAPMAX, DIST, PMAX);

    COMMENT("#              Stmin               Stmax");
    CARD("%20lg%20lg", STMIN, STMAX);

    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", STFAC, FRIC, MINI, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VisS                                  Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20s%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_,INACTIV, VISC, _BLANK_, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID");
    CARD("%10d%10d%20lg%10s%10d", Ifric, Ifiltr, Xfreq, _BLANK_, ISENSOR);

    COMMENT("#                 C1                  C2                  C3                  C4                  C5");
    CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);

    COMMENT("#                 C6");
    CARD("%20lg", C6);

    COMMENT("#    NRadm                Padm             Angladm");
    CARD("%10d%20lg%20lg", NRadm, Padm, Angladm);

    COMMENT("#               Kthe   fct_IDK             AscaleK                Tint");
    CARD("%20lg%10d%20lg%20lg", Kthe, fct_ID_k, A_scale_k, Tint);

    COMMENT("#               Frad                Drad");
    CARD("%20lg%20lg", F_RAD, D_RAD);

    COMMENT("#    IDrby     IDref                Damp               Dampr");
    CARD("%10d%10d%20lg%20lg", ID_RBY, InterfaceId, DAMP1, DAMP2);
}

FORMAT(radioss130)
{
    HEADER("/INTER/TYPE21/%d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("# surf_IDs  surf_IDm      Istf      Ithe      Igap   Multimp                                    Iadm");
    CARD("%10d%10d%10d%10d%10d%10d%30s%10d", secondaryentityids, mainentityids, Istf, Ithe, Igap, Multimp, _BLANK_, Iadm);

    COMMENT("#          Fscalegap             Gap_max               Depth                Pmax");
    CARD("%20lg%20lg%20lg%20lg", GAPSCALE, GAPMAX, DIST, PMAX);

    COMMENT("#              Stmin               Stmax");
    CARD("%20lg%20lg", STMIN, STMAX);

    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", STFAC, FRIC, MINI, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VisS                                  Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20s%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_,INACTIV, VISC, _BLANK_, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID");
    CARD("%10d%10d%20lg%10s%10d", Ifric, Ifiltr, Xfreq, _BLANK_, ISENSOR);

    COMMENT("#                 C1                  C2                  C3                  C4                  C5");
    CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);

    COMMENT("#                 C6");
    CARD("%20lg", C6);

    COMMENT("#    NRadm                Padm             Angladm");
    CARD("%10d%20lg%20lg", NRadm, Padm, Angladm);

    COMMENT("#               Kthe   fct_IDK             AscaleK                Tint");
    CARD("%20lg%10d%20lg%20lg", Kthe, fct_ID_k, A_scale_k, Tint);

    COMMENT("#               Frad                Drad                         Fheat");
    CARD("%20lg%20lg%10s%20lg", F_RAD, D_RAD, _BLANK_, HEAT_AL);

    COMMENT("#    IDrby     IDref                Damp               Dampr");
    CARD("%10d%10d%20lg%20lg", ID_RBY, InterfaceId, DAMP1, DAMP2);
}

FORMAT(radioss140)
{
    HEADER("/INTER/TYPE21/%d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("# surf_IDs  surf_IDm      Istf      Ithe      Igap                                              Iadm");
    CARD("%10d%10d%10d%10d%10d%40s%10d", secondaryentityids, mainentityids, Istf, Ithe, Igap, _BLANK_, Iadm);

    COMMENT("#          Fscalegap             Gap_max               Depth                Pmax");
    CARD("%20lg%20lg%20lg%20lg", GAPSCALE, GAPMAX, DIST, PMAX);

    COMMENT("#              Stmin               Stmax");
    CARD("%20lg%20lg", STMIN, STMAX);

    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", STFAC, FRIC, MINI, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VisS                                  Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20s%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_,INACTIV, VISC, _BLANK_, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID   fct_IDF             AscaleF");
    CARD("%10d%10d%20lg%10s%10d%10d%20lg", Ifric, Ifiltr, Xfreq, _BLANK_, ISENSOR, Crx_Fun,scale1);

    COMMENT("#                 C1                  C2                  C3                  C4                  C5");
    CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);

    COMMENT("#                 C6");
    CARD("%20lg", C6);

    COMMENT("#    NRadm                Padm             Angladm");
    CARD("%10d%20lg%20lg", NRadm, Padm, Angladm);

    COMMENT("#               Kthe   fct_IDK             AscaleK                Tint");
    CARD("%20lg%10d%20lg%20lg", Kthe, fct_ID_k, A_scale_k, Tint);

    COMMENT("#               Frad                Drad               Fheat");
    CARD("%20lg%20lg%20lg", F_RAD, D_RAD, HEAT_AL);

    COMMENT("#    IDrby     IDref                Damp               Dampr");
    CARD("%10d%10d%20lg%20lg", ID_RBY, InterfaceId, DAMP1, DAMP2);
}

FORMAT(radioss2017)
{
    HEADER("/INTER/TYPE21/%d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("# surf_IDs  surf_IDm      Istf      Ithe      Igap                                    Invn      Iadm");
    CARD("%10d%10d%10d%10d%10d%30s%10d%10d", secondaryentityids, mainentityids, Istf, Ithe, Igap, _BLANK_, TYPE21_Invn, Iadm);

    COMMENT("#          Fscalegap              Gapmax               DEPTH                Pmax     ITlim");
    CARD("%20lg%20lg%20lg%20lg%10d", GAPSCALE, GAPMAX, DIST, PMAX, TYPE21_ITim);

    COMMENT("#              Stmin               Stmax");
    CARD("%20lg%20lg", STMIN, STMAX);

    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", STFAC, FRIC, MINI, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs                                  Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20s%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_,INACTIV, VISC, _BLANK_, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID   fct_IDF             AscaleF");
    CARD("%10d%10d%20lg%10s%10d%10d%20lg", Ifric, Ifiltr, Xfreq, _BLANK_, ISENSOR, Crx_Fun,scale1);

    COMMENT("#                 C1                  C2                  C3                  C4                  C5");
    CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);

    COMMENT("#                 C6");
    CARD("%20lg", C6);

    COMMENT("#    NRadm                Padm             Angladm");
    CARD("%10d%20lg%20lg", NRadm, Padm, Angladm);

    COMMENT("#               Kthe   fct_IDK             AscaleK                Tint Ithe_form");
    CARD("%20lg%10d%20lg%20lg%10d", Kthe, fct_ID_k, A_scale_k, Tint, Ithe_form);

    COMMENT("#               Frad                Drad               Fheat");
    CARD("%20lg%20lg%20lg", F_RAD, D_RAD, HEAT_AL);

    COMMENT("#    IDrby     IDref                Damp               Dampr");
    CARD("%10d%10d%20lg%20lg", ID_RBY, InterfaceId, DAMP1, DAMP2);
}

FORMAT(radioss2019)
{
    HEADER("/INTER/TYPE21/%d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("# surf_IDs  surf_IDm      Istf      Ithe      Igap                          Idel      Invn      Iadm");
    CARD("%10d%10d%10d%10d%10d%20s%10d%10d%10d", secondaryentityids, mainentityids, Istf, Ithe, Igap, _BLANK_, TYPE21_Idel, TYPE21_Invn, Iadm);

    COMMENT("#          Fscalegap              Gapmax               DEPTH                Pmax     ITlim");
    CARD("%20lg%20lg%20lg%20lg%10d", GAPSCALE, GAPMAX, DIST, PMAX, TYPE21_ITim);

    COMMENT("#              Stmin               Stmax");
    CARD("%20lg%20lg", STMIN, STMAX);

    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", STFAC, FRIC, MINI, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs                                  Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20s%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_,INACTIV, VISC, _BLANK_, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID   fct_IDF             AscaleF");
    CARD("%10d%10d%20lg%10s%10d%10d%20lg", Ifric, Ifiltr, Xfreq, _BLANK_, ISENSOR, Crx_Fun,scale1);

    COMMENT("#                 C1                  C2                  C3                  C4                  C5");
    CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);

    COMMENT("#                 C6");
    CARD("%20lg", C6);

    COMMENT("#    NRadm                Padm             Angladm");
    CARD("%10d%20lg%20lg", NRadm, Padm, Angladm);

    COMMENT("#               Kthe   fct_IDK             AscaleK                Tint Ithe_form");
    CARD("%20lg%10d%20lg%20lg%10d", Kthe, fct_ID_k, A_scale_k, Tint, Ithe_form);

    COMMENT("#               Frad                Drad               Fheat");
    CARD("%20lg%20lg%20lg", F_RAD, D_RAD, HEAT_AL);

    COMMENT("#    IDrby     IDref                Damp               Dampr");
    CARD("%10d%10d%20lg%20lg", ID_RBY, InterfaceId, DAMP1, DAMP2);
}

FORMAT(radioss2020)
{
    HEADER("/INTER/TYPE21/%d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("# surf_IDs  surf_IDm      Istf      Ithe      Igap                          Idel      Invn      Iadm");
    CARD("%10d%10d%10d%10d%10d%20s%10d%10d%10d", secondaryentityids, mainentityids, Istf, Ithe, Igap, _BLANK_, TYPE21_Idel, TYPE21_Invn, Iadm);

    COMMENT("#          Fscalegap              Gapmax               DEPTH                Pmax     ITlim");
    CARD("%20lg%20lg%20lg%20lg%10d", GAPSCALE, GAPMAX, DIST, PMAX, TYPE21_ITim);

    COMMENT("#              Stmin               Stmax                                   Pskid");
    CARD("%20lg%20lg%20s%20lg", STMIN, STMAX, _BLANK_, Pskid);

    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", STFAC, FRIC, MINI, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs                                  Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20s%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_,INACTIV, VISC, _BLANK_, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID   fct_IDF             AscaleF");
    CARD("%10d%10d%20lg%10s%10d%10d%20lg", Ifric, Ifiltr, Xfreq, _BLANK_, ISENSOR, Crx_Fun,scale1);

    COMMENT("#                 C1                  C2                  C3                  C4                  C5");
    CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);

    COMMENT("#                 C6");
    CARD("%20lg", C6);

    COMMENT("#    NRadm                Padm             Angladm");
    CARD("%10d%20lg%20lg", NRadm, Padm, Angladm);

    COMMENT("#               Kthe   fct_IDK             AscaleK                Tint Ithe_form");
    CARD("%20lg%10d%20lg%20lg%10d", Kthe, fct_ID_k, A_scale_k, Tint, Ithe_form);

    COMMENT("#               Frad                Drad               Fheat");
    CARD("%20lg%20lg%20lg", F_RAD, D_RAD, HEAT_AL);

    COMMENT("#    IDrby     IDref                Damp               Dampr");
    CARD("%10d%10d%20lg%20lg", ID_RBY, InterfaceId, DAMP1, DAMP2);
}

FORMAT(radioss2021)
{
    HEADER("/INTER/TYPE21/%d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("# surf_IDs  surf_IDm      Istf      Ithe      Igap                          Idel      Invn      Iadm");
    CARD("%10d%10d%10d%10d%10d%20s%10d%10d%10d", secondaryentityids, mainentityids, Istf, Ithe, Igap, _BLANK_, TYPE21_Idel, TYPE21_Invn, Iadm);

    COMMENT("#          Fscalegap              Gapmax               DEPTH                Pmax     ITlim");
    CARD("%20lg%20lg%20lg%20lg%10d", GAPSCALE, GAPMAX, DIST, PMAX, TYPE21_ITim);

    COMMENT("#              Stmin               Stmax                                   Pskid");
    CARD("%20lg%20lg%20s%20lg", STMIN, STMAX, _BLANK_, Pskid);

    COMMENT("#              Stfac                Fric              Gapmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", STFAC, FRIC, MINI, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs                                  Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20s%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_,INACTIV, VISC, _BLANK_, SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID   fct_IDF             AscaleF");
    CARD("%10d%10d%20lg%10s%10d%10d%20lg", Ifric, Ifiltr, Xfreq, _BLANK_, ISENSOR, Crx_Fun,scale1);

    COMMENT("#                 C1                  C2                  C3                  C4                  C5");
    CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);

    COMMENT("#                 C6");
    CARD("%20lg", C6);

    COMMENT("#    NRadm                Padm             Angladm");
    CARD("%10d%20lg%20lg", NRadm, Padm, Angladm);

    COMMENT("#               Kthe   fct_IDK             AscaleK                Tint Ithe_form");
    CARD("%20lg%10d%20lg%20lg%10d", Kthe, fct_ID_k, A_scale_k, Tint, Ithe_form);

    COMMENT("#               Frad                Drad               Fheat               FCOND               DCOND");
    CARD("%20lg%20lg%20lg%10s%10d%20lg", F_RAD, D_RAD, HEAT_AL,_BLANK_,F_COND,D_COND);

    COMMENT("#    IDrby     IDref                Damp               Dampr");
    CARD("%10d%10d%20lg%20lg", ID_RBY, InterfaceId, DAMP1, DAMP2);
}

