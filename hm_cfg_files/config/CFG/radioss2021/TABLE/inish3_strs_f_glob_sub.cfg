//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- inish3_strs_f_glob_sub.cfg ---

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    //Card 1
    shell_ID                           = VALUE(ELEMS,"Element identifier"){ SUBTYPES = ( /ELEMS/SH3N ) ; }
    nb_integr                          = SIZE("Integration point number through the thickness");
    npg                                = VALUE(INT,"Number of surface quadrature points");
    Thick                              = VALUE(FLOAT,"Shell thickness");

    //Card 2
    Em                                 = VALUE(FLOAT,"Total membrane energy");
    Eb                                 = VALUE(FLOAT,"Total bending energy");
    H1                                 = VALUE(FLOAT,"Hourglass force");
    H2                                 = VALUE(FLOAT,"Hourglass force");
    H3                                 = VALUE(FLOAT,"Hourglass force");

    //nb_integr ≥ 0 - Plane stresses
    nb_integr2                         = SIZE("Integration point number through the thickness","nb_integr2");
    sigma_X                            = ARRAY[nb_integr2](FLOAT,"Plane stress in the global frame");
    sigma_Y                            = ARRAY[nb_integr2](FLOAT,"Plane stress in the global frame");
    sigma_Z                            = ARRAY[nb_integr2](FLOAT,"Plane stress in the global frame");

    //nb_integr = 0 - Shear stresses
    sigma_XY                           = ARRAY[nb_integr2](FLOAT,"Shear stress in the global frame");
    sigma_YZ                           = ARRAY[nb_integr2](FLOAT,"Shear stress in the global frame");
    sigma_ZX                           = ARRAY[nb_integr2](FLOAT,"Shear stress in the global frame");

    //Cards
    sigma_bX                           = ARRAY[nb_integr2](FLOAT,"Bending stress in the global frame");
    sigma_bY                           = ARRAY[nb_integr2](FLOAT,"Bending stress in the global frame");
    sigma_bZ                           = ARRAY[nb_integr2](FLOAT,"Bending stress in the global frame");
    sigma_bXY                          = ARRAY[nb_integr2](FLOAT,"Bending stress in the global frame");
    sigma_bYZ                          = ARRAY[nb_integr2](FLOAT,"Bending stress in the global frame");
    sigma_bZX                          = ARRAY[nb_integr2](FLOAT,"Bending stress in the global frame");
    eps_p                              = ARRAY[nb_integr2](FLOAT,"Plastic strain");
    pos_nip                            = ARRAY[nb_integr2](FLOAT,"Position of integration point through thickness");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    shell_ID                           = -1;
    nb_integr                          = -1;
    npg                                = -1;
    Thick                              = -1;

    //Card 2
    Em                                 = -1;
    Eb                                 = -1;
    H1                                 = -1;
    H2                                 = -1;
    H3                                 = -1;

    //nb_integr ≥ 0 - Plane stresses
    sigma_X                            = -1;
    sigma_Y                            = -1;
    sigma_Z                            = -1;

    //nb_integr = 0 - Shear stresses
    sigma_XY                           = -1;
    sigma_YZ                           = -1;
    sigma_ZX                           = -1;

    //Cards
    sigma_bX                           = -1;
    sigma_bY                           = -1;
    sigma_bZ                           = -1;
    sigma_bXY                          = -1;
    sigma_bYZ                          = -1;
    sigma_bZX                          = -1;
    eps_p                              = -1;
    pos_nip                            = -1;
    nb_integr2                         = -1;
}

GUI(COMMON)
{
    //Card 1
    DATA(shell_ID,  "shell_ID");
    SIZE(nb_integr, "nb_integr");
    RADIO(npg,      "npg")
    {
        ADD(0,"Set to 1");
        ADD(1,"Must be used for shell formulations Ishell=1,2,3,4");
    }
    SCALAR(Thick, "Thick")  {DIMENSION="l";}
//
    SIZE(nb_integr2,"nb_integr2");
    ASSIGN(nb_integr2, 1);
    if(nb_integr > 0)
    {
        ASSIGN(nb_integr2, nb_integr2*nb_integr);
    }
    if(npg > 1)
    {
        ASSIGN(nb_integr2, nb_integr2*npg);
    }
//
    //Card 2
    SCALAR(Em, "Em")                   { DIMENSION = "energy" ; }
    SCALAR(Eb, "Eb")                   { DIMENSION = "energy";}
    SCALAR(H1, "H1")                   { DIMENSION = "force";}
    SCALAR(H2, "H2")                   { DIMENSION = "force";}
    SCALAR(H3, "H3")                   { DIMENSION = "force";}

    //Cards
    ARRAY(nb_integr2, "data array")
    {
        SCALAR(sigma_X,   "sigma_X")   { DIMENSION = "pressure" ; }
        SCALAR(sigma_Y,   "sigma_Y")   { DIMENSION = "pressure" ; }
        SCALAR(sigma_Z,   "sigma_Z")   { DIMENSION = "pressure" ; }
        SCALAR(sigma_XY,  "sigma_XY")  { DIMENSION = "pressure" ; }
        SCALAR(sigma_YZ,  "sigma_YZ")  { DIMENSION = "pressure" ; }
        SCALAR(sigma_ZX,  "sigma_ZX")  { DIMENSION = "pressure" ; }
        SCALAR(eps_p,     "eps_p")     { DIMENSION = "DIMENSIONLESS" ; }
    }
    if (nb_integr == 0)
    {
        ARRAY(nb_integr2, "data array")
        {
        SCALAR(sigma_bX,  "sigma_bX")  { DIMENSION = "pressure" ; }
        SCALAR(sigma_bY,  "sigma_bY")  { DIMENSION = "pressure" ; }
        SCALAR(sigma_bZ,  "sigma_bZ")  { DIMENSION = "pressure" ; }
        SCALAR(sigma_bXY, "sigma_bXY") { DIMENSION = "pressure" ; }
        SCALAR(sigma_bYZ, "sigma_bYZ") { DIMENSION = "pressure" ; }
        SCALAR(sigma_bZX, "sigma_bZX") { DIMENSION = "pressure" ; }
        }
    }
    else if (nb_integr > 0)
    {
        ARRAY(nb_integr2, "data array")
        {
        SCALAR(pos_nip, "pos_nip")    { DIMENSION = "DIMENSIONLESS" ; }
        }
    }
}

// File format
FORMAT(radioss120)
{
    //Card 1
    COMMENT("# shell_ID nb_integr");
    CARD("%10d%10d", shell_ID, nb_integr);

    //Card 2
    COMMENT("#                 Em                  Eb                  H1                  H2                  H3");
    CARD("%20lg%20lg%20lg%20lg%20lg", Em, Eb, H1, H2, H3);

    //Cards
    // size computation
    ASSIGN(nb_integr2, 1, IMPORT);
    if(nb_integr > 0)
    {
        ASSIGN(nb_integr2, nb_integr2*nb_integr, IMPORT);
    }
    if(npg > 1)
    {
        ASSIGN(nb_integr2, nb_integr2*npg, IMPORT);
    }

    if(nb_integr == 0)
    {
      CARD_LIST(nb_integr2)
      {
        COMMENT("#            sigma_X             sigma_Y             sigma_Z");
        CARD("%20lg%20lg%20lg", sigma_X, sigma_Y, sigma_Z);

        COMMENT("#           sigma_XY            sigma_YZ            sigma_ZX");
        CARD("%20lg%20lg%20lg", sigma_XY, sigma_YZ, sigma_ZX);

        COMMENT("#           sigma_bX            sigma_bY            sigma_bZ");
        CARD("%20lg%20lg%20lg", sigma_bX, sigma_bY, sigma_bZ);

        COMMENT("#          sigma_bXY           sigma_bYZ           sigma_bZX               eps_p");
        CARD("%20lg%20lg%20lg%20lg", sigma_bXY, sigma_bYZ, sigma_bZX, eps_p);
      }
    }
    else
    {
      CARD_LIST(nb_integr2)
      {
            COMMENT("#            sigma_X             sigma_Y             sigma_Z");
            CARD("%20lg%20lg%20lg", sigma_X, sigma_Y, sigma_Z);
//
            COMMENT("#           sigma_XY            sigma_YZ            sigma_ZX               eps_p");
            CARD("%20lg%20lg%20lg%20lg", sigma_XY, sigma_YZ, sigma_ZX, eps_p);
      }
    }
}

FORMAT(radioss130)
{
    //Card 1
    COMMENT("# shell_ID nb_integr       npg               Thick");
    CARD("%10d%10d%10d%20lg", shell_ID, nb_integr, npg, Thick);

    //Card 2
    COMMENT("#                 Em                  Eb                  H1                  H2                  H3");
    CARD("%20lg%20lg%20lg%20lg%20lg", Em, Eb, H1, H2, H3);

    //Cards
    // size computation
    ASSIGN(nb_integr2, 1, IMPORT);
    if(nb_integr > 0)
    {
        ASSIGN(nb_integr2, nb_integr2*nb_integr, IMPORT);
    }
    if(npg > 1)
    {
        ASSIGN(nb_integr2, nb_integr2*npg, IMPORT);
    }

    if(nb_integr == 0)
    {
      CARD_LIST(nb_integr2)
      {
        COMMENT("#            sigma_X             sigma_Y             sigma_Z");
        CARD("%20lg%20lg%20lg", sigma_X, sigma_Y, sigma_Z);

        COMMENT("#           sigma_XY            sigma_YZ            sigma_ZX");
        CARD("%20lg%20lg%20lg", sigma_XY, sigma_YZ, sigma_ZX);

        COMMENT("#           sigma_bX            sigma_bY            sigma_bZ");
        CARD("%20lg%20lg%20lg", sigma_bX, sigma_bY, sigma_bZ);

        COMMENT("#          sigma_bXY           sigma_bYZ           sigma_bZX               eps_p");
        CARD("%20lg%20lg%20lg%20lg", sigma_bXY, sigma_bYZ, sigma_bZX, eps_p);
      }
    }
    else
    {
      CARD_LIST(nb_integr2)
      {
            COMMENT("#            sigma_X             sigma_Y             sigma_Z");
            CARD("%20lg%20lg%20lg", sigma_X, sigma_Y, sigma_Z);
//
            COMMENT("#           sigma_XY            sigma_YZ            sigma_ZX               eps_p");
            CARD("%20lg%20lg%20lg%20lg", sigma_XY, sigma_YZ, sigma_ZX, eps_p);
      }
    }
}
FORMAT(radioss2021)
{
    //Card 1
    COMMENT("# shell_ID nb_integr       npg               Thick");
    CARD("%10d%10d%10d%20lg", shell_ID, nb_integr, npg, Thick);

    //Card 2
    COMMENT("#                 Em                  Eb                  H1                  H2                  H3");
    CARD("%20lg%20lg%20lg%20lg%20lg", Em, Eb, H1, H2, H3);

    //Cards
    // size computation
    ASSIGN(nb_integr2, 1, IMPORT);
    if(nb_integr > 0)
    {
        ASSIGN(nb_integr2, nb_integr2*nb_integr, IMPORT);
    }
    if(npg > 1)
    {
        ASSIGN(nb_integr2, nb_integr2*npg, IMPORT);
    }

    if(nb_integr == 0)
    {
      CARD_LIST(nb_integr2)
      {
        COMMENT("#            sigma_X             sigma_Y             sigma_Z");
        CARD("%20lg%20lg%20lg", sigma_X, sigma_Y, sigma_Z);

        COMMENT("#           sigma_XY            sigma_YZ            sigma_ZX");
        CARD("%20lg%20lg%20lg", sigma_XY, sigma_YZ, sigma_ZX);

        COMMENT("#           sigma_bX            sigma_bY            sigma_bZ");
        CARD("%20lg%20lg%20lg", sigma_bX, sigma_bY, sigma_bZ);

        COMMENT("#          sigma_bXY           sigma_bYZ           sigma_bZX               eps_p");
        CARD("%20lg%20lg%20lg%20lg", sigma_bXY, sigma_bYZ, sigma_bZX, eps_p);
      }
    }
    else
    {
      CARD_LIST(nb_integr2)
      {
        COMMENT("#            sigma_X             sigma_Y             sigma_Z");
        CARD("%20lg%20lg%20lg", sigma_X, sigma_Y, sigma_Z);
//
        COMMENT("#           sigma_XY            sigma_YZ            sigma_ZX               eps_p               pos_nip");
        CARD("%20lg%20lg%20lg%20lg%20lg", sigma_XY, sigma_YZ, sigma_ZX, eps_p,pos_nip);
      }
    }
}
