//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /SENSOR WORK
//

ATTRIBUTES(COMMON)
{
//    Sensor_Type                             = VALUE(INT,  "Sensor type keyword");
    Tdelay                                  = VALUE(FLOAT,  "Time delay");
    //
    WORK_NODE_ID1                           = VALUE(NODE,  "Node identifier 1");
    WORK_NODE_ID2                           = VALUE(NODE,  "Node identifier 2");
    WORK_WMAX                               = VALUE(FLOAT,  "Maximum work");
    WORK_TMIN                               = VALUE(FLOAT,  "Minimum time duration before activation when criteria is reached");
    WORK_SECT_ID                            = VALUE(CROSSSECTION,  "Section identifier");
    WORK_INT_ID                             = VALUE(GROUP,  "Interface or sub-interface identification number");
    WORK_RBODY_ID                           = VALUE(ELEMS,  "Rigid body identifier")  { SUBTYPES = (/ELEMS/RBODY ) ; }
    WORK_RWALL_ID                           = VALUE(RIGIDWALL,  "Rigid wall identification number");
    //HM INTERNAL
//    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
//    Sensor_Type                             = 8107;
    WORK_NODE_ID1                           = 2530;
    WORK_NODE_ID2                           = 2531;
    WORK_WMAX                               = 2532;
    WORK_TMIN                               = 2533;
    WORK_SECT_ID                            = 2534;
    WORK_INT_ID                             = 2535;
    WORK_RBODY_ID                           = 2536;
    WORK_RWALL_ID                           = 2537;

    //HM INTERNAL 
//    KEYWORD_STR                             = 9000;
}


DEFAULTS(COMMON)
{
//    Sensor_Type = 13 ;
}

GUI(COMMON)
{
    SCALAR(Tdelay,"Tdelay")  { DIMENSION = "t";}

    DATA(WORK_NODE_ID1,"node_ID1");
    DATA(WORK_NODE_ID2,"node_ID2");
    SCALAR(WORK_WMAX,"Wmax") { DIMENSION = "energy";}
    SCALAR(WORK_TMIN,"Tmin") { DIMENSION = "t";}

    DATA(WORK_SECT_ID,"sect_ID");
    DATA(WORK_INT_ID,"int_ID");
    DATA(WORK_RBODY_ID,"rbody_ID");
    DATA(WORK_RWALL_ID,"rwall_ID");

}

// File format

FORMAT(radioss2020)
{
    COMMENT("#             Tdelay");
    CARD("%20lg",Tdelay);

    COMMENT("# node_ID1  node_ID2                Wmax                Tmin");
    CARD("%10d%10d%20lg%20lg",WORK_NODE_ID1,WORK_NODE_ID2,WORK_WMAX,WORK_TMIN);
    COMMENT("#  sect_ID    int_ID  rbody_ID  rwall_ID");
    CARD("%10d%10d%10d%10d",WORK_SECT_ID,WORK_INT_ID,WORK_RBODY_ID,WORK_RWALL_ID);

}

FORMAT(radioss2017)
{
    COMMENT("#             Tdelay");
    CARD("%20lg",Tdelay);

    COMMENT("# node_ID1  node_ID2                Wmax                Tmin");
    CARD("%10d%10d%20lg%20lg",WORK_NODE_ID1,WORK_NODE_ID2,WORK_WMAX,WORK_TMIN);
    COMMENT("#  sect_ID    int_ID  rbody_ID  rwall_ID");
    CARD("%10d%10d%10d%10d",WORK_SECT_ID,WORK_INT_ID,WORK_RBODY_ID,WORK_RWALL_ID);
}