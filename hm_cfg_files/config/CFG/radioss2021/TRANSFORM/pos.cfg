//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Translation transformation (/TRANSFORM/POSITION) Setup File
//

ATTRIBUTES(COMMON) {
  ORDER   = VALUE(INT,   "Order");
  GR_NODE = VALUE(SETS, "Node group identifier") { SUBTYPES = (/SETS/GRNOD); }
  X_Point_1      = VALUE(FLOAT, "X coordinate of point 1");
  Y_Point_1      = VALUE(FLOAT, "Y coordinate of point 1");
  Z_Point_1      = VALUE(FLOAT, "Z coordinate of point 1");
  X_Point_2      = VALUE(FLOAT, "X coordinate of point 2");
  Y_Point_2      = VALUE(FLOAT, "Y coordinate of point 2");
  Z_Point_2      = VALUE(FLOAT, "Z coordinate of point 2");
  X_Point_3      = VALUE(FLOAT, "X coordinate of point 3");
  Y_Point_3      = VALUE(FLOAT, "Y coordinate of point 3");
  Z_Point_3      = VALUE(FLOAT, "Z coordinate of point 3");
  X_Point_4      = VALUE(FLOAT, "X coordinate of point 4");
  Y_Point_4      = VALUE(FLOAT, "Y coordinate of point 4");
  Z_Point_4      = VALUE(FLOAT, "Z coordinate of point 4");
  X_Point_5      = VALUE(FLOAT, "X coordinate of point 5");
  Y_Point_5      = VALUE(FLOAT, "Y coordinate of point 5");
  Z_Point_5      = VALUE(FLOAT, "Z coordinate of point 5");
  X_Point_6      = VALUE(FLOAT, "X coordinate of point 6");
  Y_Point_6      = VALUE(FLOAT, "Y coordinate of point 6");
  Z_Point_6      = VALUE(FLOAT, "Z coordinate of point 6");
  node1  = VALUE(NODE,  "Node identifier 1");
  node2  = VALUE(NODE,  "Node identifier 2");
  node3  = VALUE(NODE,  "Node identifier 3");
  node4  = VALUE(NODE,  "Node identifier 4");
  node5  = VALUE(NODE,  "Node identifier 5");
  node6  = VALUE(NODE,  "Node identifier 6");
  ACTIVE  = VALUE(INT,   "Status");
  SUBMODEL  = VALUE(SOLVERSUBMODEL,"Submodel to Move") ;
//
  TITLE = VALUE(STRING, "");
}
DEFAULTS(COMMON) {
  ACTIVE    = 1;
  ORDER     = -1;
}
DEFINITIONS(COMMON) {
  VALIDITY_FLAGS=(ACTIVE);
}

GUI(COMMON) {
  SEPARATOR("Definition using coordinates");
  //graphical POINT(X_Point_1,Y_Point_1,Z_Point_1)      { TITLE=""; DIMENSION="l"; } 
  //graphical POINT(X_Point_2,Y_Point_2,Z_Point_2)      { TITLE=""; DIMENSION="l"; } 
  //graphical POINT(X_Point_3,Y_Point_3,Z_Point_3)      { TITLE=""; DIMENSION="l"; } 
  //graphical POINT(X_Point_4,Y_Point_4,Z_Point_4)      { TITLE=""; DIMENSION="l"; } 
  //graphical POINT(X_Point_5,Y_Point_5,Z_Point_5)      { TITLE=""; DIMENSION="l"; } 
  //graphical POINT(X_Point_6,Y_Point_6,Z_Point_6)      { TITLE=""; DIMENSION="l"; } 
  SCALAR(X_Point_1) { DIMENSION="l"; }
  SCALAR(Y_Point_1) { DIMENSION="l"; }
  SCALAR(Z_Point_1) { DIMENSION="l"; }
  SCALAR(X_Point_2) { DIMENSION="l"; }
  SCALAR(Y_Point_2) { DIMENSION="l"; }
  SCALAR(Z_Point_2) { DIMENSION="l"; }
  SCALAR(X_Point_3) { DIMENSION="l"; }
  SCALAR(Y_Point_3) { DIMENSION="l"; }
  SCALAR(Z_Point_3) { DIMENSION="l"; }
  SCALAR(X_Point_4) { DIMENSION="l"; }
  SCALAR(Y_Point_4) { DIMENSION="l"; }
  SCALAR(Z_Point_4) { DIMENSION="l"; }
  SCALAR(X_Point_5) { DIMENSION="l"; }
  SCALAR(Y_Point_5) { DIMENSION="l"; }
  SCALAR(Z_Point_5) { DIMENSION="l"; }
  SCALAR(X_Point_6) { DIMENSION="l"; }
  SCALAR(Y_Point_6) { DIMENSION="l"; }
  SCALAR(Z_Point_6) { DIMENSION="l"; }
  //
  SEPARATOR("Definition using nodes ");
  graphical DATA(node1);
  graphical DATA(node2);
  graphical DATA(node3);
  graphical DATA(node4);
  graphical DATA(node5);
  graphical DATA(node6);
  
  SEPARATOR();
   //
  graphical SUPPORT("Support") {
    //OBJECTS=(NODE,ELEMENTS,PART,SEGMENT);
    ADD(GR_NODE,"Node group");
  }
  DATA(SUBMODEL);

}

FORMAT(radioss2021) {
  HEADER("/TRANSFORM/POSITION/%d",_ID_);
  CARD("%-100s",TITLE);
  COMMENT("# grnod_ID  node_ID1  node_ID2  node_ID3  node_ID4  node_ID5  node_ID6                        sub_ID");
  CARD("%10d%10d%10d%10d%10d%10d%10d%10s%10s%10d",GR_NODE,node1,node2,node3,node4,node5,node6,_BLANK_,_BLANK_,SUBMODEL);
  COMMENT("#                      X_Point_1           Y_Point_1           Z_Point_1");
  CARD("%10s%20lg%20lg%20lg",_BLANK_,X_Point_1,Y_Point_1,Z_Point_1);
  COMMENT("#                      X_Point_2           Y_Point_2           Z_Point_2");
  CARD("%10s%20lg%20lg%20lg",_BLANK_,X_Point_2,Y_Point_2,Z_Point_2);
  COMMENT("#                      X_Point_3           Y_Point_3           Z_Point_3");
  CARD("%10s%20lg%20lg%20lg",_BLANK_,X_Point_3,Y_Point_3,Z_Point_3);
  COMMENT("#                      X_Point_4           Y_Point_4           Z_Point_4");
  CARD("%10s%20lg%20lg%20lg",_BLANK_,X_Point_4,Y_Point_4,Z_Point_4);
  COMMENT("#                      X_Point_5           Y_Point_5           Z_Point_5");
  CARD("%10s%20lg%20lg%20lg",_BLANK_,X_Point_5,Y_Point_5,Z_Point_5);
  COMMENT("#                      X_Point_6           Y_Point_6           Z_Point_6");
  CARD("%10s%20lg%20lg%20lg",_BLANK_,X_Point_6,Y_Point_6,Z_Point_6);
}

