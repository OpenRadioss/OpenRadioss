//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//  /MAT/LAW187 (BARLAT20003D)
//

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES

    //Title Card
    TITLE                                   = VALUE(STRING, "Material title");

    // Card 1
    MAT_RHO                                 = VALUE(FLOAT,  "Initial Density");
    Refer_Rho                               = VALUE(FLOAT,"Reference Density (for lower than 14.0 version)");
    MAT_REFRHO_Option                       = VALUE(INT, "RefRho_Option");

    MAT_E                                   = VALUE(FLOAT,  "Young's Modulus");
    MAT_NU                                  = VALUE(FLOAT,  "Poisson's ratio");
    MAT_Iflag                               = VALUE(INT,    "Yield Stress Definition Flag");
    Vflag                                   = VALUE(INT,    "Strain rate choice flag");
    STRAIN1                                 = VALUE(FLOAT,  "Cowper Seymonds reference strain rate");
    MAT_EXP1                                = VALUE(FLOAT,  "Cowper Seymonds strain rate exponent");

    // Card 2: Barlat parameters
    MAT_ALPHA1                              = VALUE(FLOAT,  "Material parameter Alpha1");
    MAT_ALPHA2                              = VALUE(FLOAT,  "Material parameter Alpha2");
    MAT_ALPHA3                              = VALUE(FLOAT,  "Material parameter Alpha3");
    MAT_ALPHA4                              = VALUE(FLOAT,  "Material parameter Alpha4");
    MAT_ALPHA5                              = VALUE(FLOAT,  "Material parameter Alpha5");
    MAT_ALPHA6                              = VALUE(FLOAT,  "Material parameter Alpha6");
    MAT_ALPHA7                              = VALUE(FLOAT,  "Material parameter Alpha7");
    MAT_ALPHA8                              = VALUE(FLOAT,  "Material parameter Alpha8");
    MAT_ALPHA9                              = VALUE(FLOAT,  "Material parameter Alpha9");
    MAT_ALPHA10                             = VALUE(FLOAT,  "Material parameter Alpha10");
    MAT_ALPHA11                             = VALUE(FLOAT,  "Material parameter Alpha11");
    MAT_ALPHA12                             = VALUE(FLOAT,  "Material parameter Alpha12");

    // Card 3: Material yield and hardening
    A                                       = VALUE(INT,    "Exponent in yield function");
    MAT_VOL                                 = VALUE(FLOAT,  "Yield weighting coefficient between 0 and 1");
    FScale33                                = VALUE(FLOAT,  "Swift hardening exponent");
    Fcut                                    = VALUE(FLOAT,  "Cutoff frequency for strain rate filtering");
    MAT_FSMOOTH                             = VALUE(INT,    "Smooth strain rate option flag");
    MAT_NRATE                               = SIZE("Number of yield functions");

    MAT_A                                   = VALUE(FLOAT,  "Swift hardening coefficient");
    FScale22                                = VALUE(FLOAT,  "Swift hardening parameter");
    MAT_PR                                  = VALUE(FLOAT,  "Voce hardening coefficient");
    MAT_T0                                  = VALUE(FLOAT,  "Voce plastic strain coefficient");
    MAT_NUt                                 = VALUE(FLOAT,  "Voce hardening parameter");

    // Card 4: Read only if Nrate>0 (Each function per line)
    FUN_LOAD                                = ARRAY[MAT_NRATE](FUNCT,  "Yield Sstress vs plastic strain function");
    SCALE_LOAD                              = ARRAY[MAT_NRATE](FLOAT,  "Scale factor for ordinate for fct_IDi");
    STRAINRATE_LOAD                         = ARRAY[MAT_NRATE](FLOAT,  "Strain rate i corresponding to fct_ID");

    IO_FLAG                                 = VALUE(INT, "IOFLAG");
    Mat_Name_OR_LawNo                       = VALUE(INT, "");
    LAW_NO                                  = VALUE(STRING, "");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING, "Entity_Comments");
    CommentEnumField                        = VALUE(INT, "User Comments");
    DUMMY                                   = VALUE(STRING,"Dummy variable for Ref_Rho flag");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    // Card 1
    MAT_RHO                                 = 118;
    MAT_REFRHO_Option                       = 4285;
    Refer_Rho                               = 4229;

    MAT_E                                   = 119;
    MAT_NU                                  = 120;
    MAT_Iflag                               = 6002;
    Vflag                                   = 5113;
    STRAIN1                                 = 4914;
    MAT_EXP1                                = 5099;

    // Card 2: Barlat parameters
    MAT_ALPHA1                              = 375;
    MAT_ALPHA2                              = 377;
    MAT_ALPHA3                              = 381;
    MAT_ALPHA4                              = 382;
    MAT_ALPHA5                              = 386;
    MAT_ALPHA6                              = 5084;
    MAT_ALPHA7                              = 5085;
    MAT_ALPHA8                              = 5086;
    MAT_ALPHA9                              = 5087;
    MAT_ALPHA10                             = 2712;
    MAT_ALPHA11                             = 8019;
    MAT_ALPHA12                             = 2713;

    // Card 3: Material yield and hardening
    A                                       = 2986;
    MAT_VOL                                 = 4276;
    FScale33                                = 4052;
    Fcut                                    = 5356;
    MAT_FSMOOTH                             = 1051;
    MAT_NRATE                               = 1052;

    MAT_A                                   = 6056;
    FScale22                                = 4051;
    MAT_PR                                  = 5096;
    MAT_T0                                  = 6133;
    MAT_NUt                                 = 5083;

    //  Card 4
    FUN_LOAD                                = 4234;
    SCALE_LOAD                              = 4236;
    STRAINRATE_LOAD                         = 4235;

    IO_FLAG                                 = -1;
    Mat_Name_OR_LawNo                       = 4538;
    LAW_NO                                  = -1;

    TITLE                                   = -1;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;
    NUM_COMMENTS                            = 5110;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    DUMMY                                   = -1;
}

CHECK(COMMON)
{
    MAT_RHO                                 >= 0.0;
    MAT_VOL                                 >= 0.0;
    MAT_VOL                                 <= 1.0;
}

DEFAULTS(COMMON)
{
    // Card
    MAT_Iflag                               = 0;
    Vflag                                   = 0;
    A                                       = 2;
    MAT_VOL                                 = 0.0;
    FScale33                                = 1.0;
    Fcut                                    = 10e30;
    MAT_FSMOOTH                             = 0;
    FScale22                                = 0.0;
    MAT_T0                                  = 0.0;

    Mat_Name_OR_LawNo                       = 0;
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS, "")
        {
            SCALAR(COMMENTS);
        }
    }

    if(Mat_Name_OR_LawNo == 1)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/BARLAT20003D/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW187/");
    }

    //  Card 1
mandatory:
    SCALAR(MAT_RHO)                         { DIMENSION = "density"; }

    SCALAR(MAT_E)                           { DIMENSION = "pressure"; }
    SCALAR(MAT_NU)                          { DIMENSION = "DIMENSIONLESS"; }

    RADIO(MAT_Iflag)
    {
        ADD(0, "0: Tabulated input and function numbers defined in Nrate (Default)");
        ADD(1, "1: Swift-Voce analytic formulation and then Nrate = 0");
    }

    RADIO(Vflag)
    {
        ADD(0, "0: strain rate effect on yield stress depends on the total strain rate (Default)");
        ADD(1, "1: strain rate effect on yield depends on the plastic strain rate");
    }

    SCALAR(STRAIN1)                         { DIMENSION = "strain_rate"; }
    SCALAR(MAT_EXP1)                        { DIMENSION = "DIMENSIONLESS"; }

optional:
    //  Card 2: Barlat parameters
    SCALAR(MAT_ALPHA1)                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_ALPHA2)                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_ALPHA3)                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_ALPHA4)                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_ALPHA5)                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_ALPHA6)                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_ALPHA7)                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_ALPHA8)                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_ALPHA9)                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_ALPHA10)                     { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_ALPHA11)                     { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_ALPHA12)                     { DIMENSION = "DIMENSIONLESS"; }

    //  Card 3: Material yield and hardening
    SCALAR(A)                               { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_VOL)                         { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(FScale33)                        { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(Fcut)                            { DIMENSION = "f"; }

    RADIO(MAT_FSMOOTH)
    {
        ADD(0, "0: no strain rate smoothing (Default)");
        ADD(1, "1: strain rate smoothing active");
    }

    if(MAT_Iflag == 0)
    {
        SIZE(MAT_NRATE);
    }

    SCALAR(MAT_A)                           { DIMENSION = "pressure"; }
    SCALAR(FScale22)                        { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_PR)                          { DIMENSION = "pressure"; }
    SCALAR(MAT_T0)                          { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_NUt)                         { DIMENSION = "pressure"; }

    //  Card 4: : Read only if Nrate>0 (Each function per line)
    if(MAT_Iflag == 0 && MAT_NRATE > 0)
    {
        ARRAY(MAT_NRATE, "Nrate")
        {
          DATA(FUN_LOAD);
          SCALAR(SCALE_LOAD)                { DIMENSION = "pressure"; }
          SCALAR(STRAINRATE_LOAD)           { DIMENSION = "strain_rate"; }
        }
    }
}

FORMAT(radioss2021)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);

    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s", LAW_NO);
        if(LAW_NO == "BAR")
        {
            ASSIGN(Mat_Name_OR_LawNo, 1);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 1)
    {
        HEADER("/MAT/BARLAT20003D/%d", _ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/LAW187/%d", _ID_);
        CARD("%-100s", TITLE);
    }

    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
    CARD("%20lg", MAT_RHO);
    }

    COMMENT("#                  E                  Nu     IFlag        VP                   c                   P");
    CARD("%20lg%20lg%10d%10d%20lg%20lg", MAT_E, MAT_NU, MAT_Iflag, Vflag, STRAIN1, MAT_EXP1);

    //  Card 2: Barlat parameters
    COMMENT("#             ALPHA1              ALPHA2              ALPHA3              ALPHA4");
    CARD("%20lg%20lg%20lg%20lg", MAT_ALPHA1, MAT_ALPHA2, MAT_ALPHA3, MAT_ALPHA4);

    COMMENT("#             ALPHA5              ALPHA6              ALPHA7              ALPHA8");
    CARD("%20lg%20lg%20lg%20lg", MAT_ALPHA5, MAT_ALPHA6, MAT_ALPHA7, MAT_ALPHA8);

    COMMENT("#             ALPHA9             ALPHA10             ALPHA11             ALPHA12");
    CARD("%20lg%20lg%20lg%20lg", MAT_ALPHA9, MAT_ALPHA10, MAT_ALPHA11, MAT_ALPHA12);

    // Card 3: Material yield and hardening
    COMMENT("#                  a             ALPHAxy                   n                Fcut   Fsmooth     Nrate");
    CARD("%10s%10d%20lg%20lg%20lg%10d%10d", _BLANK_, A, MAT_VOL, FScale33, Fcut, MAT_FSMOOTH, MAT_NRATE);

    COMMENT("#                  A                Eps0                   Q                   B                  KO");
    CARD("%20lg%20lg%20lg%20lg%20lg", MAT_A, FScale22, MAT_PR, MAT_T0, MAT_NUt);

    //  Card 4: : Read only if Nrate>0 (Each function per line)
    if(MAT_Iflag == 0 && MAT_NRATE > 0)
    {
        COMMENT("#  fct_IDi                       Fscalei                Epsp");
        CARD_LIST(MAT_NRATE)
        {
          CARD("%10d%10s%20lg%20lg", FUN_LOAD, _BLANK_, SCALE_LOAD, STRAINRATE_LOAD);
        }
    }
}
