//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material law 111

ATTRIBUTES(COMMON) {
    NUM_COMMENTS                    = SIZE("NUM_COMMENTS");
    KEYWORD_STR                     = VALUE(STRING, "Solver Keyword");
    CommentEnumField                = VALUE(INT,"User Comments");
    COMMENTS                        = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    MAT_RHO                         = VALUE(FLOAT,"Initial Density");
    Itype                           = VALUE(INT, "Type of Test Data");
    MAT_FCT_ID                      = VALUE(FUNCT, "Function Defining Stress Vs Engineering Strain");
    MAT_FScale                      = VALUE(FLOAT,"Scale factor for ordinate (stress) in function");
    MAT_NU                          = VALUE(FLOAT,"Poisson's Ratio");
    
     //
    LAW_NO                          = VALUE(STRING, "");
    Mat_Name_OR_LawNo               = VALUE(INT,  "RADIOSS_COMMENT_FLAG");
    IO_FLAG                         = VALUE(INT, "");
    TITLE                           = VALUE(STRING,"");
//
    Heat_Inp_opt                    = VALUE(INT, "Heat");
    SUBGRP_HEAT_MAT                 = VALUE(SUBOBJECT, "");
    THERM_STRESS                    = VALUE(INT, "Therm Stress");
    SUBGRP_THERM_STRESS             = VALUE(SUBOBJECT, "");
    VISC_PRONY_option               = VALUE(INT,"Visc Prony");
    SUBGRP_VISC_PRONY               = VALUE(SUBOBJECT, "");
}

CHECK(COMMON)
{
    MAT_RHO                         > 0.0; 
    MAT_NU                          >= 0.0;
}

DEFAULTS(COMMON)
{

    Itype               = 1;
    MAT_NU              = 0.495;
    MAT_FScale          = 1.0;
}

DRAWABLES(COMMON) 
{
public:
    INITIAL_DENSITY = SCALAR(MAT_RHO);
    POISSON_RATIO   = SCALAR(MAT_NU);
}

GUI(COMMON) 
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    ASSIGN(KEYWORD_STR, "/MAT");
    ASSIGN(KEYWORD_STR, "/LAW1111/");

    mandatory:
	SCALAR(MAT_RHO)    	   {DIMENSION="density";}
    optional:
        RADIO(Itype)
        {
            ENUM_VALUE_FLAG=TRUE;
            ADD(1, "1: Uniaxial Test Data(Default)");
            ADD(2, "2: Equibiaxial Test Data");
            ADD(3, "3: Planar Test Data");
        }
        DATA(MAT_FCT_ID);

        SCALAR(MAT_NU)       {DIMENSION="DIMENSIONLESS";}
        SCALAR(MAT_FScale)   {DIMENSION="pressure";}

        graphical FLAG(Heat_Inp_opt);
        if (Heat_Inp_opt!= 0) {
            SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
        }
        graphical FLAG(THERM_STRESS);
        if (THERM_STRESS!= 0) {
            SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
        }
        if(VISC_PRONY_option!=0)
        {
            SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/VISC);}
        } 
    /*
    mandatory:
    graphical SUPPORT("Support") 
    {
    OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D,/COMPONENT/PENTA6,
    /COMPONENT/TETRA10,/COMPONENT/BRIC20);
    ADD(COMPONENT,"Parts");
    }
    */
}

FORMAT(radioss2021)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/MAT/LAW111/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    COMMENT("#              Rho_i");
    CARD("%20lg",MAT_RHO);
    COMMENT("#    Itype   Func_ID              Fscale                  Nu");
    CARD("%10d%10d%20lg%20lg",Itype,MAT_FCT_ID,MAT_FScale,MAT_NU);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(VISC_PRONY_option!=0)
    {
        SUBOBJECTS(SUBGRP_VISC_PRONY,/SUBOBJECT/VISC);
    }
}
