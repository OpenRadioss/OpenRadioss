//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /MAT/LAW101
//

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    CommentEnumField                        = VALUE(INT, "User Comments");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING, "Entity Comments");

    // Card
    MAT_RHO                                 = VALUE(FLOAT, "Initial Density");

    MAT_E                                   = VALUE(FLOAT, "Young's Modulus at the reference temperature");
    MAT_ALPHA1                              = VALUE(FLOAT, "Material parameter (with i=1)");
    MAT_NU                                  = VALUE(FLOAT, "Poisson's Ratio");
    VE1                                     = VALUE(FLOAT, "Material parameter for temperature dependent Young's modulus");

    VE2                                     = VALUE(FLOAT, "Material parameter for temperature dependent Young's modulus");
    EPSILONref                              = VALUE(FLOAT, "Material parameter for temperature dependent Young's modulus");
    GAMMA0                                  = VALUE(FLOAT, "Viscous flow");
    ALPHA_p                                 = VALUE(FLOAT, "Pressure sensitivity parameter");

    DELTAH                                  = VALUE(FLOAT, "Activation energy");
    MAT_VOL                                 = VALUE(FLOAT, "Activation volume");
    MAT_M                                   = VALUE(FLOAT, "Viscous flow exponent");
    MAT_C3                                  = VALUE(FLOAT, "Material parameter");

    MAT_C4                                  = VALUE(FLOAT, "Material parameter");
    ALPHAK1                                 = VALUE(FLOAT, "Material parameter");
    ALPHAK2                                 = VALUE(FLOAT, "Material parameter");
    MAT_HARD                                = VALUE(FLOAT, "Hardening modulus");

    ZETA1i                                  = VALUE(FLOAT, "Initial value for state variable Z1");
    MAT_C5                                  = VALUE(FLOAT, "Material parameter");
    MAT_C6                                  = VALUE(FLOAT, "Material parameter");
    MAT_C7                                  = VALUE(FLOAT, "Material parameter");

    MAT_C8                                  = VALUE(FLOAT, "Material parameter");
    MAT_C9                                  = VALUE(FLOAT, "Material parameter");
    MAT_C_10                                = VALUE(FLOAT, "Material parameter");
    MAT_HARD1                               = VALUE(FLOAT, "Hardening modulus");

    ZETA2i                                  = VALUE(FLOAT, "Initial value for state variable Z2");
    MAT_C_11                                = VALUE(FLOAT, "Material parameter");
    MAT_C_12                                = VALUE(FLOAT, "Material parameter");
    MAT_C13                                 = VALUE(FLOAT, "Material parameter");

    MAT_C14                                 = VALUE(FLOAT, "Material parameter");
    MAT_C1                                  = VALUE(FLOAT, "Material parameter");
    MAT_C2                                  = VALUE(FLOAT, "Material parameter");
    LAMBDAL                                 = VALUE(FLOAT, "Network locking stretch");

    MAT_RHO_REF                             = VALUE(FLOAT, "Density at the reference temperature");
    MAT_CV_REF                              = VALUE(FLOAT, "Heat capacity at the reference temperature");
    MAT_TREF                                = VALUE(FLOAT, "Reference temperature");
    ALPHA_TH                                = VALUE(FLOAT, "Thermal expansion");

    THETA_GLASS                             = VALUE(FLOAT, "Glass transition temperature");
    Omega                                   = VALUE(FLOAT, "Material conversion factor for temperature calculation when the adiabatic condition is set");
    THETA_FLAG                              = VALUE(FLOAT, "Temperature activation flag");
    HEAT_T0                                 = VALUE(FLOAT, "Initial Temperature");

    IO_FLAG                                 = VALUE(INT, "IOFLAG");
    Mat_Name_OR_LawNo                       = VALUE(INT,  "RADIOSS_COMMENT_FLAG");
    LAW_NO                                  = VALUE(STRING, "");

    TITLE                                   = VALUE(STRING, "Material title");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //HM INTERNAL
    KEYWORD_STR                             = 9000;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    NUM_COMMENTS                            = 5110;

    // Card
    MAT_RHO                                 = 118;
    MAT_E                                   = 119;
    MAT_NU                                  = 120;
    MAT_ALPHA1                              = 375;

    VE1                                     = -1;
    VE2                                     = -1;
    EPSILONref                              = -1;
    GAMMA0                                  = -1;
    ALPHA_p                                 = -1;

    DELTAH                                  = -1;
    MAT_VOL                                 = 4276;
    MAT_M                                   = 314;
    MAT_C3                                  = 1503;

    MAT_C4                                  = 1504;
    ALPHAK1                                 = -1;
    ALPHAK2                                 = -1;
    MAT_HARD                                = 71;

    ZETA1i                                  = -1;
    MAT_C5                                  = 1505;
    MAT_C6                                  = -1;
    MAT_C7                                  = -1;

    MAT_C8                                  = -1;
    MAT_C9                                  = -1;
    MAT_C_10                                = 3001;
    MAT_HARD1                               = -1;

    ZETA2i                                  = -1;
    MAT_C_11                                = 3004;
    MAT_C_12                                = 3008;
    MAT_C13                                 = -1;

    MAT_C14                                 = -1;
    MAT_C1                                  = 1501;
    MAT_C2                                  = 1502;
    LAMBDAL                                 = -1;

    MAT_RHO_REF                             = 5008;
    MAT_CV_REF                              = -1;
    MAT_TREF                                = -1;
    ALPHA_TH                                = -1;

    THETA_GLASS                             = -1;
    Omega                                   = 4382;
    THETA_FLAG                              = -1;
    HEAT_T0                                 = 4339;

    IO_FLAG                                 = -1;
    Mat_Name_OR_LawNo                       = -1;
    LAW_NO                                  = -1;
    
    TITLE                                   = -1;
}

DEFAULTS(COMMON)
{

}

CHECK(COMMON)
{

}

GUI(COMMON)
{

    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }
    if(Mat_Name_OR_LawNo == 2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW101/");
    }
    else 
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/PP/");
    }

    // Card
    SCALAR(MAT_RHO)                         {DIMENSION = "density";}

    SCALAR(MAT_E)                           { DIMENSION = "pressure"; }
    SCALAR(MAT_ALPHA1)                      { DIMENSION = "specificheat"; }
    SCALAR(MAT_NU)                          { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(VE1)                             { DIMENSION = "DIMENSIONLESS"; }

    SCALAR(VE2)                             { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(EPSILONref)                      { DIMENSION = "f"; }
    SCALAR(GAMMA0)                          { DIMENSION = "f"; }
    SCALAR(ALPHA_p)                         { DIMENSION = "DIMENSIONLESS";}

    SCALAR(DELTAH)                          { DIMENSION = "energy"; }               // [J/ mol]  we need to add a new unit 
    SCALAR(MAT_VOL)                         { DIMENSION = "volume"; }
    SCALAR(MAT_M)                           { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_C3)                          { DIMENSION = "specificheat"; }

    SCALAR(MAT_C4)                          { DIMENSION = "pressure";}
    SCALAR(ALPHAK1)                         { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(ALPHAK2)                         { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_HARD)                        { DIMENSION = "DIMENSIONLESS"; }

    SCALAR(ZETA1i)                          { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_C5)                          { DIMENSION = "coefficient_of_linear_inflation"; }
    SCALAR(MAT_C6)                          { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_C7)                          { DIMENSION = "coefficient_of_linear_inflation"; }

    SCALAR(MAT_C8)                          { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_C9)                          { DIMENSION = "coefficient_of_linear_inflation"; }
    SCALAR(MAT_C_10)                         { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_HARD1)                       { DIMENSION = "DIMENSIONLESS"; }

    SCALAR(ZETA2i)                          { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_C_11)                         { DIMENSION = "coefficient_of_linear_inflation"; }
    SCALAR(MAT_C_12)                         { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_C13)                         { DIMENSION = "coefficient_of_linear_inflation"; } 

    SCALAR(MAT_C14)                         { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_C1)                          { DIMENSION = "specificheat"; }
    SCALAR(MAT_C2)                          { DIMENSION = "pressure";}
    SCALAR(LAMBDAL)                         { DIMENSION = "DIMENSIONLESS";}

    SCALAR(MAT_RHO_REF)                     { DIMENSION = "density";}
    SCALAR(MAT_CV_REF)                      { DIMENSION = "entropy";}
    SCALAR(MAT_TREF)                        { DIMENSION = "k";}
    SCALAR(ALPHA_TH)                        { DIMENSION = "coefficient_of_linear_inflation"; }

    SCALAR(THETA_GLASS)                     { DIMENSION = "k";}
    SCALAR(Omega)                           { DIMENSION = "DIMENSIONLESS";}
    RADIO(THETA_FLAG)
    {
      ADD(0.0, "0.0: Isothermal (temp = THETAi)");
      ADD(1.0, "1.0: Thermo-mechanical problems");
      ADD(2.0, "2.0: Adiabatic (initial temperature = THETAi");
    }
     SCALAR(HEAT_T0)                        { DIMENSION = "k"; }
}

// File format
FORMAT(radioss2021)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW101/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/PP/%d",_ID_);
        CARD("%-100s", TITLE);
    }    
    COMMENT("#              RHO_I");
    CARD("%20lg", MAT_RHO);

    COMMENT("#               EREF                  E1                  Nu                 VE1");
    CARD("%20lg%20lg%20lg%20lg", MAT_E, MAT_ALPHA1, MAT_NU, VE1);

    COMMENT("#                VE2            EDOT_REF        GAMA_DOT_REF              ALPHAP");
    CARD("%20lg%20lg%20lg%20lg", VE2, EPSILONref, GAMMA0, ALPHA_p); 

    COMMENT("#            delta_H                   V                   m                  C3");
    CARD("%20lg%20lg%20lg%20lg", DELTAH, MAT_VOL, MAT_M, MAT_C3);  

    COMMENT("#                 C4             ALPHAK1             ALPHAK2                  H0");
    CARD("%20lg%20lg%20lg%20lg", MAT_C4, ALPHAK1, ALPHAK2, MAT_HARD);

    COMMENT("#            ZETA1_i                  C5                  C6                  C7");
    CARD("%20lg%20lg%20lg%20lg", ZETA1i, MAT_C5, MAT_C6, MAT_C7);

    COMMENT("#                 C8                  C9                 C10                  h1");
    CARD("%20lg%20lg%20lg%20lg", MAT_C8, MAT_C9, MAT_C_10, MAT_HARD1);

    COMMENT("#            ZETA2_i                 C11                 C12                 C13");
    CARD("%20lg%20lg%20lg%20lg", ZETA2i, MAT_C_11, MAT_C_12, MAT_C13);

    COMMENT("#                C14                  C1                  C2            LAMBDA_L");
    CARD("%20lg%20lg%20lg%20lg", MAT_C14, MAT_C1, MAT_C2, LAMBDAL);

    COMMENT("#        RHO_theta_0          CV_theta_0              THETA0            ALPHA_TH");
    CARD("%20lg%20lg%20lg%20lg", MAT_RHO_REF, MAT_CV_REF, MAT_TREF, ALPHA_TH);

    COMMENT("#        THETA_GLASS         TEMP_FACTOR          THETA_FLAG              THETAi");
    CARD("%20lg%20lg%20lg%20lg", THETA_GLASS, Omega, THETA_FLAG, HEAT_T0);
}
