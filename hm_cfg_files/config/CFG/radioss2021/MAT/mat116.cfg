//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 109 Setup File
// 

// MCDS attributes description
ATTRIBUTES(COMMON) {

    KEYWORD_STR                     = VALUE(STRING,"Solver Keyword");
    MAT_RHO                         = VALUE(FLOAT, "Initial Density");
    MAT_E                           = VALUE(FLOAT, "Young's Modulus");
    MAT_G                           = VALUE(FLOAT, "Shear Modulus");
    MAT_THICK                       = VALUE(FLOAT, "Cohesive element thickness");
    MAT_IMASS                       = VALUE(INT,   "Density definition flag");
    MAT_IDEL                        = VALUE(INT,   "Nb integration points to fail");
    MAT_ICRIT                       = VALUE(INT,   "Yield and damage initiation flag");
    MAT_GC1_ini                     = VALUE(FLOAT, "Initial Energy release rate 1");
    MAT_GC1_inf                     = VALUE(FLOAT, "Final Energy release rate 1");
    MAT_SRATG1                      = VALUE(FLOAT, "Reference strain rate G1");
    MAT_FG1                         = VALUE(FLOAT, "Shape Factor G1");
    MAT_GC2_ini                     = VALUE(FLOAT, "Initial Energy release rate 2");
    MAT_GC2_inf                     = VALUE(FLOAT, "Final Energy release rate 2");
    MAT_SRATG2                      = VALUE(FLOAT, "Reference strain rate G2");
    MAT_FG2                         = VALUE(FLOAT, "Shape Factor G2");
    MAT_SIGA1                       = VALUE(FLOAT, "Static Yield stress 1");
    MAT_SIGB1                       = VALUE(FLOAT, "Dynamic Yield stress 1");
    MAT_SRATE1                      = VALUE(FLOAT, "Reference strain rate 1");
    MAT_ORDER1                      = VALUE(INT  , "Interpolation flag 1");
    MAT_FAIL1                       = VALUE(INT  , "Failure type 1");
    MAT_SIGA2                       = VALUE(FLOAT, "Static Yield stress 2");
    MAT_SIGB2                       = VALUE(FLOAT, "Dynamic Yield stress 2");
    MAT_SRATE2                      = VALUE(FLOAT, "Reference strain rate 2");
    MAT_ORDER2                      = VALUE(INT  , "Interpolation flag 2");
    MAT_FAIL2                       = VALUE(INT  , "Failure type 2");
    
     //
    LAW_NO                          = VALUE(STRING, "");
    Mat_Name_OR_LawNo               = VALUE(INT,  "RADIOSS_COMMENT_FLAG");
    IO_FLAG                         = VALUE(INT, "");
    TITLE                           = VALUE(STRING,"");
}


CHECK( COMMON)
{
    MAT_RHO                         >  0.0   ;
    MAT_THICK                       >  0.0   ;
    MAT_E                           >  0.0   ;
    MAT_GC1_ini                     >  0.0   ;
    MAT_GC1_inf                     >  0.0   ;
    MAT_SRATG1                      >  0.0   ;
    MAT_FG1                         >  0.0   ;
    MAT_FG1                         <  1.0   ;
    MAT_GC2_ini                     >  0.0   ;
    MAT_GC2_inf                     >  0.0   ;
    MAT_SRATG2                      >  0.0   ;
    MAT_FG2                         >  0.0   ;
    MAT_FG2                         <  1.0   ;
    MAT_SIGA1                       >  0.0   ;
    MAT_SIGB1                       >  0.0   ;
    MAT_SRATE1                      >  0.0   ;
    MAT_FAIL1                       >  0     ;   
    MAT_FAIL1                       <  5     ;   
    MAT_SIGA2                       >  0.0   ;
    MAT_SIGB2                       >  0.0   ;
    MAT_SRATE2                      >  0.0   ;
    MAT_FAIL2                       >  0     ;  
    MAT_FAIL2                       <  5     ;   
}

DEFAULTS(COMMON)
{
    MAT_ORDER1                       = 1    ;
    MAT_ORDER2                       = 1    ;
    MAT_FAIL1                        = 1    ;
    MAT_FAIL2                        = 1    ;
    MAT_IMASS                        = 1    ;
    MAT_IDEL                         = 1    ;
    MAT_ICRIT                        = 1    ;
}

// GUI description (Common domain)

GUI(COMMON) {
 
 mandatory:
    SCALAR(MAT_RHO)         { DIMENSION="density"        ;}
    SCALAR(MAT_E)           { DIMENSION="pressure"       ;}
    SCALAR(MAT_G)           { DIMENSION="pressure"       ;}
    SCALAR(MAT_THICK)       { DIMENSION="l"              ;}
    SCALAR(MAT_GC1_ini)     { DIMENSION="lineic_force"   ;}          
    SCALAR(MAT_GC2_ini)     { DIMENSION="lineic_force"   ;}          
    SCALAR(MAT_FG1)         { DIMENSION="DIMENSIONLESS"  ;}          
    SCALAR(MAT_FG2)         { DIMENSION="DIMENSIONLESS"  ;}          
    SCALAR(MAT_SIGA1)       { DIMENSION="pressure"       ;}
 optional:
    SCALAR(MAT_GC1_inf)     { DIMENSION="lineic_force"   ;}          
    SCALAR(MAT_GC2_inf)     { DIMENSION="lineic_force"   ;}          
    SCALAR(MAT_SIGB1)       { DIMENSION="pressure"       ;}    
    SCALAR(MAT_SIGB2)       { DIMENSION="pressure"       ;}    
    SCALAR(MAT_SRATG1)      { DIMENSION="f"              ;}   
    SCALAR(MAT_SRATG2)      { DIMENSION="f"              ;}   
    SCALAR(MAT_SRATE1)      { DIMENSION="f"              ;}   
    SCALAR(MAT_SRATE2)      { DIMENSION="f"              ;}   
    RADIO(MAT_IMASS)
    {
        ADD(1,"1: Element Mass is Calculated Using Density and mean Area");
        ADD(2,"0: Element Mass is Calculated Using Density and Volume");
    }
}


// File format

FORMAT(radioss2021) {

ASSIGN(IO_FLAG, 0, EXPORT);
ASSIGN(IO_FLAG, 1,IMPORT);
if(IO_FLAG == 0)
{    HEADER("/MAT/LAW116/%d",_ID_);
    CARD("%-100s", TITLE);
}        
    COMMENT("#        Init. dens.");
    CARD("%20lg",MAT_RHO);
    //
    COMMENT("#                  E                  G             Thick     Imass     Idel     Icrit");
    CARD("%20lg%20lg%20lg%10d%10d%10d",  MAT_E,MAT_G,MAT_THICK,MAT_IMASS,MAT_IDEL,MAT_ICRIT);
    //
    COMMENT("#       MAT_GC1_ini         MAT_GC1_inf           MAT_SRATG1            MAT_FG1");
    CARD("%20lg%20lg%20lg%20lg", MAT_GC1_ini,MAT_GC1_inf,MAT_SRATG1,MAT_FG1);
    //
    COMMENT("#       MAT_GC2_ini         MAT_GC2_inf           MAT_SRATG2            MAT_FG2");
    CARD("%20lg%20lg%20lg%20lg", MAT_GC2_ini,MAT_GC2_inf,MAT_SRATG2,MAT_FG2);
    //
    COMMENT("#         MAT_SIGA1           MAT_SIGB1           MAT_SRATE1 MAT_ORDER1 MAT_FAIL1");
    CARD("%20lg%20lg%20lg%10d%10d", MAT_SIGA1,MAT_SIGB1,MAT_SRATE1,MAT_ORDER1,MAT_FAIL1);
    //
    COMMENT("#         MAT_SIGA2           MAT_SIGB2           MAT_SRATE2 MAT_ORDER2 MAT_FAIL2");
    CARD("%20lg%20lg%20lg%10d%10d", MAT_SIGA2,MAT_SIGB2,MAT_SRATE2,MAT_ORDER2,MAT_FAIL2);
    //
}
