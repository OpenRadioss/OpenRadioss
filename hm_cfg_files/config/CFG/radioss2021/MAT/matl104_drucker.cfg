//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//MATERIAL LAW104

ATTRIBUTES(COMMON) {
    KEYWORD_STR             = VALUE(STRING,"Solver Keyword");
    NUM_COMMENTS            = SIZE("No. of Comment Lines");
    COMMENTS                = ARRAY[NUM_COMMENTS](STRING, "Entity_Comments");
    CommentEnumField        = VALUE(INT,  "User Comments");

    MAT_RHO                 = VALUE(FLOAT,"Initial density");
    MAT_E                   = VALUE(FLOAT,"Young's modulus");
    MAT_NU                  = VALUE(FLOAT,"Poisson's ratio");
    MAT104_Ires             = VALUE(INT  ,"Resolution method for plasticity");
    SIGMA_r                 = VALUE(FLOAT,"Initial Yield Stress");
    MAT104_H                = VALUE(FLOAT,"Linear hardening module");
    MAT_PR                  = VALUE(FLOAT,"Voce Hardening Coefficient");
    MAT104_Bv               = VALUE(FLOAT,"Voce hardening exponent");
    MAT104_Cdr              = VALUE(FLOAT,"Drucker coefficient");
    MAT104_Cjc              = VALUE(FLOAT,"Johnson-Cook strain rate coefficient");
    MAT104_Eps0             = VALUE(FLOAT,"Inviscid limit for the plastic strain rate");

    MAT104_Tss              = VALUE(FLOAT,"Temperature softening slope");
    MAT104_Tref             = VALUE(FLOAT,"Reference temperature");
    T_Initial               = VALUE(FLOAT,"Initial temperature");
    MAT_ETA                 = VALUE(FLOAT,"Taylor-Quinney coefficient");
    MAT_SPHEAT              = VALUE(FLOAT,"Specific heat");
    MAT104_EpsIso           = VALUE(FLOAT,"Plastic strain rate at isothermic conditions");
    MAT104_EpsAd            = VALUE(FLOAT,"Plastic strain rate at adiabatic conditions");

    // HEAT
    Heat_Inp_opt                    = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT                 = VALUE(SUBOBJECT, "");
    // THERM_STRESS
    THERM_STRESS                    = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS             = VALUE(SUBOBJECT, "");

    TITLE                   = VALUE(STRING,"");
    IO_FLAG                 = VALUE(INT, "");
    Mat_Name_OR_LawNo       = VALUE(INT,  "RADIOSS_COMMENT_FLAG");
    LAW_NO                  = VALUE(STRING, "");

}   

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR             = 9000;
    NUM_COMMENTS            = 5110;
    COMMENTS                = 5109;
    CommentEnumField        = 7951;

    MAT_RHO                 = 118; 
    MAT_E                   = 119;
    MAT_NU                  = 120;
    MAT104_Ires             = 8504;
    SIGMA_r                 = 4201;
    MAT104_H                = 8505;
    MAT_PR                  = 5096;
    MAT104_Bv               = 8506;
    MAT104_Cdr              = 8507;
    MAT104_Cjc              = 8508;
    MAT104_Eps0             = 8509;
    MAT104_Tss              = 8510;
    MAT104_Tref             = 8511;
    T_Initial               = 4113;
    MAT_ETA                 = 5428;
    MAT_SPHEAT              = 318;
    MAT104_EpsIso           = 8512;
    MAT104_EpsAd            = 8513;

    //HEAT
    Heat_Inp_opt            = 4346;
    SUBGRP_HEAT_MAT         = -1;
    // THERM_STRESS
    THERM_STRESS            = 4555;
    SUBGRP_THERM_STRESS     = -1;

    TITLE                   = -1;
    IO_FLAG                 = -1;
    Mat_Name_OR_LawNo       = -1;
    LAW_NO                  = -1;

}


DEFAULTS(COMMON) {
    SIGMA_r                 = 1e20;
    MAT104_H                = 0.0 ;
    MAT_PR                  = 0.0 ;
    MAT104_Bv               = 0.0 ;
    MAT104_Cdr              = 0.0 ;
    MAT104_Cjc              = 0.0 ;
    MAT104_Eps0             = 0.0 ;
    MAT104_Tss              = 0.0 ;
    T_Initial               = 20.0;
    MAT104_Tref             = 20.0;
    MAT_ETA                 = 0.0 ;
    MAT_SPHEAT              = 0.0 ;
    MAT104_EpsIso           = 1e20;
    MAT104_EpsAd            = 2e20;
    MAT104_Ires             = 1;
}

GUI(COMMON)    
{
    RADIO(CommentEnumField)   
    {

        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if( CommentEnumField == 2 )
    {
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }
    if(Mat_Name_OR_LawNo == 2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW104/");
    }
    else 
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/JOHNS_VOCE_DRUCKER/");
    }

    SCALAR(MAT_RHO)         { DIMENSION="density";  } 
    SCALAR(MAT_E)           { DIMENSION="pressure";      }
    SCALAR(MAT_NU)          { DIMENSION="DIMENSIONLESS"; }
    RADIO(MAT104_Ires)   
    {
        ADD(0, "0: Set to 1");
        ADD(1, "1: NICE (Next Increment Correct Error) explicit method");
        ADD(2, "2: Newton iterative implicit method");
        ADD(3, "3: NICE explicit method with an elastic update");
    } 

    SCALAR(SIGMA_r)         { DIMENSION="pressure"; }
    SCALAR(MAT104_H)        { DIMENSION="pressure"; }
    SCALAR(MAT_PR)          { DIMENSION="pressure"; }
    SCALAR(MAT104_Bv)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT104_Cdr)      { DIMENSION="DIMENSIONLESS"; }

    SCALAR(MAT104_Cjc)      { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT104_Eps0)     { DIMENSION="f"; }

    SCALAR(MAT104_Tss)      { DIMENSION="coefficient_of_linear_inflation"; }
    SCALAR(MAT104_Tref)     { DIMENSION="k"; }
    SCALAR(T_Initial)       { DIMENSION="k"; }

    SCALAR(MAT_ETA)          { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_SPHEAT)       { DIMENSION="thermal_massic_capacity"; }
    SCALAR(MAT104_EpsIso)    { DIMENSION="f"; }
    SCALAR(MAT104_EpsAd)     { DIMENSION="f"; }
    // HEAT data
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    }

}
//file format   
FORMAT(radioss2021) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW104/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/JOHNS_VOCE_DRUCKER/%d",_ID_);
        CARD("%-100s", TITLE);
    }    
    COMMENT("#        Init. dens.");
    CARD("%20lg",MAT_RHO);
    COMMENT("#                  E                  Nu      Ires");
    CARD("%20lg%20lg%10d",MAT_E,MAT_NU,MAT104_Ires);
    COMMENT("#         sigma0_yld                   H                  Qv                  Bv                 Cdr");
    CARD("%20lg%20lg%20lg%20lg%20lg",SIGMA_r,MAT104_H,MAT_PR,MAT104_Bv,MAT104_Cdr);
    COMMENT("#                Cjc                Eps0");
    CARD("%20lg%20lg",MAT104_Cjc,MAT104_Eps0);
    COMMENT("#                 mu                Tref                Tini");
    CARD("%20lg%20lg%20lg",MAT104_Tss,MAT104_Tref,T_Initial);
    COMMENT("#                ETA                  Cp              EpsIso               EpsAd");
    CARD("%20lg%20lg%20lg%20lg",MAT_ETA,MAT_SPHEAT,MAT104_EpsIso,MAT104_EpsAd);
    //
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
