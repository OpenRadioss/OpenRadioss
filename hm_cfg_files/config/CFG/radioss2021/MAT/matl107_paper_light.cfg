//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.

// Material law 107 : PAPER_LIGHT

ATTRIBUTES(COMMON) {

    KEYWORD_STR                 = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                = SIZE("NUM_COMMENTS");
    CommentEnumField            = VALUE(INT,"User Comments");
    COMMENTS                    = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    MAT_RHO                     = VALUE(FLOAT,"Initial Density");
    Refer_Rho                   = VALUE(FLOAT,"Reference Density");
    DUMMY                       = VALUE(STRING,"Dummy variable for Ref_Rho flag");
    MAT_REFRHO_Option           = VALUE(INT, "RefRho_Option");
    MAT_E1                      = VALUE(FLOAT,"Young's Modulus in direction 1");
    MAT_E2                      = VALUE(FLOAT,"Young's Modulus in direction 2");
    MAT_E3                      = VALUE(FLOAT,"Young's Modulus in direction 3");
    MAT_NU21                    = VALUE(FLOAT,"Poisson's ratio 21");    
    MAT_G12                     = VALUE(FLOAT,"Shear modulus in 12");
    MAT_G23                     = VALUE(FLOAT,"Shear modulus in 23");
    MAT_G13                     = VALUE(FLOAT,"Shear modulus in 13");
    MAT_XI1                     = VALUE(FLOAT,"Coupling parameter in direction 1");
    MAT_XI2                     = VALUE(FLOAT,"Coupling parameter in direction 2");
    MAT_K1                      = VALUE(FLOAT,"Non-associated plastic potential parameter 1");
    MAT_K2                      = VALUE(FLOAT,"Non-associated plastic potential parameter 2");
    MAT_K3                      = VALUE(FLOAT,"Non-associated plastic potential parameter 3");
    MAT_K4                      = VALUE(FLOAT,"Non-associated plastic potential parameter 4");
    MAT_K5                      = VALUE(FLOAT,"Non-associated plastic potential parameter 5");
    MAT_K6                      = VALUE(FLOAT,"Non-associated plastic potential parameter 6");
    MAT_G1C                     = VALUE(FLOAT,"Correction parameter for compressive yield stress R1C");
    MAT_D1                      = VALUE(FLOAT,"Shear yield stress parameter 1");
    MAT_D2                      = VALUE(FLOAT,"Shear yield stress parameter 2");
    MAT_SIGY1                   = VALUE(FLOAT,"Initial yield stress in tension in direction 1 (MD)");
    MAT_CINI1                   = VALUE(FLOAT,"Yield stress intersection with ordinate axis in tension in direction 1 (MD)");
    MAT_S1                      = VALUE(FLOAT,"Yield stress slope in tension in direction 1 (MD)");
    MAT_SIGY2                   = VALUE(FLOAT,"Initial yield stress in tension in direction 2 (CD)");
    MAT_CINI2                   = VALUE(FLOAT,"Yield stress intersection with ordinate axis in tension in direction 2 (CD)");
    MAT_S2                      = VALUE(FLOAT,"Yield stress slope in tension in direction 2 (CD)");
    MAT_SIGY1C                  = VALUE(FLOAT,"Initial yield stress in compression in direction 1 (MD)");
    MAT_CINI1C                  = VALUE(FLOAT,"Yield stress intersection with ordinate axis in compression in direction 1 (MD)");
    MAT_S1C                     = VALUE(FLOAT,"Yield stress slope in compression in direction 1 (MD)");
    MAT_SIGY2C                  = VALUE(FLOAT,"Initial yield stress in compression in direction 2 (CD)");
    MAT_CINI2C                  = VALUE(FLOAT,"Yield stress intersection with ordinate axis in compression in direction 2 (CD)");
    MAT_S2C                     = VALUE(FLOAT,"Yield stress slope in compression in direction 2 (CD)");
    MAT_SIGYT                   = VALUE(FLOAT,"Initial yield stress in shear");
    MAT_CINIT                   = VALUE(FLOAT,"Yield stress intersection with ordinate axis in shear");
    MAT_ST                      = VALUE(FLOAT,"Yield stress slope in shear");
    //  
    MAT_IRES                    = VALUE(INT,"Flag for choosing the return mapping algorithm");
    MAT_ITAB                    = VALUE(INT,"Flag for choosing between analytic and tabulated yield stresses");       
    MAT_SMOOTH                  = VALUE(INT,"Tabulated function interpolation flag");    
    // Tabulated yield stress
    TAB_YLD1                    = VALUE(TABLE, "Yield function identifier in tension in direction 1 (MD)");
    TAB_YLD2                    = VALUE(TABLE, "Yield function identifier in tension in direction 2 (CD)");
    TAB_YLD1C                   = VALUE(TABLE, "Yield function identifier in compression in direction 1 (MD)");
    TAB_YLD2C                   = VALUE(TABLE, "Yield function identifier in compression in direction 2 (CD)");
    TAB_YLDT                    = VALUE(TABLE, "Yield function identifier in shear");
    //
    MAT_Xscale1                 = VALUE(FLOAT, "Strain rate factor for TAB_YLD1");
    MAT_Yscale1                 = VALUE(FLOAT, "Scale factor of TAB_YLD1 value");   
    MAT_Xscale2                 = VALUE(FLOAT, "Strain rate factor for TAB_YLD2");
    MAT_Yscale2                 = VALUE(FLOAT, "Scale factor of TAB_YLD2 value");
    MAT_Xscale1C                = VALUE(FLOAT, "Strain rate factor for TAB_YLD1C");
    MAT_Yscale1C                = VALUE(FLOAT, "Scale factor of TAB_YLD1C value");   
    MAT_Xscale2C                = VALUE(FLOAT, "Strain rate factor for TAB_YLD2C");
    MAT_Yscale2C                = VALUE(FLOAT, "Scale factor of TAB_YLD2C value");    
    MAT_XscaleT                 = VALUE(FLOAT, "Strain rate factor for TAB_YLDT");
    MAT_YscaleT                 = VALUE(FLOAT, "Scale factor of TAB_YLDT value");
    // 
    IO_FLAG                     = VALUE(INT, "");
    LAW_NO                      = VALUE(STRING, "");
    Mat_Name_OR_LawNo           = VALUE(INT,  "RADIOSS_COMMENT_FLAG");
    TITLE                       = VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                 = 9000;
    COMMENTS                    = 5109;
    CommentEnumField            = 7951;
    MAT_REFRHO_Option           = 4285;
    MAT_RHO                     = 118;
    Refer_Rho                   = 4229;
    MAT_E1                      = -1;
    MAT_E2                      = -1;
    MAT_E3                      = -1;
    MAT_NU21                    = -1;
    MAT_G12                     = -1;
    MAT_G23                     = -1;
    MAT_G13                     = -1;
    MAT_XI1                     = -1;
    MAT_XI2                     = -1;
    MAT_K1                      = -1;
    MAT_K2                      = -1;
    MAT_K3                      = -1;
    MAT_K4                      = -1;
    MAT_K5                      = -1;
    MAT_K6                      = -1;
    MAT_G1C                     = -1;
    MAT_D1                      = -1;
    MAT_D2                      = -1;
    MAT_SIGY1                   = -1;
    MAT_CINI1                   = -1;
    MAT_S1                      = -1;
    MAT_SIGY2                   = -1;
    MAT_CINI2                   = -1;
    MAT_S2                      = -1;
    MAT_SIGY1C                  = -1;
    MAT_CINI1C                  = -1;
    MAT_S1C                     = -1;
    MAT_SIGY2C                  = -1;
    MAT_CINI2C                  = -1;
    MAT_S2C                     = -1;
    MAT_SIGYT                   = -1;
    MAT_CINIT                   = -1;
    MAT_ST                      = -1; 
    //
    TAB_YLD1                    = -1;
    TAB_YLD2                    = -1;
    TAB_YLD1C                   = -1;
    TAB_YLD2C                   = -1;
    TAB_YLDT                    = -1;
    //
    MAT_Xscale1                 = -1; /*OC to be updated in HM-134509*/
    MAT_Yscale1                 = -1; /*OC to be updated in HM-134509*/    
    MAT_Xscale2                 = -1; /*OC to be updated in HM-134509*/
    MAT_Yscale2                 = -1; /*OC to be updated in HM-134509*/    
    MAT_Xscale1C                = -1; /*OC to be updated in HM-134509*/
    MAT_Yscale1C                = -1; /*OC to be updated in HM-134509*/    
    MAT_Xscale2C                = -1; /*OC to be updated in HM-134509*/
    MAT_Yscale2C                = -1; /*OC to be updated in HM-134509*/      
    MAT_XscaleT                 = -1; /*OC to be updated in HM-134509*/
    MAT_YscaleT                 = -1; /*OC to be updated in HM-134509*/         
    //
    MAT_IRES                    = -1;    
    MAT_ITAB                    = -1;
    MAT_SMOOTH                  = -1;
    //
    LAW_NO                      = -1;
    Mat_Name_OR_LawNo           = 4538;
    IO_FLAG                     = -1;
    TITLE                       = -1;
}

CHECK(COMMON)
{
    MAT_RHO                     >0.0;
    MAT_E1                      >0.0;
    MAT_E2                      >0.0;
    MAT_E3                      >0.0;      
    MAT_NU21                    >= 0.0;
    MAT_NU21                    <  0.5;  
    MAT_G12                     >0.0;
    MAT_G13                     >0.0;
    MAT_G23                     >0.0;
    MAT_K1                      >= 0.0;
    MAT_K2                      <= 0.0;
    MAT_K3                      >= 0.0;
    MAT_K4                      >= 0.0;
    MAT_K5                      >= 0.0;
    MAT_K6                      >= 0.0;
    MAT_G1C                     >= 0.0;
    MAT_SIGY1                   >0.0;
    MAT_CINI1                   >0.0;
    MAT_S1                      >= 0.0;
    MAT_SIGY2                   >0.0;
    MAT_CINI2                   >0.0;
    MAT_S2                      >= 0.0;
    MAT_SIGY1C                  >0.0;
    MAT_CINI1C                  >0.0;
    MAT_S1C                     >= 0.0;
    MAT_SIGY2C                  >0.0;
    MAT_CINI2C                  >0.0;
    MAT_S2C                     >= 0.0;
    MAT_SIGYT                   >0.0;
    MAT_CINIT                   >0.0;
    MAT_ST                      >= 0.0;
}

DEFAULTS(COMMON)
{
    MAT_SIGY1                   = 1.0e20;
    MAT_SIGY2                   = 1.0e20;
    MAT_SIGY1C                  = 1.0e20;
    MAT_SIGY2C                  = 1.0e20;
    MAT_SIGYT                   = 1.0e20;
    MAT_CINI1                   = 1.0e20;
    MAT_CINI2                   = 1.0e20;
    MAT_CINI1C                  = 1.0e20;
    MAT_CINI2C                  = 1.0e20;
    MAT_CINIT                   = 1.0e20;
    MAT_Xscale1                 = 1.0;
    MAT_Yscale1                 = 1.0;  
    MAT_Xscale2                 = 1.0;
    MAT_Yscale2                 = 1.0;
    MAT_Xscale1C                = 1.0;
    MAT_Yscale1C                = 1.0;  
    MAT_Xscale2C                = 1.0;
    MAT_Yscale2C                = 1.0; 
    MAT_XscaleT                 = 1.0;
    MAT_YscaleT                 = 1.0;
    Mat_Name_OR_LawNo           = 0;
}

DRAWABLES(COMMON) 
{
public:
    INITIAL_DENSITY   = SCALAR(MAT_RHO);
}

GUI(COMMON) 
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if(Mat_Name_OR_LawNo == 2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW107/");
    }
    else if (Mat_Name_OR_LawNo == 3)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/PFEIFFER/");    
    }
    else 
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/PAPER_LIGHT/");
    }
    FLAG(MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)      { DIMENSION="density";       }
    }
mandatory:
    SCALAR(MAT_RHO)      { DIMENSION="density";          }
    SCALAR(MAT_E1)       { DIMENSION="pressure";         }
    SCALAR(MAT_E2)       { DIMENSION="pressure";         }
    SCALAR(MAT_E3)       { DIMENSION="pressure";         }  
    SCALAR(MAT_NU21)     { DIMENSION="DIMENSIONLESS";    }
    SCALAR(MAT_G12)      { DIMENSION="pressure";         }
    SCALAR(MAT_G23)      { DIMENSION="pressure";         }
    SCALAR(MAT_G13)      { DIMENSION="pressure";         }
    SCALAR(MAT_XI1)      { DIMENSION="DIMENSIONLESS";    } 
    SCALAR(MAT_XI2)      { DIMENSION="DIMENSIONLESS";    }
    SCALAR(MAT_K1)       { DIMENSION="DIMENSIONLESS";    }
    SCALAR(MAT_K2)       { DIMENSION="DIMENSIONLESS";    }
    SCALAR(MAT_K3)       { DIMENSION="DIMENSIONLESS";    }
    SCALAR(MAT_K4)       { DIMENSION="DIMENSIONLESS";    }
    SCALAR(MAT_K5)       { DIMENSION="DIMENSIONLESS";    }
    SCALAR(MAT_K6)       { DIMENSION="DIMENSIONLESS";    }
    SCALAR(MAT_G1C)      { DIMENSION="DIMENSIONLESS";    }
    SCALAR(MAT_D1)       { DIMENSION="DIMENSIONLESS";    }
    SCALAR(MAT_D2)       { DIMENSION="DIMENSIONLESS";    }
    SCALAR(MAT_SIGY1)    { DIMENSION="pressure";         }
    SCALAR(MAT_CINI1)    { DIMENSION="inverse_of_pressure";    }
    SCALAR(MAT_S1)       { DIMENSION="inverse_of_pressure";    }
    SCALAR(MAT_SIGY2)    { DIMENSION="pressure";         }
    SCALAR(MAT_CINI2)    { DIMENSION="inverse_of_pressure";    }
    SCALAR(MAT_S2)       { DIMENSION="inverse_of_pressure";    }
    SCALAR(MAT_SIGY1C)   { DIMENSION="pressure";         }
    SCALAR(MAT_CINI1C)   { DIMENSION="inverse_of_pressure";    }
    SCALAR(MAT_S1C)      { DIMENSION="inverse_of_pressure";    }
    SCALAR(MAT_SIGY2C)   { DIMENSION="pressure";         }
    SCALAR(MAT_CINI2C)   { DIMENSION="inverse_of_pressure";    }
    SCALAR(MAT_S2C)      { DIMENSION="inverse_of_pressure";    }
    SCALAR(MAT_SIGYT)    { DIMENSION="pressure";         }
    SCALAR(MAT_CINIT)    { DIMENSION="inverse_of_pressure";    }
    SCALAR(MAT_ST)       { DIMENSION="inverse_of_pressure";    }     
    SCALAR(MAT_IRES)     { DIMENSION="DIMENSIONLESS";    }    
    SCALAR(MAT_ITAB)     { DIMENSION="DIMENSIONLESS";    }
    SCALAR(MAT_SMOOTH)   { DIMENSION="DIMENSIONLESS";    }
    //
    SCALAR(TAB_YLD1)     { DIMENSION="DIMENSIONLESS";    }
    SCALAR(TAB_YLD2)     { DIMENSION="DIMENSIONLESS";    }
    SCALAR(TAB_YLD1C)    { DIMENSION="DIMENSIONLESS";    }
    SCALAR(TAB_YLD2C)    { DIMENSION="DIMENSIONLESS";    }
    SCALAR(TAB_YLDT)     { DIMENSION="DIMENSIONLESS";    }
    SCALAR(MAT_Xscale1)  { DIMENSION="f";                }
    SCALAR(MAT_Yscale1)  { DIMENSION="pressure";         }    
    SCALAR(MAT_Xscale2)  { DIMENSION="f";                }
    SCALAR(MAT_Yscale2)  { DIMENSION="pressure";         }    
    SCALAR(MAT_Xscale1C) { DIMENSION="f";                }
    SCALAR(MAT_Yscale1C) { DIMENSION="pressure";         }    
    SCALAR(MAT_Xscale2C) { DIMENSION="f";                }
    SCALAR(MAT_Yscale2C) { DIMENSION="pressure";         }      
    SCALAR(MAT_XscaleT)  { DIMENSION="f";                }
    SCALAR(MAT_YscaleT)  { DIMENSION="pressure";         }
}
// File format
FORMAT(radioss2021)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
        else if(LAW_NO == "PFE" )
        {
            ASSIGN(Mat_Name_OR_LawNo,3);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW107/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 3)
    {
        HEADER("/MAT/PFEIFFER/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/PAPER_LIGHT/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    //
    COMMENT("#                 E1                  E2                  E3      Ires      Itab   Ismooth");
    CARD("%20lg%20lg%20lg%10d%10d%10d",MAT_E1,MAT_E2,MAT_E3,MAT_IRES,MAT_ITAB,MAT_SMOOTH);
    COMMENT("#               nu21                 G12                 G23                 G13");
    CARD("%20lg%20lg%20lg%20lg",MAT_NU21,MAT_G12,MAT_G23,MAT_G13);
    COMMENT("#                XI1                 XI2                 g1c                  d1                 d2");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_XI1,MAT_XI2,MAT_G1C,MAT_D1,MAT_D2);
    COMMENT("#                 k1                  k2                  k3");     
    CARD("%20lg%20lg%20lg",MAT_K1,MAT_K2,MAT_K3);
    COMMENT("#                 k4                  k5                  k6");
    CARD("%20lg%20lg%20lg",MAT_K4,MAT_K5,MAT_K6);
    if (MAT_ITAB == 0)
    { 
      COMMENT("#              SIGY1               CINI1                  S1");
      CARD("%20lg%20lg%20lg",MAT_SIGY1,MAT_CINI1,MAT_S1);
      COMMENT("#              SIGY2               CINI2                  S2");
      CARD("%20lg%20lg%20lg",MAT_SIGY2,MAT_CINI2,MAT_S2); 
      COMMENT("#             SIGY1C              CINI1C                 S1C");       
      CARD("%20lg%20lg%20lg",MAT_SIGY1C,MAT_CINI1C,MAT_S1C);    
      COMMENT("#             SIGY2C              CINI2C                 S2C");
      CARD("%20lg%20lg%20lg",MAT_SIGY2C,MAT_CINI2C,MAT_S2C);       
      COMMENT("#              SIGYT               CINIT                  ST");
      CARD("%20lg%20lg%20lg",MAT_SIGYT,MAT_CINIT,MAT_ST); 
    }
    else
    {
      COMMENT("#           TAB_YLD1         MAT_Xscale1         MAT_Yscale1");
      CARD("%10s%10d%20lg%20lg",_BLANK_,TAB_YLD1,MAT_Xscale1,MAT_Yscale1);
      COMMENT("#           TAB_YLD2         MAT_Xscale2         MAT_Yscale2");
      CARD("%10s%10d%20lg%20lg",_BLANK_,TAB_YLD2,MAT_Xscale2,MAT_Yscale2); 
      COMMENT("#          TAB_YLD1C        MAT_Xscale1C        MAT_Yscale1C");
      CARD("%10s%10d%20lg%20lg",_BLANK_,TAB_YLD1C,MAT_Xscale1C,MAT_Yscale1C);    
      COMMENT("#          TAB_YLD2C        MAT_Xscale2C        MAT_Yscale2C");
      CARD("%10s%10d%20lg%20lg",_BLANK_,TAB_YLD2C,MAT_Xscale2C,MAT_Yscale2C);  
      COMMENT("#           TAB_YLDT         MAT_XscaleT         MAT_YscaleT");
      CARD("%10s%10d%20lg%20lg",_BLANK_,TAB_YLDT,MAT_XscaleT,MAT_YscaleT);
    }
    //
}
