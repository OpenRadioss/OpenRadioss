//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Concentrated load Setup File
// 

ATTRIBUTES(COMMON) {
  // Data
  collector        = VALUE(LOADCOL, "SID");
  rad_dir          = VALUE(STRING,   "Direction of load"); 
  inputsystem      = VALUE(SYSTEM,  "Skew");
  curveid          = VALUE(FUNCT, "Time function");
  rad_sensor_id    = VALUE(SENSOR,"Sensor");
  xscale           = VALUE(FLOAT, "X-Scale factor");
  magnitude        = VALUE(FLOAT, "Y-Scale factor");
  displayname            = VALUE(STRING, "Title");
  // Support
  entityid         = VALUE(SETS, "Node group to which the concentrated loads are applied") { SUBTYPES = (/SETS/GRNOD); }
  //NB_NODES         = SIZE("Number of additional nodes");
  //NODE             = ARRAY[NB_NODES](NODE,"Additional nodes");
}

DEFINITIONS(COMMON) {
  //MAINS=(NODE);
}

PARAMETERS(PARAMETERS) {
  magnitude = INPUT_SCALAR(magnitude,"Scale factor");   
}

DEFAULTS(COMMON) {
  rad_dir    = "X";
  xscale     = 1.;
  magnitude  = 1.;
}

GUI(COMMON) {
 mandatory:
  graphical RADIO(rad_dir) {
    ADD("X",  "X  (force)");
    ADD("Y",  "Y  (force)");
    ADD("Z",  "Z  (force)");
    ADD("XX", "XX (moment)");
    ADD("YY", "YY (moment)");
    ADD("ZZ", "ZZ (moment)");
  }
 
  graphical FUNCTION(curveid) {    
     X_TITLE = "Time"; X_DIMENSION="t";
     
     if(rad_dir == "X" || rad_dir == "Y" || rad_dir == "Z") {    
       TITLE = "Force"; 
       Y_TITLE = "Force"; Y_DIMENSION="force";
     } else {
       TITLE = "Moment"; 
       Y_TITLE = "Moment"; Y_DIMENSION="moment";
     }       
       
     X_SCALING(xscale);    Y_SCALING(magnitude);
     X_CAN_BE_NEGATIVE = FALSE;
  }  
  //
 optional:
  graphical TOOL(inputsystem);
  TOOL(rad_sensor_id);
 
 //mandatory:
 // graphical SUPPORT("Support") {
 //   OBJECTS=(NODE,ELEMENTS,COMPONENT);
 //   ADD(entityid, "Node group");
 //   ADD(NODE   ,"Additional nodes");
 // }
}


FORMAT(radioss41) {
  HEADER("/CLOAD/%-10d",_ID_);
  CARD("%s", displayname);
  COMMENT("# Ifunct     DIR   Iskew Isensor           Scale Gnod_id");
  CARD("%8d%8s%8d%8d%16lg%8d",curveid,rad_dir,inputsystem,rad_sensor_id,magnitude,entityid);
 
 // COMMENT("#  Node1   Node2   Node3   Node4   Node5   Node6   Node7   Node8   Node9  Node10");
 // FREE_CELL_LIST(NB_NODES,"%8d",NODE,80) ;
}
