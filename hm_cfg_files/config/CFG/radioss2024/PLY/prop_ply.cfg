//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /PROP/PLY/
//

ATTRIBUTES(COMMON)
{
// INPUT ATTRIBUTES
    TITLE                                      = VALUE(STRING,"Ply title");
    material                                   = VALUE(MAT,"Material identifier for ply");
    thickness1                                 = VALUE(FLOAT,"Thickness of ply");
    orientangle                                = VALUE(FLOAT,"Incremental angle for layer");
    integrationpoints                          = VALUE(INT,"Number of integration points through ply thickness");
    orientangle2                               = VALUE(FLOAT,"Angle between first and second material direction for ply i");
    table                                      = VALUE(TABLE,"Drape identifier number");
    def_orth                                   = VALUE(INT,"The orthotropy angle");
    grsh4n_ID                                  = VALUE(SETS,"Temp variable Shell 4-nodes group identifier")  { SUBTYPES = (/SETS/GRSHEL) ; }
    grsh3n_ID                                  = VALUE(SETS,"Temp variable Shell 3-nodes group identifier")  { SUBTYPES = (/SETS/GRSH3N) ; }
    //Optional Card
    ply_drapeoption                            = VALUE(INT,"OptionDrape");
    Product_Name                               = VALUE(STRING,"Product name");
    
// HM INTERNAL
    KEYWORD_STR                                = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                               = SIZE("NUM_COMMENTS");
    CommentEnumField                           = VALUE(INT,"User Comments");
    COMMENTS                                   = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    entitylistmax                              = SIZE("Size of entity list");
    entitylistdisplayed                        = VALUE(MULTIOBJECT,"Shell 3-nodes group identifier connected to Ply") { SUBTYPES = ( /ELEMS , /SETS , /LINE , /SURFACE , /SOLID  ) ; }
    IO_FLAG                                    = VALUE(INT,"IO Flag");
    Prop_Name_OR_Type                          = VALUE(INT,"Flag to retain the keywords TYPE/PLY");
    TYPE_NO                                    = VALUE(STRING,"Temp string");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                                = 9000;
    COMMENTS                                   = 5109;
    CommentEnumField                           = 7951;
    NUM_COMMENTS                               = 5110;
    def_orth                                   = 5026;
    ply_drapeoption                            = 5036;
    grsh4n_ID                                  = -1;
    grsh3n_ID                                  = -1;
    //
    Prop_Name_OR_Type                          = 4537;
    IO_FLAG                                    =   -1;
    TYPE_NO                                    =   -1;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    orientangle2                               = 90.0;
    integrationpoints                          = 1;
    def_orth                                   = 2;
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }

    ASSIGN(KEYWORD_STR,"/PLY");
    DATA(material);
    SCALAR(thickness1)             { DIMENSION = "l"; }
    SCALAR(orientangle)            { DIMENSION = "a"; }

    DATA(entitylistdisplayed);
    SCALAR(integrationpoints);
    SCALAR(orientangle2)           { DIMENSION = "a"; }

    //Optional card
    FLAG(ply_drapeoption);
    if (ply_drapeoption !=FALSE)
    {
      DATA(table);
      RADIO(def_orth)
      {
        ADD(0,"0: Default = 2");
        ADD(1,"1: The orthotropy angle is calculated using the angle PHIs defined in /SHELL and /SH3N");
        ADD(2,"2: The orthotropy angle is calculated using the skew and rotation defined in /STACK option");
      }
    }
}


// File format
FORMAT(radioss100) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE19/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/PLY/%d",_ID_);
    }
    CARD("%-100s",TITLE);

    COMMENT("#  mat_IDi                   t           delta_phi");
    CARD("%10d%20lg%20lg",material,thickness1,orientangle);
}

FORMAT(radioss130) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE19/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/PLY/%d",_ID_);
    }
    CARD("%-100s",TITLE);

    COMMENT("#  mat_IDi                   t           delta_phi grsh4n_ID grsh3n_ID");
    CARD("%10d%20lg%20lg%10d%10d",material,thickness1,orientangle,grsh4n_ID,grsh3n_ID);
}

FORMAT(radioss140) {

    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE19/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/PLY/%d",_ID_);
    }
    CARD("%-100s",TITLE);

    COMMENT("#  mat_IDi                   t           delta_phi grsh4n_ID grsh3n_ID   Npt_ply             alpha_i");
    CARD("%10d%20lg%20lg%10d%10d%10d%20lg",material,thickness1,orientangle,grsh4n_ID,grsh3n_ID,integrationpoints,orientangle2);
}

FORMAT(radioss2017)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);

    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE19/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/PLY/%d",_ID_);
    }
    CARD("%-100s",TITLE);
  
    COMMENT("#   mat_ID                   t           delta_phi grsh4n_ID grsh3n_ID   Npt_ply             alpha_i");
    CARD("%10d%20lg%20lg%10d%10d%10d%20lg",material,thickness1,orientangle,grsh4n_ID,grsh3n_ID,integrationpoints,orientangle2);

   if (IO_FLAG == 1) 
   {
      COMMENT("# drape_ID  def_orth");
      FREE_CARD(ply_drapeoption,"%10d%10d",table,def_orth);
   }
   else if (ply_drapeoption !=FALSE)
   {
      // EXPORT
      COMMENT("# drape_ID  def_orth");
      CARD("%10d%10d",table,def_orth);
   }
}
FORMAT(radioss2023)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);

    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE19/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/PLY/%d",_ID_);
    }
    CARD("%-100s",TITLE);
  
    COMMENT("#   mat_ID                   t           delta_phi grsh4n_ID grsh3n_ID   Npt_ply             alpha_i");
    CARD("%10d%20lg%20lg%10d%10d%10d%20lg",material,thickness1,orientangle,grsh4n_ID,grsh3n_ID,integrationpoints,orientangle2);

   if (IO_FLAG == 1) 
   {
      COMMENT("# drape_ID  def_orth                                                                          P_name");
      FREE_CARD(ply_drapeoption,"%10d%10d                                                                     %10s",table,def_orth,Product_Name);
   }
   else if (ply_drapeoption !=FALSE)
   {
      // EXPORT
      COMMENT("# drape_ID  def_orth                                                                         P_name");
      CARD("%10d%10d                                                                     %10s",table,def_orth,Product_Name);
   }
}

FORMAT(radioss2024)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);

    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE19/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/PLY/%d",_ID_);
    }
    CARD("%-100s",TITLE);
  
    COMMENT("#   mat_ID                   t           delta_phi grsh4n_ID grsh3n_ID   Npt_ply             alpha_i");
    CARD("%10d%20lg%20lg%10d%10d%10d%20lg",material,thickness1,orientangle,grsh4n_ID,grsh3n_ID,integrationpoints,orientangle2);

   if (IO_FLAG == 1) 
   {
      COMMENT("# drape_ID                                                                               P_name");
      FREE_CARD(ply_drapeoption,"%10d                                                                               %10s",table,Product_Name);
   }
   else if (ply_drapeoption !=FALSE)
   {
      // EXPORT
      COMMENT("# drape_ID                                                                           P_name");
      CARD("%10d                                                                               %10s",table,Product_Name);
   }
}
