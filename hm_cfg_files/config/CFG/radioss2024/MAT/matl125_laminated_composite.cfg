//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//MATERIAL LAW125

ATTRIBUTES(COMMON) {
    KEYWORD_STR             = VALUE(STRING,"Solver Keyword");
    NUM_COMMENTS            = SIZE("No. of Comment Lines");
    COMMENTS                = ARRAY[NUM_COMMENTS](STRING, "Entity_Comments");
    CommentEnumField        = VALUE(INT,  "User Comments");

    // Elastic parameters
    MAT_RHO                 = VALUE(FLOAT,"Initial density");
    LSD_MAT_EA              = VALUE(FLOAT,"Young's modulus for tension in fiber direction 1");
    LSD_MAT_EB              = VALUE(FLOAT,"Young's modulus in matrix direction 2");
    LSD_MAT_EC              = VALUE(FLOAT,"Young's modulus in matrix direction 3");
    LSD_MAT_GAB             = VALUE(FLOAT,"Shear modulus in plane 12");
    LSD_MAT_GBC             = VALUE(FLOAT,"Shear modulus in plane 23");
    LSD_MAT_GCA             = VALUE(FLOAT,"Shear modulus in plane 13");
    LSD_MAT_PRBA            = VALUE(FLOAT,"Poisson's ratio in plane 12");
    LSD_MAT_PRAC            = VALUE(FLOAT,"Poisson's ratio in plane 13");
    LSD_MAT_PRBC            = VALUE(FLOAT,"Poisson's ratio in plane 23");

    LSD_FS                  = VALUE(INT  ,"Failure surface type");
    LSD_SOFT                = VALUE(FLOAT  ,"Softening reduction factor");
    
    MATL58_GAMMA1            = VALUE(FLOAT, "strain limit of the first slightly nonlinear part of the shear stress 12 ");
    MATL58_TAU1              = VALUE(FLOAT, "stress limit of the first slightly nonlinear part of the shear stress 12 ");
    MATL58_GAMMA2             = VALUE(FLOAT, "strain limit of the first slightly nonlinear part of the shear stress 13 ");
    MATL58_TAU2              = VALUE(FLOAT, "stress limit of the first slightly nonlinear part of the shear stress 13 ");
    MATL58_GAMMA3            = VALUE(FLOAT, "strain limit of the first slightly nonlinear part of the shear stress 23 ");
    MATL58_TAU3              = VALUE(FLOAT, "stress limit of the first slightly nonlinear part of the shear stress 23 ");

    LSD_LCID                = VALUE(FUNCT, "Load curve ID defining longitudinal compressive strength XC vs strain rate");
    LSD_LCID2               = VALUE(FUNCT, "Load curve ID defining longitudinal tensile strength XT vs. strain rate");
    LSD_LCID3               = VALUE(FUNCT, "Load curve ID defining transverse compressive strength YC vs. strain rate");
    LSD_LCID4               = VALUE(FUNCT, "Load curve ID defining transverse tensile strength YT vs. strain rate");
    LSD_LCID5               = VALUE(FUNCT, "Load curve ID defining shear strength SC vs. strain rate");
   
    LSD_LCID6               = VALUE(FUNCT, "Load curve ID defining TAU1 vs. strain rate");
    LSD_LCID7               = VALUE(FUNCT, "Load curve ID defining GAMMA1 vs. strain rate");
    
    LSD_LCID18              = VALUE(FUNCT, "Load curve ID defining longitudinal tensile strength ZT vs. strain rate");
    LSD_LCID17              = VALUE(FUNCT, "Load curve ID defining longitudinal compressive strength ZC vs strain rate");
    LSD_LCID19              = VALUE(FUNCT, "Load curve ID defining shear strength SC23 vs. strain rate");
    LSD_LCID20              = VALUE(FUNCT, "Load curve ID defining shear strength SC13 vs. strain rate");
   
    
    LSD_LCID25              = VALUE(FUNCT, "Load curve ID defining TAU2 (13) vs. strain rate");
    LSD_LCID26              = VALUE(FUNCT, "Load curve ID defining GAMMA2 (13) vs. strain rate");
    LSD_LCID27              = VALUE(FUNCT, "Load curve ID defining TAU3  (23) vs. strain rate");
    LSD_LCID28              = VALUE(FUNCT, "Load curve ID defining GAMMA3 (23)  vs. strain rate");
 
    LSD_LCID11              = VALUE(FUNCT, "Load curve ID defining E11C vs. strain rate");
    LSD_LCID12              = VALUE(FUNCT, "Load curve ID defining E11T vs. strain rate");
    LSD_LCID13              = VALUE(FUNCT, "Load curve ID defining E22C vs. strain rate");
    LSD_LCID14              = VALUE(FUNCT, "Load curve ID defining E22T vs. strain rate");
    LSD_LCID15              = VALUE(FUNCT, "Load curve ID defining GMS vs. strain rate");   

    LSD_LCID16              = VALUE(FUNCT, "ERODS vs. strain rate");
    
    LSD_LCID21              = VALUE(FUNCT, "Load curve ID defining E33C vs. strain rate");
    LSD_LCID22              = VALUE(FUNCT, "Load curve ID defining E33T vs. strain rate");
    LSD_LCID23              = VALUE(FUNCT, "Load curve ID defining GMS13 vs. strain rate");   
    LSD_LCID24              = VALUE(FUNCT, "Load curve ID defining GMS23 vs. strain rate");   
   
    LSD_MAT_XT                 = VALUE(FLOAT,"Longitudinal tensile strength ");
    LSD_MAT_XC                 = VALUE(FLOAT,"Longitudinal compressive strength ");
    LSD_MAT_YT                 = VALUE(FLOAT,"Transverse tensile strength ");
    LSD_MAT_YC                 = VALUE(FLOAT,"Transverse compressive strength ");
    LSD_MAT_ZT                 = VALUE(FLOAT,"Transverse tensile strength 33");
    LSD_MAT_ZC                 = VALUE(FLOAT,"Transverse compressive strength 33");
    LSD_MAT_SC                 = VALUE(FLOAT,"Shear strength 12");
    LSD_MAT_SC23               = VALUE(FLOAT,"Shear strength 23");
    LSD_MAT_SC13               = VALUE(FLOAT,"Shear strength 13");
    
    LSD_M11C            = VALUE(FLOAT,"Strain at longitudinal compressive strength ");
    LSD_M11T            = VALUE(FLOAT,"Strain at longitudinal tensile strength ");
    LSD_M22C            = VALUE(FLOAT,"Strain at transversale compressive strength 22");
    LSD_M22T            = VALUE(FLOAT,"Strain at transversale tensile strength 22");
    LSD_M33T            = VALUE(FLOAT,"Strain at transversale tensile strength 33");
    LSD_M33C            = VALUE(FLOAT,"Strain at transversale compressive strength 33");
   
    LSD_MS              = VALUE(FLOAT,"Engineering shear strain at shear strength,12");
    LSD_MS23            = VALUE(FLOAT,"Engineering shear strain at shear strength, 23");
    LSD_MS13            = VALUE(FLOAT,"Engineering shear strain at shear strength, 13");

    LSD_MAT_EPSF            = VALUE(FLOAT,"Damage initiation transverse shear strain");
    LSD_MAT_EPSR            = VALUE(FLOAT,"Final rupture transverse shear strain");
    LSD_MAT_TSMD                = VALUE(FLOAT,"Transverse shear maximum damage");    
    
    MATL58_SLIMT1              = VALUE(FLOAT,"Scale for minimum longitudinal tensile stress limit ");
    MATL58_SLIMC1              = VALUE(FLOAT,"Scale for minimum longitudinal  compressive stress limit ");
    MATL58_SLIMT2              = VALUE(FLOAT,"Scale for minimum transverse tensile stress limit ");
    MATL58_SLIMC2              = VALUE(FLOAT,"Scale for minimum transverse  compressive stress limit ");
    MATL58_SLIMT3              = VALUE(FLOAT,"Scale for minimum tensile stress limit dir 33");
    MATL58_SLIMC3              = VALUE(FLOAT,"Scale for minimum compressive stress limit dir 33 ");
    MATL58_SLIMS               = VALUE(FLOAT,"Scale for minimum shear stress limit 12 ");
    MATL58_SLIMS23             = VALUE(FLOAT,"Scale for minimum shear stress limit 23 ");
    MATL58_SLIMS13             = VALUE(FLOAT,"Scale for minimum shear stress limit 13 ");
    MAT_LSD_MAT_TSMD           = VALUE(FLOAT,"Transverse shear maximum damage ");
    MATL58_ERODS               = VALUE(FLOAT, "Maximum effective strain for element layer failure");
    FCUT                       = VALUE(FLOAT,"Equivalent strain rate cutoff frequency");
    // HEAT
    Heat_Inp_opt            = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT         = VALUE(SUBOBJECT, "");
    // THERM_STRESS
    THERM_STRESS            = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS     = VALUE(SUBOBJECT, "");

    TITLE                   = VALUE(STRING,"");
    IO_FLAG                 = VALUE(INT, "");
    Mat_Name_OR_LawNo       = VALUE(INT,  "RADIOSS_COMMENT_FLAG");
    LAW_NO                  = VALUE(STRING, "");
}   

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR             = 9000;
    NUM_COMMENTS            = 5110;
    COMMENTS                = 5109;
    CommentEnumField        = 7951;

    MAT_RHO           = -1;
    LSD_MAT_EA        = -1;
    LSD_MAT_EB        = -1; 
    LSD_MAT_EC        = -1; 
    LSD_MAT_GAB       = -1; 
    LSD_MAT_GBC       = -1; 
    LSD_MAT_GCA       = -1; 
    LSD_MAT_PRBA      = -1; 
    LSD_MAT_PRAC      = -1; 
    LSD_MAT_PRBC      = -1; 
    MATL58_GAMMA1     = -1; 
    MATL58_TAU1       = -1; 
    LSD_FS            = -1; 
    LSD_SOFT          = -1; 
    LSD_LCID2        = -1; 
    LSD_LCID         = -1; 
    LSD_LCID4        = -1; 
    LSD_LCID3        = -1; 
    LSD_LCID5        = -1; 
    LSD_LCID20       = -1; 
    LSD_LCID19       = -1; 
    LSD_LCID6        = -1; 
    LSD_LCID7       = -1; 
    LSD_LCID25     = -1; 
    LSD_LCID26       = -1; 
    LSD_LCID27      = -1; 
    LSD_LCID28       = -1; 
    LSD_LCID12       = -1; 
    LSD_LCID11       = -1; 
    LSD_LCID14       = -1; 
    LSD_LCID13       = -1; 
    LSD_LCID15        = -1; 
    LSD_LCID22       = -1; 
    LSD_LCID21       = -1; 
    LSD_LCID23       = -1;  
    LSD_LCID24       = -1; 

    LSD_MAT_XT            = -1; 
    LSD_MAT_XC            = -1; 
    LSD_MAT_YT            = -1; 
    LSD_MAT_YC            = -1; 
    LSD_MAT_ZT            = -1; 
    LSD_MAT_ZC            = -1; 
    LSD_MAT_SC            = -1; 
    LSD_MAT_SC13          = -1; 
    LSD_MAT_SC23          = -1; 
    LSD_M11C         = -1; 
    LSD_M11T         = -1; 
    LSD_M22C         = -1; 
    LSD_M22T         = -1; 
    LSD_M33T         = -1; 
    LSD_M33C         = -1; 
    LSD_MS           = -1;
    LSD_MS23         = -1;
    LSD_MS13         = -1;
    LSD_MAT_EPSF          = -1;
    LSD_MAT_EPSR          = -1;
    LSD_MAT_TSMD              = -1;
    MATL58_SLIMT1        = -1;
    MATL58_SLIMC1        = -1;
    MATL58_SLIMT2        = -1;
    MATL58_SLIMC2        = -1;
    MATL58_SLIMT3        = -1;
    MATL58_SLIMC3        = -1;
    MATL58_SLIMS         = -1;
    MATL58_SLIMS23       = -1;
    MATL58_SLIMS13       = -1;
    MAT_LSD_MAT_TSMD          = -1 ;
    MATL58_ERODS         = -1 ;
    LSD_LCID16          = -1 ;
    //HEAT
    Heat_Inp_opt            = 4346;
    SUBGRP_HEAT_MAT         = -1;
    // THERM_STRESS
    THERM_STRESS            = 4555;
    SUBGRP_THERM_STRESS     = -1;

    TITLE                   = -1;
    IO_FLAG                 = -1;
    Mat_Name_OR_LawNo       = -1;
    LAW_NO                  = -1;
}

DEFAULTS(COMMON) {
}

GUI(COMMON)    
{
    RADIO(CommentEnumField)   
    {

        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if( CommentEnumField == 2 )
    {
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }
    if(Mat_Name_OR_LawNo == 2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW125/");
    }
    else 
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAMINATED_COMPOSITE/");
    }

    SCALAR(MAT_RHO)         { DIMENSION="density";       } 
    SCALAR(LSD_MAT_EA)          { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_EB)          { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_EC)          { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_GAB)     { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_GBC)     { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_GCA)     { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_PRBA)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_MAT_PRBC)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_MAT_PRAC)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MATL58_GAMMA1)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MATL58_TAU1)         { DIMENSION="pressure";      }
    SCALAR(MATL58_GAMMA2)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MATL58_TAU2)         { DIMENSION="pressure";      }
    SCALAR(MATL58_GAMMA3)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MATL58_TAU3)         { DIMENSION="pressure";      }

    SCALAR(LSD_MAT_XT)          { DIMENSION="density";       } 
    SCALAR(LSD_MAT_YT)          { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_XC)          { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_YC)          { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_SC)          { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_SC13)        { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_SC23)        { DIMENSION="pressure";      }

    SCALAR(LSD_M11C)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_M11T)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_M22C)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_M22T)       { DIMENSION="DIMENSIONLESS"; }  
    SCALAR(LSD_M33C)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_M33T)       { DIMENSION="DIMENSIONLESS"; }  


    SCALAR(LSD_MS)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_MS13)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_MS23)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_MAT_EPSF)        { DIMENSION="DIMENSIONLESS"; }  
    SCALAR(LSD_MAT_EPSR)        { DIMENSION="DIMENSIONLESS"; }  
  
    SCALAR(MATL58_SLIMT1)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MATL58_SLIMC1)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MATL58_SLIMT2)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MATL58_SLIMC2)       { DIMENSION="DIMENSIONLESS"; }  
    SCALAR(MATL58_SLIMT3)       { DIMENSION="DIMENSIONLESS"; }  
    SCALAR(MATL58_SLIMC3)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MATL58_SLIMS)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MATL58_SLIMS13)       { DIMENSION="DIMENSIONLESS"; }  
    SCALAR(MATL58_SLIMS23)      { DIMENSION="DIMENSIONLESS"; }  

    SCALAR(FCUT)      { DIMENSION="f";}
    // HEAT data
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    }

}
//file format
FORMAT(radioss2024) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW125/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/LAMINATED_COMPOSITE/%d",_ID_);
        CARD("%-100s", TITLE);
    }    
    COMMENT("#        Init. dens.");
    CARD("%20lg",MAT_RHO);
    COMMENT("#                 E1                  E2                  E3      SOFT      FS ");
    CARD("%20lg%20lg%20lg%20lg%10d",LSD_MAT_EA,LSD_MAT_EB,LSD_MAT_EC,LSD_SOFT,LSD_FS);
    COMMENT("#                G12                G13                G23");
    CARD("%20lg%20lg%20lg",LSD_MAT_GAB,LSD_MAT_GCA,LSD_MAT_GBC);
      COMMENT("#                Nu12                Nu13                Nu23");
    CARD("%20lg%20lg%20lg",LSD_MAT_PRBA,LSD_MAT_PRAC,LSD_MAT_PRBC);
    
    COMMENT("#         LCE11T                 E11T      LCXT                  XT              SLIMT1");
    CARD("%10d%20lg%10d%20lg%20lg",LSD_LCID12,LSD_M11T,LSD_LCID2,LSD_MAT_XT,MATL58_SLIMT1);
    COMMENT("#         LCE11C                 E11C      LCXC                  XC              SLIMC1");
    CARD("%10d%20lg%10d%20lg%20lg",LSD_LCID11,LSD_M11C,LSD_LCID,LSD_MAT_XC,MATL58_SLIMC1);

       
    COMMENT("#         LCE22T                 E22T      LCYT                 YT              SLIMT2");
    CARD("%10d%20lg%10d%20lg%20lg",LSD_LCID14,LSD_M22T,LSD_LCID4,LSD_MAT_YT,MATL58_SLIMT2);
    COMMENT("#         LCE11C                 E22C      LCYC                  XYC              SLIMC2");
    CARD("%10d%20lg%10d%20lg%20lg",LSD_LCID13,LSD_M22C,LSD_LCID3,LSD_MAT_YC,MATL58_SLIMC2);
    
    COMMENT("#         LCE33T                 EM33T      LCZT                 ZT              SLIMT3");
    CARD("%10d%20lg%10d%20lg%20lg",LSD_LCID22,LSD_M33T,LSD_LCID18,LSD_MAT_ZT,MATL58_SLIMT3);
    COMMENT("#         LCE33C                 E33C      LCZC                  ZC             SLIMC3");
    CARD("%10d%20lg%10d%20lg%20lg",LSD_LCID21,LSD_M33C,LSD_LCID17,LSD_MAT_ZC,MATL58_SLIMC3);

    COMMENT("#         gamma                tau         EMS                  SC             SLIMS");
    CARD("%20lg%20lg%20lg%20lg%20lg",MATL58_GAMMA1,MATL58_TAU1,LSD_MS,LSD_MAT_SC,MATL58_SLIMS);
    COMMENT("#         LCGAMMA            LCTAU         LCEMS                LCSC ");
    CARD("%10d%10d%10d%10d",LSD_LCID7,LSD_LCID6,LSD_LCID15,LSD_LCID5);

    COMMENT("#         gamma2                tau2         EMS13                  SC13             SLIMS31");
    CARD("%20lg%20lg%20lg%20lg%20lg",MATL58_GAMMA2,MATL58_TAU2,LSD_MS13,LSD_MAT_SC13,MATL58_SLIMS13);
    COMMENT("#         LCGAMMA2            LCTAU2         LCEMS13                LCSC13 ");
    CARD("%10d%10d%10d%10d",LSD_LCID26,LSD_LCID25,LSD_LCID23,LSD_LCID20);
   
    COMMENT("#         gamma3                tau3         EMS23                  SC23             SLIMS23");
    CARD("%20lg%20lg%20lg%20lg%20lg",MATL58_GAMMA3,MATL58_TAU3,LSD_MS23,LSD_MAT_SC23,MATL58_SLIMS23);
    COMMENT("#         LCGAMMA3            LCTAU3         LCEMS23                LCSC23 ");
    CARD("%10d%10d%10d%10d",LSD_LCID28,LSD_LCID27,LSD_LCID24,LSD_LCID19);
    
    COMMENT("#         EPSF               EPSR         LSD_MAT_TSMD         ");
    CARD("%20lg%20lg%20lg",LSD_MAT_EPSF,LSD_MAT_EPSR,MAT_LSD_MAT_TSMD);

    COMMENT("#        LCERODS               ERODS              ");
    CARD("%10d%20lg", LSD_LCID16,MATL58_ERODS);

    COMMENT("#               FCUT");
    CARD("%20lg",FCUT);
    //
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
