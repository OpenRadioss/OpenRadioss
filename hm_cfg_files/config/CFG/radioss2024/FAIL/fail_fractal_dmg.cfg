//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//  Setup File for failure model, fractal damage initialization
// 
//============================================================================

ATTRIBUTES(COMMON){ 

	_HMCOMMENTSFLAG  = VALUE(INT, "Write HM Comments");
	mat_id           = VALUE(MAT,  "Material");

	grsh4n_1         = VALUE(SETS, "Starting 4N element group Id") { SUBTYPES = (/SETS/GRSHEL);}
	grsh3n_1         = VALUE(SETS, "Starting 3N element group Id") { SUBTYPES = (/SETS/GRSH3N);}
	grsh4n_2         = VALUE(SETS, "Target 4N element group Id")   { SUBTYPES = (/SETS/GRSHEL);}
	grsh3n_2         = VALUE(SETS, "Target 3N element group Id")   { SUBTYPES = (/SETS/GRSH3N);}
 Num_walk         = VALUE(INT,  "Number of random walkers");
	Seed             = VALUE(INT,  "Random seed");
	Printout         = VALUE(INT,  "Printout flag");
	Damage    				  	= VALUE(FLOAT,"Initial damage value");
	Probability      = VALUE(FLOAT,"Damage probability");

 // HM INTERNAL
 
 KEYWORD_STR      = VALUE(STRING,"Solver Keyword");
	ID_CARD_EXIST				= VALUE(BOOL, "Give an Id");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
	_HMCOMMENTSFLAG=-1;
}

GUI(COMMON) 
{
  ASSIGN(KEYWORD_STR, "/FAIL/FRACTAL_DMG/");
mandatory:
  DATA(mat_id);

optional:
  DATA(grsh4n_1);
  DATA(grsh3n_1);
  DATA(grsh4n_2);
  DATA(grsh3n_2);

  SCALAR(Damage)          { DIMENSION = "DIMENSIONLESS"; }
  SCALAR(Probability)     { DIMENSION = "DIMENSIONLESS"; }
  SCALAR(Seed)            { DIMENSION = "DIMENSIONLESS"; }
  SCALAR(Num_walk)        { DIMENSION = "DIMENSIONLESS"; }

  FLAG(ID_CARD_EXIST);
}

//============================================================================
  
FORMAT(radioss2024) { 
 
	HEADER("/FAIL/FRACTAL_DMG/%d",mat_id);
	COMMENT("# grsh4n_1  grsh3n_1  grsh4n_2 grsh3n_2");
	CARD("%10d%10d%10d%10d",grsh4n_1,grsh3n_1,grsh4n_2,grsh3n_2);

 COMMENT("#             Damage         Probability      Seed Num walk Printout");
	CARD("%20lg%20lg%10d%10d%10d",Damage,Probability,Seed,Num_walk,Printout);

 if (ID_CARD_EXIST==TRUE) {
		COMMENT("#  FAIL_ID") ;
	}
	FREE_CARD(ID_CARD_EXIST,"%10d", _ID_);
}
//============================================================================

