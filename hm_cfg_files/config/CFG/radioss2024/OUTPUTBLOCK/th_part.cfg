//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Time history (PART) Setup File
// 

ATTRIBUTES(COMMON) 
{
    //INPUT ATTRIBUTES
    idsmax              = SIZE("Number of COMPONENT");
    ids                 = ARRAY[idsmax](COMPONENT, "Identifiers of the objects to be saved");
    Number_Of_Variables = SIZE("Number Variables saved for TH");
    VAR                 = ARRAY[Number_Of_Variables](STRING, "Variables saved for TH");
    // HM INTERNAL
    KEYWORD_STR         = VALUE(STRING, "Solver Keyword");
    TITLE               = VALUE(STRING, "TH group name");
    TH_OPTION           = VALUE(INT, "TH group name");
// ----- CFG Local attribute
    IO_FLAG             = VALUE(INT, "Import/Export flag");
    PREFIX_STR          = VALUE(STRING, "prefix Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR         = 9000;
    Number_Of_Variables = 7045;
    VAR                 = 7044;
    TH_OPTION           = 4674;
    IO_FLAG             =-1;
    PREFIX_STR          =-1;
}

DEFAULTS(COMMON) 
{

}

// enumeration(TH_FILE_enum,"TH ","ATH","BTH","CTH","DTH","ETH","FTH","GTH","HTH","ITH");

GUI(COMMON) 
{
    RADIO(TH_OPTION) 
    {
     /*   ADD(0,"Default TH");*/
        ADD(1,"/TH");
        ADD(2,"/ATH");
        ADD(3,"/BTH");
        ADD(4,"/CTH");
        ADD(5,"/DTH");
        ADD(6,"/ETH");
        ADD(7,"/FTH");
        ADD(8,"/GTH");
        ADD(9,"/HTH");
        ADD(10,"/ITH");
    }
    if(TH_OPTION==0 || TH_OPTION == 1)
    {
        ASSIGN(KEYWORD_STR, "/TH/PART/"); 
    }
    else if( TH_OPTION == 2)
    {
        ASSIGN(KEYWORD_STR, "/ATH/PART/"); 
    }
    else if( TH_OPTION == 3)
    {
        ASSIGN(KEYWORD_STR, "/BTH/PART/"); 
    }
    else if( TH_OPTION == 4)
    {
        ASSIGN(KEYWORD_STR, "/CTH/PART/"); 
    }
    else if( TH_OPTION == 5)
    {
        ASSIGN(KEYWORD_STR, "/DTH/PART/"); 
    }
    else if( TH_OPTION == 6)
    {
        ASSIGN(KEYWORD_STR, "/ETH/PART/"); 
    }
    else if( TH_OPTION == 7)
    {
        ASSIGN(KEYWORD_STR, "/FTH/PART/"); 
    }
    else if( TH_OPTION == 8)
    {
        ASSIGN(KEYWORD_STR, "/GTH/PART/"); 
    }
    else if( TH_OPTION == 9)
    {
        ASSIGN(KEYWORD_STR, "/HTH/PART/"); 
    }
    else if( TH_OPTION == 10)
    {
        ASSIGN(KEYWORD_STR, "/ITH/PART/"); 
    }
    SIZE(Number_Of_Variables);
    ARRAY(Number_Of_Variables,"Variables") 
    {
       RADIO(VAR) 
       {
        ADD("DEF","DEF: Default");
        ADD("IE","IE: Internal energy");
        ADD("KE","KE: Kinetic energy");
        ADD("XMOM","XMOM: Translational X momentum in the global reference frame");
        ADD("YMOM","YMOM: Translational Y momentum in the global reference frame");
        ADD("ZMOM","ZMOM: Translational Z momentum in the global reference frame");
        ADD("MASS","MASS: Mass of the part excluding mass added due to mass scaling /DT/NODA/CST");
        ADD("HE","HE: Hourglass energy");
        ADD("TURBKE","TURBKE: Turbulence kinetic energy (only for fluid applications)");
        ADD("XCG","XCG: Center of gravity coordinates");
        ADD("YCG","YCG: Center of gravity coordinates");
        ADD("ZCG","ZCG: Center of gravity coordinates");
        ADD("XXMOM","XXMOM: Rotational X momentum in the global reference frame");
        ADD("YYMOM","YYMOM: Rotational Y momentum in the global reference frame");
        ADD("ZZMOM","ZZMOM: Rotational Z momentum in the global reference frame");
        ADD("IXX","IXX: Inertia matrix");
        ADD("IYY","IYY: Inertia matrix");
        ADD("IZZ","IZZ: Inertia matrix");
        ADD("IXY","IXY: Inertia matrix");
        ADD("IYZ","IYZ: Inertia matrix");
        ADD("IZX","IZX: Inertia matrix");
        ADD("RIE","RIE: Shear internal energy");
        ADD("KERB","KERB: Transitional rigid body kinetic energy");
        ADD("RKERB","RKERB: Rotational rigid body kinetic energy");
        ADD("RKE","RKE: Rotational kinetic energy");
        ADD("ERODED","ERODED: Number of deleted elements");
        ADD("HEAT","HEAT: Stored heat");
        ADD("VX","VX : Average X velocity");
        ADD("VY","VY : Average Y velocity");
        ADD("VZ","VZ : Average Z velocity");
      }
    }
    SIZE(idsmax);
    ARRAY(idsmax,"Parts")
    {
        DATA(ids);
    }
}

// File format
FORMAT(radioss51)
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
 
    
    if(IO_FLAG == 1 )
    {
        HEADER("/%-s/PART/%d",PREFIX_STR, _ID_);
        if(PREFIX_STR=="TH")
        {
             ASSIGN(TH_OPTION,1, IMPORT);
        }
        else if(PREFIX_STR=="ATH")
        {
            ASSIGN(TH_OPTION, 2, IMPORT);
        }
        else if(PREFIX_STR=="BTH")
        {
            ASSIGN(TH_OPTION, 3, IMPORT);
        }
        else if(PREFIX_STR=="CTH")
        {
            ASSIGN(TH_OPTION, 4, IMPORT);
        }
        else if(PREFIX_STR=="DTH")
        {
            ASSIGN(TH_OPTION, 5, IMPORT);
        }
        else if(PREFIX_STR=="ETH")
        {
            ASSIGN(TH_OPTION, 6, IMPORT);
        }
         else if(PREFIX_STR=="FTH")
        {
            ASSIGN(TH_OPTION, 7, IMPORT);
        }
        else if(PREFIX_STR=="GTH")
        {
            ASSIGN(TH_OPTION, 8, IMPORT);
        }
        else if(PREFIX_STR=="HTH")
        {
            ASSIGN(TH_OPTION, 9, IMPORT);
        }                
        else if(PREFIX_STR=="ITH")
        {
            ASSIGN(TH_OPTION, 10, IMPORT);
        }
        
    }
    if(IO_FLAG == 2 )
    {
        if(TH_OPTION==0 || TH_OPTION == 1)
        {
            HEADER("/TH/PART/%d", _ID_); 
        }
        else if( TH_OPTION == 2)
        {
            HEADER("/ATH/PART/%d", _ID_); 
        }
        else if( TH_OPTION == 3)
        {
            HEADER("/BTH/PART/%d", _ID_); 
        }
        else if( TH_OPTION == 4)
        {
            HEADER("/CTH/PART/%d", _ID_); 
        }
        else if( TH_OPTION == 5)
        {
            HEADER("/DTH/PART/%d", _ID_); 
        }
        else if( TH_OPTION == 6)
        {
            HEADER("/ETH/PART/%d", _ID_); 
        }
        else if( TH_OPTION == 7)
        {
            HEADER("/FTH/PART/%d", _ID_); 
        }
        else if( TH_OPTION == 8)
        {
            HEADER("/GTH/PART/%d", _ID_); 
        }
        else if( TH_OPTION == 9)
        {
            HEADER("/HTH/PART/%d", _ID_); 
        }
        else if( TH_OPTION == 10)
        {
            HEADER("/ITH/PART/%d", _ID_); 
        }
    }
    CARD("%-100s", TITLE);
    // ASSIGN(Number_Of_Variables,13); // Dummy value, pending an improvement of the FREE_CELL_LIST
    COMMENT("#      var       var       var       var       var       var       var       var       var       var");
    FREE_CELL_LIST(Number_Of_Variables,"%-10s",VAR,100);
    COMMENT("#      Obj       Obj       Obj       Obj       Obj       Obj       Obj       Obj       Obj       Obj");
    FREE_CELL_LIST(idsmax,"%10d",ids,100);
}

FORMAT(radioss41) 
{
    HEADER("/TH/PART/%d/%s",_ID_,TITLE);
    ASSIGN(Number_Of_Variables,13); // Dummy value, pending an improvement of the FREE_CELL_LIST
    COMMENT("#    var     var     var     var     var     var     var     var     var     var");
    FREE_CELL_LIST(Number_Of_Variables,"%-8s",VAR,80);
    COMMENT("#    Obj     Obj     Obj     Obj     Obj     Obj     Obj     Obj     Obj     Obj");
    FREE_CELL_LIST(idsmax,"%8d",ids,80);
}
