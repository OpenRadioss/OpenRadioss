//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- th_sphcel.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    idsmax              = SIZE("Number of identifiers");
    ids                 = ARRAY[idsmax](ELEMS, "Particle identifier");

    Number_Of_Variables = SIZE("Number Variables saved for TH");
    VAR                 = ARRAY[Number_Of_Variables](STRING, "Variables saved for TH");
    NAME_ARRAY          = ARRAY[idsmax](STRING, "Name of the particle to appear in time history");

    // HM INTERNAL
    KEYWORD_STR         = VALUE(STRING, "Solver Keyword");

    TITLE               = VALUE(STRING, "Time history group title");
    TH_OPTION           = VALUE(INT, "TH group name");
// ----- CFG Local attribute
    IO_FLAG             = VALUE(INT, "Import/Export flag");
    PREFIX_STR          = VALUE(STRING, "prefix Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    Number_Of_Variables = 7045;
    VAR                 = 7044;
    NAME_ARRAY          = 7043;

    // HM INTERNAL
    KEYWORD_STR         = 9000;

    TITLE               = -1;
    TH_OPTION           = 4674;
    IO_FLAG             =-1;
    PREFIX_STR          =-1;
}

GUI(COMMON)
{
    RADIO(TH_OPTION) 
    {
     /*   ADD(0,"Default TH");*/
        ADD(1,"/TH");
        ADD(2,"/ATH");
        ADD(3,"/BTH");
        ADD(4,"/CTH");
        ADD(5,"/DTH");
        ADD(6,"/ETH");
        ADD(7,"/FTH");
        ADD(8,"/GTH");
        ADD(9,"/HTH");
        ADD(10,"/ITH");
    }
    if(TH_OPTION==0 || TH_OPTION == 1)
    {
        ASSIGN(KEYWORD_STR, "/TH/SPHCEL/"); 
    }
    else if( TH_OPTION == 2)
    {
        ASSIGN(KEYWORD_STR, "/ATH/SPHCEL/"); 
    }
    else if( TH_OPTION == 3)
    {
        ASSIGN(KEYWORD_STR, "/BTH/SPHCEL/"); 
    }
    else if( TH_OPTION == 4)
    {
        ASSIGN(KEYWORD_STR, "/CTH/SPHCEL/"); 
    }
    else if( TH_OPTION == 5)
    {
        ASSIGN(KEYWORD_STR, "/DTH/SPHCEL/"); 
    }
    else if( TH_OPTION == 6)
    {
        ASSIGN(KEYWORD_STR, "/ETH/SPHCEL/"); 
    }
    else if( TH_OPTION == 7)
    {
        ASSIGN(KEYWORD_STR, "/FTH/SPHCEL/"); 
    }
    else if( TH_OPTION == 8)
    {
        ASSIGN(KEYWORD_STR, "/GTH/SPHCEL/"); 
    }
    else if( TH_OPTION == 9)
    {
        ASSIGN(KEYWORD_STR, "/HTH/SPHCEL/"); 
    }
    else if( TH_OPTION == 10)
    {
        ASSIGN(KEYWORD_STR, "/ITH/SPHCEL/"); 
    }

    DATA(ids);

    SIZE(Number_Of_Variables);
    ARRAY(Number_Of_Variables,"Variables")
    {
       RADIO(VAR, "VAR")
       {
            ADD("DEF","DEF: Default");
            ADD("OFF","OFF: Element flag");
            ADD("SX","SX: Stresses in global system");
            ADD("SY","SY: Stresses in global system");
            ADD("SZ","SZ: Stresses in global system");
            ADD("SXY","SXY: Stresses in global system");
            ADD("SYZ","SYZ: Stresses in global system");
            ADD("SXZ","SXZ: Stresses in global system");
            ADD("IE","IE: Specific internal energy per initial volume");
            ADD("DENS","DENS: Density");
            ADD("VOL","VOL: Particle initial volume");
            ADD("WFVIS","WFVIS: Work of artificial viscous forces");
            ADD("DIAMETER","DIAMETER: Equivalent plastic strain(smoothing length)");
            ADD("TEMP","TEMP: Temperature");
            ADD("PLAS","PLAS: Equivalent plastic strain");
            ADD("PLSR","PLSR: Plastic strain rate");
            ADD("VPLA","VPLA: Equivalent volumetric plastic strain");
       }
    }

    SIZE(idsmax);
    ARRAY(idsmax, "idsmax")
    {
        SCALAR(NAME_ARRAY, "sphcel_name");
    }
}

// File format
FORMAT(radioss51)
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
 
    
    if(IO_FLAG == 1 )
    {
        HEADER("/%-s/SPHCEL/%d",PREFIX_STR, _ID_);
        if(PREFIX_STR=="TH")
        {
             ASSIGN(TH_OPTION,1, IMPORT);
        }
        else if(PREFIX_STR=="ATH")
        {
            ASSIGN(TH_OPTION, 2, IMPORT);
        }
        else if(PREFIX_STR=="BTH")
        {
            ASSIGN(TH_OPTION, 3, IMPORT);
        }
        else if(PREFIX_STR=="CTH")
        {
            ASSIGN(TH_OPTION, 4, IMPORT);
        }
        else if(PREFIX_STR=="DTH")
        {
            ASSIGN(TH_OPTION, 5, IMPORT);
        }
        else if(PREFIX_STR=="ETH")
        {
            ASSIGN(TH_OPTION, 6, IMPORT);
        }
         else if(PREFIX_STR=="FTH")
        {
            ASSIGN(TH_OPTION, 7, IMPORT);
        }
        else if(PREFIX_STR=="GTH")
        {
            ASSIGN(TH_OPTION, 8, IMPORT);
        }
        else if(PREFIX_STR=="HTH")
        {
            ASSIGN(TH_OPTION, 9, IMPORT);
        }                
        else if(PREFIX_STR=="ITH")
        {
            ASSIGN(TH_OPTION, 10, IMPORT);
        }
        
    }
    if(IO_FLAG == 2 )
    {
        if(TH_OPTION==0 || TH_OPTION == 1)
        {
            HEADER("/TH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 2)
        {
            HEADER("/ATH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 3)
        {
            HEADER("/BTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 4)
        {
            HEADER("/CTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 5)
        {
            HEADER("/DTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 6)
        {
            HEADER("/ETH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 7)
        {
            HEADER("/FTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 8)
        {
            HEADER("/GTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 9)
        {
            HEADER("/HTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 10)
        {
            HEADER("/ITH/SPHCEL/%d", _ID_); 
        }
    }
    CARD("%-100s",  TITLE);

    COMMENT("#      var       var       var       var       var       var       var       var       var       var");
    FREE_CELL_LIST(Number_Of_Variables, "%-10s", VAR, 100);


    FREE_CARD_LIST(idsmax)
    {
        COMMENT("# SPHCELid          SPHCELname");
        CARD("%10d%10s%-50s%30s", ids, _BLANK_, NAME_ARRAY, _BLANK_);
    }
}

FORMAT(radioss90)
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
 
    
    if(IO_FLAG == 1 )
    {
        HEADER("/%-s/SPHCEL/%d",PREFIX_STR, _ID_);
        if(PREFIX_STR=="TH")
        {
             ASSIGN(TH_OPTION,1, IMPORT);
        }
        else if(PREFIX_STR=="ATH")
        {
            ASSIGN(TH_OPTION, 2, IMPORT);
        }
        else if(PREFIX_STR=="BTH")
        {
            ASSIGN(TH_OPTION, 3, IMPORT);
        }
        else if(PREFIX_STR=="CTH")
        {
            ASSIGN(TH_OPTION, 4, IMPORT);
        }
        else if(PREFIX_STR=="DTH")
        {
            ASSIGN(TH_OPTION, 5, IMPORT);
        }
        else if(PREFIX_STR=="ETH")
        {
            ASSIGN(TH_OPTION, 6, IMPORT);
        }
         else if(PREFIX_STR=="FTH")
        {
            ASSIGN(TH_OPTION, 7, IMPORT);
        }
        else if(PREFIX_STR=="GTH")
        {
            ASSIGN(TH_OPTION, 8, IMPORT);
        }
        else if(PREFIX_STR=="HTH")
        {
            ASSIGN(TH_OPTION, 9, IMPORT);
        }                
        else if(PREFIX_STR=="ITH")
        {
            ASSIGN(TH_OPTION, 10, IMPORT);
        }
        
    }
    if(IO_FLAG == 2 )
    {
        if(TH_OPTION==0 || TH_OPTION == 1)
        {
            HEADER("/TH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 2)
        {
            HEADER("/ATH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 3)
        {
            HEADER("/BTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 4)
        {
            HEADER("/CTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 5)
        {
            HEADER("/DTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 6)
        {
            HEADER("/ETH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 7)
        {
            HEADER("/FTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 8)
        {
            HEADER("/GTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 9)
        {
            HEADER("/HTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 10)
        {
            HEADER("/ITH/SPHCEL/%d", _ID_); 
        }
    }

    CARD("%-100s",  TITLE);

    COMMENT("#   var_ID    var_ID    var_ID    var_ID    var_ID    var_ID    var_ID    var_ID    var_ID    var_ID");
    FREE_CELL_LIST(Number_Of_Variables, "%-10s", VAR, 100);


    FREE_CARD_LIST(idsmax)
    {
        COMMENT("#sphcel_ID          sphcel_name");
        CARD("%10d%10s%-50s%30s", ids, _BLANK_, NAME_ARRAY, _BLANK_);
    }
}
FORMAT(radioss2024)
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
 
    
    if(IO_FLAG == 1 )
    {
        HEADER("/%-s/SPHCEL/%d",PREFIX_STR, _ID_);
        if(PREFIX_STR=="TH")
        {
             ASSIGN(TH_OPTION,1, IMPORT);
        }
        else if(PREFIX_STR=="ATH")
        {
            ASSIGN(TH_OPTION, 2, IMPORT);
        }
        else if(PREFIX_STR=="BTH")
        {
            ASSIGN(TH_OPTION, 3, IMPORT);
        }
        else if(PREFIX_STR=="CTH")
        {
            ASSIGN(TH_OPTION, 4, IMPORT);
        }
        else if(PREFIX_STR=="DTH")
        {
            ASSIGN(TH_OPTION, 5, IMPORT);
        }
        else if(PREFIX_STR=="ETH")
        {
            ASSIGN(TH_OPTION, 6, IMPORT);
        }
         else if(PREFIX_STR=="FTH")
        {
            ASSIGN(TH_OPTION, 7, IMPORT);
        }
        else if(PREFIX_STR=="GTH")
        {
            ASSIGN(TH_OPTION, 8, IMPORT);
        }
        else if(PREFIX_STR=="HTH")
        {
            ASSIGN(TH_OPTION, 9, IMPORT);
        }                
        else if(PREFIX_STR=="ITH")
        {
            ASSIGN(TH_OPTION, 10, IMPORT);
        }
        
    }
    if(IO_FLAG == 2 )
    {
        if(TH_OPTION==0 || TH_OPTION == 1)
        {
            HEADER("/TH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 2)
        {
            HEADER("/ATH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 3)
        {
            HEADER("/BTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 4)
        {
            HEADER("/CTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 5)
        {
            HEADER("/DTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 6)
        {
            HEADER("/ETH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 7)
        {
            HEADER("/FTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 8)
        {
            HEADER("/GTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 9)
        {
            HEADER("/HTH/SPHCEL/%d", _ID_); 
        }
        else if( TH_OPTION == 10)
        {
            HEADER("/ITH/SPHCEL/%d", _ID_); 
        }
    }

    CARD("%-100s",  TITLE);

    COMMENT("#      var       var       var       var       var       var       var       var       var       var");
    FREE_CELL_LIST(Number_Of_Variables, "%-10s", VAR, 100);

    COMMENT("#  elem_ID          sphcel_name");
    FREE_CARD_LIST(idsmax)
    {
        CARD("%10d%10s%-80s", ids, _BLANK_, NAME_ARRAY);
    }
}