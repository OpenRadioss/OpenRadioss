//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// RBODY
// 

ATTRIBUTES(COMMON) {
// INPUT ATTRIBUTES
    NAME                                      = VALUE(STRING,"Rigid body title","TITLE");
    independentnode                           = VALUE(NODE,"Main (primary) node identifier (center of mass)");
    ISENSOR                                   = VALUE(SENSOR,"Sensor property identifier") {SUBTYPES=(/SENSOR/SENSOR_DEFINE);}
    SKEW_CSID                                 = VALUE(SYSTEM,"Skew identifier");
    ISPHERE                                   = VALUE(INT,"Spherical inertia flag");
    MASS                                      = VALUE(FLOAT,"Mass");
    dependentnodeset                          = VALUE(SETS,"Main (primary) node identifier (center of mass)") { SUBTYPES = (/SETS/GRNOD); }
    IKREM                                     = VALUE(INT,"Rigid wall deactivation flag");
    ICOG                                      = VALUE(INT,"Center of gravity computation flag");
    SURF_ID                                   = VALUE(SETS,"Surface identifier defining the envelope surface of the rigid body")  { SUBTYPES = (/SETS/SURF_IDPOOL); }
    JXX                                       = VALUE(FLOAT,"Inertia JXX");
    JYY                                       = VALUE(FLOAT,"Inertia JYY");
    JZZ                                       = VALUE(FLOAT,"Inertia JZZ");
    JXY                                       = VALUE(FLOAT,"Inertia JXY");
    JYZ                                       = VALUE(FLOAT,"Inertia JYZ");
    JXZ                                       = VALUE(FLOAT,"Inertia JXZ");
    Ioptoff                                   = VALUE(INT,"Manage domain decomposition of rigid body for RADIOSS HMPP flag");
    RBODY_Iexpams                             = VALUE(INT,"Extend /AMS to the entire rigid body even if some of the secondary nodes are not included in the /AMS part group");

// HM INTERNAL
    empty_string                              = VALUE(STRING, "");
    collector                                 = VALUE(LOADCOL,"SID");
    type                                      = VALUE(UINT,"");
    KEYWORD_STR                               = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                              = SIZE("NUM_COMMENTS");
    CommentEnumField                          = VALUE(INT,"User Comments");
    COMMENTS                                  = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                               = 9000;
    COMMENTS                                  = 5109;
    CommentEnumField                          = 7951;
    NUM_COMMENTS                              = 5110;
    NAME                                      = 8057;
    ISENSOR                                   = 5157;
    SKEW_CSID                                 = 412;
    ISPHERE                                   = 8066;
    MASS                                      = 167;
    IKREM                                     = 8047;
    ICOG                                      = 8048;
    SURF_ID                                   = 8061;
    JXX                                       = 471;
    JXY                                       = 472;
    JXZ                                       = 473;
    JYY                                       = 474;
    JYZ                                       = 475;
    JZZ                                       = 476;
    Ioptoff                                   = 4748;
    RBODY_Iexpams                             = 1754;

    empty_string                              = -1;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    IKREM                                     = 0;
    ICOG                                      = 1;
    Ioptoff                                   = 0;
    RBODY_Iexpams                             = 2;

    empty_string                              = "";
}

GUI(COMMON) {
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }

    ASSIGN(KEYWORD_STR, "/RBODY/");

    DATA(independentnode);
    DATA(ISENSOR);
    DATA(SKEW_CSID);
    RADIO(ISPHERE) {
      ADD(0,"0: Inertia is computed from data");
      ADD(1,"1: Inertia is set spherical");
      ADD(2,"2: Inertia is computed from data and automatically corrected");
      ADD(3,"3: Inertia is computed from data");
    }
    SCALAR(MASS) { DIMENSION="m"; }
    DATA(dependentnodeset);
    RADIO(IKREM) {
      ADD(0,"0: Remove rigid body secondary nodes from rigid wall");
      ADD(1,"1: Do not remove rigid body secondary nodes from rigid wall");
    }
    RADIO(ICOG) {
      ADD(0,"0: Default, set to 1");
      ADD(1,"1: Mass and inertia are added at the main node coordinates");
      ADD(2,"2: The center of gravity is only computed by taking into account the secondary node mass");
      ADD(3,"3: The center of gravity is set at the main node coordinates");
      ADD(4,"4: The center of gravity is set at the main node coordinates");
    }
    DATA(SURF_ID);
    SCALAR(JXX)  { DIMENSION="massmi"; }
    SCALAR(JYY)  { DIMENSION="massmi"; }
    SCALAR(JZZ)  { DIMENSION="massmi"; }
    SCALAR(JXY)  { DIMENSION="massmi"; }
    SCALAR(JYZ)  { DIMENSION="massmi"; }
    SCALAR(JXZ)  { DIMENSION="massmi"; }
    RADIO(Ioptoff) {
      ADD(0,"0: CPU cost of elements associated with rigid body is not taken into account for domain decomposition load-balancing");
      ADD(1,"1: CPU cost of elements associated with rigid body is taken into account for domain decomposition load-balancing");
    } 
}

// File format
FORMAT(radioss41) {
    HEADER("/RBODY/%d/%-40s",_ID_, NAME);
    COMMENT("#   RBID           NSKEW  ISPHER            MASS  gr_nod   IKREM    ICOG Surf_id");
    CARD("%8d%8s%8d%8d%16lg%8d%8d%8d%8d",independentnode,empty_string,SKEW_CSID,ISPHERE,MASS,dependentnodeset,IKREM,ICOG,SURF_ID);
    COMMENT("#            Jxx             Jyy             Jzz");
    CARD("%16lg%16lg%16lg",JXX,JYY,JZZ);
    COMMENT("#            Jxy             Jyz             Jxz");
    CARD("%16lg%16lg%16lg",JXY,JYZ,JXZ);
}
FORMAT(radioss42) {
    HEADER("/RBODY/%d/%-40s",_ID_, NAME);
    COMMENT("#   RBID   ISENS   NSKEW  ISPHER            MASS  gr_nod   IKREM    ICOG Surf_id");
    CARD("%8d%8d%8d%8d%16lg%8d%8d%8d%8d",independentnode,empty_string,SKEW_CSID,ISPHERE,MASS,dependentnodeset,IKREM,ICOG,SURF_ID);
    COMMENT("#            Jxx             Jyy             Jzz");
    CARD("%16lg%16lg%16lg",JXX,JYY,JZZ);
    COMMENT("#            Jxy             Jyz             Jxz");
    CARD("%16lg%16lg%16lg",JXY,JYZ,JXZ);
}

FORMAT(radioss51) {
    HEADER("/RBODY/%d",_ID_);
    CARD("%-100s", NAME);
    COMMENT("#    rb_ID sensor_ID   skew_ID    Ispher                Mass grnod_IDs     Ikrem      ICoG   surf_ID");
    CARD("%10d%10d%10d%10d%20lg%10d%10d%10d%10d",independentnode,ISENSOR,SKEW_CSID,ISPHERE,MASS,dependentnodeset,IKREM,ICOG,SURF_ID);
    COMMENT("#                Jxx                 Jyy                 Jzz");
    CARD("%20lg%20lg%20lg",JXX,JYY,JZZ);
    COMMENT("#                Jxy                 Jyz                 Jxz");
    CARD("%20lg%20lg%20lg",JXY,JYZ,JXZ);
}

FORMAT(radioss110) {
    HEADER("/RBODY/%d",_ID_);
    CARD("%-100s", NAME);
    COMMENT("#    rb_ID   sens_ID   skew_ID    Ispher                Mass grnod_IDs     Ikrem      ICoG   surf_ID");
    CARD("%10d%10d%10d%10d%20lg%10d%10d%10d%10d",independentnode,ISENSOR,SKEW_CSID,ISPHERE,MASS,dependentnodeset,IKREM,ICOG,SURF_ID);
    COMMENT("#                Jxx                 Jyy                 Jzz");
    CARD("%20lg%20lg%20lg",JXX,JYY,JZZ);
    COMMENT("#                Jxy                 Jyz                 Jxz");
    CARD("%20lg%20lg%20lg",JXY,JYZ,JXZ);
    COMMENT("#  Ioptoff");
    CARD("%10d",Ioptoff);
}

FORMAT(radioss2017) {
    HEADER("/RBODY/%d",_ID_);
    CARD("%-100s", NAME);
    COMMENT("#  node_ID   sens_ID   Skew_ID    Ispher                Mass   grnd_ID     Ikrem      ICoG   surf_ID");
    CARD("%10d%10d%10d%10d%20lg%10d%10d%10d%10d",independentnode,ISENSOR,SKEW_CSID,ISPHERE,MASS,dependentnodeset,IKREM,ICOG,SURF_ID);
    COMMENT("#                Jxx                 Jyy                 Jzz");
    CARD("%20lg%20lg%20lg",JXX,JYY,JZZ);
    COMMENT("#                Jxy                 Jyz                 Jxz");
    CARD("%20lg%20lg%20lg",JXY,JYZ,JXZ);
    COMMENT("#  Ioptoff   Iexpams");
    CARD("%10d%10d",Ioptoff,RBODY_Iexpams);
}

FORMAT(radioss2018) {
    HEADER("/RBODY/%d",_ID_);
    CARD("%-100s", NAME);
    COMMENT("#  node_ID   sens_ID   Skew_ID    Ispher                Mass   grnd_ID     Ikrem      ICoG   surf_ID");
    CARD("%10d%10d%10d%10d%20lg%10d%10d%10d%10d",independentnode,ISENSOR,SKEW_CSID,ISPHERE,MASS,dependentnodeset,IKREM,ICOG,SURF_ID);
    COMMENT("#                Jxx                 Jyy                 Jzz");
    CARD("%20lg%20lg%20lg",JXX,JYY,JZZ);
    COMMENT("#                Jxy                 Jyz                 Jxz");
    CARD("%20lg%20lg%20lg",JXY,JYZ,JXZ);
    COMMENT("#  Ioptoff");
    CARD("%10d%10d",Ioptoff,RBODY_Iexpams);
}