//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Merge Rigid body Setup File
// 

// MCDS attributes description
ATTRIBUTES(COMMON) {
// INPUT ATTRIBUTES
    NAME                = VALUE(STRING,"Merge rigid body title","TITLE");
//
    NB_SUBOBJVE      =   SIZE("No. Main/Secondary pairs");
    SUPP_SUBGRPVE    =   ARRAY[NB_SUBOBJVE](SUBOBJECT, "Main/Secondary pairs"); 
// HM INTERNAL
    KEYWORD_STR         = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS        = SIZE("NUM_COMMENTS");
    CommentEnumField    = VALUE(INT,"User Comments");
    COMMENTS            = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR           = 9000;
    COMMENTS              = 5109;
    CommentEnumField      = 7951;
    NUM_COMMENTS          = 5110;
//
    NAME                  = 8057;
    NB_SUBOBJVE           = -1;
    SUPP_SUBGRPVE         = -1;
}
// Defaults

DEFAULTS(COMMON) {

}

// Check description

CHECK(COMMON) {
    NB_SUBOBJVE>=1;
}

// GUI
GUI(COMMON) 
{
// HM INTERNAL
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
//
    ASSIGN(KEYWORD_STR, "/MERGE/RBODY");
// INPUT ATTRIBUTES
mandatory:
    SIZE(NB_SUBOBJVE) ;
    ARRAY(NB_SUBOBJVE,"")
    {
        SUBOBJECT(SUPP_SUBGRPVE) {SUBTYPES = (/SUBOBJECT/MERGE_RBODY_SUBOBJ);}     
    }
}


FORMAT(radioss2020) 
{
    HEADER("/MERGE/RBODY/%d",_ID_);
    CARD("%-100s", NAME);
    COMMENT("#  Main_ID    M_type  Secon_ID    S_type     Iflag");
    SUBOBJECTS(SUPP_SUBGRPVE,/SUBOBJECT/MERGE_RBODY_SUBOBJ);   
}