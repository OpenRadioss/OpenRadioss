//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Failure model, VISUAL Setup File
// 

ATTRIBUTES(COMMON){ 

    _HMCOMMENTSFLAG                     = VALUE(INT, "Write HM Comments");
    IO_FLAG                             = VALUE(INT, "Import/Export flag");
    mat_id                              = VALUE(MAT,  "Material");

    Type                                = VALUE(INT,"Type selector");
    C_min                               = VALUE(FLOAT,"Lower limit for stress or strain that defines when the maximum value starts to be recorded");
    C_max                               = VALUE(FLOAT,"Maximum limit for stress or strain");
    Alpha_Exp_Avg_Filter                = VALUE(FLOAT,"Exponential moving average filter");
    f_cutoff                            = VALUE(FLOAT,"Cutoff frequency");
    f_flag                              = VALUE(INT,"Filter flag");
        
    ID_CARD_EXIST                       = VALUE(BOOL, "Give an Id");
    empty_string                        = VALUE(STRING, "empty string");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    _HMCOMMENTSFLAG                    = -1;
    empty_string                       = -1;
    IO_FLAG                            = -1;
}

GUI(COMMON) 
{

  SCALAR(C_min)                   { if(Type==1)  {DIMENSION="pressure";}   else { DIMENSION="DIMENSIONLESS";} }
  SCALAR(C_max)                   { if(Type==1)  {DIMENSION="pressure";}   else { DIMENSION="DIMENSIONLESS";} }
  SCALAR (Alpha_Exp_Avg_Filter)   {DIMENSION="DIMENSIONLESS"; }
  SCALAR (f_cutoff)               {DIMENSION="f"; }
//  SCALAR(Alpha_Exp_Avg_Filter)    { if(f_flag==2){ DIMENSION="f";} else { DIMENSION="DIMENSIONLESS";} }

}

CHECK(COMMON) {

  Alpha_Exp_Avg_Filter     >= 0.0;
  Alpha_Exp_Avg_Filter     <= 1.0;
  
}

DEFAULTS(COMMON) {

    Type                  =    1;
    C_min                 =  0.0;
    f_flag                =    1;
    Alpha_Exp_Avg_Filter  =  1.0;
    f_cutoff              =  0.0;
}

FORMAT(radioss2020) {

    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 0, EXPORT);
    
    HEADER("/FAIL/VISUAL/%d",mat_id);
    
    if (IO_FLAG == 0)
    {
        COMMENT("#     TYPE               C_MIN               C_MAX       F-COEFFICIENT    F-FLAG");
        CARD("%10d%20lg%20lg%20lg%10d",Type,C_min,C_max, CELL_COND( if (f_flag == 2)  
                                                                        f_cutoff;
                                                                    else
                                                                        Alpha_Exp_Avg_Filter; ), f_flag);
    }
    else
    {
        CARD_PREREAD("%10s%20s%20s%20s%10d",empty_string,empty_string,empty_string,empty_string,f_flag);
        CARD("%10d%20lg%20lg%20lg%10d",Type,C_min,C_max, CELL_COND( if (f_flag == 2)
                                                                        f_cutoff; 
                                                                    else
                                                                        Alpha_Exp_Avg_Filter; ), f_flag);
    }

    if (ID_CARD_EXIST==TRUE)
    {
     COMMENT("#  FAIL_ID") ;
    }
    FREE_CARD(ID_CARD_EXIST,"%10d", _ID_);
}
