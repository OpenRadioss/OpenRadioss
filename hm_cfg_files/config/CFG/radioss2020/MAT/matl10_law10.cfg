//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material law 10 (LAW10) Setup File
ATTRIBUTES(COMMON) {  
    KEYWORD_STR             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS            = SIZE("NUM_COMMENTS");
    CommentEnumField        = VALUE(INT,"User Comments");
    COMMENTS                = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    // Initial and reference densities
    MAT_RHO                 = VALUE(FLOAT,"Initial Density");
    Refer_Rho               = VALUE(FLOAT,"Reference Density");
    MAT_REFRHO_Option       = VALUE(INT, "RefRho_Option");
    DUMMY                   = VALUE(STRING,"Dummy variable for Ref_Rho flag");  
    MAT_E                   = VALUE(FLOAT,"Young's Modulus");
    MAT_NU                  = VALUE(FLOAT,"Poisson's Ratio");  
    MAT_A0                  = VALUE(FLOAT,"Coefficient A0");
    MAT_A1                  = VALUE(FLOAT,"Coefficient A1");
    MAT_A2                  = VALUE(FLOAT,"Coefficient A2");
    MAT_AMAX                = VALUE(FLOAT,"Von Mises Limit");  
    MAT_C0                  = VALUE(FLOAT,"Coefficient C0");
    MAT_C1                  = VALUE(FLOAT,"Coefficient C1");
    MAT_C2                  = VALUE(FLOAT,"Coefficient C2");
    MAT_C3                  = VALUE(FLOAT,"Coefficient C3");   
    MAT_PC                  = VALUE(FLOAT,"Minimum Pressure (< 0)");
    PEXT                    = VALUE(FLOAT,"External Pressure");   
    MAT_BULK                = VALUE(FLOAT,"Unloading Bulk Modulus");
    MAT_SIG                 = VALUE(FLOAT,"Maximum Compression");   
    Heat_Inp_opt            = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT         = VALUE(SUBOBJECT, "");  
    THERM_STRESS            = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS     = VALUE(SUBOBJECT, "");
    ALE_Form                = VALUE(INT, "Flag for Heat Transfer Formulation");
    SUBGRP_ALE_MAT          = VALUE(SUBOBJECT, "");
    SUBGRP_EULER_MAT        = VALUE(SUBOBJECT, ""); 
    EOS_Options             = VALUE(INT,"Eos Options");
    SUBGRP_EOS              = VALUE(SUBOBJECT, "");
    Mat_Name_OR_LawNo       = VALUE(INT, "");
    TITLE                   = VALUE(STRING,"");
    IO_FLAG                 = VALUE(INT, "");
    LAW_NO                  = VALUE(STRING, "");
    Line_count              = VALUE(INT,"");
    //attributes  for Compaction
    EOS_COM_C0          = VALUE(FLOAT,  "EOS parameter");
    EOS_COM_C1          = VALUE(FLOAT,  "EOS parameter");
    EOS_COM_C2          = VALUE(FLOAT,  "EOS parameter");
    EOS_COM_C3          = VALUE(FLOAT,  "EOS parameter");
    EOS_COM_Mue_max     = VALUE(FLOAT,  "Maximum compaction");
    EOS_COM_B           = VALUE(FLOAT,  "Unloading bulk Modulus");
}
SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    MAT_A0                                  = 279;
    MAT_A1                                  = 280;
    MAT_A2                                  = 281;
    MAT_AMAX                                = 5041;
    MAT_BULK                                = 223;
    MAT_C0                                  = 1500;
    MAT_C1                                  = 1501;
    MAT_C2                                  = 1502;
    MAT_C3                                  = 1503;
    MAT_E                                   = 119;
    MAT_NU                                  = 120;
    MAT_PC                                  = 282;
    MAT_RHO                                 = 118;
    MAT_SIG                                 = 5038;
    NUM_COMMENTS                            = 5110;
    PEXT                                    = 8144;
    Refer_Rho                               = 4229;
    MAT_REFRHO_Option                       = 4285;
    DUMMY                                   = -1;   
    Mat_Name_OR_LawNo                       = 4538;
    LAW_NO                                  = -1;
    IO_FLAG                                 = -1;
    TITLE                                   = -1;
    //HEAT
    Heat_Inp_opt                            = 4346;
    SUBGRP_HEAT_MAT                         = -1;
    // THERM_STRESS
    THERM_STRESS                            = 4555;
    SUBGRP_THERM_STRESS                     = -1;
    ALE_Form                                = 4336;
    SUBGRP_ALE_MAT                          = -1;
    SUBGRP_EULER_MAT                        = -1;
    EOS_Options                             = 2901;
    SUBGRP_EOS                              = -1;
    Line_count                              = -1;
    EOS_COM_C0                              = 2729;
    EOS_COM_C1                              = 2730; 
    EOS_COM_C2                              = 2731;
    EOS_COM_C3                              = 2732;
    EOS_COM_Mue_max                         = 2737;
    EOS_COM_B                               = 2736;
}
DEFAULTS(COMMON)
{
    MAT_PC        = -1.0e30;
}
CHECK(COMMON) {
    MAT_C1          >0.0;
    MAT_E           >=0.0;
    MAT_RHO         >0.0;
    MAT_PC          < 0;
}
DRAWABLES(COMMON) {
    public:
        INITIAL_DENSITY   = SCALAR(MAT_RHO);
        YOUNG_MODULUS     = SCALAR(MAT_E);
        POISSON_RATIO     = SCALAR(MAT_NU);
    public:
        SOUND_SPEED       = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
    private:
        G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
        MAT_C1            = SCALAR(MAT_E);
    public:
        SOUND_SPEED_SOLID = EVAL(((4*G/3+MAT_C1)/INITIAL_DENSITY)^0.5);
}
GUI(COMMON) {
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Mat_Name_OR_LawNo ==2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW10/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/DPRAG1/");
    }
    optional:
        FLAG(MAT_REFRHO_Option);
        if(MAT_REFRHO_Option!=FALSE){
            SCALAR(Refer_Rho) {  DIMENSION="density";   }
        }
    mandatory:
        SCALAR(MAT_RHO)    { DIMENSION="density";       }
    mandatory:
        SCALAR(MAT_E)      { DIMENSION="pressure";           }
    optional:
        SCALAR(MAT_NU)     { DIMENSION="DIMENSIONLESS";      }
      
        SCALAR(MAT_A0)     { DIMENSION="square_of_pressure"; }
        SCALAR(MAT_A1)     { DIMENSION="pressure";           }
        SCALAR(MAT_A2)     { DIMENSION="DIMENSIONLESS";      }
        SCALAR(MAT_AMAX)   { DIMENSION="square_of_pressure"; }       
      
        SCALAR(MAT_PC)     { DIMENSION="pressure";           }
        SCALAR(PEXT)       { DIMENSION="pressure";           }

        SCALAR(EOS_COM_C0)      { DIMENSION="pressure";           }
        SCALAR(EOS_COM_C1)      { DIMENSION="pressure";           }
        SCALAR(EOS_COM_C2)      { DIMENSION="pressure";           }
        SCALAR(EOS_COM_C3)      { DIMENSION="pressure";           }
        SCALAR(EOS_COM_Mue_max) { DIMENSION="DIMENSIONLESS";      }
        SCALAR(EOS_COM_B)       { DIMENSION="pressure";           }

    RADIO(ALE_Form) 
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1,"NONE");
        ADD(2,"ALE");
        ADD(3,"EULER");
    }
    if(ALE_Form == 2)
    {   
        SUBOBJECT(SUBGRP_ALE_MAT) {SUBTYPES = (/SUBOBJECT/ALE_MAT);}
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECT(SUBGRP_EULER_MAT) {SUBTYPES = (/SUBOBJECT/EULER);}
    }
    // HEAT data
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    } 
    // THERM_STRESS
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    }    
    RADIO(EOS_Options)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1,"NONE");
        ADD(2,"GRUNEISEN");
        ADD(3,"POLYNOMIAL");
        ADD(4,"PUFF");
        ADD(5,"SESAME");
        ADD(6,"TILLOTSON");
        ADD(7,"MURNAGHAN");
        ADD(8,"OSBORNE");
        ADD(9,"LSZK");
        ADD(10,"NOBLE-ABEL");
        ADD(11,"STIFF-GAS");
        ADD(12,"IDEAL-GAS");
        ADD(13,"LINEAR");
        ADD(14,"COMPACTION");
        ADD(15,"NASG");
    } 
    if(EOS_Options > 1)
    {
        SUBOBJECT(SUBGRP_EOS) {SUBTYPES = (/SUBOBJECT/EOS);}
    }
} 
//file format
FORMAT(radioss2019) {
    ASSIGN(IO_FLAG, 0,EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%6s",LAW_NO);
        if(LAW_NO == "DPRAG1" )
        {
            ASSIGN(Mat_Name_OR_LawNo,1);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 1)
    {
        HEADER("/MAT/DPRAG1/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/LAW10/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    } 
    COMMENT("#                  E                  Nu");
    CARD("%20lg%20lg",MAT_E,MAT_NU);   
    COMMENT("#                 A0                  A1                  A2                Amax");
    CARD("%20lg%20lg%20lg%20lg",MAT_A0,MAT_A1,MAT_A2,MAT_AMAX);      
    ASSIGN(Line_count,_GET_NB_FREE_CARDS(),IMPORT);
    if(Line_count == 3 && IO_FLAG == 1)
    {
        COMMENT("#                 C0                  C1                  C2                  C3");
        CARD("%20lg%20lg%20lg%20lg",EOS_COM_C0,EOS_COM_C1,EOS_COM_C2,EOS_COM_C3);      
        COMMENT("#              P_min               P_ext");
        CARD("%20lg%20lg",MAT_PC,PEXT);       
        COMMENT("#                  B              Mu_max");
        CARD("%20lg%20lg",EOS_COM_B,EOS_COM_Mue_max);
        ASSIGN(EOS_Options,14,IMPORT);
    }
    else
    {
        COMMENT("#              P_min");
        CARD("%20lg",MAT_PC);
    }
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(ALE_Form == 2)
    {
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
    }
    if(EOS_Options > 1)
    {
        SUBOBJECTS(SUBGRP_EOS,/SUBOBJECT/EOS);
    }
}
FORMAT(radioss130) {
    ASSIGN(IO_FLAG, 0,EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%6s",LAW_NO);
        if(LAW_NO == "DPRAG1" )
        {
            ASSIGN(Mat_Name_OR_LawNo,1);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 1)
    {
        HEADER("/MAT/DPRAG1/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/LAW10/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    } 
    COMMENT("#                  E                  Nu");
    CARD("%20lg%20lg",MAT_E,MAT_NU);   
    COMMENT("#                 A0                  A1                  A2                Amax");
    CARD("%20lg%20lg%20lg%20lg",MAT_A0,MAT_A1,MAT_A2,MAT_AMAX);      
    ASSIGN(Line_count,_GET_NB_FREE_CARDS(),IMPORT);
    if(Line_count == 3 && IO_FLAG == 1)
    {
        COMMENT("#                 C0                  C1                  C2                  C3");
        CARD("%20lg%20lg%20lg%20lg",EOS_COM_C0,EOS_COM_C1,EOS_COM_C2,EOS_COM_C3);      
        COMMENT("#              P_min               P_ext");
        CARD("%20lg%20lg",MAT_PC,PEXT);       
        COMMENT("#                  B              Mu_max");
        CARD("%20lg%20lg",EOS_COM_B,EOS_COM_Mue_max);
        ASSIGN(EOS_Options,14,IMPORT);
    }
    else
    {
        COMMENT("#              P_min");
        CARD("%20lg",MAT_PC);
    }
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(ALE_Form == 2)
    {
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
    }
}
FORMAT(radioss51) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%6s",LAW_NO);
        if(LAW_NO == "DPRAG1" )
        {
            ASSIGN(Mat_Name_OR_LawNo,1);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 1)
    {
        HEADER("/MAT/DPRAG1/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/LAW10/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                  E                  Nu");
    CARD("%20lg%20lg",MAT_E,MAT_NU);   
    COMMENT("#                 A0                  A1                  A2                Amax");
    CARD("%20lg%20lg%20lg%20lg",MAT_A0,MAT_A1,MAT_A2,MAT_AMAX);      
    ASSIGN(Line_count,_GET_NB_FREE_CARDS(),IMPORT);
    if(Line_count == 3 && IO_FLAG == 1)
    {
        COMMENT("#                 C0                  C1                  C2                  C3");
        CARD("%20lg%20lg%20lg%20lg",EOS_COM_C0,EOS_COM_C1,EOS_COM_C2,EOS_COM_C3);      
        COMMENT("#              P_min");
        CARD("%20lg",MAT_PC);       
        COMMENT("#                  B              Mu_max");
        CARD("%20lg%20lg",EOS_COM_B,EOS_COM_Mue_max);
        ASSIGN(EOS_Options,14,IMPORT);
    }
    else
    {
        COMMENT("#              P_min");
        CARD("%20lg",MAT_PC);
    }
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(ALE_Form == 2)
    {
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
    }
}
FORMAT(radioss41) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    } 
    COMMENT("#          RHO_I");
    CARD("%16lg",MAT_RHO);
    COMMENT("#                  E                  Nu");
    CARD("%16lg%16lg",MAT_E,MAT_NU);   
    COMMENT("#                 A0                  A1                  A2                Amax");
    CARD("%16lg%16lg%16lg%16lg",MAT_A0,MAT_A1,MAT_A2,MAT_AMAX);      
    COMMENT("#                 C0                  C1                  C2                  C3");
    CARD("%16lg%16lg%16lg%16lg",EOS_COM_C0,EOS_COM_C1,EOS_COM_C2,EOS_COM_C3);      
    COMMENT("#              P_min");
    CARD("%16lg",MAT_PC);       
    COMMENT("#                  B              Mu_max");
    CARD("%16lg%16lg",EOS_COM_B,EOS_COM_Mue_max);     
	ASSIGN(EOS_Options,14,IMPORT);
}
