//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material law 14  Setup File
ATTRIBUTES(COMMON) {
    // Support
    // NB_PARTS                 = SIZE("Number of Connected Parts"); 
    //COMPONENT                 = ARRAY[NB_PARTS](COMPONENT,"Connected Parts");
    KEYWORD_STR                 = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                = SIZE("NUM_COMMENTS");
    CommentEnumField            = VALUE(INT,"User Comments");
    COMMENTS                    = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    // Initial and reference densities
    MAT_RHO                     = VALUE(FLOAT,"Initial Density");
    Refer_Rho                   = VALUE(FLOAT,"Reference Density (for lower than 14.0 version)");
    DUMMY                       = VALUE(STRING,"Dummy variable for Ref_Rho flag");
    MAT_REFRHO_Option           = VALUE(INT, "RefRho_Option");
    //Other values
    MAT_EA                      = VALUE(FLOAT,"Young's Modulus Dir. 1");
    MAT_EB                      = VALUE(FLOAT,"Young's Modulus Dir. 2");
    MAT_EC                      = VALUE(FLOAT,"Young's Modulus Dir. 3");
    MAT_PRAB                    = VALUE(FLOAT,"Poisson's Ratio 12");
    MAT_PRBC                    = VALUE(FLOAT,"Poisson's Ratio 23");
    MAT_PRCA                    = VALUE(FLOAT,"Poisson's Ratio 31");
    MAT_GAB                     = VALUE(FLOAT,"Shear Modulus 12");
    MAT_GBC                     = VALUE(FLOAT,"Shear Modulus 23");
    MAT_GCA                     = VALUE(FLOAT,"Shear Modulus 31");
    MAT_SIGT1                   = VALUE(FLOAT,"Composite Tensile Strength Dir. 1");
    MAT_SIGT3                   = VALUE(FLOAT,"Composite Tensile Strength Dir. 3");
    MAT_SIGT2                   = VALUE(FLOAT,"Composite Tensile Strength Dir. 2");
    MAT_DAMAGE                  = VALUE(FLOAT,"Composite Tensile Damage Parameter");
    MAT_BETA                    = VALUE(FLOAT,"Composite Plasticity Hardening Parameter");
    MAT_HARD                    = VALUE(FLOAT,"Composite Plasticity Hardening Exponent");
    MAT_SIG                     = VALUE(FLOAT,"Composite Plasticity Hardening Law Maximum Value of Yield Funct");
    WPREF                       = VALUE(FLOAT,"Reference Plastic Work per unit solid volume");
    MAT_SIGYT1                  = VALUE(FLOAT,"Composite yield Stress in Traction in Dir. 1");
    MAT_SIGYT2                  = VALUE(FLOAT,"Composite yield Stress in Traction in Dir. 2 & 3");
    MAT_SIGYC1                  = VALUE(FLOAT,"Composite yield Stress in Compression in Dir. 1");
    MAT_SIGYC2                  = VALUE(FLOAT,"Composite yield Stress in Compression in Dir. 2 & 3");
    MAT_SIGT12                  = VALUE(FLOAT,"Composite yield Stress in Shear Traction in Dir. 12");
    MAT_SIGT23                  = VALUE(FLOAT,"Composite yield Stress in Shear Traction in Dir. 23");
    MAT_SIGC12                  = VALUE(FLOAT,"Composite yield Stress in Shear Compression in Dir. 12");
    MAT_SIGC23                  = VALUE(FLOAT,"Composite yield Stress in Shear Compression in Dir. 23");
    MAT_ALPHA                   = VALUE(FLOAT,"Fiber Volume Fraction");
    MAT_EFIB                    = VALUE(FLOAT,"Fiber Young's Modulus");
    MAT_SRC                     = VALUE(FLOAT,"Strain Rate Coefficient"); 
    MAT_SRP                     = VALUE(FLOAT,"Reference Strain Rate");
    STRFLAG                     = VALUE(INT,  "Strain Rate Computation Flag");
    // HEAT
    Heat_Inp_opt                = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT             = VALUE(SUBOBJECT, "");
    // THERM_STRESS
    THERM_STRESS                = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS         = VALUE(SUBOBJECT, "");
    IO_FLAG                     = VALUE(INT, "");
    LAW_NO                      = VALUE(STRING, "");
    Mat_Name_OR_LawNo           = VALUE(INT, "");
    TITLE                       = VALUE(STRING,"");
}

DRAWABLES(COMMON) {
private:
    MAT_EA                  = SCALAR(MAT_EA);     
    MAT_EB                  = SCALAR(MAT_EB);     
    MAT_EC                  = SCALAR(MAT_EC);
    MAT_PRAB                = SCALAR(MAT_PRAB);    
    MAT_PRBC                = SCALAR(MAT_PRBC);    
    MAT_PRCA                = SCALAR(MAT_PRCA);
    C11                     = EVAL(1./MAT_EA);    
    C22                     = EVAL(1./MAT_EB);    
    C33                     = EVAL(1./MAT_EC);
    C12                     = EVAL(-MAT_PRAB/MAT_EA); 
    C23                     = EVAL(-MAT_PRBC/MAT_EB); 
    C13                     = EVAL(-MAT_PRCA/MAT_EC);
    MAT_DAMAGE              = EVAL(C11*C22*C33-C11*C23*C23-C12*C12*C33+C12*C13*C23+C13*C12*C23-C13*C22*C13);
    D11                     = EVAL((C22*C33-C23*C23)/MAT_DAMAGE);
    D22                     = EVAL((C11*C33-C13*C13)/MAT_DAMAGE);
    D33                     = EVAL((C11*C22-C12*C12)/MAT_DAMAGE);
    C1                      = MAX(D11,D22,D33);
public:
    INITIAL_DENSITY         = SCALAR(MAT_RHO);
    SOUND_SPEED_SOLID       = EVAL((C1/INITIAL_DENSITY)^0.5);
    //Sound speed for Shell
    YOUNG_MODULUS           = MAX(MAT_EA,MAT_EB,MAT_EC);
    SOUND_SPEED             = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR             = 9000;
    COMMENTS                = 5109;
    CommentEnumField        = 7951;
    MAT_REFRHO_Option       = 4285;
    MAT_RHO                 = 118;
    Refer_Rho               = 4229;
    MAT_ALPHA               = 349;
    MAT_BETA                = 148;
    MAT_DAMAGE              = 5045;
    MAT_EA                  = 126;
    MAT_EB                  = 127;
    MAT_EC                  = 128;
    MAT_EFIB                = 363;
    MAT_GAB                 = 132;
    MAT_GBC                 = 133;
    MAT_GCA                 = 134;
    MAT_HARD                = 71;
    MAT_PRAB                = 129;
    MAT_PRBC                = 130;
    MAT_PRCA                = 131;
    MAT_SIG                 = 5038;
    WPREF                   = 4041;
    MAT_SIGC12              = 5047;
    MAT_SIGC23              = 5048;
    MAT_SIGT1               = 5042;
    MAT_SIGT12              = 345;
    MAT_SIGT2               = 5043;
    MAT_SIGT23              = 5046;
    MAT_SIGT3               = 5044;
    MAT_SIGYC1              = 1126;
    MAT_SIGYC2              = 348;
    MAT_SIGYT1              = 346;
    MAT_SIGYT2              = 347;
    MAT_SRC                 = 155;
    MAT_SRP                 = 156;
    STRFLAG                 = 5039;
    NUM_COMMENTS            = 5110;
    Mat_Name_OR_LawNo       = 4538;
    LAW_NO                  = -1;
    IO_FLAG                 = -1;
    TITLE                   = -1;
    DUMMY                   = -1;
    //HEAT
    Heat_Inp_opt            = 4346;
    SUBGRP_HEAT_MAT         = -1;
    // THERM_STRESS
    THERM_STRESS            = 4555;
    SUBGRP_THERM_STRESS     = -1;
    //
}

CHECK(COMMON)
{
    MAT_EA                  >0.0;
    MAT_EB                  >0.0;
    MAT_EC                  >0.0;
    MAT_GAB                 >0.0;
    MAT_GBC                 >0.0;
    MAT_GCA                 >0.0;
    MAT_HARD                >=0.0;
    MAT_HARD                <=1.0;
    MAT_RHO                 >0.0;
    MAT_RHO                 >0.0;
    MAT_SIGC12              >0.0;
    MAT_SIGC23              >0.0;
    MAT_SIGT12              >0.0;
    MAT_SIGT23              >0.0;
    MAT_SIGYC1              >0.0;
    MAT_SIGYC2              >0.0;
    MAT_SIGYT1              >0.0;
    MAT_SIGYT2              >0.0;
    MAT_SRC                 >=0.0;
    MAT_SRP                 >=0.0;
}

DEFAULTS(COMMON)
{
    MAT_DAMAGE              = 0.05;
    MAT_HARD                = 1.0;
    MAT_SIG                 = 1.0e10;
    MAT_SIGT1               = 1.0e30;
    STRFLAG                 = 1;
    WPREF               = 1.0;
}

GUI(COMMON) {
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Mat_Name_OR_LawNo ==2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW14/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/COMPSO/");
    }  
    FLAG(MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)      { DIMENSION="density";       }
    }
mandatory:
    SCALAR(MAT_RHO)         { DIMENSION="density";            }
mandatory:
    SCALAR(MAT_EA)          { DIMENSION="pressure";      }
    SCALAR(MAT_EB)          { DIMENSION="pressure";      }
    SCALAR(MAT_EC)          { DIMENSION="pressure";      }
    SCALAR(MAT_PRAB)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_PRBC)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_PRCA)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_GAB)         { DIMENSION="pressure";      }
    SCALAR(MAT_GBC)         { DIMENSION="pressure";      }
    SCALAR(MAT_GCA)         { DIMENSION="pressure";      }
optional:
    SCALAR(MAT_SIGT1)       { DIMENSION="force";         }
    SCALAR(MAT_SIGT2)       { DIMENSION="force";         }
    SCALAR(MAT_SIGT3)       { DIMENSION="force";         }
    SCALAR(MAT_DAMAGE)      { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_BETA)        { DIMENSION="DIMENSIONLESS"; } // Depending on MAT_HARD
    SCALAR(MAT_HARD)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_SIG)         { DIMENSION="force";         }
    SCALAR(WPREF)             { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_SIGYT1)      { DIMENSION="pressure";      }
    SCALAR(MAT_SIGYT2)      { DIMENSION="pressure";      }
    SCALAR(MAT_SIGYC1)      { DIMENSION="pressure";      }
    SCALAR(MAT_SIGYC2)      { DIMENSION="pressure";      }
    SCALAR(MAT_SIGT12)      { DIMENSION="pressure";      }
    SCALAR(MAT_SIGT23)      { DIMENSION="pressure";      }
    SCALAR(MAT_SIGC12)      { DIMENSION="pressure";      }
    SCALAR(MAT_SIGC23)      { DIMENSION="pressure";      }
    SCALAR(MAT_ALPHA)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_EFIB)        { DIMENSION="pressure";      }
    SCALAR(MAT_SRC)         { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_SRP)         { DIMENSION="f";     }
optional:
    RADIO(STRFLAG,"Strain rate computation") {
        ADD(0,"0: Default, Set to 1");
        ADD(1,"1: Strain Rate Effect on Fmax");
        ADD(2,"2: No Strain Rate Effect on Fmax");
    }
    // HEAT data
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }
    // THERM_STRESS
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    } 
    /*
    mandatory:
    graphical SUPPORT("Support") {
    OBJECTS=(/PART/QUAD,/PART/BRICK);
    ADD(PART,"Parts");
    }
    */
}
// File format
FORMAT(radioss2020) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW14/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/COMPSO/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                E11                 E22                 E33");
    CARD("%20lg%20lg%20lg",MAT_EA,MAT_EB,MAT_EC);
    COMMENT("#               NU12                NU23                NU31");
    CARD("%20lg%20lg%20lg",MAT_PRAB,MAT_PRBC,MAT_PRCA);
    COMMENT("#                G12                 G23                 G31");
    CARD("%20lg%20lg%20lg",MAT_GAB,MAT_GBC,MAT_GCA);
    COMMENT("#           SIGMA_T1            SIGMA_T2            SIGMA_T3               DELTA");
    CARD("%20lg%20lg%20lg%20lg",MAT_SIGT1,MAT_SIGT2,MAT_SIGT3,MAT_DAMAGE);
    COMMENT("#                  B                   n                fmax               Wpref");
    CARD("%20lg%20lg%20lg%20lg",MAT_BETA,MAT_HARD,MAT_SIG,WPREF);
    COMMENT("#          sigma_1yt           sigma_2yt           sigma_1yc           sigma_2yc");
    CARD("%20lg%20lg%20lg%20lg",MAT_SIGYT1,MAT_SIGYT2,MAT_SIGYC1,MAT_SIGYC2);
    COMMENT("#         sigma_12yt          sigma_12yc          sigma_23yt          sigma_23yc");
    CARD("%20lg%20lg%20lg%20lg",MAT_SIGT12,MAT_SIGC12,MAT_SIGT23,MAT_SIGC23);  
    COMMENT("#              ALPHA                 E_f                   c          EPS_RATE_0       ICC");
    CARD("%20lg%20lg%20lg%20lg%10d",MAT_ALPHA,MAT_EFIB,MAT_SRC,MAT_SRP,STRFLAG);  
    // HEAT data
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    // THERM_STRESS 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
FORMAT(radioss90) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW14/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/COMPSO/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                E11                 E22                 E33");
    CARD("%20lg%20lg%20lg",MAT_EA,MAT_EB,MAT_EC);
    COMMENT("#               NU12                NU23                NU31");
    CARD("%20lg%20lg%20lg",MAT_PRAB,MAT_PRBC,MAT_PRCA);
    COMMENT("#                G12                 G23                 G31");
    CARD("%20lg%20lg%20lg",MAT_GAB,MAT_GBC,MAT_GCA);
    COMMENT("#           SIGMA_T1            SIGMA_T2            SIGMA_T3               DELTA");
    CARD("%20lg%20lg%20lg%20lg",MAT_SIGT1,MAT_SIGT2,MAT_SIGT3,MAT_DAMAGE);
    COMMENT("#                  B                   n                fmax");
    CARD("%20lg%20lg%20lg",MAT_BETA,MAT_HARD,MAT_SIG);
    COMMENT("#          sigma_1yt           sigma_2yt           sigma_1yc           sigma_2yc");
    CARD("%20lg%20lg%20lg%20lg",MAT_SIGYT1,MAT_SIGYT2,MAT_SIGYC1,MAT_SIGYC2);
    COMMENT("#         sigma_12yt          sigma_12yc          sigma_23yt          sigma_23yc");
    CARD("%20lg%20lg%20lg%20lg",MAT_SIGT12,MAT_SIGC12,MAT_SIGT23,MAT_SIGC23);  
    COMMENT("#              ALPHA                 E_f                   c          EPS_RATE_0       ICC");
    CARD("%20lg%20lg%20lg%20lg%10d",MAT_ALPHA,MAT_EFIB,MAT_SRC,MAT_SRP,STRFLAG);  
    // HEAT data
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    // THERM_STRESS 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
FORMAT(radioss51) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW14/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/COMPSO/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#        Init. dens.          Ref. dens.");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else
    {
        COMMENT("#        Init. dens.");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                E11                 E22                 E33");
    CARD("%20lg%20lg%20lg",MAT_EA,MAT_EB,MAT_EC);
    COMMENT("#               NU12                NU23                NU31");
    CARD("%20lg%20lg%20lg",MAT_PRAB,MAT_PRBC,MAT_PRCA);
    COMMENT("#                G12                 G23                 G31");
    CARD("%20lg%20lg%20lg",MAT_GAB,MAT_GBC,MAT_GCA);
    COMMENT("#           SIGMA_T1            SIGMA_T2            SIGMA_T3               DELTA");
    CARD("%20lg%20lg%20lg%20lg",MAT_SIGT1,MAT_SIGT2,MAT_SIGT3,MAT_DAMAGE);
    COMMENT("#                  B                   N               F_MAX");
    CARD("%20lg%20lg%20lg",MAT_BETA,MAT_HARD,MAT_SIG);
    COMMENT("#          SIGMA_1YT           SIGMA_2YT           SIGMA_1YC           SIGMA_2YC");
    CARD("%20lg%20lg%20lg%20lg",MAT_SIGYT1,MAT_SIGYT2,MAT_SIGYC1,MAT_SIGYC2);
    COMMENT("#         SIGMA_12YT          SIGMA_23YT          SIGMA_12YC          SIGMA_23YC");
    CARD("%20lg%20lg%20lg%20lg",MAT_SIGT12,MAT_SIGT23,MAT_SIGC12,MAT_SIGC23);  
    COMMENT("#              ALPHA                 E_F                   C          EPS_RATE_0       ICC");
    CARD("%20lg%20lg%20lg%20lg%10d",MAT_ALPHA,MAT_EFIB,MAT_SRC,MAT_SRP,STRFLAG);  
    // HEAT data
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    // THERM_STRESS 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
FORMAT(radioss41) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    
    COMMENT("#    Init. dens.");
    CARD("%16lg",MAT_RHO);
    COMMENT("#            E11             E22             E33");
    CARD("%16lg%16lg%16lg",MAT_EA,MAT_EB,MAT_EC);
    COMMENT("#           NU12            NU23            NU31");
    CARD("%16lg%16lg%16lg",MAT_PRAB,MAT_PRBC,MAT_PRCA);
    COMMENT("#            G12             G23             G31");
    CARD("%16lg%16lg%16lg",MAT_GAB,MAT_GBC,MAT_GCA);
    COMMENT("#       SIGMA_T1        SIGMA_T2        SIGMA_T3           DELTA");
    CARD("%16lg%16lg%16lg%16lg",MAT_SIGT1,MAT_SIGT2,MAT_SIGT3,MAT_DAMAGE);
    COMMENT("#              B               N           F_MAX");
    CARD("%16lg%16lg%16lg",MAT_BETA,MAT_HARD,MAT_SIG);
    COMMENT("#      SIGMA_1YT       SIGMA_2YT       SIGMA_1YC       SIGMA_2YC");
    CARD("%16lg%16lg%16lg%16lg",MAT_SIGYT1,MAT_SIGYT2,MAT_SIGYC1,MAT_SIGYC2);
    COMMENT("#     SIGMA_12YT      SIGMA_23YT      SIGMA_12YC      SIGMA_23YC");
    CARD("%16lg%16lg%16lg%16lg",MAT_SIGT12,MAT_SIGT23,MAT_SIGC12,MAT_SIGC23);  
    COMMENT("#          ALPHA             E_F               C      EPS_RATE_0     ICC");
    CARD("%16lg%16lg%16lg%16lg%8d",MAT_ALPHA,MAT_EFIB,MAT_SRC,MAT_SRP,STRFLAG);  
}