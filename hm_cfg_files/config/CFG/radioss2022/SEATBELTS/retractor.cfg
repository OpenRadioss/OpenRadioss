//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Slipring Setup File
// 

ATTRIBUTES {
  // Single values
  EL_ID          = VALUE(ELEMS, "First connected element");
  Node_ID        = VALUE(NODE, "Anchorage node");
  Elem_size      = VALUE(FLOAT, "Element size");
  Force          = VALUE(FLOAT, "Force/scaling factor");
  Fct_ID1        = VALUE(FUNCT, "Loading function");
  Fct_ID2        = VALUE(FUNCT, "Unloading function");
  Fct_ID3        = VALUE(FUNCT, "Pretensioner pullin function");
  Sens_ID1       = VALUE(SENSOR, "Sensor id1");
  Sens_ID2       = VALUE(SENSOR, "Sensor id2");
  Tens_typ       = VALUE(INT, "Type of pretensioner");
  Pullout        = VALUE(FLOAT, "Pullout");
  Xscale1        = VALUE(FLOAT, "Loading function abcissa scale factor");
  Yscale1        = VALUE(FLOAT, "Loading function ordinate scale factor");
  Xscale2        = VALUE(FLOAT, "Pretensioner pullin function abcissa scale factor");
  Yscale2        = VALUE(FLOAT, "Pretensioner pullin function ordinatescale factor");
  displayname    = VALUE(STRING, "Title");
}

DEFAULTS {
}

GUI(COMMON)
{
// Solver attributes 
    mandatory:
        SCALAR(Elem_size) { DIMENSION="l"; }
        SCALAR(Force) { DIMENSION="force"; }
        SCALAR(Xscale1) { DIMENSION="l"; }
        SCALAR(Yscale1) { DIMENSION="force"; }
        SCALAR(Pullout) { DIMENSION="l"; }
}


FORMAT(radioss2022) {
  HEADER("/RETRACTOR/SPRING/%d",_ID_);
  CARD("%-100s", displayname);
  
  COMMENT("#    EL_ID   Node_ID           Elem_size");
  CARD("%10d%10d%20lg",EL_ID,Node_ID,Elem_size);
  COMMENT("# Sens_ID1             Pullout   Fct_ID1   Fct_ID2             Yscale1             Xscale1");
  CARD("%10d%20lg%10d%10d%20lg%20lg",Sens_ID1,Pullout,Fct_ID1,Fct_ID2,Yscale1,Xscale1);
  COMMENT("# Sens_ID2  Tens_typ               Force   Fct_ID3             Yscale2             Xscale2");
  CARD("%10d%10d%20lg%10d%20lg%20lg",Sens_ID2,Tens_typ,Force,Fct_ID3,Yscale2,Xscale2);
}
