//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Property STACK Type17
ATTRIBUTES(COMMON)
{
    Ishell                                  = VALUE(INT,  " Shell Element Formulation Flag");
    Ismstr                                  = VALUE(INT,  " Shell Small Strain Formulation Flag");
    ISH3N                                   = VALUE(INT,  " 3 Node Shell Element Formulation Flag");
    Idrill                                  = VALUE(INT,  " Drilling Degree of Freedom Stiffness Flag");
    plyxfem                                 = VALUE(INT,  "Activates plyxfem formulation");
    Z0                                      = VALUE(FLOAT, " Distance from the Shell Element Reference Plane to the Bottom Surface of the Shell");
    Vinterply                               = VALUE(FLOAT, "Viscosity for the interply material");
    Hm                                      = VALUE(FLOAT,  " Shell Membrane Hourglass Coefficient");
    Hf                                      = VALUE(FLOAT,  " Shell Out-of-Plane Hourglass");
    Hr                                      = VALUE(FLOAT,  " Shell Rotation Hourglass Coefficient");
    Dm                                      = VALUE(FLOAT,  " Shell Membrane Damping");
    Dn                                      = VALUE(FLOAT,  " Shell Numerical Damping");
    N                                       = VALUE(INT, " Number of Layers");
    ISTRAIN                                 = VALUE(INT,  " Compute Strains for Post-Processing Flag");
    THICK                                   = VALUE(FLOAT,  " Shell Thickness");
    AREA_SHEAR                              = VALUE(FLOAT,  " Shear Factor");
    ITHICK                                  = VALUE(INT,  " Shell Resultant Stresses Calculation Flag");
    IPLAS                                   = VALUE(INT,  " Shell Plane Stress Plasticity Flag");
    V_X                                     = VALUE(FLOAT,  " X Component for Reference Vector");
    V_Y                                     = VALUE(FLOAT,  " Y Component for Reference Vector");
    V_Z                                     = VALUE(FLOAT,  " Z Component for Reference Vector");
    SKEW_CSID                               = VALUE(SYSTEM,  " Skew Identifier for Reference Vector");
    Iorth                                   = VALUE(INT,  " Orthotropic System Formulation Flag for Reference Vector");
    Ipos                                    = VALUE(INT,  " Layer Positioning Flag for Reference Vector");
    Iduct_xfem                              = VALUE(INT, " Activates Plyxfem Formulation");
    REFPLANE                                = VALUE(INT,  " Reference Direction in Shell plane","Ip");
       
    //Attributes for HM usage 
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING,  "Entity_Comments");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    laminate                                = VALUE(LAMINATE,"");
    NODE1                                   = VALUE(NODE,  " Vector Base Node");
    NODE2                                   = VALUE(NODE,  " Vector End Node");
    n1                                      = VALUE(FLOAT, "");
    n2                                      = VALUE(FLOAT, "");
    Prop_Name_OR_Type                       = VALUE(INT, "");
    IO_FLAG                                 = VALUE(INT, "");
    TYPE_NO                                 = VALUE(STRING, "");
    TITLE                                   = VALUE(STRING, "");
    Line_count                              = VALUE(INT,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    NUM_COMMENTS                            = 5110;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    Ishell                                  = 8028;
    Ismstr                                  = 5152;
    ISH3N                                   = 4001;
    Hm                                      = 8024;
    Hr                                      = 8026;
    Hf                                      = 8025;
    Dm                                      = 8027;
    Dn                                      = 4135;
    IPLAS                                   = 2089;
    N                                       =   -1;
    ISTRAIN                                 = 2177;
    THICK                                   =  431;
    AREA_SHEAR                              =  402;
    ITHICK                                  = 2092;
    Idrill                                  = 4827;
    plyxfem                                 = 3490;
    Iorth                                   = 5364;
    Ipos                                    = 5365;
    SKEW_CSID                               =  412;
    NODE1                                   = 5115;
    NODE2                                   = 4481;
    V_X                                     =  139;
    V_Y                                     =  140;
    V_Z                                     =  141;
    Iduct_xfem                              = 4652;
    Z0                                      = 4186;
    Vinterply                               = -1;
    n1                                      =   -1;
    n2                                      =   -1;
    Prop_Name_OR_Type                       = 4537;
    REFPLANE                                = 5170;
    TITLE                                   =   -1;
    TYPE_NO                                 =   -1;
    IO_FLAG                                 =   -1;
    Line_count                              =   -1;
}

CHECK(COMMON)
{
    Hf                                      >=  0.0;
    Hf                                      <= 0.05;
    Hm                                      >=  0.0;
    Hm                                      <= 0.05;
    Hr                                      >=  0.0;
    Hr                                      <= 0.05;
    Vinterply                               < 0.1;
}

DEFAULTS(COMMON)
{
    AREA_SHEAR                              = 0.833333;
    Hf                                      =     0.01;
    Hm                                      =     0.01;
    Hr                                      =     0.01;
    V_X                                     =      1.0;
    V_Y                                     =      0.0;
    V_Z                                     =      0.0;
    Z0                                      =      0.0;
    Iorth                                   =        0;
    Ipos                                    =        0;
    Vinterply                               =      0.0;
    REFPLANE                                      =        0;
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
       ENUM_VALUE_FLAG=TRUE;
       ADD(1, "1:Hide in Menu/Export");
       ADD(2, "2:Show in Menu/Export");
       ADD(3, "3:Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Prop_Name_OR_Type == 2)
    {
        ASSIGN(KEYWORD_STR, "/PROP");
        ASSIGN(KEYWORD_STR, "/TYPE17/");

    }
    else
    {
        ASSIGN(KEYWORD_STR, "/PROP");
        ASSIGN(KEYWORD_STR, "/STACK/");
    }
    RADIO(Ishell)
    {
        ADD(0, "0:Use Value in /DEF_SHELL.");
        ADD(1, "1:Q4, Visco-Elastic Hourglass Modes Orthogonal to Deformation and Rigid Modes (Belytschko).");
        ADD(2, "2:Q4, Visco-Elastic Hourglass without Orthogonality (Hallquist).");
        ADD(3, "3:Q4, Elasto-Plastic Hourglass with Orthogonality.");
        ADD(4, "4:Q4 with Improved Type 1 Formulation (Orthogonalization for Warped Elements).");
        ADD(12, "12:QBAT or DKT18 Shell Formulation.");
        ADD(24, "24:QEPH Shell Formulation.");
    }
    RADIO(Ismstr)
    {
        ADD(0, "0:Use Value in /DEF_SHELL.");
        ADD(1, "1:Small Strain from Time=0.");
        ADD(2, "2:Full Geometric Nonlinearities with Possible Small Strain Formulation Activation in RADIOSS Engine.");
        ADD(3, "3:Old Small Strain Formulation.");
        ADD(4, "4:Full Geometric Nonlinearities.");
    }
    RADIO(ISH3N)
    {
        ADD(0, "0:Use Value in /DEF_SHELL.");
        ADD(1, "1:Standard Triangle (C0).");
        ADD(2, "2:Standard Triangle (C0) with Modification for Large Rotation.");
        ADD(30, "30:DKT18.");
        ADD(31, "31:DKT_S3.");
    }
    RADIO(Idrill)
    {
        ADD(0, "0:No.");
        ADD(1, "1:Yes.");
    }
    RADIO(plyxfem)
    {
        ADD(0, "0:No.");
        ADD(2, "2:Yes.");
    }
    SCALAR(Z0) { DIMENSION="l"; }
    SCALAR(Vinterply) { DIMENSION="DIMENSIONLESS"; }
    SCALAR(Hm);
    SCALAR(Hf);
    SCALAR(Hr);
    SCALAR(Dm);
    if(Ishell==12 || Ishell ==24)
    {
        SCALAR(Dn);
    }
    RADIO(ISTRAIN)
    {
        ADD(0, "0:Default Set to Value Defined with /DEF_SHELL.");
        ADD(1, "1:Yes.");
        ADD(2, "2:No.");
    }
    SCALAR(THICK)    {DIMENSION="l";}
    SCALAR(AREA_SHEAR);
    RADIO(ITHICK)
    {
        ADD(0, "0:Default Set to Value Defined with /DEF_SHELL.");
        ADD(1, "1:Thickness Change is Taken into Account.");
        ADD(2, "2:Thickness is Constant.");
    }
    RADIO(IPLAS)
    {
        ADD(0, "0:Default Set to Value Defined with /DEF_SHELL.");
        ADD(1, "1:Iterative Projection with Three Newton Iterations.");
        ADD(2, "2:Radial Return.");
    }
    SCALAR(V_X);
    SCALAR(V_Y);
    SCALAR(V_Z);
    DATA(SKEW_CSID) {/FILTER/Framefix/0/EQ;}
    RADIO(REFPLANE)
    {
       ADD(0, "0:Use first direction of skew_ID or vector V (if skew_ID is not defined) projected on the shell element.");
       ADD(20, "20:Defined from element connectivity (N1,N2) of the shell element.");
       ADD(22, "22:Defined from 1st direction of skew_ID projected on the shell element and angle phi. (Vector V is ignored).");
       ADD(23, "23:Defined from reference vector V projected on the shell element and angle phi (skew_ID is ignored).");
    }
    RADIO(Iorth)
    {
        ADD(0, "0:The First Axis of Orthotropy is Maintained at Constant Angle w.r.t. the X-axis of an Orthonormal Co-Rotational Element Coordinate System.");
        ADD(1, "1:The First Orthotropy Direction is Constant w.r.t. a Non-Orthonormal System of Deformed Element.");
    }
    RADIO(Ipos)
    {
        ADD(0, "0:Layer Positions are Automatically Calculated with Regard to Layer Thickness.");
        ADD(1, "1:All Layer Positions in the Element Thickness are User Defined.");
        ADD(2, "2:The Shell Element Reference Plane is at Z0 from the Bottom Surface of the Shell.");
        ADD(3, "3:The Top Surface of the Shell is Considered as Element Reference Plane.");
        ADD(4, "4:The Bottom Surface of the Shell is Considered as Element Reference Plane.");
    }
    DATA(laminate);
}

FORMAT(radioss2022) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE17/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/STACK/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    COMMENT("#   Ishell    Ismstr     Ish3n    Idrill   plyxfem                            Z0           Vinterply");
    CARD("%10d%10d%10d%10d%10d          %20lg%20lg",Ishell,Ismstr,ISH3N,Idrill,plyxfem,Z0,Vinterply);
    if(Ishell==12 || Ishell==24)
    {
        COMMENT("#                 Hm                  Hf                  Hr                  Dm                  Dn");
        CARD("%20lg%20lg%20lg%20lg%20lg",Hm,Hf,Hr,Dm,Dn);
    }
    else
    {
        COMMENT("#                 Hm                  Hf                  Hr                  Dm");
        CARD("%20lg%20lg%20lg%20lg",Hm,Hf,Hr,Dm);
    }
    COMMENT("#                                  Thick              Ashear              Ithick     Iplas");
    CARD("                    %20lg%20lg          %10d%10d",THICK,AREA_SHEAR,ITHICK,IPLAS);
    COMMENT("#                 Vx                  Vy                  Vz   skew_ID     Iorth      Ipos        Ip");
    CARD("%20lg%20lg%20lg%10d%10d%10d%10d",V_X,V_Y,V_Z,SKEW_CSID,Iorth,Ipos,REFPLANE);
    ASSIGN(Line_count,_GET_NB_FREE_CARDS(),IMPORT);
    ASSIGN(Line_count,1,EXPORT);
    if(Line_count > 0)
    {
        SUBOBJECTS(laminate,/LAMINATE/LAMINATE);
    }
}
FORMAT(radioss2021) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE17/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/STACK/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    COMMENT("#   Ishell    Ismstr     Ish3n    Idrill   plyxfem                            Z0           Vinterply");
    CARD("%10d%10d%10d%10d%10d          %20lg%20lg",Ishell,Ismstr,ISH3N,Idrill,plyxfem,Z0,Vinterply);
    if(Ishell==12 || Ishell==24)
    {
        COMMENT("#                 Hm                  Hf                  Hr                  Dm                  Dn");
        CARD("%20lg%20lg%20lg%20lg%20lg",Hm,Hf,Hr,Dm,Dn);
    }
    else
    {
        COMMENT("#                 Hm                  Hf                  Hr                  Dm");
        CARD("%20lg%20lg%20lg%20lg",Hm,Hf,Hr,Dm);
    }
    COMMENT("#                                  Thick              Ashear              Ithick     Iplas");
    CARD("                    %20lg%20lg          %10d%10d",THICK,AREA_SHEAR,ITHICK,IPLAS);
    COMMENT("#                 Vx                  Vy                  Vz   skew_ID     Iorth      Ipos");
    CARD("%20lg%20lg%20lg%10d%10d%10d",V_X,V_Y,V_Z,SKEW_CSID,Iorth,Ipos);
    ASSIGN(Line_count,_GET_NB_FREE_CARDS(),IMPORT);
    ASSIGN(Line_count,1,EXPORT);
    if(Line_count > 0)
    {
        SUBOBJECTS(laminate,/LAMINATE/LAMINATE);
    }
}

// File format for Radioss 140
FORMAT(radioss140) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE17/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/STACK/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    COMMENT("#   Ishell    Ismstr     Ish3n    Idrill   plyxfem                            Z0");
    CARD("%10d%10d%10d%10d%10d          %20lg",Ishell,Ismstr,ISH3N,Idrill,plyxfem,Z0);
    if(Ishell==12 || Ishell==24)
    {
        COMMENT("#                 Hm                  Hf                  Hr                  Dm                  Dn");
        CARD("%20lg%20lg%20lg%20lg%20lg",Hm,Hf,Hr,Dm,Dn);
    }
    else
    {
        COMMENT("#                 Hm                  Hf                  Hr                  Dm");
        CARD("%20lg%20lg%20lg%20lg",Hm,Hf,Hr,Dm);
    }
    COMMENT("#            Istrain               Thick              Ashear              Ithick     Iplas");
    CARD("          %10d%20lg%20lg          %10d%10d",ISTRAIN,THICK,AREA_SHEAR,ITHICK,IPLAS);
    COMMENT("#                 Vx                  Vy                  Vz   skew_ID     Iorth      Ipos");
    CARD("%20lg%20lg%20lg%10d%10d%10d",V_X,V_Y,V_Z,SKEW_CSID,Iorth,Ipos);
    ASSIGN(Line_count,_GET_NB_FREE_CARDS(),IMPORT);
    ASSIGN(Line_count,1,EXPORT);
    if(Line_count > 0)
    {
        SUBOBJECTS(laminate,/LAMINATE/LAMINATE);
    }
}
// File format for Radioss 130
FORMAT(radioss130) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE17/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/STACK/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    COMMENT("#   Ishell    Ismstr     Ish3n    Idrill                                      Z0");
    CARD("%10d%10d%10d%10d                    %20lg",Ishell,Ismstr,ISH3N,Idrill,Z0);
    if(Ishell==12 || Ishell==24)
    {
        COMMENT("#                 Hm                  Hf                  Hr                  Dm                  Dn");
        CARD("%20lg%20lg%20lg%20lg%20lg",Hm,Hf,Hr,Dm,Dn);
    }
    else
    {
        COMMENT("#                 Hm                  Hf                  Hr                  Dm");
        CARD("%20lg%20lg%20lg%20lg",Hm,Hf,Hr,Dm);
    }
    COMMENT("#            Istrain               Thick              Ashear              Ithick     Iplas");
    CARD("          %10d%20lg%20lg          %10d%10d",ISTRAIN,THICK,AREA_SHEAR,ITHICK,IPLAS);
    COMMENT("#                 Vx                  Vy                  Vz   skew_ID     Iorth      Ipos");
    CARD("%20lg%20lg%20lg%10d%10d%10d",V_X,V_Y,V_Z,SKEW_CSID,Iorth,Ipos);
    ASSIGN(Line_count,_GET_NB_FREE_CARDS(),IMPORT);
    ASSIGN(Line_count,1,EXPORT);
    if(Line_count > 0)
    {
        SUBOBJECTS(laminate,/LAMINATE/LAMINATE);
    }
}

// File format for Radioss 110
FORMAT(radioss110) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE17/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/STACK/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    COMMENT("#   Ishell    Ismstr     Ish3n    Idrill");
    CARD("%10d%10d%10d%10d",Ishell,Ismstr,ISH3N,Idrill);
    if(Ishell==12 || Ishell==24)
    {
        COMMENT("#                 Hm                  Hf                  Hr                  Dm                  Dn");
        CARD("%20lg%20lg%20lg%20lg%20lg",Hm,Hf,Hr,Dm,Dn);
    }
    else
    {
        COMMENT("#                 Hm                  Hf                  Hr                  Dm");
        CARD("%20lg%20lg%20lg%20lg",Hm,Hf,Hr,Dm);
    }
    COMMENT("#        N   Istrain               Thick              Ashear              Ithick     Iplas");
    CARD("%10d%10d%20lg%20lg          %10d%10d",N,ISTRAIN,THICK,AREA_SHEAR,ITHICK,IPLAS);
    if(NODE1 != NONE && NODE2!= NONE)
    {
        ASSIGN(n1, [@getentityvalue(nodes,$NODE1,x)], EXPORT);
        ASSIGN(n2, [@getentityvalue(nodes,$NODE2,x)], EXPORT);
        ASSIGN(V_X, n2-n1, EXPORT);
        ASSIGN(n1, [@getentityvalue(nodes,$NODE1,y)], EXPORT);
        ASSIGN(n2, [@getentityvalue(nodes,$NODE2,y)], EXPORT);
        ASSIGN(V_Y, n2-n1, EXPORT);
        ASSIGN(n1, [@getentityvalue(nodes,$NODE1,z)], EXPORT);
        ASSIGN(n2, [@getentityvalue(nodes,$NODE2,z)], EXPORT);
        ASSIGN(V_Z, n2-n1, EXPORT);
    }
    COMMENT("#                 Vx                  Vy                  Vz   skew_ID     Iorth      Ipos");
    CARD("%20lg%20lg%20lg%10d%10d%10d",V_X,V_Y,V_Z,SKEW_CSID,Iorth,Ipos);
    ASSIGN(Line_count,_GET_NB_FREE_CARDS(),IMPORT);
    ASSIGN(Line_count,1,EXPORT);
    if(Line_count > 0)
    {
        SUBOBJECTS(laminate,/LAMINATE/LAMINATE);
    }
}

// File format for Radioss 100
FORMAT(radioss100) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE17/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/STACK/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    COMMENT("#   Ishell    Ismstr     Ish3n I_plyxfem");
    CARD("%10d%10d%10d%10d",Ishell,Ismstr,ISH3N,Iduct_xfem);
    if(Ishell==12 || Ishell==24)
    {
        COMMENT("#                 Hm                  Hf                  Hr                  Dm                  Dn");
        CARD("%20lg%20lg%20lg%20lg%20lg",Hm,Hf,Hr,Dm,Dn);
    }
    else
    {
        COMMENT("#                 Hm                  Hf                  Hr                  Dm");
        CARD("%20lg%20lg%20lg%20lg",Hm,Hf,Hr,Dm);
    }
    COMMENT("#        N   Istrain               Thick              Ashear              Ithick     Iplas");
    CARD("%10d%10d%20lg%20lg          %10d%10d",N,ISTRAIN,THICK,AREA_SHEAR,ITHICK,IPLAS);
    if(NODE1 != NONE && NODE2!= NONE)
    {
        ASSIGN(n1, [@getentityvalue(nodes,$NODE1,x)], EXPORT);
        ASSIGN(n2, [@getentityvalue(nodes,$NODE2,x)], EXPORT);
        ASSIGN(V_X, n2-n1, EXPORT);
        ASSIGN(n1, [@getentityvalue(nodes,$NODE1,y)], EXPORT);
        ASSIGN(n2, [@getentityvalue(nodes,$NODE2,y)], EXPORT);
        ASSIGN(V_Y, n2-n1, EXPORT);
        ASSIGN(n1, [@getentityvalue(nodes,$NODE1,z)], EXPORT);
        ASSIGN(n2, [@getentityvalue(nodes,$NODE2,z)], EXPORT);
        ASSIGN(V_Z, n2-n1, EXPORT);
    }
    COMMENT("#                 Vx                  Vy                  Vz   skew_ID     Iorth      Ipos");
    CARD("%20lg%20lg%20lg%10d%10d%10d",V_X,V_Y,V_Z,SKEW_CSID,Iorth,Ipos);               
    ASSIGN(Line_count,_GET_NB_FREE_CARDS(),IMPORT);
    ASSIGN(Line_count,1,EXPORT);
    if(Line_count > 0)
    {
        SUBOBJECTS(laminate,/LAMINATE/LAMINATE);
    }
}
