//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2022 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to 
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided 
//Copyright>    that any modification to CFG by a third party must be provided back to 
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software. 
//Copyright>  
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR 
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, 
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /SENSOR
//

ATTRIBUTES(COMMON)
{
    Sensor_Type                             = VALUE(INT,  "Sensor type keyword");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    TITLE                                   = VALUE(STRING, "Sensor title");
    _opt                                    = VALUE(STRING, "");
    _DummyKeyword                           = VALUE(INT, "");
    IO_FLAG                                 = VALUE(INT, "");
//
    SUBGRP_SENSOR_ACCE                      = VALUE(SUBOBJECT, "");
    SUBGRP_SENSOR_TIME                      = VALUE(SUBOBJECT, "");
    SUBGRP_SENSOR_GAUGE                     = VALUE(SUBOBJECT, "");
    SUBGRP_SENSOR_DIST                      = VALUE(SUBOBJECT, "");
    SUBGRP_SENSOR_SENS_AND_OR               = VALUE(SUBOBJECT, "");
    SUBGRP_SENSOR_NOT                       = VALUE(SUBOBJECT, "");
    SUBGRP_SENSOR_INTER                     = VALUE(SUBOBJECT, "");
    SUBGRP_SENSOR_RWALL                     = VALUE(SUBOBJECT, "");
    SUBGRP_SENSOR_RBODY                     = VALUE(SUBOBJECT, "");
    SUBGRP_SENSOR_XSECTION                  = VALUE(SUBOBJECT, "");
    SUBGRP_SENSOR_WORK                      = VALUE(SUBOBJECT, "");
    SUBGRP_SENSOR_ENERGY                    = VALUE(SUBOBJECT, "");
    SUBGRP_SENSOR_VEL                       = VALUE(SUBOBJECT, "");
    SUBGRP_SENSOR_HIC                       = VALUE(SUBOBJECT, "");
    SUBGRP_SENSOR_DIST_SURF                 = VALUE(SUBOBJECT, "");
    SUBGRP_SENSOR_TEMP                      = VALUE(SUBOBJECT, "");
    SUBGRP_SENSOR_NIC_NIJ                   = VALUE(SUBOBJECT, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    //HM INTERNAL 
    KEYWORD_STR                             = 9000;
    TITLE                                   = -1;
    _DummyKeyword                           = -1;
    _opt                                    = -1;
    IO_FLAG                                 = -1;
    SUBGRP_SENSOR_ACCE                      = -1;
    SUBGRP_SENSOR_TIME                      = -1;
    SUBGRP_SENSOR_GAUGE                     = -1;
    SUBGRP_SENSOR_DIST                      = -1;
    SUBGRP_SENSOR_SENS_AND_OR               = -1;
    SUBGRP_SENSOR_NOT                       = -1;
    SUBGRP_SENSOR_INTER                     = -1;
    SUBGRP_SENSOR_RWALL                     = -1;
    SUBGRP_SENSOR_RBODY                     = -1;
    SUBGRP_SENSOR_XSECTION                  = -1;
    SUBGRP_SENSOR_WORK                      = -1;
    SUBGRP_SENSOR_ENERGY                    = -1;
    SUBGRP_SENSOR_VEL                       = -1;
    SUBGRP_SENSOR_HIC                       = -1;
    SUBGRP_SENSOR_DIST_SURF                 = -1;
    SUBGRP_SENSOR_TEMP                      = -1;
    SUBGRP_SENSOR_NIC_NIJ                   = -1;
}


DEFAULTS(COMMON)
{
    Sensor_Type = 1;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/SENSOR/");
    RADIO(Sensor_Type)
    {
        ADD(1, "Start Time - Type 0");
        ADD(2, "Accelerometer - Type 1");
        ADD(3, "Nodal Distance - Type 2");
        ADD(4, "Active S1, Deact S2 - Type 3");
        ADD(5, "On as long as S1 AND S2 - Type 4");
        ADD(6, "On as long as S1 OR S2  - Type 5");
        ADD(7, "Interface Act and Deact - Type 6");
        ADD(8, "Rigid wall Act and Deact - Type 7");
        ADD(9, "ON as long as S1 is OFF - Type 8");
        ADD(17,"Velocity - Type9");
        ADD(10,"Gauge - Type10");
        ADD(11,"RBody - Type11");
        ADD(12,"Sect - Type12");
        ADD(13,"Work - Type13");
        ADD(14,"Energy - Type14");
        ADD(15,"Distance to surface - Type15");
        ADD(16,"HIC - Type16");
        ADD(18,"TEMP - Type18");
        ADD(19,"NIC_NIJ - Type19");

    }
//init sens or and
    if(Sensor_Type == 4)
    {
        ASSIGN(KEYWORD_STR, "SENS/");
    }
    else if( Sensor_Type == 5)
    {
        ASSIGN(KEYWORD_STR, "AND/");
    }
    else if( Sensor_Type == 6)
    {
        ASSIGN(KEYWORD_STR, "OR/");
    }
//
    if(Sensor_Type==1 || Sensor_Type == 0)
    {
        ASSIGN(KEYWORD_STR, "TIME/");
        SUBOBJECT(SUBGRP_SENSOR_TIME) {SUBTYPES = (/SUBOBJECT/SENSOR_TIME_SUOBJ);}  
    }
    else if(Sensor_Type == 2)
    {
        ASSIGN(KEYWORD_STR, "ACCE/");
        SUBOBJECT(SUBGRP_SENSOR_ACCE) {SUBTYPES = (/SUBOBJECT/SENSOR_ACCE_SUOBJ);}  
    }
    else if(Sensor_Type == 10)
    {
        ASSIGN(KEYWORD_STR, "GAUGE/");
        SUBOBJECT(SUBGRP_SENSOR_GAUGE) {SUBTYPES = (/SUBOBJECT/SENSOR_GAUGE_SUOBJ);}  
    } 
    else if(Sensor_Type == 3)
    {
        ASSIGN(KEYWORD_STR, "DIST/");
        SUBOBJECT(SUBGRP_SENSOR_DIST) {SUBTYPES = (/SUBOBJECT/SENSOR_DIST_SUOBJ);}  
    }   
    else if(Sensor_Type == 4 || Sensor_Type == 5 || Sensor_Type == 6)
    {
        SUBOBJECT(SUBGRP_SENSOR_SENS_AND_OR) {SUBTYPES = (/SUBOBJECT/SENSOR_SENS_AND_OR_SUOBJ);}  
    }
    else if(Sensor_Type == 9)
    {
        ASSIGN(KEYWORD_STR, "NOT/");
        SUBOBJECT(SUBGRP_SENSOR_NOT) {SUBTYPES = (/SUBOBJECT/SENSOR_NOT_SUOBJ);}  
    }
    else if(Sensor_Type == 7)
    {
        ASSIGN(KEYWORD_STR, "INTER/");
        SUBOBJECT(SUBGRP_SENSOR_INTER) {SUBTYPES = (/SUBOBJECT/SENSOR_INTER_SUOBJ);}  
    }     
    else if(Sensor_Type == 8)
    {
        ASSIGN(KEYWORD_STR, "RWALL/");
        SUBOBJECT(SUBGRP_SENSOR_RWALL) {SUBTYPES = (/SUBOBJECT/SENSOR_RWALL_SUOBJ);}  
    }   
    else if(Sensor_Type == 11)
    {
        ASSIGN(KEYWORD_STR, "RBODY/");
        SUBOBJECT(SUBGRP_SENSOR_RBODY) {SUBTYPES = (/SUBOBJECT/SENSOR_RBODY_SUOBJ);}  
    }  
    else if(Sensor_Type == 12)
    {
        ASSIGN(KEYWORD_STR, "XSECTION/");
        SUBOBJECT(SUBGRP_SENSOR_XSECTION) {SUBTYPES = (/SUBOBJECT/SENSOR_XSECTION_SUOBJ);}  
    }  
    else if(Sensor_Type == 13)
    {
        ASSIGN(KEYWORD_STR, "WORK/");
        SUBOBJECT(SUBGRP_SENSOR_WORK) {SUBTYPES = (/SUBOBJECT/SENSOR_WORK_SUOBJ);}  
    } 
    else if(Sensor_Type == 14)
    {
        ASSIGN(KEYWORD_STR, "ENERGY/");
        SUBOBJECT(SUBGRP_SENSOR_ENERGY) {SUBTYPES = (/SUBOBJECT/SENSOR_ENERGY_SUOBJ);}  
    }
    else if(Sensor_Type == 15)
    {
        ASSIGN(KEYWORD_STR, "DIST_SURF/");
        SUBOBJECT(SUBGRP_SENSOR_DIST_SURF) {SUBTYPES = (/SUBOBJECT/SENSOR_DIST_SURF_SUOBJ);}  
    }
    else if(Sensor_Type == 16)
    {
        ASSIGN(KEYWORD_STR, "HIC/");
        SUBOBJECT(SUBGRP_SENSOR_HIC) {SUBTYPES = (/SUBOBJECT/SENSOR_HIC_SUOBJ);}  
    }
    else if(Sensor_Type == 17)
    {
        ASSIGN(KEYWORD_STR, "VEL/");
        SUBOBJECT(SUBGRP_SENSOR_VEL) {SUBTYPES = (/SUBOBJECT/SENSOR_VEL_SUOBJ);}  
    }   
    else if(Sensor_Type == 18)
    {
        ASSIGN(KEYWORD_STR, "TEMP/");
        SUBOBJECT(SUBGRP_SENSOR_TEMP) {SUBTYPES = (/SUBOBJECT/SENSOR_TEMP_SUOBJ);}  
    }   
    else if (Sensor_Type == 19)
    {
        ASSIGN(KEYWORD_STR, "NIC_NIJ/");
        SUBOBJECT(SUBGRP_SENSOR_NIC_NIJ) {SUBTYPES = (/SUBOBJECT/SENSOR_NIC_NIJ_SUOBJ);}  
    }   

}

// File format

FORMAT(radioss2022)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);

    if(IO_FLAG==0)
    {
        if(Sensor_Type==1 || Sensor_Type==0) //TIME
        {
            HEADER("/SENSOR/TIME/%d", _ID_);
        }
        else if(Sensor_Type==2) //ACCE
        {
            HEADER("/SENSOR/ACCE/%d", _ID_);
        }
        else if(Sensor_Type==10) //GAUGE
        {
            HEADER("/SENSOR/GAUGE/%d", _ID_);
        }
        else if(Sensor_Type==3) //DIST
        {
            HEADER("/SENSOR/DIST/%d", _ID_);
        }
        else if(Sensor_Type==4) //SENS
        {
            HEADER("/SENSOR/SENS/%d", _ID_);
        }
        else if(Sensor_Type==5) //AND
        {
            HEADER("/SENSOR/AND/%d", _ID_);
        }
        else if(Sensor_Type==6) //OR
        {
            HEADER("/SENSOR/OR/%d", _ID_);
        }
        else if(Sensor_Type==9) //NOT
        {
            HEADER("/SENSOR/NOT/%d", _ID_);
        }
        else if(Sensor_Type==7) //INTER
        {
            HEADER("/SENSOR/INTER/%d", _ID_);
        }
        else if(Sensor_Type==8) //RWALL
        {
            HEADER("/SENSOR/RWALL/%d", _ID_);
        }
        else if(Sensor_Type==11) //RBODY
        {
            HEADER("/SENSOR/RBODY/%d", _ID_);
        }
        else if(Sensor_Type==12) //SECT
        {
            HEADER("/SENSOR/SECT/%d", _ID_);
        }
        else if(Sensor_Type==13) //WORK
        {
            HEADER("/SENSOR/WORK/%d", _ID_);
        }
        else if(Sensor_Type==14) //ENERGY
        {
            HEADER("/SENSOR/ENERGY/%d", _ID_);
        }
        else if(Sensor_Type==15) //DIST_SURF
        {
            HEADER("/SENSOR/DIST_SURF/%d", _ID_);
        }
        else if(Sensor_Type==16) //HIC
        {
            HEADER("/SENSOR/HIC/%d", _ID_);
        }
        else if(Sensor_Type==17) //VEL
        {
            HEADER("/SENSOR/VEL/%d", _ID_);
        }
        else if(Sensor_Type==18) //TEMP
        {
            HEADER("/SENSOR/TEMP/%d", _ID_);
        }
        else if(Sensor_Type==19) //NIC_NIJ
        {
            HEADER("/SENSOR/NIC_NIJ/%d", _ID_);
        }
    }
    else //import
    {
        HEADER("/SENSOR/%s",_opt);
        ASSIGN(_DummyKeyword,_FIND(_opt,"TIME")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE0")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"ACCE")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE1")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"GAUGE")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,10,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE10")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,10,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"DIST")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE2")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"SENS")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE3")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"AND")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE4")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"OR")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE5")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"NOT")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE8")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"INTER")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE6")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"RWAL")IMPORT); // NOTE with 1 'L' to import RWAL also (as ML)
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE7")IMPORT); 
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"RBODY")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,11,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE11")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,11,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"SECT")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,12,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE12")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,12,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"WORK")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,13,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE13")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,13,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"ENERGY")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,14,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE14")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,14,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"DIST_SURF")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,15,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE15")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,15,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"HIC")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,16,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE16")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,16,IMPORT);
        } 
        ASSIGN(_DummyKeyword,_FIND(_opt,"VEL")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,17,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE9")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,17,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TEMP")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,18,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE18")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,18,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"NIC_NIJ")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,19,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE19")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,19,IMPORT);
        }
    }

    CARD("%-100s",TITLE);
//
    if(Sensor_Type==1 || Sensor_Type==0) // TIME
    {
        SUBOBJECTS(SUBGRP_SENSOR_TIME,/SUBOBJECT/SENSOR_TIME_SUOBJ);
    }
    else if(Sensor_Type == 2)
    {
        SUBOBJECTS(SUBGRP_SENSOR_ACCE,/SUBOBJECT/SENSOR_ACCE_SUOBJ);
    }
    else if(Sensor_Type == 10)
    {
        SUBOBJECTS(SUBGRP_SENSOR_GAUGE,/SUBOBJECT/SENSOR_GAUGE_SUOBJ);
    }
    else if(Sensor_Type == 3)
    {
        SUBOBJECTS(SUBGRP_SENSOR_DIST,/SUBOBJECT/SENSOR_DIST_SUOBJ);
    }
    else if(Sensor_Type == 4 || Sensor_Type == 5 || Sensor_Type == 6)
    {
        SUBOBJECTS(SUBGRP_SENSOR_SENS_AND_OR,/SUBOBJECT/SENSOR_SENS_AND_OR_SUOBJ);  
    } 
    else if(Sensor_Type == 9)
    {
        SUBOBJECTS(SUBGRP_SENSOR_NOT,/SUBOBJECT/SENSOR_NOT_SUOBJ);
    } 
    else if(Sensor_Type == 7)
    {
        SUBOBJECTS(SUBGRP_SENSOR_INTER,/SUBOBJECT/SENSOR_INTER_SUOBJ);
    }
    else if(Sensor_Type == 8)
    {
        SUBOBJECTS(SUBGRP_SENSOR_RWALL,/SUBOBJECT/SENSOR_RWALL_SUOBJ);
    } 
    else if(Sensor_Type == 11)
    {
        SUBOBJECTS(SUBGRP_SENSOR_RBODY,/SUBOBJECT/SENSOR_RBODY_SUOBJ);
    } 
    else if(Sensor_Type == 12)
    {
        SUBOBJECTS(SUBGRP_SENSOR_XSECTION,/SUBOBJECT/SENSOR_XSECTION_SUOBJ);
    }
    else if(Sensor_Type == 13)
    {
        SUBOBJECTS(SUBGRP_SENSOR_WORK,/SUBOBJECT/SENSOR_WORK_SUOBJ);
    }
    else if(Sensor_Type == 14)
    {
        SUBOBJECTS(SUBGRP_SENSOR_ENERGY,/SUBOBJECT/SENSOR_ENERGY_SUOBJ);
    }
    else if(Sensor_Type == 15)
    {
        SUBOBJECTS(SUBGRP_SENSOR_DIST_SURF,/SUBOBJECT/SENSOR_DIST_SURF_SUOBJ);
    }
    else if(Sensor_Type == 16)
    {
        SUBOBJECTS(SUBGRP_SENSOR_HIC,/SUBOBJECT/SENSOR_HIC_SUOBJ);
    }
    else if(Sensor_Type == 17)
    {
        SUBOBJECTS(SUBGRP_SENSOR_VEL,/SUBOBJECT/SENSOR_VEL_SUOBJ);
    }
    else if(Sensor_Type == 18)
    {
        SUBOBJECTS(SUBGRP_SENSOR_TEMP,/SUBOBJECT/SENSOR_TEMP_SUOBJ);
    }
    else if(Sensor_Type == 19)
    {
        SUBOBJECTS(SUBGRP_SENSOR_NIC_NIJ,/SUBOBJECT/SENSOR_NIC_NIJ_SUOBJ);
    }
}

FORMAT(radioss2021)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);

    if(IO_FLAG==0)
    {
        if(Sensor_Type==1 || Sensor_Type==0) //TIME
        {
            HEADER("/SENSOR/TIME/%d", _ID_);
        }
        else if(Sensor_Type==2) //ACCE
        {
            HEADER("/SENSOR/ACCE/%d", _ID_);
        }
        else if(Sensor_Type==10) //GAUGE
        {
            HEADER("/SENSOR/GAUGE/%d", _ID_);
        }
        else if(Sensor_Type==3) //DIST
        {
            HEADER("/SENSOR/DIST/%d", _ID_);
        }
        else if(Sensor_Type==4) //SENS
        {
            HEADER("/SENSOR/SENS/%d", _ID_);
        }
        else if(Sensor_Type==5) //AND
        {
            HEADER("/SENSOR/AND/%d", _ID_);
        }
        else if(Sensor_Type==6) //OR
        {
            HEADER("/SENSOR/OR/%d", _ID_);
        }
        else if(Sensor_Type==9) //NOT
        {
            HEADER("/SENSOR/NOT/%d", _ID_);
        }
        else if(Sensor_Type==7) //INTER
        {
            HEADER("/SENSOR/INTER/%d", _ID_);
        }
        else if(Sensor_Type==8) //RWALL
        {
            HEADER("/SENSOR/RWALL/%d", _ID_);
        }
        else if(Sensor_Type==11) //RBODY
        {
            HEADER("/SENSOR/RBODY/%d", _ID_);
        }
        else if(Sensor_Type==12) //SECT
        {
            HEADER("/SENSOR/SECT/%d", _ID_);
        }
        else if(Sensor_Type==13) //WORK
        {
            HEADER("/SENSOR/WORK/%d", _ID_);
        }
        else if(Sensor_Type==14) //ENERGY
        {
            HEADER("/SENSOR/ENERGY/%d", _ID_);
        }
        else if(Sensor_Type==15) //DIST_SURF
        {
            HEADER("/SENSOR/DIST_SURF/%d", _ID_);
        }
        else if(Sensor_Type==16) //HIC
        {
            HEADER("/SENSOR/HIC/%d", _ID_);
        }
        else if(Sensor_Type==17) //VEL
        {
            HEADER("/SENSOR/VEL/%d", _ID_);
        }
    }
    else //import
    {
        HEADER("/SENSOR/%s",_opt);
        ASSIGN(_DummyKeyword,_FIND(_opt,"TIME")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE0")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"ACCE")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE1")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"GAUGE")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,10,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE10")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,10,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"DIST")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE2")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"SENS")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE3")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"AND")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE4")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"OR")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE5")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"NOT")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE8")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"INTER")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE6")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"RWAL")IMPORT); // NOTE with 1 'L' to import RWAL also (as ML)
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE7")IMPORT); 
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"RBODY")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,11,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE11")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,11,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"SECT")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,12,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE12")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,12,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"WORK")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,13,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE13")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,13,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"ENERGY")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,14,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE14")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,14,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"DIST_SURF")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,15,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE15")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,15,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"HIC")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,16,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE16")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,16,IMPORT);
        } 
        ASSIGN(_DummyKeyword,_FIND(_opt,"VEL")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,17,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE9")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,17,IMPORT);
        }
    }

    CARD("%-100s",TITLE);
//
    if(Sensor_Type==1 || Sensor_Type==0) // TIME
    {
        SUBOBJECTS(SUBGRP_SENSOR_TIME,/SUBOBJECT/SENSOR_TIME_SUOBJ);
    }
    else if(Sensor_Type == 2)
    {
        SUBOBJECTS(SUBGRP_SENSOR_ACCE,/SUBOBJECT/SENSOR_ACCE_SUOBJ);
    }
    else if(Sensor_Type == 10)
    {
        SUBOBJECTS(SUBGRP_SENSOR_GAUGE,/SUBOBJECT/SENSOR_GAUGE_SUOBJ);
    }
    else if(Sensor_Type == 3)
    {
        SUBOBJECTS(SUBGRP_SENSOR_DIST,/SUBOBJECT/SENSOR_DIST_SUOBJ);
    }
    else if(Sensor_Type == 4 || Sensor_Type == 5 || Sensor_Type == 6)
    {
        SUBOBJECTS(SUBGRP_SENSOR_SENS_AND_OR,/SUBOBJECT/SENSOR_SENS_AND_OR_SUOBJ);  
    } 
    else if(Sensor_Type == 9)
    {
        SUBOBJECTS(SUBGRP_SENSOR_NOT,/SUBOBJECT/SENSOR_NOT_SUOBJ);
    } 
    else if(Sensor_Type == 7)
    {
        SUBOBJECTS(SUBGRP_SENSOR_INTER,/SUBOBJECT/SENSOR_INTER_SUOBJ);
    }
    else if(Sensor_Type == 8)
    {
        SUBOBJECTS(SUBGRP_SENSOR_RWALL,/SUBOBJECT/SENSOR_RWALL_SUOBJ);
    } 
    else if(Sensor_Type == 11)
    {
        SUBOBJECTS(SUBGRP_SENSOR_RBODY,/SUBOBJECT/SENSOR_RBODY_SUOBJ);
    } 
    else if(Sensor_Type == 12)
    {
        SUBOBJECTS(SUBGRP_SENSOR_XSECTION,/SUBOBJECT/SENSOR_XSECTION_SUOBJ);
    }
    else if(Sensor_Type == 13)
    {
        SUBOBJECTS(SUBGRP_SENSOR_WORK,/SUBOBJECT/SENSOR_WORK_SUOBJ);
    }
    else if(Sensor_Type == 14)
    {
        SUBOBJECTS(SUBGRP_SENSOR_ENERGY,/SUBOBJECT/SENSOR_ENERGY_SUOBJ);
    }
    else if(Sensor_Type == 15)
    {
        SUBOBJECTS(SUBGRP_SENSOR_DIST_SURF,/SUBOBJECT/SENSOR_DIST_SURF_SUOBJ);
    }
    else if(Sensor_Type == 16)
    {
        SUBOBJECTS(SUBGRP_SENSOR_HIC,/SUBOBJECT/SENSOR_HIC_SUOBJ);
    }
    else if(Sensor_Type == 17)
    {
        SUBOBJECTS(SUBGRP_SENSOR_VEL,/SUBOBJECT/SENSOR_VEL_SUOBJ);
    }
}


FORMAT(radioss2020)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);

    if(IO_FLAG==0)
    {
        if(Sensor_Type==1 || Sensor_Type==0) //TIME
        {
            HEADER("/SENSOR/TIME/%d", _ID_);
        }
        else if(Sensor_Type==2) //ACCE
        {
            HEADER("/SENSOR/ACCE/%d", _ID_);
        }
        else if(Sensor_Type==10) //GAUGE
        {
            HEADER("/SENSOR/GAUGE/%d", _ID_);
        }
        else if(Sensor_Type==3) //DIST
        {
            HEADER("/SENSOR/DIST/%d", _ID_);
        }
        else if(Sensor_Type==4) //SENS
        {
            HEADER("/SENSOR/SENS/%d", _ID_);
        }
        else if(Sensor_Type==5) //AND
        {
            HEADER("/SENSOR/AND/%d", _ID_);
        }
        else if(Sensor_Type==6) //OR
        {
            HEADER("/SENSOR/OR/%d", _ID_);
        }
        else if(Sensor_Type==9) //NOT
        {
            HEADER("/SENSOR/NOT/%d", _ID_);
        }
        else if(Sensor_Type==7) //INTER
        {
            HEADER("/SENSOR/INTER/%d", _ID_);
        }
        else if(Sensor_Type==8) //RWALL
        {
            HEADER("/SENSOR/RWALL/%d", _ID_);
        }
        else if(Sensor_Type==11) //RBODY
        {
            HEADER("/SENSOR/RBODY/%d", _ID_);
        }
        else if(Sensor_Type==12) //SECT
        {
            HEADER("/SENSOR/SECT/%d", _ID_);
        }
        else if(Sensor_Type==13) //WORK
        {
            HEADER("/SENSOR/WORK/%d", _ID_);
        }
        else if(Sensor_Type==14) //ENERGY
        {
            HEADER("/SENSOR/ENERGY/%d", _ID_);
        }
    }
    else //import
    {
        HEADER("/SENSOR/%s",_opt);
        ASSIGN(_DummyKeyword,_FIND(_opt,"TIME")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE0")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"ACCE")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE1")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"GAUGE")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,10,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE10")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,10,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"DIST")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE2")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"SENS")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE3")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"AND")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE4")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"OR")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE5")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"NOT")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE8")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"INTER")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE6")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"RWAL")IMPORT); // NOTE with 1 'L' to import RWAL also (as ML)
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE7")IMPORT); 
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"RBODY")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,11,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE11")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,11,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"SECT")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,12,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE12")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,12,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"WORK")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,13,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE13")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,13,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"ENERGY")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,14,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE14")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,14,IMPORT);
        }
    }

    CARD("%-100s",TITLE);
    if(Sensor_Type==1 || Sensor_Type==0) // TIME
    {
        SUBOBJECTS(SUBGRP_SENSOR_TIME,/SUBOBJECT/SENSOR_TIME_SUOBJ);
    }
    else if(Sensor_Type == 2)
    {
        SUBOBJECTS(SUBGRP_SENSOR_ACCE,/SUBOBJECT/SENSOR_ACCE_SUOBJ);
    }
    else if(Sensor_Type == 10)
    {
        SUBOBJECTS(SUBGRP_SENSOR_GAUGE,/SUBOBJECT/SENSOR_GAUGE_SUOBJ);
    }
    else if(Sensor_Type == 3)
    {
        SUBOBJECTS(SUBGRP_SENSOR_DIST,/SUBOBJECT/SENSOR_DIST_SUOBJ);
    }
    else if(Sensor_Type == 4 || Sensor_Type == 5 || Sensor_Type == 6)
    {
        SUBOBJECTS(SUBGRP_SENSOR_SENS_AND_OR,/SUBOBJECT/SENSOR_SENS_AND_OR_SUOBJ);  
    } 
    else if(Sensor_Type == 9)
    {
        SUBOBJECTS(SUBGRP_SENSOR_NOT,/SUBOBJECT/SENSOR_NOT_SUOBJ);
    } 
    else if(Sensor_Type == 7)
    {
        SUBOBJECTS(SUBGRP_SENSOR_INTER,/SUBOBJECT/SENSOR_INTER_SUOBJ);
    }
    else if(Sensor_Type == 8)
    {
        SUBOBJECTS(SUBGRP_SENSOR_RWALL,/SUBOBJECT/SENSOR_RWALL_SUOBJ);
    } 
    else if(Sensor_Type == 11)
    {
        SUBOBJECTS(SUBGRP_SENSOR_RBODY,/SUBOBJECT/SENSOR_RBODY_SUOBJ);
    } 
    else if(Sensor_Type == 12)
    {
        SUBOBJECTS(SUBGRP_SENSOR_XSECTION,/SUBOBJECT/SENSOR_XSECTION_SUOBJ);
    }
    else if(Sensor_Type == 13)
    {
        SUBOBJECTS(SUBGRP_SENSOR_WORK,/SUBOBJECT/SENSOR_WORK_SUOBJ);
    }
    else if(Sensor_Type == 14)
    {
        SUBOBJECTS(SUBGRP_SENSOR_ENERGY,/SUBOBJECT/SENSOR_ENERGY_SUOBJ);
    }
}




FORMAT(radioss2017)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);

    if(IO_FLAG==0)
    {
        if(Sensor_Type==1 || Sensor_Type==0) //TIME
        {
            HEADER("/SENSOR/TIME/%d", _ID_);
        }
        else if(Sensor_Type==2) //ACCE
        {
            HEADER("/SENSOR/ACCE/%d", _ID_);
        }
        else if(Sensor_Type==10) //GAUGE
        {
            HEADER("/SENSOR/GAUGE/%d", _ID_);
        }
        else if(Sensor_Type==3) //DIST
        {
            HEADER("/SENSOR/DIST/%d", _ID_);
        }
        else if(Sensor_Type==4) //SENS
        {
            HEADER("/SENSOR/SENS/%d", _ID_);
        }
        else if(Sensor_Type==5) //AND
        {
            HEADER("/SENSOR/AND/%d", _ID_);
        }
        else if(Sensor_Type==6) //OR
        {
            HEADER("/SENSOR/OR/%d", _ID_);
        }
        else if(Sensor_Type==9) //NOT
        {
            HEADER("/SENSOR/NOT/%d", _ID_);
        }
        else if(Sensor_Type==7) //INTER
        {
            HEADER("/SENSOR/INTER/%d", _ID_);
        }
        else if(Sensor_Type==8) //RWALL
        {
            HEADER("/SENSOR/RWALL/%d", _ID_);
        }
        else if(Sensor_Type==11) //RBODY
        {
            HEADER("/SENSOR/RBODY/%d", _ID_);
        }
        else if(Sensor_Type==12) //SECT
        {
            HEADER("/SENSOR/SECT/%d", _ID_);
        }
        else if(Sensor_Type==13) //WORK
        {
            HEADER("/SENSOR/WORK/%d", _ID_);
        }
    }
    else //import
    {
        HEADER("/SENSOR/%s",_opt);
        ASSIGN(_DummyKeyword,_FIND(_opt,"TIME")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE0")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"ACCE")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE1")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"GAUGE")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,10,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE10")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,10,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"DIST")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE2")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"SENS")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE3")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"AND")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE4")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"OR")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE5")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"NOT")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE8")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"INTER")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE6")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"RWAL")IMPORT); // NOTE with 1 'L' to import RWAL also (as ML)
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE7")IMPORT); 
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"RBODY")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,11,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE11")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,11,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"SECT")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,12,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE12")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,12,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"WORK")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,13,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE13")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,13,IMPORT);
        }
    }
    CARD("%-100s",TITLE);
    if(Sensor_Type==1 || Sensor_Type==0) // TIME
    {
        SUBOBJECTS(SUBGRP_SENSOR_TIME,/SUBOBJECT/SENSOR_TIME_SUOBJ);
    }
    else if(Sensor_Type == 2)
    {
        SUBOBJECTS(SUBGRP_SENSOR_ACCE,/SUBOBJECT/SENSOR_ACCE_SUOBJ);
    }
    else if(Sensor_Type == 10)
    {
        SUBOBJECTS(SUBGRP_SENSOR_GAUGE,/SUBOBJECT/SENSOR_GAUGE_SUOBJ);
    }
    else if(Sensor_Type == 3)
    {
        SUBOBJECTS(SUBGRP_SENSOR_DIST,/SUBOBJECT/SENSOR_DIST_SUOBJ);
    }
    else if(Sensor_Type == 4 || Sensor_Type == 5 || Sensor_Type == 6)
    {
        SUBOBJECTS(SUBGRP_SENSOR_SENS_AND_OR,/SUBOBJECT/SENSOR_SENS_AND_OR_SUOBJ);  
    } 
    else if(Sensor_Type == 9)
    {
        SUBOBJECTS(SUBGRP_SENSOR_NOT,/SUBOBJECT/SENSOR_NOT_SUOBJ);
    } 
    else if(Sensor_Type == 7)
    {
        SUBOBJECTS(SUBGRP_SENSOR_INTER,/SUBOBJECT/SENSOR_INTER_SUOBJ);
    }
    else if(Sensor_Type == 8)
    {
        SUBOBJECTS(SUBGRP_SENSOR_RWALL,/SUBOBJECT/SENSOR_RWALL_SUOBJ);
    } 
    else if(Sensor_Type == 11)
    {
        SUBOBJECTS(SUBGRP_SENSOR_RBODY,/SUBOBJECT/SENSOR_RBODY_SUOBJ);
    } 
    else if(Sensor_Type == 12)
    {
        SUBOBJECTS(SUBGRP_SENSOR_XSECTION,/SUBOBJECT/SENSOR_XSECTION_SUOBJ);
    }
    else if(Sensor_Type == 13)
    {
        SUBOBJECTS(SUBGRP_SENSOR_WORK,/SUBOBJECT/SENSOR_WORK_SUOBJ);
    }
}
FORMAT(radioss140)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);
    if(IO_FLAG==0)
    {
        if(Sensor_Type==1 || Sensor_Type==0) //TIME
        {
            HEADER("/SENSOR/TIME/%d", _ID_);
        }
        else if(Sensor_Type==2) //ACCE
        {
            HEADER("/SENSOR/ACCE/%d", _ID_);
        }
        else if(Sensor_Type==10) //GAUGE
        {
            HEADER("/SENSOR/GAUGE/%d", _ID_);
        }
        else if(Sensor_Type==3) //DIST
        {
            HEADER("/SENSOR/DIST/%d", _ID_);
        }
        else if(Sensor_Type==4) //SENS
        {
            HEADER("/SENSOR/SENS/%d", _ID_);
        }
        else if(Sensor_Type==5) //AND
        {
            HEADER("/SENSOR/AND/%d", _ID_);
        }
        else if(Sensor_Type==6) //OR
        {
            HEADER("/SENSOR/OR/%d", _ID_);
        }
        else if(Sensor_Type==9) //NOT
        {
            HEADER("/SENSOR/NOT/%d", _ID_);
        }
        else if(Sensor_Type==7) //INTER
        {
            HEADER("/SENSOR/INTER/%d", _ID_);
        }
        else if(Sensor_Type==8) //RWALL
        {
            HEADER("/SENSOR/RWALL/%d", _ID_);
        }
        else if(Sensor_Type==11) //RBODY
        {
            HEADER("/SENSOR/RBODY/%d", _ID_);
        }
        else if(Sensor_Type==12) //SECT
        {
            HEADER("/SENSOR/SECT/%d", _ID_);
        }
    }
    else //import
    {
        HEADER("/SENSOR/%s",_opt);
        ASSIGN(_DummyKeyword,_FIND(_opt,"TIME")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE0")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"ACCE")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE1")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"GAUGE")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,10,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE10")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,10,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"DIST")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE2")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"SENS")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE3")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"AND")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE4")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"OR")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE5")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"NOT")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE8")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"INTER")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE6")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"RWAL")IMPORT); // NOTE with 1 'L' to import RWAL also (as ML)
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE7")IMPORT); 
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"RBODY")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,11,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE11")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,11,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"SECT")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,12,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE12")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,12,IMPORT);
        }
    }
    CARD("%-100s",TITLE);
    if(Sensor_Type==1 || Sensor_Type==0) // TIME
    {
        SUBOBJECTS(SUBGRP_SENSOR_TIME,/SUBOBJECT/SENSOR_TIME_SUOBJ);
    }
    else if(Sensor_Type == 2)
    {
        SUBOBJECTS(SUBGRP_SENSOR_ACCE,/SUBOBJECT/SENSOR_ACCE_SUOBJ);
    }
    else if(Sensor_Type == 10)
    {
        SUBOBJECTS(SUBGRP_SENSOR_GAUGE,/SUBOBJECT/SENSOR_GAUGE_SUOBJ);
    }
    else if(Sensor_Type == 3)
    {
        SUBOBJECTS(SUBGRP_SENSOR_DIST,/SUBOBJECT/SENSOR_DIST_SUOBJ);
    }
    else if(Sensor_Type == 4 || Sensor_Type == 5 || Sensor_Type == 6)
    {
        SUBOBJECTS(SUBGRP_SENSOR_SENS_AND_OR,/SUBOBJECT/SENSOR_SENS_AND_OR_SUOBJ);  
    }
    else if(Sensor_Type == 9)
    {
        SUBOBJECTS(SUBGRP_SENSOR_NOT,/SUBOBJECT/SENSOR_NOT_SUOBJ);
    }
    else if(Sensor_Type == 7)
    {
        SUBOBJECTS(SUBGRP_SENSOR_INTER,/SUBOBJECT/SENSOR_INTER_SUOBJ);
    }
    else if(Sensor_Type == 8)
    {
        SUBOBJECTS(SUBGRP_SENSOR_RWALL,/SUBOBJECT/SENSOR_RWALL_SUOBJ);
    }
    else if(Sensor_Type == 11)
    {
        SUBOBJECTS(SUBGRP_SENSOR_RBODY,/SUBOBJECT/SENSOR_RBODY_SUOBJ);
    }
    else if(Sensor_Type == 12)
    {
        SUBOBJECTS(SUBGRP_SENSOR_XSECTION,/SUBOBJECT/SENSOR_XSECTION_SUOBJ);
    }
}
FORMAT(radioss110)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);
    if(IO_FLAG==0)
    {
        if(Sensor_Type==1 || Sensor_Type==0) //TIME
        {
            HEADER("/SENSOR/TIME/%d", _ID_);
        }
        else if(Sensor_Type==2) //ACCE
        {
            HEADER("/SENSOR/ACCE/%d", _ID_);
        }
        else if(Sensor_Type==10) //GAUGE
        {
            HEADER("/SENSOR/GAUGE/%d", _ID_);
        }
        else if(Sensor_Type==3) //DIST
        {
            HEADER("/SENSOR/DIST/%d", _ID_);
        }
        else if(Sensor_Type==4) //SENS
        {
            HEADER("/SENSOR/SENS/%d", _ID_);
        }
        else if(Sensor_Type==5) //AND
        {
            HEADER("/SENSOR/AND/%d", _ID_);
        }
        else if(Sensor_Type==6) //OR
        {
            HEADER("/SENSOR/OR/%d", _ID_);
        }
        else if(Sensor_Type==9) //NOT
        {
            HEADER("/SENSOR/NOT/%d", _ID_);
        }
        else if(Sensor_Type==7) //INTER
        {
            HEADER("/SENSOR/INTER/%d", _ID_);
        }
        else if(Sensor_Type==8) //RWALL
        {
            HEADER("/SENSOR/RWALL/%d", _ID_);
        }
        else if(Sensor_Type==11) //RBODY
        {
            HEADER("/SENSOR/RBODY/%d", _ID_);
        }
        else if(Sensor_Type==12) //SECT
        {
            HEADER("/SENSOR/SECT/%d", _ID_);
        }
    }
    else //import
    {
        HEADER("/SENSOR/%s",_opt);
        ASSIGN(_DummyKeyword,_FIND(_opt,"TIME")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE0")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"ACCE")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE1")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"GAUGE")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,10,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE10")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,10,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"DIST")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE2")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"SENS")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE3")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"AND")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE4")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"OR")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE5")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"NOT")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE8")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"INTER")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE6")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"RWAL")IMPORT); // NOTE with 1 'L' to import RWAL also (as ML)
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE7")IMPORT); 
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"RBODY")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,11,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE11")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,11,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"SECT")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,12,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE12")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,12,IMPORT);
        }
    }

    CARD("%-100s",TITLE);
//
    if(Sensor_Type==1 || Sensor_Type==0) // TIME
    {
        SUBOBJECTS(SUBGRP_SENSOR_TIME,/SUBOBJECT/SENSOR_TIME_SUOBJ);
    }
    else if(Sensor_Type == 2)
    {
        SUBOBJECTS(SUBGRP_SENSOR_ACCE,/SUBOBJECT/SENSOR_ACCE_SUOBJ);
    }
    else if(Sensor_Type == 10)
    {
        SUBOBJECTS(SUBGRP_SENSOR_GAUGE,/SUBOBJECT/SENSOR_GAUGE_SUOBJ);
    }
    else if(Sensor_Type == 3)
    {
        SUBOBJECTS(SUBGRP_SENSOR_DIST,/SUBOBJECT/SENSOR_DIST_SUOBJ);
    }
    else if(Sensor_Type == 4 || Sensor_Type == 5 || Sensor_Type == 6)
    {
        SUBOBJECTS(SUBGRP_SENSOR_SENS_AND_OR,/SUBOBJECT/SENSOR_SENS_AND_OR_SUOBJ);  
    } 
    else if(Sensor_Type == 9)
    {
        SUBOBJECTS(SUBGRP_SENSOR_NOT,/SUBOBJECT/SENSOR_NOT_SUOBJ);
    } 
    else if(Sensor_Type == 7)
    {
        SUBOBJECTS(SUBGRP_SENSOR_INTER,/SUBOBJECT/SENSOR_INTER_SUOBJ);
    }
    else if(Sensor_Type == 8)
    {
        SUBOBJECTS(SUBGRP_SENSOR_RWALL,/SUBOBJECT/SENSOR_RWALL_SUOBJ);
    } 
    else if(Sensor_Type == 11)
    {
        SUBOBJECTS(SUBGRP_SENSOR_RBODY,/SUBOBJECT/SENSOR_RBODY_SUOBJ);
    } 
    else if(Sensor_Type == 12)
    {
        SUBOBJECTS(SUBGRP_SENSOR_XSECTION,/SUBOBJECT/SENSOR_XSECTION_SUOBJ);
    }
}
FORMAT(radioss100)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);
    if(IO_FLAG==0)
    {
        if(Sensor_Type==1 || Sensor_Type==0) //TIME
        {
            HEADER("/SENSOR/TIME/%d", _ID_);
        }
        else if(Sensor_Type==2) //ACCE
        {
            HEADER("/SENSOR/ACCE/%d", _ID_);
        }
        else if(Sensor_Type==3) //DIST
        {
            HEADER("/SENSOR/DIST/%d", _ID_);
        }
        else if(Sensor_Type==4) //SENS
        {
            HEADER("/SENSOR/SENS/%d", _ID_);
        }
        else if(Sensor_Type==5) //AND
        {
            HEADER("/SENSOR/AND/%d", _ID_);
        }
        else if(Sensor_Type==6) //OR
        {
            HEADER("/SENSOR/OR/%d", _ID_);
        }
        else if(Sensor_Type==9) //NOT
        {
            HEADER("/SENSOR/NOT/%d", _ID_);
        }
        else if(Sensor_Type==7) //INTER
        {
            HEADER("/SENSOR/INTER/%d", _ID_);
        }
        else if(Sensor_Type==8) //RWALL
        {
            HEADER("/SENSOR/RWALL/%d", _ID_);
        }
    }
    else //import
    {
        HEADER("/SENSOR/%s",_opt);
        ASSIGN(_DummyKeyword,_FIND(_opt,"TIME")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE0")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"ACCE")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE1")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"DIST")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE2")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"SENS")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE3")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"AND")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE4")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"OR")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE5")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"NOT")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE8")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"INTER")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE6")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"RWAL")IMPORT); // NOTE with 1 'L' to import RWAL also (as ML)
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE7")IMPORT); 
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
    }
    CARD("%-100s",TITLE);
    if(Sensor_Type==1 || Sensor_Type==0) // TIME
    {
        SUBOBJECTS(SUBGRP_SENSOR_TIME,/SUBOBJECT/SENSOR_TIME_SUOBJ);
    }
    else if(Sensor_Type == 2)
    {
        SUBOBJECTS(SUBGRP_SENSOR_ACCE,/SUBOBJECT/SENSOR_ACCE_SUOBJ);
    }
    else if(Sensor_Type == 3)
    {
        SUBOBJECTS(SUBGRP_SENSOR_DIST,/SUBOBJECT/SENSOR_DIST_SUOBJ);
    }
    else if(Sensor_Type == 4 || Sensor_Type == 5 || Sensor_Type == 6)
    {
        SUBOBJECTS(SUBGRP_SENSOR_SENS_AND_OR,/SUBOBJECT/SENSOR_SENS_AND_OR_SUOBJ);  
    }
    else if(Sensor_Type == 9)
    {
        SUBOBJECTS(SUBGRP_SENSOR_NOT,/SUBOBJECT/SENSOR_NOT_SUOBJ);
    }
    else if(Sensor_Type == 7)
    {
        SUBOBJECTS(SUBGRP_SENSOR_INTER,/SUBOBJECT/SENSOR_INTER_SUOBJ);
    }
    else if(Sensor_Type == 8)
    {
        SUBOBJECTS(SUBGRP_SENSOR_RWALL,/SUBOBJECT/SENSOR_RWALL_SUOBJ);
    }
}
FORMAT(radioss90)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);
    if(IO_FLAG==0)
    {
        if(Sensor_Type==1 || Sensor_Type==0) //TIME
        {
            HEADER("/SENSOR/TIME/%d", _ID_);
        }
        else if(Sensor_Type==2) //ACCE
        {
            HEADER("/SENSOR/ACCE/%d", _ID_);
        }
        else if(Sensor_Type==3) //DIST
        {
            HEADER("/SENSOR/DIST/%d", _ID_);
        }
        else if(Sensor_Type==4) //SENS
        {
            HEADER("/SENSOR/SENS/%d", _ID_);
        }
        else if(Sensor_Type==5) //AND
        {
            HEADER("/SENSOR/AND/%d", _ID_);
        }
        else if(Sensor_Type==6) //OR
        {
            HEADER("/SENSOR/OR/%d", _ID_);
        }
        else if(Sensor_Type==9) //NOT
        {
            HEADER("/SENSOR/NOT/%d", _ID_);
        }
        else if(Sensor_Type==7) //INTER
        {
            HEADER("/SENSOR/INTER/%d", _ID_);
        }
        else if(Sensor_Type==8) //RWALL
        {
            HEADER("/SENSOR/RWALL/%d", _ID_);
        }
    }
    else //import
    {
        HEADER("/SENSOR/%s",_opt);
        ASSIGN(_DummyKeyword,_FIND(_opt,"TIME")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE0")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"ACCE")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE1")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"DIST")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE2")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"SENS")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE3")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"AND")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE4")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"OR")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE5")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"NOT")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE8")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"INTER")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE6")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"RWAL")IMPORT); // NOTE with 1 'L' to import RWAL also (as ML)
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE7")IMPORT); 
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
    }
    CARD("%-100s",TITLE);
    if(Sensor_Type==1 || Sensor_Type==0) // TIME
    {
        SUBOBJECTS(SUBGRP_SENSOR_TIME,/SUBOBJECT/SENSOR_TIME_SUOBJ);
    }
    else if(Sensor_Type == 2)
    {
        SUBOBJECTS(SUBGRP_SENSOR_ACCE,/SUBOBJECT/SENSOR_ACCE_SUOBJ);
    }
    else if(Sensor_Type == 3)
    {
        SUBOBJECTS(SUBGRP_SENSOR_DIST,/SUBOBJECT/SENSOR_DIST_SUOBJ);
    }
    else if(Sensor_Type == 4 || Sensor_Type == 5 || Sensor_Type == 6)
    {
        SUBOBJECTS(SUBGRP_SENSOR_SENS_AND_OR,/SUBOBJECT/SENSOR_SENS_AND_OR_SUOBJ);  
    }
    else if(Sensor_Type == 9)
    {
        SUBOBJECTS(SUBGRP_SENSOR_NOT,/SUBOBJECT/SENSOR_NOT_SUOBJ);
    }
    else if(Sensor_Type == 7)
    {
        SUBOBJECTS(SUBGRP_SENSOR_INTER,/SUBOBJECT/SENSOR_INTER_SUOBJ);
    }
    else if(Sensor_Type == 8)
    {
        SUBOBJECTS(SUBGRP_SENSOR_RWALL,/SUBOBJECT/SENSOR_RWALL_SUOBJ);
    }
}

FORMAT(radioss51)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);
    if(IO_FLAG==0)
    {
        if(Sensor_Type==1 || Sensor_Type==0) //TIME
        {
            HEADER("/SENSOR/TIME/%d", _ID_);
        }
        else if(Sensor_Type==2) //ACCE
        {
            HEADER("/SENSOR/ACCE/%d", _ID_);
        }
        else if(Sensor_Type==3) //DIST
        {
            HEADER("/SENSOR/DIST/%d", _ID_);
        }
        else if(Sensor_Type==4) //SENS
        {
            HEADER("/SENSOR/SENS/%d", _ID_);
        }
        else if(Sensor_Type==5) //AND
        {
            HEADER("/SENSOR/AND/%d", _ID_);
        }
        else if(Sensor_Type==6) //OR
        {
            HEADER("/SENSOR/OR/%d", _ID_);
        }
        else if(Sensor_Type==9) //NOT
        {
            HEADER("/SENSOR/NOT/%d", _ID_);
        }
        else if(Sensor_Type==7) //INTER
        {
            HEADER("/SENSOR/INTER/%d", _ID_);
        }
        else if(Sensor_Type==8) //RWALL
        {
            HEADER("/SENSOR/RWALL/%d", _ID_);
        }
    }
    else //import
    {
        HEADER("/SENSOR/%s",_opt);
        ASSIGN(_DummyKeyword,_FIND(_opt,"TIME")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE0")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,1,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"ACCE")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE1")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,2,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"DIST")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE2")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,3,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"SENS")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE3")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,4,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"AND")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE4")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,5,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"OR")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE5")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,6,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"NOT")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE8")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,9,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"INTER")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE6")IMPORT);
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,7,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"RWAL")IMPORT); // NOTE with 1 'L' to import RWAL also (as ML)
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
        ASSIGN(_DummyKeyword,_FIND(_opt,"TYPE7")IMPORT); 
        if (_DummyKeyword==1)
        {
            ASSIGN (Sensor_Type,8,IMPORT);
        }
    }
    CARD("%-100s",TITLE);
    if(Sensor_Type==1 || Sensor_Type==0) // TIME
    {
        SUBOBJECTS(SUBGRP_SENSOR_TIME,/SUBOBJECT/SENSOR_TIME_SUOBJ);
    }
    else if(Sensor_Type == 2)
    {
        SUBOBJECTS(SUBGRP_SENSOR_ACCE,/SUBOBJECT/SENSOR_ACCE_SUOBJ);
    }
    else if(Sensor_Type == 3)
    {
        SUBOBJECTS(SUBGRP_SENSOR_DIST,/SUBOBJECT/SENSOR_DIST_SUOBJ);
    }
    else if(Sensor_Type == 4 || Sensor_Type == 5 || Sensor_Type == 6)
    {
        SUBOBJECTS(SUBGRP_SENSOR_SENS_AND_OR,/SUBOBJECT/SENSOR_SENS_AND_OR_SUOBJ);  
    }
    else if(Sensor_Type == 9)
    {
        SUBOBJECTS(SUBGRP_SENSOR_NOT,/SUBOBJECT/SENSOR_NOT_SUOBJ);
    }
    else if(Sensor_Type == 7)
    {
        SUBOBJECTS(SUBGRP_SENSOR_INTER,/SUBOBJECT/SENSOR_INTER_SUOBJ);
    }
    else if(Sensor_Type == 8)
    {
        SUBOBJECTS(SUBGRP_SENSOR_RWALL,/SUBOBJECT/SENSOR_RWALL_SUOBJ);
    }
}
