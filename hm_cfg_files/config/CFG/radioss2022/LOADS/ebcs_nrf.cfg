//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /EBCS/NRF 
//

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    //  Card
    entityid                                  = VALUE(SETS, "Surface identifier","surf_ID")  { SUBTYPES = (/SETS/SURF_IDPOOL); }

    tcar_vf                                   = VALUE(FLOAT, "Characteristic time for volumetric fraction relaxation");
    tcar_p                                    = VALUE(FLOAT, "Characteristic time for pressure relaxation");

    //HM INTERNAL 
    KEYWORD_STR                               = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                              = SIZE("NUM_COMMENTS");
    CommentEnumField                          = VALUE(INT, "User Comments");
    COMMENTS                                  = ARRAY[NUM_COMMENTS](STRING, "Entity Comments");

    _DummyKeyword                             = VALUE(INT, "");
    _dummy                                    = VALUE(STRING, "");
    IO_FLAG                                   = VALUE(INT, "IOFLAG");

    displayname                               = VALUE(STRING, "Elementary boundary condition:Non Reflecting Frontier","TITLE");
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    //  Card
    tcar_vf                        = 0.0;
    tcar_p                         = 0.0;
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //  Card

    //HM INTERNAL
    KEYWORD_STR                               = 9000;
    COMMENTS                                  = 5109;
    CommentEnumField                          = 7951;
    NUM_COMMENTS                              = 5110;

    _DummyKeyword                             = -1;
    _dummy                                    = -1;
    IO_FLAG                                   = -1;
}

GUI(COMMON)
{
    if(CommentEnumField == 2)
    {
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }

    ASSIGN(KEYWORD_STR, "/EBCS/NRF");

    //Title Card
    SCALAR(displayname, "ebcs_title")         { DIMENSION = "DIMENSIONLESS"; }

    //  Card
    DATA(entityid);
    SCALAR(tcar_vf)                { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(tcar_p)                 { DIMENSION = "DIMENSIONLESS"; }    
}

// File format
FORMAT(radioss2022)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);

    if(IO_FLAG == 0)
    {
       HEADER("/EBCS/NRF/%-d", _ID_);
    }
    else  // IMPORT
    {
       HEADER("/EBCS/NRF/%-s/%d",_dummy, _ID_);
    }

    //  Title
    CARD("%-100s", displayname);

    //  Card 
    COMMENT("#  surf_ID");
    CARD("%10d", entityid);
    COMMENT("#            TCAR_P             TCAR_VF");
    CARD("%20lg%20lg", tcar_p, tcar_vf);
    
}
