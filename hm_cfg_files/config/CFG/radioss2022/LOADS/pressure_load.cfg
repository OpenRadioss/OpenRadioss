//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Pressure load (for hydroforming) Setup File
// /LOAD/PRESSURE 

ATTRIBUTES {
  // Data
  
//card 1 
  surf_ID        = VALUE(SETS,  "Surface")  { SUBTYPES = (/SETS/SURF_IDPOOL); }
  fct_ID         = VALUE(FUNCT, "Time function identifier");
  Iload          = VALUE(INT, "Load pressure behavior ");
  sens_ID        = VALUE(SENSOR,"Sensor identifier");
  Inorm          = VALUE(INT, "Pressure direction application ");
  Direction      = VALUE(STRING, "Direction of altitude (input X, Y or Z)");
  skew_ID        = VALUE(SYSTEM, "Skew identifier for pressure direction application");

  xscale_p       = VALUE(FLOAT, "X-Scale factor (time)"); 
  yscale_p       = VALUE(FLOAT, "Y-Scale factor"); 

//card 2 
  N_inter_P      = SIZE("Number of interfaces");
  Inter_IDs      = ARRAY[N_inter_P](GROUP, "Interface identifiers for non pressure application");
  Gap_shift_i    = ARRAY[N_inter_P](FLOAT, "Gap shift for the contact detection");
  displayname    = VALUE(STRING, "Title");
}

DEFAULTS {
  xscale_p = 1.;
  yscale_p  = 1.;
  Inorm = 1;
  Iload = 1;
}

GUI(COMMON) {
   graphical FUNCTION(fct_ID) { 
    X_TITLE     = "Time"; Y_TITLE     = "Pressure";
    X_DIMENSION = "t"; Y_DIMENSION = "pressure";
    X_SCALING(xscale_p);    Y_SCALING(yscale_p);
    X_CAN_BE_NEGATIVE = FALSE; }
    SIZE(N_inter_P);
    ARRAY(N_inter_P, "NINTER")
    {
        DATA(Inter_IDs, "Inter_ID");

        SCALAR(Gap_shift_i, "Gap_shift_i")                { DIMENSION = "l" ; }

     }
  }	


FORMAT(radioss2022) {
  HEADER("/LOAD/PRESSURE/%d",_ID_);
  CARD("%-100s", displayname);
  COMMENT("#  surf_ID     Iload sensor_ID     Inorm       Dir   skew_ID");  
  CARD("%10d%10d%10d%10d%10d%10d",surf_ID,Iload,sens_ID,Inorm,Direction,skew_ID);

  COMMENT("# functIDT                      Ascale_x            Fscale_y");
  CARD("%10d          %20lg%20lg",fct_ID,xscale_p,yscale_p);

    if(N_inter_P!=0)
    {
        COMMENT("#Inter_IDi                   Gap_shift_i");
    }
    FREE_CARD_LIST(N_inter_P)
    {
        CARD("%10d          %20lg",Inter_IDs,Gap_shift_i);
    }    

}
