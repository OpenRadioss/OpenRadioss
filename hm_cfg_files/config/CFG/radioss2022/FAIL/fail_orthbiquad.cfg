//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Failure model, ORTHBIQUAD Setup File
// 

ATTRIBUTES(COMMON){ 

	_HMCOMMENTSFLAG  		= VALUE(INT,"Write HM Comments");
	id   		                = VALUE(INT,"Id of this Card") ;
	mat_id           		= VALUE(MAT,"Material");
	Pthk   		                = VALUE(FLOAT,"Element suppression criterion (for shells only) :% of thickness in normal direction to delete the element");
//	
        MAT_MFLAG                       = VALUE(INT,"Flag for material selector");
        MAT_SFLAG                       = VALUE(INT,"Flag for specific behavior");
	MAT_refanglemax                 = SIZE("Number of angles for plastic strains at failure");
        MAT_C1                          = ARRAY[MAT_refanglemax](FLOAT,"Simple compression failure plastic strain");
        MAT_C2                          = ARRAY[MAT_refanglemax](FLOAT,"Shear failure plastic strain");
        MAT_C3                          = ARRAY[MAT_refanglemax](FLOAT,"Simple tension failure plastic strain");
        MAT_C4                          = ARRAY[MAT_refanglemax](FLOAT,"Plane stress failure plastic strain");
        MAT_C5                          = VALUE(FLOAT,"Biaxial tension failure plastic strain");
        MAT_INST                        = ARRAY[MAT_refanglemax](FLOAT,"Trigger plastic strain for necking");
//
        MAT_EPSD0                       = VALUE(FLOAT,"Reference strain-rate");
        MAT_CJC                         = VALUE(FLOAT,"Johnson-Cook strain-rate dependency parameter");
        RATE_scale                      = VALUE(FLOAT,"Strain-rate scale factor for strain-rate dependency function");
        fct_IDrate                      = VALUE(FUNCT,"Strain-rate dependency function identifier");
//
        MAT_R1                          = VALUE(FLOAT,"Failure plastic strain ratio Uniaxial compression to Uniaxial Tension");
        MAT_R2                          = VALUE(FLOAT,"Failure plastic strain ratio Pure Shear to Uniaxial Tension");
        MAT_R4                          = VALUE(FLOAT,"Failure plastic strain ratio Plane Strain Tension to Uniaxial Tension");
        MAT_R5                          = VALUE(FLOAT,"Failure plastic strain ratio Biaxial Tension to Uniaxial Tension");
//
	fct_IDel                        = VALUE(FUNCT,"Element size factor function identifier");
	EI_ref				= VALUE(FLOAT,"Reference element size");
//	
	ID_CARD_EXIST	 		= VALUE(BOOL, "Give an Id");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
	_HMCOMMENTSFLAG=-1;
}

GUI(COMMON) {
mandatory:
    SCALAR(EI_ref)                    { DIMENSION="l"; }
    SCALAR(MAT_EPSD0)                 { DIMENSION="f"; }
    SCALAR(MAT_CJC)                   { DIMENSION="DIMENSIONLESS"; }
    SCALAR(RATE_scale)                { DIMENSION="f"; }
    SCALAR(MAT_R1)                    { DIMENSION="DIMENSIONLESS"; }    
    SCALAR(MAT_R2)                    { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_R4)                    { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_R5)                    { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_C5)                    { DIMENSION="DIMENSIONLESS"; }
    SIZE(MAT_refanglemax);
    ARRAY(MAT_refanglemax, "Number of angles")
    {
       SCALAR(MAT_C1)                 { DIMENSION="DIMENSIONLESS"; }
       SCALAR(MAT_C2)                 { DIMENSION="DIMENSIONLESS"; }
       SCALAR(MAT_C3)                 { DIMENSION="DIMENSIONLESS"; }
       SCALAR(MAT_C4)                 { DIMENSION="DIMENSIONLESS"; }
       SCALAR(MAT_INST)               { DIMENSION="DIMENSIONLESS"; }
    }
}

FORMAT(radioss2022) {
	HEADER("/FAIL/ORTHBIQUAD/%d",mat_id);
	COMMENT("#               PTHK     MFLAG     SFLAG    NANGLE                      FCT_IDEL              EI_REF");
	CARD("%20lg%10d%10d%10d%20s%10d%20lg",Pthk,MAT_MFLAG,MAT_SFLAG,MAT_refanglemax,_BLANK_,fct_IDel,EI_ref);
	COMMENT("#                 C5               DEPS0             C_JCOOK         FCT_ID_RATE          RATE_SCALE");
	CARD("%20lg%20lg%20lg%10s%10d%20lg",MAT_C5,MAT_EPSD0,MAT_CJC,_BLANK_,fct_IDrate,RATE_scale);
	if (MAT_MFLAG == 99) {
          COMMENT("#                 R1                  R2                  R4                  R5");
          CARD("%20lg%20lg%20lg%20lg",MAT_R1,MAT_R2,MAT_R4,MAT_R5);	  
	}
	COMMENT("#                 C1                  C2                  C3                  C4                INST");
        FREE_CARD_LIST(MAT_refanglemax)
        {
          CARD("%20lg%20lg%20lg%20lg%20lg",MAT_C1,MAT_C2,MAT_C3,MAT_C4,MAT_INST);
        }
	if (ID_CARD_EXIST==TRUE)
	{
	 COMMENT("#  FAIL_ID") ;
	}
	FREE_CARD(ID_CARD_EXIST,"%10d", _ID_);	
}	
