//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- fail_sahraei.cfg ---

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES
    mat_id                                      = VALUE(MAT,  "Material");
    //Card 1
    Fct_Ratio                                   = VALUE(FUNCT,"Strain ratio function ID");
    Comp_dir                                    = VALUE(INT  ,"In-plane compression direction");
    Vol_strain                                  = VALUE(FLOAT,"Volumetric strain limit" );
    Max_Comp_Strain                             = VALUE(FLOAT,"In-plane compression failure strain");
    Ratio                                       = VALUE(FLOAT,"Strain ratio for in-plane compression failure");

    //Card 2  
    NUM                                         = VALUE(INT ,"Numerator flag for strain-ratio");     
    DEN                                         = VALUE(INT ,"Denominator flag for strain-ratio");    
    ORDI                                        = VALUE(INT ,"Failure ordinate for failure limit");
    Fct_Elsize                                  = VALUE(FUNCT,"Element size regularization function ID");
    EL_REF                                      = VALUE(FLOAT,"Reference element size");
    IDEL                                        = VALUE(INT ,"Compression damage element deletion flag");

    //Optional line
    fail_id                                     = VALUE(INT ,"Failure criteria identifier");

    // HM INTERNAL
    KEYWORD_STR                                 = VALUE(STRING,"Solver Keyword");
    ID_CARD_EXIST                               = VALUE(BOOL, "ID_CARD_EXIST or not");
}
DEFINITIONS(COMMON) {
  SUPPORTING=(mat_id);
}
SKEYWORDS_IDENTIFIER(COMMON)
{
    // HM INTERNAL
    KEYWORD_STR                                 = 9000;
}

CHECK(COMMON)
{
}

DEFAULTS(COMMON)
{
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/FAIL/SAHRAEI/");
    
    SCALAR(Vol_strain)                          { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(Max_Comp_Strain)                     { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(Ratio)                               { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(EL_REF)                              { DIMENSION = "l" ; }
    
    optional:
    FLAG(ID_CARD_EXIST);
}

FORMAT(radioss2022)
{
    HEADER("/FAIL/SAHRAEI/%-d", mat_id);

    //Card 1
    COMMENT("#Fct_ratio       NUM     DENOM     ORDIN          VOL_STRAIN            Fct_IDEL              EL_REF");
    CARD("%10d%10d%10d%10d%20lg%10s%10d%20lg",Fct_Ratio,NUM,DEN,ORDI,Vol_strain,_BLANK_,Fct_Elsize,EL_REF);

    //Card 2
    
    COMMENT("# COMP_DIR      IDEL     MAX_COMP_STRAIN               RATIO");
    CARD("%10d%10d%20lg%20lg",Comp_dir,IDEL,Max_Comp_Strain,Ratio);    

    //Optional line
    if (ID_CARD_EXIST==TRUE)
    {
        COMMENT("#  FAIL_ID") ;
    }
    FREE_CARD(ID_CARD_EXIST,"%10d", _ID_);
}
