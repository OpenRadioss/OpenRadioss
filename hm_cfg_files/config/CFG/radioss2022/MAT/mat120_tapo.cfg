//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 120 (TAPO) Setup File
// 

// MCDS attributes description
ATTRIBUTES(COMMON) {
    // Initial and reference densities
    MAT_RHO                         = VALUE(FLOAT,"Initial Density");
    Refer_Rho                       = VALUE(FLOAT,"Reference Density (for lower than 14.0 version)");
    DUMMY                           = VALUE(STRING,"Dummy variable for Ref_Rho flag");
    MAT_REFRHO_Option               = VALUE(INT, "RefRho_Option");
    MAT_E                           = VALUE(FLOAT, "Young's Modulus");
    MAT_NU                          = VALUE(FLOAT, "Poisson's Ratio");
    MAT_THICK                       = VALUE(FLOAT, "Reference cohesive thickness");				
    MAT_TAB_ID                      = VALUE(FUNCT, "Stress-strain plastic yield function");
    MAT_Xscale                      = VALUE(FLOAT, "Scale factor for strain rate abscissa in tab_ID");
    MAT_Yscale                      = VALUE(FLOAT, "Scale factor for ordinate for tab_ID");
    MAT_TAU                         = VALUE(FLOAT, "Initial shear yield stress");
    MAT_Q                           = VALUE(FLOAT, "Isotropic nonlinear Hardening Modulus");
    MAT_B                           = VALUE(FLOAT, "Isotropic exponential decay parameter");
    MAT_H                           = VALUE(FLOAT, "Isotropic linear Hardening Modulus");
    MAT_AF1                         = VALUE(FLOAT, "Initial Yield Function Parameter A1");
    MAT_AF2                         = VALUE(FLOAT, "Initial Yield Function Parameter A2");
    MAT_AH1                         = VALUE(FLOAT, "Initial Yield Function Parameter A1");
    MAT_AH2                         = VALUE(FLOAT, "Initial Yield Function Parameter A2");
    MAT_AS                          = VALUE(FLOAT, "Plastic Potential Parameter AS");
    MAT_D1C                         = VALUE(FLOAT, "strain parameter in fracture criteria");
    MAT_D2C                         = VALUE(FLOAT, "strain parameter in fracture criteria");
    MAT_D1F                         = VALUE(FLOAT, "strain parameter in fracture criteria");
    MAT_D2F                         = VALUE(FLOAT, "strain parameter in fracture criteria");
    D_TRX                           = VALUE(FLOAT, "triaxiality flag in damage criteria");
    D_JC                            = VALUE(FLOAT, "strain rate flag in damage criteria");
    MAT_EXP                         = VALUE(FLOAT, "Exponent of Damage Model");
    MAT_CC                          = VALUE(FLOAT, "Strain rate coefficient");
    MAT_GAM0                        = VALUE(FLOAT, "Quasi-Static Treshold Strain");
    MAT_GAMF                        = VALUE(FLOAT, "Maximum Treshold Strain");
    MAT_IFORM                       = VALUE(INT,   "Yield formulation flag");
    MAT_ITRX                        = VALUE(INT,   "Pressure dependency flag");
    MAT_IDAM                        = VALUE(INT,   "Damage Model Flag");

    //Attributes for HM usage
    IO_FLAG                         = VALUE(INT, "");
    LAW_NO                          = VALUE(STRING, "");
    MAT_Bame_OR_LawNo               = VALUE(INT,  "RADIOSS_COMMENT_FLAG");
    TITLE                           = VALUE(STRING,"");
    // Support
    // NB_PARTS                     = SIZE("Number of Connected Parts"); 
    //COMPONENT                     = ARRAY[NB_PARTS](COMPONENT,"Connected Parts");
    KEYWORD_STR                     = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                    = SIZE("NUM_COMMENTS");
    CommentEnumField                = VALUE(INT,"User Comments");
    COMMENTS                        = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    // HEAT
    Heat_Inp_opt                    = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT                 = VALUE(SUBOBJECT, "");
    // THERM_STRESS
    THERM_STRESS                    = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS             = VALUE(SUBOBJECT, "");
    Optional_card                   = VALUE(INT,   "Optional card");
}


SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                     = 9000;
    COMMENTS                        = 5109;
    CommentEnumField                = 7951;
    MAT_REFRHO_Option               = 4285;
    MAT_RHO                         = 118;
    Refer_Rho                       = 4229;
    MAT_E                           = 119;
    MAT_NU                          = 120;
    MAT_Q                           = 995;
    MAT_H                           = 71;
    MAT_B                           = 5037;
    MAT_CC                           = 5038;
    MAT_TAU                        = 152;
    MAT_GAM0                         = 155;
    MAT_GAMF                         = 158;
    NUM_COMMENTS                    = 5110;
    //HEAT
    Heat_Inp_opt                    = 4346;
    SUBGRP_HEAT_MAT                 = -1;
    // THERM_STRESS
    THERM_STRESS                    = 4555;
    SUBGRP_THERM_STRESS             = -1;
    DUMMY                           = -1;

    LAW_NO                          = -1;
    MAT_Bame_OR_LawNo               = 4538;
    IO_FLAG                         = -1;
    TITLE                           = -1;
    Optional_card                   = 4826;
}

CHECK(COMMON)
{
    MAT_Q                           >= 0.0;
    MAT_E                           >  0.0;
    MAT_B                           >= 0.0;
    MAT_B                           <= 1.0;
    MAT_NU                          >= 0.0;
    MAT_NU                          <  0.5;
    MAT_RHO                         >  0.0;
    MAT_CC                          >= 0.0;
    MAT_TAU                         >  0.0;
    MAT_Yscale                      >  0.0;
}

DEFAULTS(COMMON)
{
    MAT_IFORM                       = 1    ;
    MAT_Yscale                      = 1.0  ;
    MAT_H                           = 0.0;
    MAT_B                           = 1.0;
    MAT_CC                          = 10E20;
}

// Drawable values
DRAWABLES(COMMON) {
public:
    INITIAL_DENSITY                 = SCALAR(MAT_RHO);
    YOUNG_MODULUS                   = SCALAR(MAT_E);
    POISSON_RATIO                   = SCALAR(MAT_NU);
public:
    SOUND_SPEED                     = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
private:
    G                               = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
    C1                              = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
public:
    SOUND_SPEED_SOLID               = EVAL(((4*G/3+C1)/INITIAL_DENSITY)^0.5);
}

// GUI description (Common domain)
GUI(COMMON) {
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if(MAT_Bame_OR_LawNo == 2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW120/");
    }
    else 
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/TAPO/");
    }
    FLAG(MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)   { DIMENSION="density";    }
    }
mandatory:
    SCALAR(MAT_RHO)         { DIMENSION="density";    }
    //
    SCALAR(MAT_E)           { DIMENSION="pressure";      }
optional:
    SCALAR(MAT_NU);
    //
mandatory:
    SCALAR(MAT_TAU)         { DIMENSION="pressure";      }
optional:
    DATA(MAT_TAB_ID);
    SCALAR(MAT_Xscale)      { DIMENSION="f";             }
    SCALAR(MAT_Yscale)      { DIMENSION="pressure";      }
    SCALAR(MAT_Q)           { DIMENSION="pressure";      }
    SCALAR(MAT_B)           { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_H)           { DIMENSION="pressure";      }
    SCALAR(MAT_CC)          { DIMENSION="DIMENSIONLESS"; }
				SCALAR(MAT_THICK)       { DIMENSION="l"; }
    //
    SCALAR(MAT_GAM0)        { DIMENSION="f";             }
    SCALAR(MAT_GAMF)        { DIMENSION="f";             }
    //
    FLAG(Optional_card);
optional:
    // HEAT data
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }

    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    }
}
// File format
FORMAT(radioss2022) {

    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(MAT_Bame_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && MAT_Bame_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW120/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/TAPO/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#        Init. dens.          Ref. dens.");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#        Init. dens.");
        CARD("%20lg",MAT_RHO);
    }
    //
           //#---1----|----2----|----3----|----4----|----5----|----6----|----7----|----8----|----9----|---10----|
    COMMENT("#                  E                  nu     Iform      Itrx      Idam                         THICK");
    CARD("%20lg%20lg%10d%10d%10d%10s%20lg",MAT_E,MAT_NU,MAT_IFORM,MAT_ITRX,MAT_IDAM,_BLANK_,MAT_THICK); 
    //
           //#---1----|----2----|----3----|----4----|----5----|----6----|----7----|----8----|----9----|---10----|
    COMMENT("# Table_Id              Xscale              Yscale");
    CARD("%10d%20lg%20lg",MAT_TAB_ID,MAT_Xscale,MAT_Yscale);
    //
    COMMENT("#                 T0                   Q                Beta                   H");
    CARD("%20lg%20lg%20lg%20lg",MAT_TAU,MAT_Q,MAT_B,MAT_H);
    //
    COMMENT("#                AF1                 AF2                 AH1                 AH2                  AS");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_AF1,MAT_AF2,MAT_AH1,MAT_AH2,MAT_AS);
    //
    COMMENT("#                  C               EPSD0               EPSDF");
    CARD("%20lg%20lg%20lg",MAT_CC,MAT_GAM0,MAT_GAMF);
    //
    COMMENT("#                D1C                 D2C                 D1F                 D2F");
    CARD("%20lg%20lg%20lg%20lg",MAT_D1C,MAT_D2C,MAT_D1F,MAT_D2F);
    //
           //#---1----|----2----|----3----|----4----|----5----|----6----|----7----|----8----|----9----|---10----|
    COMMENT("#               Dtrx                 Djc               EXP_N");
    CARD("%20lg%20lg%20lg",D_TRX,D_JC,MAT_EXP);

    //
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
