//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// inter_type_25
//

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    secondaryentityids                      = VALUE(SETS, "Optional first surface identifier")  { SUBTYPES = (/SETS/SURF) ; }
    mainentityids                           = VALUE(SETS, "Optional second surface identifier") { SUBTYPES = (/SETS/SURF) ; }

    Istf                                    = VALUE(INT,    "Interface stiffness definition flag");
    Ithe                                    = VALUE(INT,    "Heat contact flag");
    IGAP                                    = VALUE(INT,    "Gap/element option flag");
    Irem_i2                                 = VALUE(INT,    "Flag for deactivating the secondary node, if the same contact pair (nodes) has been defined in interface TYPE2");
    TYPE24_Idel                             = VALUE(INT,    "Node and segment deletion flag");
    TYPE24_Iedge                            = VALUE(INT,    "Edge contact options");

    GRNOD_ID                                = VALUE(SETS,        "Optional node group identifier")                         { SUBTYPES = (/SETS/GRNOD); }
    Gap_scale                               = VALUE(FLOAT,  "Gap scale factor for all Igap options");
    PrMesh_Size                             = VALUE(FLOAT,  "Percentage of mesh size (used only when Igap = 3)");
    GAP1                                    = VALUE(FLOAT,  "Secondary maximum gaps");
    GAP2                                    = VALUE(FLOAT,  "Main maximum gaps");

    STMIN                                   = VALUE(FLOAT,  "Minimum stiffness (used only when Istf > 1 and Istf < 7)");
    STMAX                                   = VALUE(FLOAT,  "Maximum stiffness (used only when Istf > 1 and Istf < 7)");
    Igap                                    = VALUE(INT,    "Gap modification flag for secondary shell nodes on the free edges or shell elements");
    Ishape                                  = VALUE(INT,    "Flag defining the shape of the gap along the surface(s) external border in the node to surface contact");
    TYPE24_Edge_Angle                       = VALUE(FLOAT,  "Edge angle");

    STFAC                                   = VALUE(FLOAT,  "Interface stiffness scale factor");
    FRIC                                    = VALUE(FLOAT,  "Coulomb friction");
    TSTART                                  = VALUE(FLOAT,  "Start time");
    TSTOP                                   = VALUE(FLOAT,  "Time for temporary deactivation");

    Deactivate_X_BC                         = VALUE(INT,    "Deactivation flag of X boundary conditions at impact");
    Deactivate_Y_BC                         = VALUE(INT,    "Deactivation flag of Y boundary conditions at impact");
    Deactivate_Z_BC                         = VALUE(INT,    "Deactivation flag of Z boundary conditions at impact");
    IVIS2                                   = VALUE(INT,    "Interface adhesion flag");
    INACTIV                                 = VALUE(INT,    "Initial penetration flag");
    STIFF_DC                                = VALUE(FLOAT,  "Critical damping coefficient on interface stiffness");
    Tpressfit                               = VALUE(FLOAT,  "Time duration to apply contact forces due to initial penetrations");
    Ithick                                  = VALUE(INT,    "Gap variation according to actual thickness");
    Pmax                                    = VALUE(FLOAT,  "Maximum contact pressure, due to thickening");

    Ifric                                   = VALUE(INT,    "Friction formulation flag");
    Ifiltr                                  = VALUE(INT,    "Friction filtering flag");
    Xfreq                                   = VALUE(FLOAT,  "Filtering coefficient");
    ISENSOR                                 = VALUE(SENSOR,      "Sensor identifier to activate/deactivate the interface") { SUBTYPES = (/SENSOR/TIME) ; }
    Fric_ID                                 = VALUE(FRICTION,    "Friction identifier for friction definition for selected pairs of parts");

    C1                                      = VALUE(FLOAT,  "Friction law coefficient");
    C2                                      = VALUE(FLOAT,  "Friction law coefficient");
    C3                                      = VALUE(FLOAT,  "Friction law coefficient");
    C4                                      = VALUE(FLOAT,  "Friction law coefficient");
    C5                                      = VALUE(FLOAT,  "Friction law coefficient");

    C6                                      = VALUE(FLOAT,  "Friction law coefficient");

    ViscFluid                               = VALUE(FLOAT,  "Viscosity of the fluid at the interface");
    SigMaxAdh                               = VALUE(FLOAT,  "Maximum transverse adhesive stress at interface");
    ViscAdhFact                             = VALUE(FLOAT,  "Scaling factor for tangential viscous resistive force");

    Kthe                                      = VALUE(FLOAT,"Heat exchange coefficient");
    fct_ID_k                                  = VALUE(FUNCT,"Function identifier for thermal heat exchange definition with contact pressure");
    T_Initial                                 = VALUE(FLOAT,"Interface temperature");
    IFORM1                                    = VALUE(INT,"Heat contact formulation flag");
    Crx                                       = VALUE(FLOAT,"Abscissa scale factor on fct_IDK");
    F_RAD                                     = VALUE(FLOAT,"Radiation factor");
    D_RAD                                     = VALUE(FLOAT,"Maximum distance for radiation computation");
    Fmax                                      = VALUE(FLOAT,"Frictional heating factor of secondary");
    HEAT_AL                                   = VALUE(FLOAT,"Frictional heating factor of main");
    FRIC_FUN                                  = VALUE(FUNCT,        "Function identifier for friction coefficient with temperature");
    D_COND                                    = VALUE(FLOAT,"Maximum conduction distance");
    F_COND                                    = VALUE(FUNCT,"Function identifier for the conductive heat exchange coefficient definition as a function of distance  ");
 
    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    TITLE                                   = VALUE(STRING, "Interface title");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    Istf                                    = 8044;
    Ithe                                    = 4735;
    IGAP                                    = 2988;
    Irem_i2                                 = 5408;
    TYPE24_Idel                             = 2598;
    TYPE24_Iedge                            = 2599;

    GRNOD_ID                                = 8056;
    Gap_scale                               = 2761;
    PrMesh_Size                             = 4828;
    GAP1                                    = 805;
    GAP2                                    = 806;

    STMAX                                   = 4024;
    STMIN                                   = 4023;
    Igap                                    = 8045;
    Ishape                                  = 2757;
    TYPE24_Edge_Angle                       = 2600;

    STFAC                                   = 4253;
    FRIC                                    = 5;
    TSTART                                  = 11;
    TSTOP                                   = 12;

    Deactivate_X_BC                         = 7020;
    Deactivate_Y_BC                         = 7021;
    Deactivate_Z_BC                         = 7022;
    IVIS2                                   = 4256;
    INACTIV                                 = 94;
    STIFF_DC                                = 6;
    Ithick                                  = 8007;
    Pmax                                    = 8146;

    Ifric                                   = 6303;
    Ifiltr                                  = 6304;
    Xfreq                                   = 6305;
    ISENSOR                                 = 5157;
    Fric_ID                                 = 6550;
    Tpressfit                               = -1;

    C1                                      = 6306;
    C2                                      = 6307;
    C3                                      = 6308;
    C4                                      = 6309;
    C5                                      = 6310;

    C6                                      = 6311;

    ViscFluid                               = 2758;
    SigMaxAdh                               = 2759;
    ViscAdhFact                             = 2760;

    Kthe                                    = 4736;
    fct_ID_k                                = 695;
    T_Initial                               = 4113;
    IFORM1                                  = 4796;
    Crx                                     = 4122;
    F_RAD                                   = 697;
    D_RAD                                   = 698;
    Fmax                                    = 4830;
    HEAT_AL                                 = 4344;
    FRIC_FUN                                = -1;
    D_COND                                  = -1;
    F_COND                                  = -1;
    
    //HM INTERNAL
    KEYWORD_STR                             = 9000;
    TITLE                                   = -1;
}

DEFAULTS(COMMON)
{
    Gap_scale                               = 1.0;
    PrMesh_Size                             = 0.4;
    GAP1                                    = 10E30;
    GAP2                                    = 10E30;
    STMAX                                   = 10E30;
    TYPE24_Edge_Angle                       = 135.0;
    STFAC                                   = 1.0;
    TSTOP                                   = 10E30;
    IVIS2                                   = 0;
    INACTIV                                 = 0;
    STIFF_DC                                = 0.05;
    Pmax                                    = 10E30;
    Ifric                                   = 0;
    Ifiltr                                  = 0;
    Xfreq                                   = 1.0;
    Kthe                                    = 0.0;
    IFORM1                                  = 0;
    Crx                                     = 1.0;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/INTER/TYPE25/");

    DATA(mainentityids, "surf_ID1");
    DATA(secondaryentityids,  "surf_ID2");

    RADIO(Istf, "Istf")
    {
       ADD(0, "0: set to value defined in /DEFAULT/INTER/TYPE25");
       ADD(2, "2: Interface stiffness is the average of the main and secondary stiffness");
       ADD(3, "3: Interface stiffness is the maximum of the main and secondary stiffness");
       ADD(4, "4: Interface stiffness is the minimum of the main and secondary stiffness");
       ADD(5, "5: Interface stiffness is the main and secondary stiffness in series");
       ADD(1000, "1000: (Default if /DEFAULT/INTER/TYPE25 is not defined) Interface stiffness is only based on the main side stiffness");
    }
    RADIO(IGAP)
    {
       ADD(0, "0: Use value defined in /DEFAULT/INTER/TYPE25");
       ADD(1, "1: (default if /DEFAULT/INTER/TYPE25 is not defined) variable gap varies according to the characteristics of the impacted main surface and the impacting secondary node");
       ADD(2, "2: variable gap (similar to Igap=1) and deactivating secondary nodes if element size < gap value, in case of self-impact contact");
       ADD(3, "3: variable gap where the size of the mesh (defined in %mesh_size) is considered to avoid initial penetrations in self contact");
    }
    RADIO(Irem_i2, "Irem_i2")
    {
        ADD(0, "0: Set to the value defined in /DEFAULT/INTER/TYPE25");
        ADD(1, "1: (Default if /DEFAULT/INTER/TYPE25 is not defined) secondary nodes in /INTER/TYPE2 tied contacts are removed from this contact");
        ADD(3, "3: No change to secondary nodes");
    }
    RADIO(TYPE24_Idel, "Idel")
    {
        ADD(0, "0: set to the value defined in /DEFAULT/INTER/TYPE25");
        ADD(1, "1: when all the elements (4-node shells, 3-node shells, solids) associated to one segment are deleted, the segment is removed from the main side of the interface");
        ADD(2, "2: when a 4-node shell, a 3-node shell or a solid element is deleted, the corresponding segment is removed from the main side of the interface");
        ADD(1000, "1000: (default if /DEFAULT/INTER/TYPE25 is not defined) no deletion");
    }
    RADIO(TYPE24_Iedge, "Iedge")
    {
        ADD(0, "0: set to the value defined in /DEFAULT/INTER/TYPE25");
        ADD(1, "1: The secondary and the main edges are external border edges of shell segments");
        ADD(11, "11: The secondary edges are the sharp edges of the external solid segments and external border edges of shell segments. The main edges are all edges from external solid segments and external border edges of shell segments");
        ADD(13, "13: The secondary edges are the sharp edges of the external solid segments and external border edges of shell segments. The main edges are all edges from external solid segments and all shell segments");
        ADD(22, "22: The secondary and main edges are all edges from external solid segments and all shell segments");
        ADD(1000, "1000: no edge to edge contact (default if /DEFAULT/INTER/TYPE25 is not defined)");
    }
    DATA(GRNOD_ID);
    SCALAR(Gap_scale, "Gap_scale")                                {DIMENSION="DIMENSIONLESS";}
    if(IGAP == 3)
    {
        SCALAR(PrMesh_Size, "Percentage_mesh_size")               {DIMENSION="DIMENSIONLESS";}
    }
    SCALAR(GAP1, "Gap_max_s")                                     {DIMENSION="l";}
    SCALAR(GAP2, "Gap_max_m")                                     {DIMENSION="l";}


    if(Istf == 2 || Istf == 3 || Istf == 4 || Istf == 5)
    {
       SCALAR(STMIN, "Stmin")                                     {DIMENSION="translation_stiffness";}
       SCALAR(STMAX, "Stmax")                                     {DIMENSION="translation_stiffness";}
    }
    RADIO(Igap, "Igap0")
    {
        ADD(0, "0: set to the value defined in /DEFAULT/INTER/TYPE25");
        ADD(1, "1: set gap to zero for the secondary shell nodes. Shell edges are shifted so that the edge does not extend out of the secondary shell segment (if edge treatment is activated)");
        ADD(1000, "1000: no change. Shell edges are not shifted (if edge treatment is activated). (default in case /DEFAULT/INTER/TYPE25 is not defined)");
    }
    RADIO(Ishape, "Ishape")
    {
        ADD(0, "0: set to the value defined in /DEFAULT/INTER/TYPE25");
        ADD(1, "1: square gap (default in case /DEFAULT/INTER/TYPE25 is not defined)");
        ADD(2, "2: round gap");
    }
    SCALAR(TYPE24_Edge_Angle, "Edge angle")                       {DIMENSION="a";}
    SCALAR(STFAC, "Stfac")                                        {DIMENSION="DIMENSIONLESS";}
    SCALAR(FRIC, "Fric")                                          {DIMENSION="DIMENSIONLESS";}
    SCALAR(TSTART, "Tstart")                                      {DIMENSION="t";}
    SCALAR(TSTOP, "Tstop")                                        {DIMENSION="t";}
    SCALAR(Tpressfit, "Tpressfit")                                {DIMENSION="t";}
    FLAG(Deactivate_X_BC, "IBC");
    FLAG(Deactivate_Y_BC, "IBC");
    FLAG(Deactivate_Z_BC, "IBC");
    RADIO(IVIS2, "IVIS2")
    {
        ADD(0, "0: No adhesion interface forces");
        ADD(-1, "-1: Enable transverse adhesion and tangential viscous force");
    }
    RADIO(INACTIV, "Inacti")
    {
        ADD(0, "0: set to the value defined in /DEFAULT/INTER/TYPE25");
        ADD(-1, "-1: all initial penetrations are taken into account");
        ADD(5, "5: the main segment is shifted by the initial penetration value Po");
        ADD(1000, "1000: only tiny initial penetrations will be taken into account");
    }
    SCALAR(STIFF_DC, "VISs")                                      {DIMENSION="DIMENSIONLESS";}
    RADIO(Ithick, "Ithick")
    {
        ADD(0, "0: set to the value defined in /DEFAULT/INTER/TYPE25");
        ADD(1, "1: gap on main side varies in time according to the actual thickness of 4-node and 3-node shell elements");
        ADD(1000, "1000: gap does not vary in time");
    }
    SCALAR(Pmax, "Pmax")                                          {DIMENSION="pressure";}
    RADIO(Ifric, "Ifric")
    {
        ADD(0, "0: Static Coulomb friction law");
        ADD(1, "1: Generalized viscous friction law");
        ADD(2, "2: Darmstad friction law");
        ADD(3, "3: Renard friction law");

    }
    RADIO(Ifiltr, "Ifiltr")
    {
        ADD(0, "0: no filter is used");
        ADD(1, "1: simple numerical filter");
        ADD(2, "2: standard -3dB filter with filtering period");
        ADD(3, "3: standard -3dB filter with cutting frequency");
    }
    SCALAR(Xfreq, "Xfreq")                                       {DIMENSION="f";}
    DATA(ISENSOR);
    DATA(Fric_ID);
    if(Ifric>0) 
    {
      SCALAR(C1) {
        if (Ifric==1)      { TITLE = "Friction C1 (Viscous law)"  ; DIMENSION = "inverse_of_pressure"; }
        else if (Ifric==2) { TITLE = "Friction C1 (Darmstad law)" ; DIMENSION = "inverse_of_square_of_pressure"; }
        else if (Ifric==3) { TITLE = "Friction C1 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
                 }  
      SCALAR(C2) {
        if (Ifric==1)      { TITLE = "Friction C2 (Viscous law)"  ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==2) { TITLE = "Friction C2 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==3) { TITLE = "Friction C2 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }      }  
      SCALAR(C3) {
        if (Ifric==1)      { TITLE = "Friction C3 (Viscous law)"  ; DIMENSION = "inverse_surfacic_power"; }
        else if (Ifric==2) { TITLE = "Friction C3 (Darmstad law)" ; DIMENSION = "inverse_of_pressure"; }
        else if (Ifric==3) { TITLE = "Friction C3 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
                 }  
      SCALAR(C4) {
        if (Ifric==1)      { TITLE = "Friction C4 (Viscous law)"  ; DIMENSION = "inverse_of_square_of_pressure"; }
        else if (Ifric==2) { TITLE = "Friction C4 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==3) { TITLE = "Friction C4 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
                 }  
      SCALAR(C5) {
        if (Ifric==1)      { TITLE = "Friction C5 (Viscous law)"  ; DIMENSION = "inverse_of_square_of_speed"; }
        else if (Ifric==2) { TITLE = "Friction C5 (Darmstad law)" ; DIMENSION = "DIMENSIONLESS"; }
        else if (Ifric==3) { TITLE = "Friction C5 (Renard law)"   ; DIMENSION = "velocity"; }
                 }
    }
    if(Ifric>1) {
      SCALAR(C6) {
       if (Ifric==2)      { TITLE = "Friction C6 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
       else if (Ifric==3) { TITLE = "Friction C6 (Renard law)"   ; DIMENSION = "velocity"; }
                } 
    }

    if(IVIS2 == -1)
    {
        SCALAR(ViscFluid, "ViscFluid")                           {DIMENSION="dynamicviscosity";}
        SCALAR(SigMaxAdh, "SigMaxAdh")                           {DIMENSION="pressure";}
        SCALAR(ViscAdhFact, "ViscAdhFact")                       {DIMENSION="DIMENSIONLESS";}
    }
    if (Ithe > 0)
    {
      SCALAR(Kthe, "Kthe")
      {
              if (fct_ID_k==NONE)      { TITLE = "Heat exchange coefficient"  ; DIMENSION = "thermal_convectivity"; }
              else                     { TITLE = "Heat exchange scale factor" ; DIMENSION = "DIMENSIONLESS"; }
      }
      DATA(fct_ID_k);
      SCALAR(T_Initial)                             { DIMENSION="k"; }
      RADIO(IFORM1) {
        ADD(0,"0: Exchange only between interface (constant temperature) and shells (secondary side)");
        ADD(1,"1: Heat exchange between all pieces in contact");
      }
      SCALAR(Crx)                                   { DIMENSION="pressure"; }

      SCALAR(F_RAD)                                 { DIMENSION="stefan_lorentz_constant"; }
      SCALAR(D_RAD)                                 { DIMENSION="l"; }
      SCALAR(Fmax)                                  { DIMENSION="DIMENSIONLESS"; }
      SCALAR(HEAT_AL)                               { DIMENSION="DIMENSIONLESS"; }
      DATA(FRIC_FUN);
      SCALAR(D_COND)                                { DIMENSION="l"; }
      DATA(F_COND);      
    }
}

// File format
FORMAT(radioss2018)
{
    HEADER("/INTER/TYPE25/%d",_ID_);
    CARD("%-100s",TITLE);

    COMMENT("# surf_ID1  surf_ID2      Istf                Igap                          Idel");
    CARD("%10d%10d%10d%10s%10d%20s%10d",secondaryentityids, mainentityids,Istf,_BLANK_,IGAP,_BLANK_,TYPE24_Idel);

    COMMENT("# grnd_IDs                                        %mesh_size           Gap_max_s           Gap_max_m");
    CARD("%10d%30s%20lg%20lg%20lg",GRNOD_ID,_BLANK_,PrMesh_Size,GAP1,GAP2);

    COMMENT("#              Stmin               Stmax     Igap0");
    CARD("%20lg%20lg%10d",STMIN,STMAX,Igap);

    COMMENT("#              Stfac                Fric                                  Tstart               Tstop");
    CARD("%20lg%20lg%20s%20lg%20lg",STFAC,FRIC,_BLANK_,TSTART,TSTOP);

    COMMENT("#      IBC                        Inacti                VISs");
    CARD("%7s%1d%1d%1d%20s%10d%20lg",_BLANK_,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,_BLANK_,INACTIV,STIFF_DC);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID                                 fric_ID");
    CARD("%10d%10d%20lg%10s%10d%30s%10d",Ifric,Ifiltr,Xfreq,_BLANK_,ISENSOR,_BLANK_,Fric_ID);

    if(Ifric > 0)
    {
        COMMENT("#                 C1                  C2                  C3                  C4                  C5");
        CARD("%20lg%20lg%20lg%20lg%20lg",C1,C2,C3,C4,C5);
    }
    if(Ifric > 1)
    {
        COMMENT("#                 C6");
        CARD("%20lg",C6);
    }
}

FORMAT(radioss2019)
{
    HEADER("/INTER/TYPE25/%d",_ID_);
    CARD("%-100s",TITLE);

    COMMENT("# surf_ID1  surf_ID2      Istf                Igap   Irem_i2                Idel");
    CARD("%10d%10d%10d%10s%10d%10d%10s%10d",secondaryentityids, mainentityids,Istf,_BLANK_,IGAP,Irem_i2,_BLANK_,TYPE24_Idel);

    COMMENT("# grnd_IDs                     Gap_scale          %mesh_size           Gap_max_s           Gap_max_m");
    CARD("%10d%10s%20lg%20lg%20lg%20lg",GRNOD_ID,_BLANK_,Gap_scale ,PrMesh_Size,GAP1,GAP2);

    COMMENT("#              Stmin               Stmax     Igap0    Ishape");
    CARD("%20lg%20lg%10d%10d",STMIN,STMAX,Igap,Ishape);

    COMMENT("#              Stfac                Fric                                  Tstart               Tstop");
    CARD("%20lg%20lg%20s%20lg%20lg",STFAC,FRIC,_BLANK_,TSTART,TSTOP);

    COMMENT("#      IBC               IVIS2    Inacti                VISs");
    CARD("%7s%1d%1d%1d%10s%10d%10d%20lg",_BLANK_,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,_BLANK_,IVIS2,INACTIV,STIFF_DC);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID                                 fric_ID");
    CARD("%10d%10d%20lg%10s%10d%30s%10d",Ifric,Ifiltr,Xfreq,_BLANK_,ISENSOR,_BLANK_,Fric_ID);

    if(Ifric > 0)
    {
        COMMENT("#                 C1                  C2                  C3                  C4                  C5");
        CARD("%20lg%20lg%20lg%20lg%20lg",C1,C2,C3,C4,C5);
    }
    if(Ifric > 1)
    {
        COMMENT("#                 C6");
        CARD("%20lg",C6);
    }

    if(IVIS2 == -1)
    {
        COMMENT("#          ViscFluid           SigMaxAdh         ViscAdhFact");
        CARD("%20lg%20lg%20lg",ViscFluid,SigMaxAdh,ViscAdhFact);
    }
}

FORMAT(radioss2021)
{
    HEADER("/INTER/TYPE25/%d",_ID_);
    CARD("%-100s",TITLE);

    COMMENT("# surf_ID1  surf_ID2      Istf      Ithe      Igap   Irem_i2                Idel     Iedge");
    CARD("%10d%10d%10d%10d%10d%10d%10s%10d%10d",secondaryentityids,mainentityids,Istf,Ithe,IGAP,Irem_i2,_BLANK_,TYPE24_Idel,TYPE24_Iedge);

 
    COMMENT("# grnd_IDs                     Gap_scale          %mesh_size           Gap_max_s           Gap_max_m");
    CARD("%10d%10s%20lg%20lg%20lg%20lg",GRNOD_ID,_BLANK_,Gap_scale,PrMesh_Size,GAP1,GAP2);
    
    COMMENT("#              Stmin               Stmax     Igap0    Ishape          Edge_angle");
    CARD("%20lg%20lg%10d%10d%20lg",STMIN,STMAX,Igap,Ishape,TYPE24_Edge_Angle);

    COMMENT("#              Stfac                Fric                                  Tstart               Tstop");
    CARD("%20lg%20lg%20s%20lg%20lg",STFAC,FRIC,_BLANK_,TSTART,TSTOP);

    COMMENT("#      IBC               IVIS2    Inacti                VISs    Ithick                          Pmax");
    CARD("%7s%1d%1d%1d%10s%10d%10d%20lg%10d%10s%20lg",_BLANK_,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,_BLANK_,IVIS2,INACTIV,STIFF_DC,Ithick,_BLANK_,Pmax);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID                                 fric_ID");
    CARD("%10d%10d%20lg%10s%10d%30s%10d",Ifric,Ifiltr,Xfreq,_BLANK_,ISENSOR,_BLANK_,Fric_ID);

    if(Ifric > 0)
    {
        COMMENT("#                 C1                  C2                  C3                  C4                  C5");
        CARD("%20lg%20lg%20lg%20lg%20lg",C1,C2,C3,C4,C5);
    }
    if(Ifric > 1)
    {
        COMMENT("#                 C6");
        CARD("%20lg",C6);
    }

    if(IVIS2 == -1)
    {
        COMMENT("#          ViscFluid           SigMaxAdh         ViscAdhFact");
        CARD("%20lg%20lg%20lg",ViscFluid,SigMaxAdh,ViscAdhFact);
    }
    if (Ithe > 0)
    {
        COMMENT("#               Kthe             fct_IDK                Tint           Ithe_form             AscaleK");
        CARD("%20lg%10s%10d%20lg%10s%10d%20lg",Kthe,_BLANK_,fct_ID_k,T_Initial,_BLANK_,IFORM1,Crx);
        COMMENT("#               Frad                Drad              Fheats              Fheatm            FRIC_FUN");
        CARD("%20lg%20lg%20lg%20lg%10s%10d",F_RAD,D_RAD,Fmax,HEAT_AL,_BLANK_,FRIC_FUN);
        COMMENT("#              Fcond               Dcond");
        CARD("%10s%10d%20lg",_BLANK_,F_COND,D_COND);
    }
}

FORMAT(radioss2022)
{
    HEADER("/INTER/TYPE25/%d",_ID_);
    CARD("%-100s",TITLE);

    COMMENT("# surf_ID1  surf_ID2      Istf      Ithe      Igap   Irem_i2                Idel     Iedge");
    CARD("%10d%10d%10d%10d%10d%10d%10s%10d%10d",secondaryentityids,mainentityids,Istf,Ithe,IGAP,Irem_i2,_BLANK_,TYPE24_Idel,TYPE24_Iedge);

 
    COMMENT("# grnd_IDs                     Gap_scale          %mesh_size           Gap_max_s           Gap_max_m");
    CARD("%10d%10s%20lg%20lg%20lg%20lg",GRNOD_ID,_BLANK_,Gap_scale,PrMesh_Size,GAP1,GAP2);
    
    COMMENT("#              Stmin               Stmax     Igap0    Ishape          Edge_angle");
    CARD("%20lg%20lg%10d%10d%20lg",STMIN,STMAX,Igap,Ishape,TYPE24_Edge_Angle);

    COMMENT("#              Stfac                Fric           Tpressfit              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg",STFAC,FRIC,Tpressfit,TSTART,TSTOP);

    COMMENT("#      IBC               IVIS2    Inacti                VISs    Ithick                          Pmax");
    CARD("%7s%1d%1d%1d%10s%10d%10d%20lg%10d%10s%20lg",_BLANK_,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,_BLANK_,IVIS2,INACTIV,STIFF_DC,Ithick,_BLANK_,Pmax);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID                                 fric_ID");
    CARD("%10d%10d%20lg%10s%10d%30s%10d",Ifric,Ifiltr,Xfreq,_BLANK_,ISENSOR,_BLANK_,Fric_ID);

    if(Ifric > 0)
    {
        COMMENT("#                 C1                  C2                  C3                  C4                  C5");
        CARD("%20lg%20lg%20lg%20lg%20lg",C1,C2,C3,C4,C5);
    }
    if(Ifric > 1)
    {
        COMMENT("#                 C6");
        CARD("%20lg",C6);
    }

    if(IVIS2 == -1)
    {
        COMMENT("#          ViscFluid           SigMaxAdh         ViscAdhFact");
        CARD("%20lg%20lg%20lg",ViscFluid,SigMaxAdh,ViscAdhFact);
    }
    if (Ithe > 0)
    {
        COMMENT("#               Kthe             fct_IDK                Tint           Ithe_form             AscaleK");
        CARD("%20lg%10s%10d%20lg%10s%10d%20lg",Kthe,_BLANK_,fct_ID_k,T_Initial,_BLANK_,IFORM1,Crx);
        COMMENT("#               Frad                Drad              Fheats              Fheatm            FRIC_FUN");
        CARD("%20lg%20lg%20lg%20lg%10s%10d",F_RAD,D_RAD,Fmax,HEAT_AL,_BLANK_,FRIC_FUN);
        COMMENT("#              Fcond               Dcond");
        CARD("%10s%10d%20lg",_BLANK_,F_COND,D_COND);
    }
}
