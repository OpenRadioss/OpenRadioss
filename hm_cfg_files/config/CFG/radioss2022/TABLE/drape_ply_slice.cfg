//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /DRAPE
//

ATTRIBUTES(COMMON)
{
// INPUT ATTRIBUTES
    entity_type                                = VALUE(STRING,"");
    elem_sh_n4                                 = VALUE(ELEMS,"The entity is a 4 nodes shell element")  { SUBTYPES = (/ELEMS/SHELL) ; }
    elem_sh_n3                                 = VALUE(ELEMS,"The entity is a 3 nodes shell element")  { SUBTYPES = (/ELEMS/SH3N) ; }
    grshel_id                                  = VALUE(SETS,"The entity is a group of 4 nodes shell element")  { SUBTYPES = (/SETS/GRSHEL) ; }
    grtria_id                                  = VALUE(SETS,"The entity is a group of 3 nodes shell element")  { SUBTYPES = (/SETS/GRSH3N) ; }

    slicelistmax                               = SIZE("Number of slice card"); 
    thinning                                   = ARRAY[slicelistmax](FLOAT,"Slice thinning factor");    
    theta_slice                                = ARRAY[slicelistmax](FLOAT,"Slice orientation change");
    mat_ID                                     = ARRAY[slicelistmax](MAT,"Material ID");
    npt_slice                                  = ARRAY[slicelistmax](INT,"Number of slice integration point");
    
    // HM INTERNAL
    IO_FLAG                                    = VALUE(INT, "");
    // In the following SUBTYPES, the sets are commented out so that they don't disturb the used/unused scan.
    // If they need to be uncommented, the attribute should be cleared at the end of the import.
    tmp                                        = VALUE(MULTIOBJECT,"temp") { SUBTYPES = (/ELEMS/SHELL, /ELEMS/SH3N, /SETS/GRSHEL, /SETS/GRSH3N) ; }
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    entity_type                                = -1;
    elem_sh_n4                                 = -1;
    elem_sh_n3                                 = -1;
    thinning                                   = -1;
    theta_slice                                = -1;
    mat_ID                                     = -1;
    npt_slice                                  = -1;
    IO_FLAG                                    = -1;
    slicelistmax                               = -1;
    tmp                                        = -1;
}


GUI(COMMON)
{
    RADIO(entity_type)
    {
        ADD("SHELL","SHELL");
        ADD("SH3N","SH3N");
        ADD("GRSHEL","GRSHEL");
        ADD("GRSH3N","GRSH3N");
    }
    if (entity_type=="SHELL")
    {
        DATA(elem_sh_n4);
    }
    else if (entity_type=="SH3N")
    {
        DATA(elem_sh_n3);
    }
    else if (entity_type=="GRSHEL")
    {
        DATA(grshel_id);
    }
    else if (entity_type=="GRSH3N")
    {
        DATA(grtria_id);
    }
    SIZE(slicelistmax, "");
    ARRAY(slicelistmax,"")
    {
        SCALAR(thinning)               { DIMENSION = "DIMENSIONLESS"; }
        SCALAR(theta_slice)            { DIMENSION = "a"; }
        SCALAR(npt_slice)              { DIMENSION = "DIMENSIONLESS"; }
        DATA(mat_ID);
    }
    
}
FORMAT(radioss2017)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    CARD_PREREAD("%-10s%10d",entity_type,tmp);
    if(IO_FLAG==0)
    {
        if(entity_type=="SHELL")
        {
           ASSIGN(tmp,elem_sh_n4,EXPORT);
        }
        else if(entity_type=="SH3N")
        {
            ASSIGN(tmp,elem_sh_n3,EXPORT);
        }
        else if(entity_type=="GRSHEL")
        {
            ASSIGN(tmp,grshel_id,EXPORT);
        }
        else if(entity_type=="GRSH3N")
        {
            ASSIGN(tmp,grtria_id,EXPORT);
        }
    }

    COMMENT("#   Entity Entity_ID            Thinning          thetaDrape");
    CARD("%-10s%10d",entity_type,tmp){NO_END;}
    FREE_CELL_LIST(slicelistmax,"%20lg%20lg",thinning,theta_slice){OFFSET("%-20s", "");}
    
    if(IO_FLAG==1)
    {
        if(entity_type=="SHELL")
        {
           ASSIGN(elem_sh_n4,tmp,IMPORT);
        }
        else if(entity_type=="SH3N")
        {
            ASSIGN(elem_sh_n3,tmp,IMPORT);
        }
        else if(entity_type=="GRSHEL")
        {
            ASSIGN(grshel_id,tmp,IMPORT);
        }
        else if(entity_type=="GRSH3N")
        {
            ASSIGN(grtria_id,tmp,IMPORT);
        }
    }
}
FORMAT(radioss2022)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    CARD_PREREAD("%-10s%10d",entity_type,tmp);
    if(IO_FLAG==0)
    {
        if(entity_type=="SHELL")
        {
           ASSIGN(tmp,elem_sh_n4,EXPORT);
        }
        else if(entity_type=="SH3N")
        {
            ASSIGN(tmp,elem_sh_n3,EXPORT);
        }
        else if(entity_type=="GRSHEL")
        {
            ASSIGN(tmp,grshel_id,EXPORT);
        }
        else if(entity_type=="GRSH3N")
        {
            ASSIGN(tmp,grtria_id,EXPORT);
        }
    }
 

    COMMENT("#   Entity Entity_ID            Thinning          thetaSlice   MatSlice nptSlice");
    CARD("%-10s%10d",entity_type,tmp){NO_END;}
    FREE_CELL_LIST(slicelistmax,"%20lg%20lg%10d%10d                    ",thinning,theta_slice,mat_ID,npt_slice){OFFSET("%-20s", "");}

    if(IO_FLAG==1)
    {
        if(entity_type=="SHELL")
        {
           ASSIGN(elem_sh_n4,tmp,IMPORT);
        }
        else if(entity_type=="SH3N")
        {
            ASSIGN(elem_sh_n3,tmp,IMPORT);
        }
        else if(entity_type=="GRSHEL")
        {
            ASSIGN(grshel_id,tmp,IMPORT);
        }
        else if(entity_type=="GRSH3N")
        {
            ASSIGN(grtria_id,tmp,IMPORT);
        }
    }
}
