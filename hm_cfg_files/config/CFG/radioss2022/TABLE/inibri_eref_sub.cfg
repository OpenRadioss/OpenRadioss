//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- inibri_eref_sub.cfg ---

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    //Card 1
    brick_ID                           = VALUE(ELEMS, "Element identifier");
    //Nb_integr                          = SIZE("Number of integration point");
    Isolnod                            = VALUE(INT, "Number of nodes of solid element");
    Isolid                             = VALUE(INT, "Solid elements formulation");
    Ismstr                             = VALUE(INT, "Solid elements strain formulation");
    Nsrot                              = VALUE(INT, "Number of nodes having rotional dofs");

    //Cards
    Nb_nodes                           = SIZE("Number of element nodes");
    Xref                               = ARRAY[Nb_nodes](FLOAT,"X coordinate in reference frame");
    Yref                               = ARRAY[Nb_nodes](FLOAT,"Y coordinate in reference frame");
    Zref                               = ARRAY[Nb_nodes](FLOAT,"Z coordinate in reference frame");
    //Cards
    Nb_rnodes                           = SIZE("Number of element rotational nodes");
    Rx                                  = ARRAY[Nb_rnodes](FLOAT,"X rotation");
    Ry                                  = ARRAY[Nb_rnodes](FLOAT,"Y rotation");
    Rz                                  = ARRAY[Nb_rnodes](FLOAT,"Z rotation");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    brick_ID                           = -1;
    //Nb_integr                          = -1;
    Isolnod                            = -1;
    Isolid                             = -1;
    Ismstr                             = -1;

    //Cards
    Nb_nodes                           = -1;
    Xref                               = -1;
    Yref                               = -1;
    Zref                               = -1;
    //Cards
    Nb_rnodes                          = -1;
    Rx                                 = -1;
    Ry                                 = -1;
    Rz                                 = -1;
}


DEFAULTS(COMMON)
{
}

GUI(COMMON)
{
    //Card 1
    DATA(brick_ID, "brick_ID");
    //SIZE(Nb_integr);
    SCALAR(Isolnod, "Isolnod")               { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(Isolid,  "Isolid")                { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(Ismstr,  "Ismstr")                { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(Nsrot,   "Nsrot")                 { DIMENSION = "DIMENSIONLESS"; }

//
    SIZE(Nb_nodes, "Nb_nodes");
    ASSIGN(Nb_nodes, Isolnod);
//
    //Card 2
    ARRAY(Nb_nodes,"Nb_nodes")
    {
      SCALAR(Xref, "Xref")                  { DIMENSION = "DIMENSIONLESS"; }
      SCALAR(Yref, "Yref")                  { DIMENSION = "DIMENSIONLESS"; }
      SCALAR(Zref, "Zref")                  { DIMENSION = "DIMENSIONLESS"; }
    }
//
    SIZE(Nb_rnodes, "Nb_rnodes");
    ASSIGN(Nb_rnodes, Nsrot);
//
    //Card 3
    ARRAY(Nb_rnodes,"Nb_rnodes")
    {
      SCALAR(Rx, "Rx")                  { DIMENSION = "DIMENSIONLESS"; }
      SCALAR(Ry, "Ry")                  { DIMENSION = "DIMENSIONLESS"; }
      SCALAR(Rz, "Rz")                  { DIMENSION = "DIMENSIONLESS"; }
    }
}

FORMAT(radioss2022)
{

    // Card 1
    //COMMENT("# brick_ID    Nb_integr   Isolnod    Isolid    Ismstr");
    //CARD("%10d%10d%10d%10d%10d", brick_ID, Nb_integr, Isolnod, Isolid, Ismstr);

    COMMENT("# brick_ID   Isolnod    Isolid    Ismstr     Nsrot");
    CARD("%10d%10s%10d%10d%10d%10d", brick_ID, _BLANK_, Isolnod, Isolid, Ismstr, Nsrot);
    
    ASSIGN(Nb_nodes, Isolnod,IMPORT);
    // Card 2
    CARD_LIST(Nb_nodes)
    {
      COMMENT("#          Xref           Yref           Zref");
      CARD("%20lg%20lg%20lg", Xref, Yref, Zref);

    }
    ASSIGN(Nb_rnodes, Nsrot,IMPORT);
    // Card 3
    CARD_LIST(Nb_rnodes)
    {
      COMMENT("#            Rx             Ry             Rz");
      CARD("%20lg%20lg%20lg", Rx, Ry, Rz);

    }
}
