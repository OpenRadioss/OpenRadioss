//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//MATERIAL LAW133

ATTRIBUTES(COMMON) {
    KEYWORD_STR             = VALUE(STRING,"Solver Keyword");
    NUM_COMMENTS            = SIZE("No. of Comment Lines");
    COMMENTS                = ARRAY[NUM_COMMENTS](STRING, "Entity_Comments");
    CommentEnumField        = VALUE(INT,  "User Comments");

    // Elastic parameters
    MAT_RHO                 = VALUE(FLOAT,"Initial density");

    MAT_NU                  = VALUE(FLOAT,"Poisson's ratio");
    MAT_PMIN                = VALUE(FLOAT,"Minimum Pressure");

    FCT_ID_G                = VALUE(FUNCT, "Load curve ID shear strain versus density");
    FCT_ID_Y                = VALUE(FUNCT, "Load curve ID yield surface versus pressure");

    FSCALE_G                = VALUE(FLOAT,"Scale factor for shear modulus function");
    FSCALE_Y                = VALUE(FLOAT,"Scale factor for Yield function");

    TITLE                   = VALUE(STRING,"");
    IO_FLAG                 = VALUE(INT, "");
    Mat_Name_OR_LawNo       = VALUE(INT,  "RADIOSS_COMMENT_FLAG");
    LAW_NO                  = VALUE(STRING, "");
}   

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR             = 9000;
    NUM_COMMENTS            = 5110;
    COMMENTS                = 5109;
    CommentEnumField        = 7951;

    MAT_RHO             = -1;

    MAT_NU              = -1;
    MAT_PMIN            = -1;

    FCT_ID_G            = -1;
    FCT_ID_Y            = -1;

    FSCALE_G            = -1;
    FSCALE_Y            = -1;

    TITLE               = -1;
    IO_FLAG             = -1;
    Mat_Name_OR_LawNo   = -1;
    LAW_NO              = -1;
}

DEFAULTS(COMMON) {
}

GUI(COMMON)    
{
    RADIO(CommentEnumField)   
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if( CommentEnumField == 2 )
    {
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }
    if(Mat_Name_OR_LawNo == 2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW133/");
    }
    else 
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/GRANULAR/");
    }

    SCALAR(MAT_RHO)              { DIMENSION="density";       } 
    SCALAR(FSCALE_G)             { DIMENSION="pressure";      }
    SCALAR(FSCALE_Y)             { DIMENSION="pressure";      }
    SCALAR(MAT_NU)               { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_PMIN)             { DIMENSION="pressure";      }

}
//file format
FORMAT(radioss2026)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW133/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/GRANULAR/%d",_ID_);
        CARD("%-100s", TITLE);
    }    
    COMMENT("#                RHO");
    CARD("%20lg",MAT_RHO);
    COMMENT("#                 NU                PMIN");
    CARD("%20lg%20lg",MAT_NU,MAT_PMIN);
    COMMENT("#  fct_IDG             G-scale");
    CARD("%10d%10s%20lg",FCT_ID_G,_BLANK_,FSCALE_G);
    COMMENT("#  fct_IDY             Y-scale");
    CARD("%10d%10s%20lg",FCT_ID_Y,_BLANK_,FSCALE_Y);
}
