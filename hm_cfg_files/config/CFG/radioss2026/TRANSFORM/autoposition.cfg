//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Autoposition transformation (/TRANSFORM/AUTOPOSITION) Setup File
// 

ATTRIBUTES(COMMON) {
  GR_NODE = VALUE(SETS,    "Node group identifier") { SUBTYPES = (/SETS/GRNOD); }
  GR_SURF = VALUE(SETS,    "Surface identifier") { SUBTYPES = (/SETS/SURF); }
  SKEW    = VALUE(SYSTEM,  "Skew Identifier");
  DIR     = VALUE(STRING,  "Direction of the transformation");
  GAP     = VALUE(FLOAT,   "Minimum distance between GR_NODE and GR_SURF");
  PFLAG   = VALUE(INT,     "Position flag");
  SUBMODEL  = VALUE(SOLVERSUBMODEL,"Submodel to Move") ;
  XPOS = VALUE(FLOAT, "Minimum or maximum X position of the nodes defined in grnd_ID or in SUBMODEL");
  YPOS = VALUE(FLOAT, "Minimum or maximum Y position of the nodes defined in grnd_ID or in SUBMODEL");
  ZPOS = VALUE(FLOAT, "Minimum or maximum Z position of the nodes defined in the nodes defined in grnd_ID or in SUBMODEL");
  XFLAG = VALUE(INT, "Position flag along X direction ");
  YFLAG = VALUE(INT, "Position flag along Y direction ");
  ZFLAG = VALUE(INT, "Position flag along Z direction ");
  KEYWORD_STR = VALUE(STRING, "Solver Keyword");
  TITLE = VALUE(STRING, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //HM INTERNAL
    KEYWORD_STR     = 9000;
    TITLE           = -1;
}

DEFAULTS(COMMON) {
  PFLAG      = 1;
  XFLAG      = 1;
  YFLAG      = 1;
  ZFLAG      = 1;
}
 
GUI(COMMON) {

  ASSIGN(KEYWORD_STR, "/TRANSFORM/AUTOPOSITION/");

  mandatory:
  graphical RADIO(DIR) {
    ADD("X","X");
    ADD("Y","Y");
    ADD("Z","Z");
  }
  mandatory:
  graphical TOOL(SKEW) { ORIGIN=MANDATORY; }

  DATA(GR_NODE, "Grnod_ID");
  DATA(GR_SURF, "Grsurf_ID");

  SCALAR(GAP) { DIMENSION="l"; }
  SCALAR(XPOS) { DIMENSION="l"; }
  SCALAR(YPOS) { DIMENSION="l"; }
  SCALAR(ZPOS) { DIMENSION="l"; }

  RADIO(PFLAG) 
  {
    ADD(1,"Nodes defined in grnd_ID or sub_ID is below Surf_ID");
    ADD(2,"Nodes defined in grnd_ID or sub_ID is above Surf_ID");
  }
  RADIO(XFLAG) 
  {
    ADD(1,"Xpos is the maximum X coordinate");
    ADD(2,"Xpos is the minimum X coordinate");
  }
  RADIO(YFLAG) 
  {
    ADD(1,"Ypos is the maximum Y coordinate");
    ADD(2,"Ypos is the minimum Y coordinate");
  }
  RADIO(ZFLAG) 
  {
    ADD(1,"Zpos is the maximum Z coordinate");
    ADD(2,"Zpos is the minimum Z coordinate");
  }

}

FORMAT(radioss2026) {
  HEADER("/TRANSFORM/AUTOPOSITION/%d",_ID_);
  CARD("%-100s",TITLE);
  COMMENT("# grnod_ID   Surf_ID   skew_ID       Dir                 Gap     Pflag                        sub_ID"); 
  CARD("%10d%10d%10d%10s%20lg%10d%                    %10d",GR_NODE,GR_SURF,SKEW,DIR,GAP,PFLAG,SUBMODEL);
  COMMENT("#               Xpos                Ypos                Zpos     Xflag     Yflag     Zflag");
  CARD("%20lg%20lg%20lg%10d%10d%10d",XPOS,YPOS,ZPOS,XFLAG,YFLAG,ZFLAG);
}
