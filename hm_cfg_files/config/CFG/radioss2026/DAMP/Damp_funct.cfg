//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
ATTRIBUTES(COMMON)
{
    IO_FLAG                             = VALUE(INT, "Import/Export flag");
    _HMCOMMENTSFLAG                     = VALUE(INT, "Write HM Comments");
    _HWCOLOR                            = VALUE(INT, "Entity Color");
    TITLE                               = VALUE(STRING, "TITLE");

    Alpha                               = VALUE(FLOAT,  "Mass Damping Coefficient");
    FuncID                              = VALUE(FUNCT,  "function identifier for damping coeff vs time");
    grnod_id                            = VALUE(SETS,  "Node Group Identifier") { SUBTYPES = (/SETS/GRNOD) ; }

    Alpha_x                             = VALUE(FLOAT, "Coefficient for Mass Damping in x Direction ");
    Alpha_y                             = VALUE(FLOAT, "Coefficient for Mass Damping in y Direction ");
    Alpha_z                             = VALUE(FLOAT, "Coefficient for Mass Damping in z Direction ");
    Alpha_xx                            = VALUE(FLOAT, "Coefficient for Mass Damping for Rotational DOF in xx Direction ");
    Alpha_yy                            = VALUE(FLOAT, "Coefficient for Mass Damping for Rotational DOF (in yy Direction) ");
    Alpha_zz                            = VALUE(FLOAT, "Coefficient for Mass Damping for Rotational DOF in zz Direction ");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    /*
    KEYWORD_STR                             = 9000;
    grnod_id                                = 8056;
    Alpha                                   = 982;
    Alpha_x                                 = 983;
    Alpha_y                                 = 350;
    Alpha_z                                 = 351;

    Alpha_xx                                = 352;
    Alpha_yy                                = 353;
    Alpha_zz                                = 354;
    */
    
    IO_FLAG=-1;
    _HMCOMMENTSFLAG=-1;
    _HWCOLOR=-1;

}
GUI(COMMON)
{

//    ASSIGN(KEYWORD_STR, "/DAMP/FUNCT");
    
    SCALAR(Alpha) { DIMENSION="f";         }
    SCALAR(Alpha_x){ DIMENSION="f";         }
    SCALAR(Alpha_y){ DIMENSION="f";         }
    SCALAR(Alpha_z){ DIMENSION="f";         }
    SCALAR(Alpha_xx){ DIMENSION="f";         }
    SCALAR(Alpha_yy){ DIMENSION="f";         }
    SCALAR(Alpha_zz){ DIMENSION="f";         }
        
    
}

// File format
FORMAT(radioss2026) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    
    HEADER("/DAMP/FUNCT/%d",_ID_);
    CARD("%-100s", TITLE);
    
    COMMENT("#   Fct_ID  grnod_id               Alpha");
    CARD("%10d%10d%20lg",FuncID,grnod_id,Alpha);
    
    COMMENT("#            Alpha_x             Alpha_y             Alpha_z");
    CARD("%20lg%20lg%20lg" ,Alpha_x,Alpha_y,Alpha_z);
    
    COMMENT("#           Alpha_xx            Alpha_yy            Alpha_zz"); 
    CARD("%20lg%20lg%20lg" ,Alpha_xx,Alpha_yy,Alpha_zz);

}

