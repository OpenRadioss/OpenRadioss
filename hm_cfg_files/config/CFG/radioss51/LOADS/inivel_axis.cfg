//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//
// 

// MCDS attributes description
ATTRIBUTES(COMMON) {
  // Data
  rad_dir                  = VALUE(STRING,"");
  vector_X                 = VALUE(FLOAT,  "X-Direction"); 
  vector_Y                 = VALUE(FLOAT,  "Y-Direction"); 
  vector_Z                 = VALUE(FLOAT,  "Z-Direction"); 
  vector_magnitude         = VALUE(FLOAT,  "Magnitude of the vector");
  inputsystem              = VALUE(SYSTEM, "Skew");
  inputsystem.origin_X     = VALUE(FLOAT, "X-Coordinate of origin of input system");
  inputsystem.origin_Y     = VALUE(FLOAT, "Y-Coordinate of origin of input system");
  inputsystem.origin_Z     = VALUE(FLOAT, "Z-Coordinate of origin of input system");
  inputsystem.yaxis_X      = VALUE(FLOAT, "X-Coordinate of yaxis of input system");
  inputsystem.yaxis_Y      = VALUE(FLOAT, "Y-Coordinate of yaxis of input system");
  inputsystem.yaxis_Z      = VALUE(FLOAT, "Z-Coordinate of yaxis of input system");
  // Support
  entityid                 = VALUE(SETS,"Node group") { SUBTYPES = (/SETS/GRNOD); }
  rad_rotational_velocity  = VALUE(FLOAT,  "Rotational velocity about the rotational axis"); 
  displayname           = VALUE(STRING, "Title");
}

DEFINITIONS(COMMON) {
  _TRIPLE = (vector_X,inputsystem.origin_X,inputsystem.yaxis_X);
}

// GUI description (Common domain)
GUI(COMMON) {

SCALAR(vector_X) { DIMENSION="velocity"; }
SCALAR(vector_Y) { DIMENSION="velocity"; }
SCALAR(vector_Z) { DIMENSION="velocity"; }
SCALAR(rad_rotational_velocity) { DIMENSION="ang_velocity"; }
}

// File format
FORMAT(radioss51) {
  HEADER("/INIVEL/AXIS/%d",_ID_);
  CARD("%-100s", displayname);
  ASSIGN(vector_magnitude, sqrt((vector_X^2)+(vector_Y^2)+(vector_Z^2)), EXPORT);
  COMMENT("#                 Vt                  Vr                       Gnod_id");
  CARD("%20lg%20lg                    %10d",vector_magnitude,rad_rotational_velocity,entityid);
  if(inputsystem == NONE)
  {
    COMMENT("#                 Ox                  Oy                  Oz");
    CARD("                 0.0                 0.0                 0.0");
    COMMENT("#                 Ux                  Uy                  Uz");
    CARD("                 0.0                 0.0                 0.0");
  }
  else
  {
    COMMENT("#                 Ox                  Oy                  Oz");
    CARD("%20lg%20lg%20lg",inputsystem.origin_X,inputsystem.origin_Y,inputsystem.origin_Z);
    COMMENT("#                 Ux                  Uy                  Uz");
    CARD("%20lg%20lg%20lg",inputsystem.yaxis_X,inputsystem.yaxis_Y,inputsystem.yaxis_Z);
  }
}