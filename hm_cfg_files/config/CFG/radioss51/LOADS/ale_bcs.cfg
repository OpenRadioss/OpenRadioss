//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Boundary condition Setup File
// 

ATTRIBUTES {
  // Single values
  //dof1            = VALUE(INT,   "Code for translation TX"); 
  //dof2            = VALUE(INT,   "Code for translation TY"); 
  //dof3            = VALUE(INT,   "Code for translation TZ"); 
  //dof4            = VALUE(INT,   "Code for rotation RX"); 
  //dof5            = VALUE(INT,   "Code for rotation RY"); 
  //dof6            = VALUE(INT,   "Code for rotation RZ"); 
  dofstring       = VALUE(STRING,   "Degree of freedom string");
  inputsystem     = VALUE(SYSTEM,  "Skew");
  entityid        = VALUE(SETS, "Node group") { SUBTYPES = (/SETS/GRNOD); }
  ILAGM           = VALUE(INT,   "Flag for using Lagrange multipliers"); 
  // Tables
  NB_NODES = SIZE("Number of additional nodes"); 
  NODE     = ARRAY[NB_NODES](NODE,"Additional nodes");
  displayname    = VALUE(STRING, "Title");
  ALE_FLAG = VALUE(INT, "Flag for /ALE/BCS card");

}

ATTRIBUTES(ALE) {
/*
  LX       = VALUE(INT,   "Lagrange code LX");
  LY       = VALUE(INT,   "Lagrange code LY");
  LZ       = VALUE(INT,   "Lagrange code LZ");
  WX       = VALUE(INT,   "Code for grid velocity WX");
  WY       = VALUE(INT,   "Code for grid velocity WY");
  WZ       = VALUE(INT,   "Code for grid velocity WZ");
*/
}

DEFINITIONS(COMMON) {
  //MAINS=(NODE);
}

GUI(COMMON) {
/*
 if(ALE_FLAG == 0)
 {
  optional:
    FLAG(ILAGM,"Lagrange mult. formul.");
  mandatory:
    graphical FLAG_LIST("Translation") {
      ADD(dof1,"[TX] X translation");
      ADD(dof2,"[TY] Y translation");
      ADD(dof3,"[TZ] Z translation");
   }
   graphical FLAG_LIST("Rotation") {
      ADD(dof4,"[RX] X rotation");
      ADD(dof5,"[RY] Y rotation");
      ADD(dof6,"[RZ] Z rotation");
   }
  optional:
    graphical TOOL(inputsystem);
   //mandatory:
   // graphical SUPPORT("Support") {
     // OBJECTS=(NODE,ELEMENTS,COMPONENT);
     // ADD(entityid,"Node group");
     // ADD(NODE   ,"Additional nodes");
   // }
  }
  */
}

GUI(ALE) {
/*
mandatory:
  graphical FLAG_LIST("Grid velocity") {
    ADD(WX,"X grid velocity");
    ADD(WY,"Y grid velocity");
    ADD(WZ,"Z grid velocity");
  }
  graphical FLAG_LIST("Lagrange") {
    ADD(LX,"X Lagrange");
    ADD(LY,"Y Lagrange");
    ADD(LZ,"Z Lagrange");
  }
  */
}
FORMAT(radioss51) {
  //if(ALE_FLAG == 0)
  //{
   
    HEADER("/ALE/BCS/%-d",_ID_);
    CARD("%-100s", displayname);
	COMMENT("#  tra rot   Skew_id   Gnod_id");
    CARD("%10s%10d%10d",dofstring,inputsystem,entityid);
    
  /*FREE_OBJECT_LIST("%10d",NODE) {
    COMMENT="#  Node1   Node2   Node3   Node4   Node5   Node6   Node7   Node8   Node9  Node10";
    }
    else
    {
     HEADER("/ALE/BCS/%d",_ID_);
     CARD("%-100s", displayname);
     COMMENT("#   trarot   Skew_id   Gnod_id");
     CARD("   %1d%1d%1d %1d%1d%1d%10d%10d",WX,WY,WZ,LX,LY,LZ,SYSTEM,GR_NODE);   
    }
  */
}

FORMAT(radioss41) {
  //if(ALE_FLAG == 0)
  //{ 
 
    HEADER("/ALE/BCS/%-d/%-40s",_ID_, displayname);
    COMMENT("#tra rot Skew_id Gnod_id");
    CARD("%8s%8d%8d",dofstring,inputsystem,entityid);
   
    /*
    COMMENT("#  Node1   Node2   Node3   Node4   Node5   Node6   Node7   Node8   Node9  Node10");
    FREE_CELL_LIST(NB_NODES,"%8d",NODE,80) ;
  }
  else
  {
      HEADER("/ALE/BCS/%d",_ID_);
      CARD("%-100s", displayname);
      COMMENT("# trarot Skew_id Gnod_id");
      CARD(" %1d%1d%1d %1d%1d%1d%8d%8d",WX,WY,WZ,LX,LY,LZ,SYSTEM,GR_NODE);   
  }
  */
}
