//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.

ATTRIBUTES(COMMON)
{
    //Card 1
	unitid       = VALUE(UNIT, "Unit ID");
    TITLE        = VALUE(STRING, "");
	
	//Card 2
	alloptionoffset = VALUE(INT, "");
    nodeoffset      = VALUE(INT, "Offset to node ID");
    elementoffset   = VALUE(INT, "Offset to element ID");
    componentoffset = VALUE(INT, "Offset to part ID");
    materialoffset  = VALUE(INT, "Offset to material ID");
    propertyoffset  = VALUE(INT, "Offset to property ID");
    submodeloffset  = VALUE(INT, "Offset to property ID");

    filename       = VALUE(STRING, "");
    fullfilepath   = VALUE(STRING, "Full File Path");
    
}

SKEYWORDS_IDENTIFIER(COMMON)
{
}

DEFAULTS(COMMON)
{
}

// Id offsets of entities in //SUBMODEL are driven with the DRAWABLES of this cfg file:
// A drawable with a name "_[CFG_TYPE_NAME]_IDOFFSET" results in the ids of this cfg-type
// being offset by the value to which the drawable evaluates.
// The offset _DEFAULT_IDOFFSET is applied to all other entities.
DRAWABLES()
{
private:
    _NODE_IDOFFSET_SP      = SCALAR(nodeoffset);
    _ELEMENT_IDOFFSET_SP   = SCALAR(elementoffset);
    _COMPONENT_IDOFFSET_SP = SCALAR(componentoffset);
    _MATERIAL_IDOFFSET_SP  = SCALAR(materialoffset);
    _PROPERTY_IDOFFSET_SP  = SCALAR(propertyoffset);
    _INCLUDEFILE_IDOFFSET_SP  = SCALAR(submodeloffset);

public:
    _FILENAME           = SCALAR(filename);
    _FULLFILENAME       = SCALAR(fullfilepath);

    _DEFAULT_IDOFFSET   = SCALAR(alloptionoffset);
    _NODE_IDOFFSET      = WHILE_ZERO(_NODE_IDOFFSET_SP, _DEFAULT_IDOFFSET);
    _ELEMENT_IDOFFSET   = WHILE_ZERO(_ELEMENT_IDOFFSET_SP, _DEFAULT_IDOFFSET);
    _COMPONENT_IDOFFSET = WHILE_ZERO(_COMPONENT_IDOFFSET_SP, _DEFAULT_IDOFFSET);
    _MATERIAL_IDOFFSET  = WHILE_ZERO(_MATERIAL_IDOFFSET_SP, _DEFAULT_IDOFFSET);
    _PROPERTY_IDOFFSET  = WHILE_ZERO(_PROPERTY_IDOFFSET_SP, _DEFAULT_IDOFFSET);
    _INCLUDEFILE_IDOFFSET  = WHILE_ZERO(_INCLUDEFILE_IDOFFSET_SP, _DEFAULT_IDOFFSET);
}

GUI(COMMON)
{

}
FORMAT(radioss51)
{
    HEADER("//SUBMODEL/%d/%d",_ID_,unitid);
    CARD("%-100s",TITLE);
    COMMENT("#  off_def   off_nod   off_ele  off_part   off_mat  off_type   off_sub");
    CARD("%10d%10d%10d%10d%10d%10d%10d",alloptionoffset, nodeoffset, elementoffset, componentoffset, materialoffset, propertyoffset, submodeloffset);
}
