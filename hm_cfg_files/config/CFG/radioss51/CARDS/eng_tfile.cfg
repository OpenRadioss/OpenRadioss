//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// ENG_TFILE
//

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    ENG_TFILE_numTfileHistory               = VALUE(INT, "Type", "Type");
    ENG_TFILE_tFileHistory                  = VALUE(FLOAT, "Time frequency to write data on history plot file T-file", "DeltaThis");
    
    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    ENG_TFILE_numTfileHistory               = 7224;
    ENG_TFILE_tFileHistory                  = 7225;
    
    //HM INTERNAL
    KEYWORD_STR                             = 9000;
}

DEFAULTS(COMMON)
{
    ENG_TFILE_numTfileHistory               = 4;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/TFILE/");

    RADIO(ENG_TFILE_numTfileHistory, "Type")
    {
        ADD(0, "Built-in format of current Radioss version");
        ADD(1, "Binary (not readable by most Radioss post-processors)");
        ADD(2, "Coded ASCII 32-bit");
        ADD(3, "ASCII");
        ADD(4, "Binary IEEE 32-bit ");
    }
    
    ASSIGN(KEYWORD_STR,ENG_TFILE_numTfileHistory);

    SCALAR(ENG_TFILE_tFileHistory)          {DIMENSION="f";}
}

// File format
FORMAT(radioss51)
{
    HEADER("/TFILE/%d",ENG_TFILE_numTfileHistory);

    CARD("%lg",ENG_TFILE_tFileHistory);
}
