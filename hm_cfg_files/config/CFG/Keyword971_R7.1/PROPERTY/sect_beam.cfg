//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- sect_beam.cfg ---
//    PROPERTIES  SectBeam  2306  6.10
//     22/05/2020
ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    //CARD 1
    LSD_ELFORM                              = VALUE(INT,  "Element formulation options");
    LSD_SHRF                                = VALUE(FLOAT,  "Shear factor");
    LSD_IRID                                = VALUE(INTEGRATIONRULE,  "Integration rule ID");
    LSD_QR                                  = VALUE(FLOAT,  "Quadrature rule");
    LSD_CST                                 = VALUE(FLOAT,  "Cross section type");
    LSD_SCOOR                               = VALUE(FLOAT,  "Location of triad tracking rotation of discrete beam");
    LSD_NSM                                 = VALUE(FLOAT,  "Nonstructural mass per unit length");
    // CARD 2
    // Integrated beam type 1, 11
    LSD_THIC1s                              = VALUE(FLOAT,  "Beam thickness or outer diameter in s direction at n1");
    LSD_THIC2s                              = VALUE(FLOAT,  "Beam thickness or outer diameter in s direction at n2");
    LSD_THIC1t                              = VALUE(FLOAT,  "Beam thickness or inner diameter in t direction at n1");
    LSD_THIC2t                              = VALUE(FLOAT,  "Beam thickness  or inner diameter in t direction at n2");
    LSD_NSLOC                               = VALUE(FLOAT,  "Location of reference surface normal to s axis");
    LSD_NTLOC                               = VALUE(FLOAT,  "Location of reference surface normal to t axis");
    // Resultant 2, 13
    LSD_A                                   = VALUE(FLOAT,  "Cross-sectional area");
    LSD_ISS                                 = VALUE(FLOAT,  "Iss moment of inertia");
    LSD_ITT                                 = VALUE(FLOAT,  "Itt moment of inertia");
    LSD_J                                   = VALUE(FLOAT,  "Torsional Constant");
    LSD_SA                                  = VALUE(FLOAT,  "Shear area");
    LSD_IST                                 = VALUE(FLOAT,  "Product moment of inertia w.r.t. local s- and t-axis");
    // Truss 3
    LSD_RAMPT                               = VALUE(FLOAT,  "Optional ramp-up time for dynamic relaxation");
    LSD_STRESS                              = VALUE(FLOAT,  "Optional initial Stress for dynamic relaxation");
    // Resultant 2, 3 and 12 alternative
    SectType                                = VALUE(STRING,  "Section type");
    LSD_Sect_D1                             = VALUE(FLOAT,  "Input parameter D1");
    LSD_Sect_D2                             = VALUE(FLOAT,  "Input parameter D2");
    LSD_Sect_D3                             = VALUE(FLOAT,  "Input parameter D3");
    LSD_Sect_D4                             = VALUE(FLOAT,  "Input parameter D4");
    LSD_Sect_D5                             = VALUE(FLOAT,  "Input parameter D5");
    LSD_Sect_D6                             = VALUE(FLOAT,  "Input parameter D6");
    // Integrated beam type 4, 5 (already defined before)
    // Discrete 6
    LSD_VOL                                 = VALUE(FLOAT,  "Volume of discrete beam");
    LSD_INER                                = VALUE(FLOAT,  "Mass moment of inertia");
    LSD_CID                                 = VALUE(SYSTEM,  "Coordinate system ID for orientation");
    LSD_CA                                  = VALUE(FLOAT,  "Cable aera/Active DOF at Node 1");
    LSD_OFFSET                              = VALUE(FLOAT,  "Cable offset/Active DOF at Node 2");
    LSD_RRCON                               = VALUE(FLOAT,  "R-rotational constraint for local system");
    LSD_SRCON                               = VALUE(FLOAT,  "S-rotational constraint for local system");
    LSD_TRCON                               = VALUE(FLOAT,  "T-rotational constraint for local system");
    // Scalar 6 (mat_146) (already defined before)
    // 2D shells 7, 8 (already defined before)
    // Spot weld 9
    LSD_TPRINT                              = VALUE(FLOAT,  "Output spot force resultant");
    // Resultant 12 1st Card (already defined before)
    // Resultant 12 2nd Card
    LSD_YS                                  = VALUE(FLOAT,  "S coordinate of section sheer center");
    LSD_ZS                                  = VALUE(FLOAT,  "S coordinate of section sheer center");
    LSD_IYR                                 = VALUE(FLOAT,  "IYR");
    LSD_IZR                                 = VALUE(FLOAT,  "IZR");
    LSD_IRR                                 = VALUE(FLOAT,  "IRR");
    LSD_IW                                  = VALUE(FLOAT,  "IW");
    LSD_IWR                                 = VALUE(FLOAT,  "IWR");
    //ELFORM == 14
    LSD_PR                                  = VALUE(FLOAT,  "Pressure inside ELBOW elements that belong to the section");
    LSD_IOVPR                               = VALUE(FLOAT,  "Print flag for the ELBOW ovalization degrees of freedom");
    LSD_IPRSTR                              = VALUE(FLOAT,  "Flag for adding stress due to pressure PR into the material routine");

    BeamSecA                                = VALUE(BEAM,  "Cross-sectional area");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    Sect_Option                             = VALUE(INT,  "");
    LSD_TitleOpt                            = VALUE(INT,  "");
    SectBeamOpt                             = VALUE(INT,  "Explicit Cross section or Predefined");

    IOFLAG                                  = VALUE(INT, "");
    _opt                                    = VALUE(STRING, "");
    TITLE                                   = VALUE(STRING, "TITLE");
    ifSect                                  = VALUE(INT, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //CARD 1
    LSD_ELFORM                              = 399;
    LSD_SHRF                                = 402;
    LSD_IRID                                = 1649;
    LSD_QR                                  = 429;
    LSD_CST                                 = 403;
    LSD_SCOOR                               = 3122;
    LSD_NSM                                 = 5296;
    // CARD 2
    // Integrated beam type 1, 11
    LSD_THIC1s                              = 723;
    LSD_THIC2s                              = 724;
    LSD_THIC1t                              = 725;
    LSD_THIC2t                              = 726;
    LSD_NSLOC                               = 408;
    LSD_NTLOC                               = 409;
    // Resultant 2, 13
    LSD_A                                   = 718;
    LSD_ISS                                 = 719;
    LSD_ITT                                 = 720;
    LSD_J                                   = 2030;
    LSD_SA                                  = 722;
    LSD_IST                                 = 1146;
    // Truss 3
    LSD_RAMPT                               = 2037;
    LSD_STRESS                              = 2038;
    // Resultant 2, 3 and 12 alternative
    SectType                                = 2039;
    LSD_Sect_D1                             = 2031;
    LSD_Sect_D2                             = 2032;
    LSD_Sect_D3                             = 2033;
    LSD_Sect_D4                             = 2034;
    LSD_Sect_D5                             = 2035;
    LSD_Sect_D6                             = 2036;
    // Integrated beam type 4, 5 (already defined before)
    // Discrete 6
    LSD_VOL                                 = 410;
    LSD_INER                                = 411;
    LSD_CID                                 = 412;
    LSD_CA                                  = 413;
    LSD_OFFSET                              = 716;
    LSD_RRCON                               = 3123;
    LSD_SRCON                               = 3124;
    LSD_TRCON                               = 3125;
    // Scalar 6 (mat_146) (already defined before)
    // 2D shells 7, 8 (already defined before)
    // Spot weld 9
    LSD_TPRINT                              = 2216;
    // Resultant 12 1st Card (already defined before)
    // Resultant 12 2nd Card
    LSD_YS                                  = 2024;
    LSD_ZS                                  = 2025;
    LSD_IYR                                 = 2026;
    LSD_IZR                                 = 2027;
    LSD_IRR                                 = 721;
    LSD_IW                                  = 2028;
    LSD_IWR                                 = 2029;
    //ELFORM == 14
    LSD_PR                                  = 7998;
    LSD_IOVPR                               = 7999;
    LSD_IPRSTR                              = 8000;

    BeamSecA                                = 4362;
    SectBeamOpt                             = 2023;

    KEYWORD_STR                             = 9000;
    Sect_Option                             = 458;
    LSD_TitleOpt                            = 90;

    IOFLAG                                  = -1;
    _opt                                    = -1;
    ifSect                                  = -1;
}

DEFAULTS(COMMON)
{
    //CARD 1
    LSD_ELFORM                              = 1;
    LSD_SHRF                                = 1.0;
    LSD_QR                                  = 2.0;
    LSD_CST                                 = 0.0;
    LSD_SCOOR                               = 0.0;
    LSD_NSM                                 = 0.0;
}

GUI(COMMON)
{
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == 0)
    {
        ASSIGN(KEYWORD_STR, "*SECTION_BEAM");
    }
    else if(LSD_TitleOpt == 1)
    {
        ASSIGN(KEYWORD_STR,"*SECTION_BEAM_TITLE");
    }

    if( LSD_ELFORM== 2 || LSD_ELFORM== 3|| LSD_ELFORM== 12 )
    {
        DATA(BeamSecA);
    }

    RADIO(LSD_ELFORM, "ELFORM")
    {
        ADD(1, "1: Hughes-Liu with cross section integration");
        ADD(2, "2: Belytschko-Schwer resultant beam");
        ADD(3, "3: Truss");
        ADD(4, "4: Belytschko-Schwer full cross-section integration");
        ADD(5, "5: Belytschko-Schwer tubular beam with cross-section integration");
        ADD(6, "6: Discrete beam/cable");
        ADD(7, "7: 2D plane strain shell element");
        ADD(8, "8: 2D axisymmetric volume weighted shell element");
        ADD(9, "9: Spotweld beam");
        ADD(11, "11: Integrated warped beam");
        ADD(12, "12: Resultant warped beam");
        ADD(13, "13: Small displacement, linear Timoshenko beam with exact stiffness");
    }
    SCALAR(LSD_SHRF, "SHRF")                                {DIMENSION="DIMENSIONLESS";}
    FLAG(Sect_Option, "Sect_Option");
    if(Sect_Option == 0)
    {
        RADIO(LSD_QR, "QR")
        {
            ADD(2.0, "2.0: 2x2 Gauss quadrature (default beam)");
            ADD(1.0, "1.0: one integration point");
            ADD(3.0, "3.0: 3x3 Gauss quadrature");
            ADD(4.0, "4.0: 3x3 Lobatto quadrature");
            ADD(5.0, "5.0: 4x4 Gauss quadrature");
        }
    }
    else if(Sect_Option == 1)
    {
        DATA(LSD_IRID);
    }
    RADIO(LSD_CST, "CST")
    {
          ADD(0.0, "0.0: Rectangular");
          ADD(1.0, "1.0: Tubular (Circular only)");
          ADD(2.0, "2.0: Arbitrary (User defined integration rule)");
    }
    RADIO(LSD_SCOOR)
    {
        ADD(-3.0, "-3.0: Beam node 1, the angular velocity of node 1 rotates triad");
        ADD(-2.0, "-2.0: Beam node 1, the angular velocity of node 1 rotates triad but the r-axis is adjusted to lie along the line between the two beam nodal points");
        ADD(-1.0, "-1.0: Beam node 1, the angular velocity of node 1 rotates triad");
        ADD(0.0, "0.0: Centered between beam nodes 1 and 2");
        ADD(1.0, "1.0: Beam node 2, the angular velocity of node 2 rotates triad");
        ADD(2.0, "2.0: Beam node 2, the angular velocity of node 2 rotates triad, but the r-axis is adjusted to lie along the line between the two beam nodal points");
        ADD(3.0, "3.0: Beam node 2, the angular velocity of node 2 rotates triad");
    }
    SCALAR(LSD_NSM, "NSM")                                   {DIMENSION="lineic_mass";}
    mandatory:
    RADIO(SectBeamOpt, "SectBeamOpt")
    {
      ADD(1, "GENERIC");
      ADD(2, "STANDARD");
    }
    optional:

    //Not implemented yet
    /*
    if(SectBeamOpt == 1)
    {

    }
    else if(SectBeam == 2)
    {

    }
    */
    if(LSD_ELFORM == 0 || LSD_ELFORM == 1 || LSD_ELFORM == 11)
    {
      SCALAR(LSD_THIC1s, "TS1")                               {DIMENSION="l";}
      SCALAR(LSD_THIC2s, "TS2")                               {DIMENSION="l";}
      SCALAR(LSD_THIC1t, "TT1")                               {DIMENSION="l";}
      SCALAR(LSD_THIC2t, "TT2")                               {DIMENSION="l";}
      RADIO(LSD_NSLOC, "NSLOC")
      {
          ADD(1.0, "1.0: Side at s=1.0");
          ADD(0.0, "0.0: Center");
          ADD(-1.0, "-1.0: Side at s=-1.0");
      }
      RADIO(LSD_NTLOC, "NTLOC")
      {
          ADD(1.0, "1.0: Side at t=1.0");
          ADD(0.0, "0.0: Center");
          ADD(-1.0, "-1.0: Side at t=-1.0");
      }
    }
    else if(LSD_ELFORM == 2 || LSD_ELFORM == 13)
    {
        SCALAR(LSD_A, "A")                                   {DIMENSION="area";}
        SCALAR(LSD_ISS, "ISS")                               {DIMENSION="inertia";}
        SCALAR(LSD_ITT, "ITT")                               {DIMENSION="inertia";}
        SCALAR(LSD_J, "J")                                   {DIMENSION="inertia";}
        SCALAR(LSD_SA, "SA")                                 {DIMENSION="area";}
        SCALAR(LSD_IST, "IST")                               {DIMENSION="inertia";}
    }
    else if(LSD_ELFORM == 3)
    {
        SCALAR(LSD_A, "A")                                   {DIMENSION="area";}
        SCALAR(LSD_RAMPT, "RAMPT")                           {DIMENSION="t";}
        SCALAR(LSD_STRESS, "STRESS")                         {DIMENSION="DIMENSIONLESS";} /* In XML dimension is defined as "stress" but there is not unit defined as stress so defining this as dimensionless*/
    }
}
// File format
FORMAT(Keyword971)
{
    ASSIGN(IOFLAG,0,EXPORT);
    ASSIGN(IOFLAG,1,IMPORT);

    if(IOFLAG == 0)
    {
        if(LSD_TitleOpt == 1)
        {
            HEADER("*SECTION_BEAM_TITLE");
            CARD("%-80s",TITLE);
        }
        else
        {
            HEADER("*SECTION_BEAM");
        }
        //CARD 1
        COMMENT("$    SECID    ELFORM      SHRF   QR/IRID       CST     SCOOR       NSM");
        CARD("%10d%10d%10lg%10lg%10lg%10lg%10lg",_ID_,LSD_ELFORM,LSD_SHRF,SCALAR_OR_OBJECT(Sect_Option, LSD_QR, LSD_IRID),LSD_CST,LSD_SCOOR,LSD_NSM);

        //CARD 2
        if(LSD_ELFORM == 0 || LSD_ELFORM == 1 || LSD_ELFORM == 11)
        {
            COMMENT("$      TS1       TS2       TT1       TT2     NSLOC     NTLOC");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_THIC1s,LSD_THIC2s,LSD_THIC1t,LSD_THIC2t,LSD_NSLOC,LSD_NTLOC);
        }
        else if(LSD_ELFORM == 2 && SectBeamOpt == 1)
        {
            COMMENT("$        A       ISS       ITT         J        SA       IST");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_A,LSD_ISS,LSD_ITT,LSD_J,LSD_SA,LSD_IST);
        }
        else if((LSD_ELFORM == 2 || LSD_ELFORM == 3 || LSD_ELFORM == 12) && SectBeamOpt == 2)
        {
            if(SectType == "SECTION_01" || SectType == "SECTION_02" || SectType == "SECTION_03" || SectType == "SECTION_04" || SectType == "SECTION_05" || SectType == "SECTION_06" || SectType == "SECTION_12" || SectType == "SECTION_13" || SectType == "SECTION_14" || SectType == "SECTION_15" || SectType == "SECTION_16" || SectType == "SECTION_17" || SectType == "SECTION_18" || SectType == "SECTION_21")
            {
                COMMENT("$    STYPE        D1        D2        D3        D4");
                CARD("%10s%10lg%10lg%10lg%10lg",SectType,LSD_Sect_D1,LSD_Sect_D2,LSD_Sect_D3,LSD_Sect_D4);
            }
            else if(SectType == "SECTION_07" || SectType == "SECTION_20")
            {
                COMMENT("$    STYPE        D1        D2        D3");
                CARD("%10s%10lg%10lg%10lg",SectType,LSD_Sect_D1,LSD_Sect_D2,LSD_Sect_D3);
            }
            else if(SectType == "SECTION_08")
            {
                COMMENT("$    STYPE        D1");
                CARD("%10s%10lg",SectType,LSD_Sect_D1);
            }
            else if(SectType == "SECTION_09" || SectType == "SECTION_11")
            {
                COMMENT("$    STYPE        D1        D2");
                CARD("%10s%10lg%10lg",SectType,LSD_Sect_D1,LSD_Sect_D2);
            }
            else if(SectType == "SECTION_10" || SectType == "SECTION_19" || SectType == "SECTION_22")
            {
                COMMENT("$    STYPE        D1        D2        D3        D4        D5        D6");
                CARD("%10s%10lg%10lg%10lg%10lg%10lg%10lg",SectType,LSD_Sect_D1,LSD_Sect_D2,LSD_Sect_D3,LSD_Sect_D4,LSD_Sect_D5,LSD_Sect_D6);
            }
        }
        else if(LSD_ELFORM == 3 && SectBeamOpt == 1)
        {
            COMMENT("$        A     RAMPT    STRESS");
            CARD("%10lg%10lg%10lg",LSD_A,LSD_RAMPT,LSD_STRESS);
        }
        else if(LSD_ELFORM == 13 && SectBeamOpt == 1)
        {
            COMMENT("$        A       ISS       ITT         J        SA       IST");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_A,LSD_ISS,LSD_ITT,LSD_J,LSD_SA,LSD_IST);
        }
        else if(LSD_ELFORM == 4 || LSD_ELFORM == 5)
        {
            COMMENT("$      TS1       TS2       TT1       TT2");
            CARD("%10lg%10lg%10lg%10lg",LSD_THIC1s,LSD_THIC2s,LSD_THIC1t,LSD_THIC2t);
        }
        else if(LSD_ELFORM == 6)
        {
            COMMENT("$      VOL      INER       CID        CA    OFFSET     RRCON     SRCON     TRCON");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_VOL,LSD_INER,LSD_CID,LSD_CA,LSD_OFFSET,LSD_RRCON,LSD_SRCON,LSD_TRCON);
        }
        else if(LSD_ELFORM == 7 || LSD_ELFORM == 8)
        {
            COMMENT("$      TS1       TS2       TT1       TT2");
            CARD("%10lg%10lg%10lg%10lg",LSD_THIC1s,LSD_THIC2s,LSD_THIC1t,LSD_THIC2t);
        }
        else if(LSD_ELFORM == 9)
        {
            COMMENT("$      TS1       TS2       TT1       TT2     PRINT");
            CARD("%10lg%10lg%10lg%10lg%10lg",LSD_THIC1s,LSD_THIC2s,LSD_THIC1t,LSD_THIC2t,LSD_TPRINT);
        }
        else if(LSD_ELFORM == 12 && SectBeamOpt == 1)
        {
            COMMENT("$     Area       ISS       ITT         J        SA       IST");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_A,LSD_ISS,LSD_ITT,LSD_J,LSD_SA,LSD_IST);
            COMMENT("$       YS        ZS       IYR       IZR       IRR        IW       IWR");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_YS,LSD_ZS,LSD_IYR,LSD_IZR,LSD_IRR,LSD_IW,LSD_IWR);
        }
    }
    else
    {
        HEADER("*SECTION_BEAM%s",_opt);
        if(_opt == "_TITLE")
        {
            ASSIGN(LSD_TitleOpt, 1, IMPORT);
        }
        else
        {
            ASSIGN(LSD_TitleOpt, 0, IMPORT);
        }

        //CARD 1
        CARD("%10d%10d%10lg%10lg%10lg%10lg%10lg",_ID_,LSD_ELFORM,LSD_SHRF,SCALAR_OR_OBJECT(Sect_Option, LSD_QR, LSD_IRID),LSD_CST,LSD_SCOOR,LSD_NSM);

        CARD_PREREAD("%10s",SectType);
        ASSIGN(ifSect,_FIND(SectType, "SECTION"),IMPORT);

        if (ifSect == 0)
        {
            ASSIGN(SectBeamOpt,1,IMPORT); //GENERIC
        }
        else
        {
            ASSIGN(SectBeamOpt,2,IMPORT); //STANDARD
        }

        //CARD 2
        if(LSD_ELFORM == 0 || LSD_ELFORM == 1 || LSD_ELFORM == 11)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_THIC1s,LSD_THIC2s,LSD_THIC1t,LSD_THIC2t,LSD_NSLOC,LSD_NTLOC);
        }
        else if(LSD_ELFORM == 2 && ifSect == 0)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_A,LSD_ISS,LSD_ITT,LSD_J,LSD_SA,LSD_IST);
        }
        else if((LSD_ELFORM == 2 || LSD_ELFORM == 3 || LSD_ELFORM == 12) && ifSect == 1)
        {
            if(SectType == "SECTION_01" || SectType == "SECTION_02" || SectType == "SECTION_03" || SectType == "SECTION_04" || SectType == "SECTION_05" || SectType == "SECTION_06" || SectType == "SECTION_12" || SectType == "SECTION_13" || SectType == "SECTION_14" || SectType == "SECTION_15" || SectType == "SECTION_16" || SectType == "SECTION_17" || SectType == "SECTION_18" || SectType == "SECTION_21")
            {
                CARD("%10s%10lg%10lg%10lg%10lg",SectType,LSD_Sect_D1,LSD_Sect_D2,LSD_Sect_D3,LSD_Sect_D4);
            }
            else if(SectType == "SECTION_07" || SectType == "SECTION_20")
            {
                CARD("%10s%10lg%10lg%10lg",SectType,LSD_Sect_D1,LSD_Sect_D2,LSD_Sect_D3);
            }
            else if(SectType == "SECTION_08")
            {
                CARD("%10s%10lg",SectType,LSD_Sect_D1);
            }
            else if(SectType == "SECTION_09" || SectType == "SECTION_11")
            {
                CARD("%10s%10lg%10lg",SectType,LSD_Sect_D1,LSD_Sect_D2);
            }
            else if(SectType == "SECTION_10" || SectType == "SECTION_19" || SectType == "SECTION_22")
            {
                CARD("%10s%10lg%10lg%10lg%10lg%10lg%10lg",SectType,LSD_Sect_D1,LSD_Sect_D2,LSD_Sect_D3,LSD_Sect_D4,LSD_Sect_D5,LSD_Sect_D6);
            }
        }
        else if(LSD_ELFORM == 3 && ifSect == 0)
        {
            CARD("%10lg%10lg%10lg",LSD_A,LSD_RAMPT,LSD_STRESS);
        }
        else if(LSD_ELFORM == 13 && ifSect == 0)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_A,LSD_ISS,LSD_ITT,LSD_J,LSD_SA,LSD_IST);
        }
        else if(LSD_ELFORM == 4 || LSD_ELFORM == 5)
        {
            CARD("%10lg%10lg%10lg%10lg",LSD_THIC1s,LSD_THIC2s,LSD_THIC1t,LSD_THIC2t);
        }
        else if(LSD_ELFORM == 6)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_VOL,LSD_INER,LSD_CID,LSD_CA,LSD_OFFSET,LSD_RRCON,LSD_SRCON,LSD_TRCON);
        }
        else if(LSD_ELFORM == 7 || LSD_ELFORM == 8)
        {
            CARD("%10lg%10lg%10lg%10lg",LSD_THIC1s,LSD_THIC2s,LSD_THIC1t,LSD_THIC2t);
        }
        else if(LSD_ELFORM == 9)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LSD_THIC1s,LSD_THIC2s,LSD_THIC1t,LSD_THIC2t,LSD_TPRINT);
        }
        else if(LSD_ELFORM == 12 && ifSect == 0)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_A,LSD_ISS,LSD_ITT,LSD_J,LSD_SA,LSD_IST);
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_YS,LSD_ZS,LSD_IYR,LSD_IZR,LSD_IRR,LSD_IW,LSD_IWR);
        }
    }
}

// File format
FORMAT(Keyword971_R7.1)
{
    ASSIGN(IOFLAG,0,EXPORT);
    ASSIGN(IOFLAG,1,IMPORT);

    if(IOFLAG == 0)
    {
        if(LSD_TitleOpt == 1)
        {
            HEADER("*SECTION_BEAM_TITLE");
            CARD("%-80s",TITLE);
        }
        else
        {
            HEADER("*SECTION_BEAM");
        }
        //CARD 1
        COMMENT("$    SECID    ELFORM      SHRF   QR/IRID       CST     SCOOR       NSM");
        CARD("%10d%10d%10lg%10lg%10lg%10lg%10lg",_ID_,LSD_ELFORM,LSD_SHRF,SCALAR_OR_OBJECT(Sect_Option, LSD_QR, LSD_IRID),LSD_CST,LSD_SCOOR,LSD_NSM);

        //CARD 2
        if(LSD_ELFORM == 0 || LSD_ELFORM == 1 || LSD_ELFORM == 11)
        {
            COMMENT("$      TS1       TS2       TT1       TT2     NSLOC     NTLOC");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_THIC1s,LSD_THIC2s,LSD_THIC1t,LSD_THIC2t,LSD_NSLOC,LSD_NTLOC);
        }
        else if(LSD_ELFORM == 2 && SectBeamOpt == 1)
        {
            COMMENT("$        A       ISS       ITT         J        SA       IST");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_A,LSD_ISS,LSD_ITT,LSD_J,LSD_SA,LSD_IST);
        }
        else if((LSD_ELFORM == 2 || LSD_ELFORM == 3 || LSD_ELFORM == 12) && SectBeamOpt == 2)
        {
            if(SectType == "SECTION_01" || SectType == "SECTION_02" || SectType == "SECTION_03" || SectType == "SECTION_04" || SectType == "SECTION_05" || SectType == "SECTION_06" || SectType == "SECTION_12" || SectType == "SECTION_13" || SectType == "SECTION_14" || SectType == "SECTION_15" || SectType == "SECTION_16" || SectType == "SECTION_17" || SectType == "SECTION_18" || SectType == "SECTION_21")
            {
                COMMENT("$    STYPE        D1        D2        D3        D4");
                CARD("%10s%10lg%10lg%10lg%10lg",SectType,LSD_Sect_D1,LSD_Sect_D2,LSD_Sect_D3,LSD_Sect_D4);
            }
            else if(SectType == "SECTION_07" || SectType == "SECTION_20")
            {
                COMMENT("$    STYPE        D1        D2        D3");
                CARD("%10s%10lg%10lg%10lg",SectType,LSD_Sect_D1,LSD_Sect_D2,LSD_Sect_D3);
            }
            else if(SectType == "SECTION_08")
            {
                COMMENT("$    STYPE        D1");
                CARD("%10s%10lg",SectType,LSD_Sect_D1);
            }
            else if(SectType == "SECTION_09" || SectType == "SECTION_11")
            {
                COMMENT("$    STYPE        D1        D2");
                CARD("%10s%10lg%10lg",SectType,LSD_Sect_D1,LSD_Sect_D2);
            }
            else if(SectType == "SECTION_10" || SectType == "SECTION_19" || SectType == "SECTION_22")
            {
                COMMENT("$    STYPE        D1        D2        D3        D4        D5        D6");
                CARD("%10s%10lg%10lg%10lg%10lg%10lg%10lg",SectType,LSD_Sect_D1,LSD_Sect_D2,LSD_Sect_D3,LSD_Sect_D4,LSD_Sect_D5,LSD_Sect_D6);
            }
        }
        else if(LSD_ELFORM == 3 && SectBeamOpt == 1)
        {
            COMMENT("$        A     RAMPT    STRESS");
            CARD("%10lg%10lg%10lg",LSD_A,LSD_RAMPT,LSD_STRESS);
        }
        else if(LSD_ELFORM == 13 && SectBeamOpt == 1)
        {
            COMMENT("$        A       ISS       ITT         J        SA       IST");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_A,LSD_ISS,LSD_ITT,LSD_J,LSD_SA,LSD_IST);
        }
        else if(LSD_ELFORM == 4 || LSD_ELFORM == 5)
        {
            COMMENT("$      TS1       TS2       TT1       TT2");
            CARD("%10lg%10lg%10lg%10lg",LSD_THIC1s,LSD_THIC2s,LSD_THIC1t,LSD_THIC2t);
        }
        else if(LSD_ELFORM == 6)
        {
            COMMENT("$      VOL      INER       CID        CA    OFFSET     RRCON     SRCON     TRCON");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_VOL,LSD_INER,LSD_CID,LSD_CA,LSD_OFFSET,LSD_RRCON,LSD_SRCON,LSD_TRCON);
        }
        else if(LSD_ELFORM == 7 || LSD_ELFORM == 8)
        {
            COMMENT("$      TS1       TS2       TT1       TT2");
            CARD("%10lg%10lg%10lg%10lg",LSD_THIC1s,LSD_THIC2s,LSD_THIC1t,LSD_THIC2t);
        }
        else if(LSD_ELFORM == 9)
        {
            COMMENT("$      TS1       TS2       TT1       TT2     PRINT");
            CARD("%10lg%10lg%10lg%10lg%10lg",LSD_THIC1s,LSD_THIC2s,LSD_THIC1t,LSD_THIC2t,LSD_TPRINT);
        }
        else if(LSD_ELFORM == 12 && SectBeamOpt == 1)
        {
            COMMENT("$     Area       ISS       ITT         J        SA       IST");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_A,LSD_ISS,LSD_ITT,LSD_J,LSD_SA,LSD_IST);
            COMMENT("$       YS        ZS       IYR       IZR       IRR        IW       IWR");
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_YS,LSD_ZS,LSD_IYR,LSD_IZR,LSD_IRR,LSD_IW,LSD_IWR);
        }
        else if(LSD_ELFORM == 14)
        {
            COMMENT("$       PR     IOVPR    IPRSTR");
            CARD("%10lg%10lg%10lg",LSD_PR,LSD_IOVPR,LSD_IPRSTR);
        }
    }
    else
    {
        HEADER("*SECTION_BEAM%s",_opt);
        if(_opt == "_TITLE")
        {
            ASSIGN(LSD_TitleOpt, 1, IMPORT);
        }
        else
        {
            ASSIGN(LSD_TitleOpt, 0, IMPORT);
        }
        //CARD 1
        CARD("%10d%10d%10lg%10lg%10lg%10lg%10lg",_ID_,LSD_ELFORM,LSD_SHRF,SCALAR_OR_OBJECT(Sect_Option, LSD_QR, LSD_IRID),LSD_CST,LSD_SCOOR,LSD_NSM);

        CARD_PREREAD("%10s",SectType);
        ASSIGN(ifSect,_FIND(SectType, "SECTION"),IMPORT);

        if (ifSect == 0)
        {
            ASSIGN(SectBeamOpt,1,IMPORT); //GENERIC

        }
        else
        {
            ASSIGN(SectBeamOpt,2,IMPORT); //STANDARD
        }

        //CARD 2
        if(LSD_ELFORM == 0 || LSD_ELFORM == 1 || LSD_ELFORM == 11)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_THIC1s,LSD_THIC2s,LSD_THIC1t,LSD_THIC2t,LSD_NSLOC,LSD_NTLOC);
        }
        else if(LSD_ELFORM == 2 && ifSect == 0)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_A,LSD_ISS,LSD_ITT,LSD_J,LSD_SA,LSD_IST);
        }
        else if((LSD_ELFORM == 2 || LSD_ELFORM == 3 || LSD_ELFORM == 12) && ifSect == 1)
        {
            if(SectType == "SECTION_01" || SectType == "SECTION_02" || SectType == "SECTION_03" || SectType == "SECTION_04" || SectType == "SECTION_05" || SectType == "SECTION_06" || SectType == "SECTION_12" || SectType == "SECTION_13" || SectType == "SECTION_14" || SectType == "SECTION_15" || SectType == "SECTION_16" || SectType == "SECTION_17" || SectType == "SECTION_18" || SectType == "SECTION_21")
            {
                CARD("%10s%10lg%10lg%10lg%10lg",SectType,LSD_Sect_D1,LSD_Sect_D2,LSD_Sect_D3,LSD_Sect_D4);
            }
            else if(SectType == "SECTION_07" || SectType == "SECTION_20")
            {
                CARD("%10s%10lg%10lg%10lg",SectType,LSD_Sect_D1,LSD_Sect_D2,LSD_Sect_D3);
            }
            else if(SectType == "SECTION_08")
            {
                CARD("%10s%10lg",SectType,LSD_Sect_D1);
            }
            else if(SectType == "SECTION_09" || SectType == "SECTION_11")
            {
                CARD("%10s%10lg%10lg",SectType,LSD_Sect_D1,LSD_Sect_D2);
            }
            else if(SectType == "SECTION_10" || SectType == "SECTION_19" || SectType == "SECTION_22")
            {
                CARD("%10s%10lg%10lg%10lg%10lg%10lg%10lg",SectType,LSD_Sect_D1,LSD_Sect_D2,LSD_Sect_D3,LSD_Sect_D4,LSD_Sect_D5,LSD_Sect_D6);
            }
        }
        else if(LSD_ELFORM == 3 && ifSect == 0)
        {
            CARD("%10lg%10lg%10lg",LSD_A,LSD_RAMPT,LSD_STRESS);
        }
        else if(LSD_ELFORM == 13 && ifSect == 0)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_A,LSD_ISS,LSD_ITT,LSD_J,LSD_SA,LSD_IST);
        }
        else if(LSD_ELFORM == 4 || LSD_ELFORM == 5)
        {
            CARD("%10lg%10lg%10lg%10lg",LSD_THIC1s,LSD_THIC2s,LSD_THIC1t,LSD_THIC2t);
        }
        else if(LSD_ELFORM == 6)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_VOL,LSD_INER,LSD_CID,LSD_CA,LSD_OFFSET,LSD_RRCON,LSD_SRCON,LSD_TRCON);
        }
        else if(LSD_ELFORM == 7 || LSD_ELFORM == 8)
        {
            CARD("%10lg%10lg%10lg%10lg",LSD_THIC1s,LSD_THIC2s,LSD_THIC1t,LSD_THIC2t);
        }
        else if(LSD_ELFORM == 9)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LSD_THIC1s,LSD_THIC2s,LSD_THIC1t,LSD_THIC2t,LSD_TPRINT);
        }
        else if(LSD_ELFORM == 12 && ifSect == 0)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_A,LSD_ISS,LSD_ITT,LSD_J,LSD_SA,LSD_IST);
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_YS,LSD_ZS,LSD_IYR,LSD_IZR,LSD_IRR,LSD_IW,LSD_IWR);
        }
        else if(LSD_ELFORM == 14)
        {
            CARD("%10lg%10lg%10lg",LSD_PR,LSD_IOVPR,LSD_IPRSTR);
        }
    }
}
