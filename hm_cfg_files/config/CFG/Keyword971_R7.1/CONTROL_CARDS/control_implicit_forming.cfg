//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//CONTROL_IMPLICIT_FORMING
//

ATTRIBUTES(COMMON)
{
// INPUT ATTRIBUTES  
  LSD_CifOpt                              = VALUE(INT,"Options"); 
  LSD_IOPTION                             = VALUE(INT,"Solution type");
  LSD_NSMIN                               = VALUE(INT,"Minimum number of implicit steps for IOPTION=2");
  LSD_NSMAX                               = VALUE(INT,"Maximum number of implicit steps for IOPTION=2");
  LSD_TBIRTH                              = VALUE(FLOAT,"Birth time to activate this feature");
  LSD_TDEATH                              = VALUE(FLOAT,"Death time");
  LSD_PENCHK                              = VALUE(FLOAT,"Relative allowed penetration with respect to part thickness in contact for IOPTION=2");

// HM INTERNAL
  KEYWORD_STR                             = VALUE(STRING,"Solver Keyword");  
  IO_FLAG                                 = VALUE(INT,"");  
  option                                  = VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
  KEYWORD_STR                             = 9000;
  
  LSD_CifOpt                              = 1680;
  LSD_IOPTION                             = 5859;
  LSD_NSMIN                               = 5860;
  LSD_NSMAX                               = 5861;
  LSD_TBIRTH                              = 2238;
  LSD_TDEATH                              = 2239;
  LSD_PENCHK                              = 5862;

  IO_FLAG                                 = -1;
  option                                  = -1;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
  LSD_IOPTION                             = 1;
  LSD_CifOpt                              = 0;
  LSD_NSMAX                               = 2;
  LSD_TBIRTH                              = 0.0;
  LSD_TDEATH                              = 1e+20;
  LSD_PENCHK                              = 0.0;
}

GUI(COMMON)
{
mandatory:
  RADIO(LSD_CifOpt)
  {
    ADD(1,"NONE");
    ADD(2,"DYN");
    ADD(3,"SPR");
  }

  if(LSD_CifOpt == 1)
  {
    ASSIGN(KEYWORD_STR, "*CONTROL_IMPLICIT_FORMING");
  }
  else if(LSD_CifOpt == 2)
  {
    ASSIGN(KEYWORD_STR, "*CONTROL_IMPLICIT_FORMING_DYN");
  }
  else if(LSD_CifOpt == 3)
  {
    ASSIGN(KEYWORD_STR, "*CONTROL_IMPLICIT_FORMING_SPR");
  }

optional:
  RADIO(LSD_IOPTION)
  {
    ADD(1,"1: Gravity loading simulation");
    ADD(2,"2: Binder closing and flanging simulation");
  }

  SCALAR(LSD_NSMIN){DIMENSION="DIMENSIONLESS";}
  SCALAR(LSD_NSMAX){DIMENSION="DIMENSIONLESS";}
  SCALAR(LSD_TBIRTH){DIMENSION="DIMENSIONLESS";}
  SCALAR(LSD_TDEATH){DIMENSION="DIMENSIONLESS";}
  SCALAR(LSD_PENCHK){DIMENSION="DIMENSIONLESS";}
}

//File format
FORMAT(Keyword971)
{
  HEADER("*CONTROL_IMPLICIT_FORMING");
  COMMENT("$  IOPTION     NSMIN     NSMAX     BIRTH     DEATH    PENCHK");
  CARD("%10d%10d%10d%10lg%10lg%10lg",LSD_IOPTION,LSD_NSMIN,LSD_NSMAX,LSD_TBIRTH,LSD_TDEATH,LSD_PENCHK);
}

FORMAT(Keyword971_R7.1)
{
  ASSIGN(IO_FLAG,0,IMPORT);
  ASSIGN(IO_FLAG,1,EXPORT);
 
  if(IO_FLAG == 0)
  {
    HEADER("*CONTROL_IMPLICIT_FORMING%s",option);
  } 
  if(IO_FLAG == 1 && LSD_CifOpt == 2)
  {
     HEADER("*CONTROL_IMPLICIT_FORMING_DYN");
  }
  else if(IO_FLAG == 1 && LSD_CifOpt == 3)
  {
     HEADER("*CONTROL_IMPLICIT_FORMING_SPR"); 
  }
  else
  {
     HEADER("*CONTROL_IMPLICIT_FORMING"); 
  }
  
  if(IO_FLAG == 0)
  {
    if(option == "")
    {
      ASSIGN(LSD_CifOpt,1);
    }
    else if(option == "_DYN")
    {
      ASSIGN(LSD_CifOpt,2);
    }
    else if(option == "_SPR")
    {
      ASSIGN(LSD_CifOpt,3);
    }
  }
  
  COMMENT("$  IOPTION     NSMIN     NSMAX     BIRTH     DEATH    PENCHK");
  CARD("%10d%10d%10d%10lg%10lg%10lg",LSD_IOPTION,LSD_NSMIN,LSD_NSMAX,LSD_TBIRTH,LSD_TDEATH,LSD_PENCHK);
}
