//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//CONTROL_IMPLICIT_BUCKLE
//

ATTRIBUTES(COMMON)
{
    KEYWORD_STR                               = VALUE(STRING, "Solver Keyword");

    LSD_NMODE                                 = VALUE(INT,"Number of buckling modes to compute");
    LSD_LCIDOpt                               = VALUE(INT,"NMODE_Option");
    LSD_LCID9                                 = VALUE(CURVE,"Curve ID = (-NEIG) used for intermittent buckling analysis");
    LSD_BCKMTH                                = VALUE(INT,"Method used to extract buckling modes");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                               = 9000;
    LSD_NMODE                                 = 4470;    
    LSD_LCIDOpt                               = 5091;
    LSD_LCID9                                 = 1141;
    LSD_BCKMTH                                = 1509;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    LSD_NMODE                                 = 0;
}

GUI(COMMON)
{
  ASSIGN(KEYWORD_STR, "*CONTROL_IMPLICIT_BUCKLE");
  FLAG(LSD_LCIDOpt);
  if (LSD_LCIDOpt != FALSE)
  {
        DATA(LSD_LCID9);
  }
  else
  {
        SCALAR(LSD_NMODE)  { DIMENSION="DIMENSIONLESS"; }
  }
  RADIO(LSD_BCKMTH)
  {
      ADD(1,"1: Use Block Shift and Invert Lanczos");
      ADD(2,"2: Use Power Method");
  }
}

//File format
FORMAT(Keyword971)
{
  HEADER("*CONTROL_IMPLICIT_BUCKLE");
  COMMENT("$    NMODE");
  CARD("%10d",LSD_NMODE);
}

FORMAT(Keyword971_R7.1) 
{
  HEADER("*CONTROL_IMPLICIT_BUCKLE");
  COMMENT("$    NMODE    BCKMTH");
  CARD("%10d%10d",SCALAR_OR_FUNCTION(LSD_LCIDOpt,LSD_NMODE,LSD_LCID9),LSD_BCKMTH);
}