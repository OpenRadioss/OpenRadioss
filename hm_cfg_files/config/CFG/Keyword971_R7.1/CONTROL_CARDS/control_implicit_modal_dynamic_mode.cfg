//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// CONTROL_IMPLICIT_MODAL_DYNAMIC_MODE_LIST - CONTROL_IMPLICIT_MODAL_DYNAMIC_MODE_GENERATE
//

ATTRIBUTES(COMMON)
{
// INPUT ATTRIBUTES
    DAMPINGMode_OPT                         = VALUE(INT,    "Options");
    
    Mode_Id_Cards                           = SIZE("Cards for LIST option");
    LSD_MID_ARRAY                           = ARRAY[Mode_Id_Cards](INT, "Mode ID");

    Mode_Range_Cards                        = SIZE("Cards for GENERATE option");
    LSD_M_BEGIN                             = ARRAY[Mode_Range_Cards](INT, "First mode ID in block");
    LSD_M_END                               = ARRAY[Mode_Range_Cards](INT, "Last mode ID in block");
    

// HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    IO_FLAG                                 = VALUE(INT,    "Import/Export flag");
    option                                  = VALUE(STRING, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
// INPUT ATTRIBUTES
    DAMPINGMode_OPT                         = 8092;

    Mode_Id_Cards                           = 8093;
    LSD_MID_ARRAY                           = 7932;
    
    Mode_Range_Cards                        = 8094;
    LSD_M_BEGIN                             = 8095;
    LSD_M_END                               = 8096;

// HM INTERNAL
    KEYWORD_STR                             = 9000;
    IO_FLAG                                 = -1;
    option                                  = -1;
}

DEFAULTS(COMMON)
{
    Mode_Id_Cards    = 1;
    Mode_Range_Cards = 1;
}

GUI(COMMON)
{
mandatory:
    RADIO(DAMPINGMode_OPT)
    {
        ADD(1, "LIST");
        ADD(2, "GENERATE");
    }

optional:
    if (DAMPINGMode_OPT == 1) {
        ASSIGN(KEYWORD_STR, "*CONTROL_IMPLICIT_MODAL_DYNAMIC_MODE_LIST");
        
        SIZE(Mode_Id_Cards);
        ARRAY(Mode_Id_Cards,"")
        {
            SCALAR(LSD_MID_ARRAY);
        }
    } else {
        ASSIGN(KEYWORD_STR, "*CONTROL_IMPLICIT_MODAL_DYNAMIC_MODE_GENERATE");

        SIZE(Mode_Range_Cards);
        ARRAY(Mode_Range_Cards,"")
        {
            SCALAR(LSD_M_BEGIN);
            SCALAR(LSD_M_END);
        }
    }
}

// File format
FORMAT(Keyword971_R7.1)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);

    if (IO_FLAG == 1) {
        HEADER("*CONTROL_IMPLICIT_MODAL_DYNAMIC_MODE%s",option);
    }

    if (IO_FLAG == 1 && option == "_LIST") {
        ASSIGN(DAMPINGMode_OPT,1,IMPORT);

        COMMENT("$      MID       MID       MID       MID       MID       MID       MID       MID");
        FREE_CELL_LIST(Mode_Id_Cards,"%10d",LSD_MID_ARRAY,80);    
    } else if (IO_FLAG == 1 && option == "_GENERATE") {
        ASSIGN(DAMPINGMode_OPT,2,IMPORT);

        COMMENT("$     MBEG      MEND      MBEG      MEND      MBEG      MEND      MBEG      MEND");
        FREE_CELL_LIST(Mode_Range_Cards,"%10d%10d",LSD_M_BEGIN,LSD_M_END,80);
    } else if (IO_FLAG == 0 && DAMPINGMode_OPT == 1) {
        HEADER("*CONTROL_IMPLICIT_MODAL_DYNAMIC_MODE_LIST");

        COMMENT("$      MID       MID       MID       MID       MID       MID       MID       MID");
        CELL_LIST(Mode_Id_Cards,"%10d",LSD_MID_ARRAY,80);
    } else if (IO_FLAG == 0 && DAMPINGMode_OPT == 2) {
        HEADER("*CONTROL_IMPLICIT_MODAL_DYNAMIC_MODE_GENERATE");

        COMMENT("$     MBEG      MEND      MBEG      MEND      MBEG      MEND      MBEG      MEND");
        CELL_LIST(Mode_Range_Cards,"%10d%10d",LSD_M_BEGIN,LSD_M_END,80);
    }
}
