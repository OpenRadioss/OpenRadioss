//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 00
// 


ATTRIBUTES(COMMON) 
 {
  // Initial and reference densities
    KEYWORD_STR                                       = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt                                      = VALUE(INT, "Title");
    CommentEnumField                                  = VALUE(INT, "User Comments");
    Num_Comments                                      = SIZE("No. of comment lines");
    Comments                                          = ARRAY[Num_Comments](STRING, "Entity Comments");
    Nu                                                = VALUE(FLOAT,  "Poissons ratio");
    Rho                                               = VALUE(FLOAT,  "Mass density");
    E                                                 = VALUE(FLOAT,  "Youngs modulus");
    EncTypeEnumField                                  = VALUE(INT,  "Type");
    LSDYNA_ETAN                                       = VALUE(FLOAT,  "Tangent modulus");
    LSDYNA_NUMINT                                     = VALUE(INT,  "Number of through thickness integration points which must fail");
    LSDYNA_SIGY                                       = VALUE(FLOAT,  "Yield stress");
    LSD_ALPHA                                         = VALUE(FLOAT,  "Parameter ALPHA");
    LSD_B1                                            = VALUE(FLOAT,  "Parameter DS");
    LSD_BETA                                          = VALUE(FLOAT,  "Parameter BETA");
    LSD_BP                                            = VALUE(FLOAT,  "Parameter LAMBA");
    LSD_GAMMA                                         = VALUE(FLOAT,  "Parameter GAMMA");
    LSD_L                                             = VALUE(FLOAT,  "Optional characteristic element length for this material.");
    LSD_LCID                                          = VALUE(FUNCT,  "effective plastic strain to effective stress");
    LSD_LCID2                                         = VALUE(FUNCT,  "strain rate scaling effect on yield stress");
    LSD_LCID3                                         = VALUE(FUNCT,  "curve ID defining nonlinear damage curve");
    LSD_MAT52_D0                                      = VALUE(FLOAT,  "Parameter D0");
    LSD_MAT_B                                         = VALUE(FLOAT,  "Parameter B");
    LSD_MAT_C                                         = VALUE(FLOAT,  "Strain rate parameter");
    LSD_MAT_EPPF                                      = VALUE(FLOAT,  "effective plastic strain at which material softening begins");
    LSD_MAT_EPPFR                                     = VALUE(FLOAT,  "effective plastic strain at which material ruptures");
    LSDYNA_EPS1                                          = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS2                                          = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS3                                          = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS4                                          = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS5                                          = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS6                                          = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS7                                          = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_EPS8                                          = VALUE(FLOAT,  "Effective plastic strain values");
    LSDYNA_ES1                                       = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES2                                       = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES3                                       = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES4                                       = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES5                                       = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES6                                       = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES7                                       = VALUE(FLOAT,  "yield stress values");
    LSDYNA_ES8                                       = VALUE(FLOAT,  "yield stress values");
    LSD_MAT_SRP                                       = VALUE(FLOAT,  "Strain rate parameter");
    LSD_MAT_TDEL                                      = VALUE(FLOAT,  "Minimum time step size for automatic element deletion");
    LSD_MAT_VP                                        = VALUE(FLOAT,  "Formulation for rate effects");
    M81Options                                        = VALUE(INT,  "Options");
    RegTypeEnumField                                  = VALUE(INT,  "Type");
    Array                                             = VALUE(STRING , "");
    OPT_TYPE_STR                                      = VALUE(STRING, "OPT");
    TITLE                                             = VALUE(STRING, "Title");
    IO_FLAG                                           = VALUE(INT, "io flag");
    _HAS_HEADER                                       = VALUE(BOOL,"Has Header Card");

}
SKEYWORDS_IDENTIFIER(COMMON)
{

  KEYWORD_STR                           = 9000;
  CommentEnumField                      = 3220;
  Num_Comments                          = 3101;
  LSD_TitleOpt                          = 90;
  Comments                              = 3100;
  Rho                                   = 118;
  E                                     = 119;
  EncTypeEnumField                      = 5828;
  LSDYNA_ETAN                           = 153;
  LSDYNA_NUMINT                         = 35;
  LSDYNA_SIGY                           = 152;
  LSD_ALPHA                             = 1651;
  LSD_B1                                = 1517;
  LSD_BETA                              = 1662;
  LSD_BP                                = 1555;
  LSD_GAMMA                             = 4336;
  LSD_L                                 = 32;
  LSD_LCID                              = 45;
  LSD_LCID2                             = 168;
  LSD_LCID3                             = 170;
  LSD_MAT52_D0                          = 1253;
  LSD_MAT_B                             = 311;
  LSD_MAT_C                             = 313;
  LSD_MAT_EPPF                          = 1172;
  LSD_MAT_EPPFR                         = 1177;
  LSD_MAT_SRP                           = 1174;
  LSDYNA_EPS1                             = 201;
    LSDYNA_EPS2                             = 202;
    LSDYNA_EPS3                             = 203;
    LSDYNA_EPS4                             = 204;
    LSDYNA_EPS5                             = 205;
    LSDYNA_EPS6                             = 206;
    LSDYNA_EPS7                             = 207;
    LSDYNA_EPS8                             = 208;
    LSDYNA_ES1                              = 209;
    LSDYNA_ES2                              = 210;
    LSDYNA_ES3                              = 211;
    LSDYNA_ES4                              = 212;
    LSDYNA_ES5                              = 213;
    LSDYNA_ES6                              = 214;
    LSDYNA_ES7                              = 215;
    LSDYNA_ES8                              = 216;
  LSD_MAT_TDEL                          = 1173;
  LSD_MAT_VP                            = 4391;
  M81Options                            = 5372;
  Nu                                    = 120;
  RegTypeEnumField                      = 5827;
  Array                                 = -1;
  OPT_TYPE_STR                          = -1;
  TITLE                                 = -1;
  IO_FLAG                               = -1;
  _HAS_HEADER                           = -1;
}

DEFAULTS(COMMON)
{
    LSD_MAT_EPPF            = 1e+20;
    LSD_MAT_TDEL            = 1e+20;
    _HAS_HEADER             = TRUE;
}


DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  YOUNG_MODULUS=SCALAR(E);
  POISSON_RATIO=SCALAR(Nu);
  YIELD_STRESS=SCALAR(LSDYNA_SIGY);
  TANGENT_MODULUS=SCALAR(LSDYNA_ETAN);
  PLASTIC_STRAIN=SCALAR(LSD_MAT_EPPF);
  MINIMUM_TIME_STEP_SIZE_FOR_AUTOMATIC_ELEMENT_DELETION=SCALAR(LSD_MAT_TDEL);
  STRAIN_RATE_PARAMETER_C=SCALAR(LSD_MAT_C);
  STRAIN_RATE_PARAMETER_P=SCALAR(LSD_MAT_SRP);
  PLASTIC_STRAIN=SCALAR(LSD_MAT_EPPFR);
  FORMULATION_FOR_RATE_EFFECTS=SCALAR(LSD_MAT_VP);
  PARAMETER_ALPHA=SCALAR(LSD_ALPHA);
  PARAMETER_BETA=SCALAR(LSD_BETA);
  PARAMETER_GAMMA=SCALAR(LSD_GAMMA);
  PARAMETER_D0=SCALAR(LSD_MAT52_D0);
  PARAMETER_B=SCALAR(LSD_MAT_B);
  PARAMETER_LAMBDA=SCALAR(LSD_BP);
  PARAMETER_DS=SCALAR(LSD_B1);
  CHARACTERISTIC_ELEMENT_LENGTH=SCALAR(LSD_L);
 public:
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2      = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON) 
{


     ASSIGN(KEYWORD_STR, "*MAT_PLASTICITY_WITH_DAMAGE");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     } 
     RADIO(RegTypeEnumField)
     {
        ADD(0, "Regular");
     }
     RADIO(M81Options)
     {
        ADD(1, "None");
        ADD(2, "ORTHO");
        ADD(3, "ORTHO_RCDC");
        ADD(4, "STOCHASTIC");
     }
     if(M81Options == 2)
     {
        ASSIGN(KEYWORD_STR, "_ORTHO");
     }
     if(M81Options == 3)
     {
        ASSIGN(KEYWORD_STR, "_ORTHO_RCDC");
     }
     if(M81Options == 4)
     {
        ASSIGN(KEYWORD_STR, "_STOCHASTIC");
     }
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
   mandatory:
     SCALAR(Rho)                         { DIMENSION="density";}
     SCALAR(E)                           {DIMENSION="pressure";}
   optional:
     SCALAR(Nu)                          {DIMENSION="DIMENSIONLESS";}
   mandatory:
     SCALAR(LSDYNA_SIGY)                 {DIMENSION="pressure";}
   optional:
     SCALAR(LSDYNA_ETAN)                 {DIMENSION="pressure";}
     SCALAR(LSD_MAT_EPPF)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_TDEL)                {DIMENSION="t";}
     SCALAR(LSD_MAT_C)                   {DIMENSION="strain_rate";}
     SCALAR(LSD_MAT_SRP)                 {DIMENSION="DIMENSIONLESS";}
     FUNCTION(LSD_LCID)
     {
       X_TITLE = "Effective plastic strain"; X_DIMENSION = "DIMENSIONLESS";
       Y_TITLE = "Effective Stress"; Y_DIMENSION = "pressure";
     }
     FUNCTION(LSD_LCID2)
     {
       X_TITLE = "Strain rate"; X_DIMENSION = "DIMENSIONLESS";
       Y_TITLE = "Factor on yield stress"; Y_DIMENSION = "DIMENSIONLESS";
     }
     SCALAR(LSD_MAT_EPPFR)               {DIMENSION="DIMENSIONLESS";}
     RADIO(LSD_MAT_VP)
     {
        ADD(0.0, "0.0: Scale yield stress (default)");
        ADD(1.0, "1.0: Viscoplastic formulation");
     }
     FUNCTION(LSD_LCID3)
     {
       X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
       Y_TITLE = "Damage"; Y_DIMENSION = "DIMENSIONLESS";
     }
     SCALAR(LSDYNA_NUMINT)                {DIMENSION="DIMENSIONLESS";}

     SCALAR(LSDYNA_EPS1)                  {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS2)                  {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS3)                  {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS4)                  {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS5)                  {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS6)                  {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS7)                  {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_EPS8)                  {DIMENSION="DIMENSIONLESS";}

     SCALAR(LSDYNA_ES1)                  {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES2)                  {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES3)                  {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES4)                  {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES5)                  {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES6)                  {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES7)                  {DIMENSION="pressure";}
     SCALAR(LSDYNA_ES8)                  {DIMENSION="pressure";}

     if(M81Options == 3)
     {
        SCALAR(LSD_ALPHA)                   {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_BETA)                    {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_GAMMA)                   {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT52_D0)                {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT_B)                   {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_BP)                      {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_B1)                      {DIMENSION="DIMENSIONLESS";}
      optional:
        SCALAR(LSD_L)                       {DIMENSION="l";}
     }
/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/SHELL,/COMPONENT/BRICK,/COMPONENT/PENTA6,/COMPONENT/SHEL16);
      ADD(COMPONENT,"Parts");
    }
*/
  
}

// File format
FORMAT(Keyword971) 
{
    //
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    //
    if(IO_FLAG == 1)
    {
        HEADER("*MAT_081%17s",OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && OPT_TYPE_STR == "")
    {
        HEADER("*MAT_082%17s",OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "" || OPT_TYPE_STR != "_TITLE" || OPT_TYPE_STR != "_ORTHO" || OPT_TYPE_STR != "_ORTHO_TITLE" || OPT_TYPE_STR != "_ORTHO_RCDC" || OPT_TYPE_STR != "_ORTHO_RCDC_TITLE" ))
    {
         HEADER("*MAT_PLASTICITY_WITH_DAMAGE%17s", OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "" || OPT_TYPE_STR == "_TITLE"))
    {
        ASSIGN(M81Options, 1);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "_ORTHO" || OPT_TYPE_STR == "_ORTHO_TITLE"))
    {
        ASSIGN(M81Options, 2);
    }
    else if(IO_FLAG == 1 && (OPT_TYPE_STR == "_ORTHO_RCDC" || OPT_TYPE_STR == "_ORTHO_RCDC_TITLE"))
    {
        ASSIGN(M81Options, 3);
    }

    if(IO_FLAG == 2 && M81Options == 1 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_PLASTICITY_WITH_DAMAGE");
    }   
    else if(IO_FLAG == 2 && M81Options == 1 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_PLASTICITY_WITH_DAMAGE_TITLE");
        CARD("%-80s", TITLE);
    }
    else if(IO_FLAG == 2 && M81Options == 2 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_PLASTICITY_WITH_DAMAGE_ORTHO");
    }   
    else if(IO_FLAG == 2 && M81Options == 2 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_PLASTICITY_WITH_DAMAGE_ORTHO_TITLE");
        CARD("%-80s", TITLE);
    }
    else if(IO_FLAG == 2 && M81Options == 3 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_PLASTICITY_WITH_DAMAGE_ORTHO_RCDC");
    }   
    else if(IO_FLAG == 2 && M81Options == 3 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_PLASTICITY_WITH_DAMAGE_ORTHO_RCDC_TITLE");
        CARD("%-80s", TITLE);
    }

    //
    COMMENT("$      MID       RHO         E        PR      SIGY      ETAN      EPPF      TDEL");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,Nu,LSDYNA_SIGY,LSDYNA_ETAN,LSD_MAT_EPPF,LSD_MAT_TDEL);
    //
    COMMENT("$        C         P      LCSS      LCSR     EPPFR        VP      LCDM    NUMINT");
    CARD("%10lg%10lg%10d%10d%10lg%10lg%10d%10d",LSD_MAT_C,LSD_MAT_SRP,LSD_LCID,LSD_LCID2,LSD_MAT_EPPFR,LSD_MAT_VP,LSD_LCID3,LSDYNA_NUMINT);
    //
    COMMENT("$     EPS1      EPS2      EPS3      EPS4      EPS5      EPS6      EPS7      EPS8");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_EPS1,LSDYNA_EPS2,LSDYNA_EPS3,LSDYNA_EPS4,LSDYNA_EPS5,LSDYNA_EPS6,LSDYNA_EPS7,LSDYNA_EPS8);
    //
    COMMENT("$      ES1       ES2       ES3       ES4       ES5       ES6       ES7       ES8");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_ES1,LSDYNA_ES2,LSDYNA_ES3,LSDYNA_ES4,LSDYNA_ES5,LSDYNA_ES6,LSDYNA_ES7,LSDYNA_ES8);
    //
    if(M81Options == 3)
    {
        //
        COMMENT("$    ALPHA      BETA     GAMMA        D0         B    LAMBDA        DS         L");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_ALPHA,LSD_BETA,LSD_GAMMA,LSD_MAT52_D0,LSD_MAT_B,LSD_BP,LSD_B1,LSD_L);
        //
    }
}

FORMAT(Keyword971_R7.1) 
{
    //
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    //
    if(IO_FLAG == 1)
    {
        HEADER("*MAT_081%17s",OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && OPT_TYPE_STR == "")
    {
        HEADER("*MAT_082%17s",OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "" || OPT_TYPE_STR != "_TITLE" || OPT_TYPE_STR != "_ORTHO" || OPT_TYPE_STR != "_ORTHO_TITLE" || OPT_TYPE_STR != "_ORTHO_RCDC" || OPT_TYPE_STR != "_ORTHO_RCDC_TITLE" || OPT_TYPE_STR != "_STOCHASTIC" || OPT_TYPE_STR != "_STOCHASTIC_TITLE"))
    {
         HEADER("*MAT_PLASTICITY_WITH_DAMAGE%17s", OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "" || OPT_TYPE_STR == "_TITLE"))
    {
        ASSIGN(M81Options, 1);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "_ORTHO" || OPT_TYPE_STR == "_ORTHO_TITLE"))
    {
        ASSIGN(M81Options, 2);
    }
    else if(IO_FLAG == 1 && (OPT_TYPE_STR == "_ORTHO_RCDC" || OPT_TYPE_STR == "_ORTHO_RCDC_TITLE"))
    {
        ASSIGN(M81Options, 3);
    }
    else if(IO_FLAG == 1 && (OPT_TYPE_STR == "_STOCHASTIC" || OPT_TYPE_STR == "_STOCHASTIC_TITLE"))
    {
        ASSIGN(M81Options, 4);
    }
    if(IO_FLAG == 2 && M81Options == 1 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_PLASTICITY_WITH_DAMAGE");
    }   
    else if(IO_FLAG == 2 && M81Options == 1 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_PLASTICITY_WITH_DAMAGE_TITLE");
        CARD("%-80s", TITLE);
    }
    else if(IO_FLAG == 2 && M81Options == 2 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_PLASTICITY_WITH_DAMAGE_ORTHO");
    }   
    else if(IO_FLAG == 2 && M81Options == 2 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_PLASTICITY_WITH_DAMAGE_ORTHO_TITLE");
        CARD("%-80s", TITLE);
    }
    else if(IO_FLAG == 2 && M81Options == 3 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_PLASTICITY_WITH_DAMAGE_ORTHO_RCDC");
    }   
    else if(IO_FLAG == 2 && M81Options == 3 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_PLASTICITY_WITH_DAMAGE_ORTHO_RCDC_TITLE");
        CARD("%-80s", TITLE);
    }
    else if(IO_FLAG == 2 && M81Options == 4 && LSD_TitleOpt == FALSE)
    {
        HEADER("*MAT_PLASTICITY_WITH_DAMAGE_STOCHASTIC");
    }   
    else if(IO_FLAG == 2 && M81Options == 4 && LSD_TitleOpt == TRUE)
    {
        HEADER("*MAT_PLASTICITY_WITH_DAMAGE_STOCHASTIC_TITLE");
        CARD("%-80s", TITLE);
    }
    //
    COMMENT("$      MID       RHO         E        PR      SIGY      ETAN      EPPF      TDEL");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,Nu,LSDYNA_SIGY,LSDYNA_ETAN,LSD_MAT_EPPF,LSD_MAT_TDEL);
    //
    COMMENT("$        C         P      LCSS      LCSR     EPPFR        VP      LCDM    NUMINT");
    CARD("%10lg%10lg%10d%10d%10lg%10lg%10d%10d",LSD_MAT_C,LSD_MAT_SRP,LSD_LCID,LSD_LCID2,LSD_MAT_EPPFR,LSD_MAT_VP,LSD_LCID3,LSDYNA_NUMINT);
    //
    COMMENT("$     EPS1      EPS2      EPS3      EPS4      EPS5      EPS6      EPS7      EPS8");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_EPS1,LSDYNA_EPS2,LSDYNA_EPS3,LSDYNA_EPS4,LSDYNA_EPS5,LSDYNA_EPS6,LSDYNA_EPS7,LSDYNA_EPS8);
    //
    COMMENT("$      ES1       ES2       ES3       ES4       ES5       ES6       ES7       ES8");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_ES1,LSDYNA_ES2,LSDYNA_ES3,LSDYNA_ES4,LSDYNA_ES5,LSDYNA_ES6,LSDYNA_ES7,LSDYNA_ES8);
    //
    if(M81Options == 3)
    {
        COMMENT("$    ALPHA      BETA     GAMMA        D0         B    LAMBDA        DS         L");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_ALPHA,LSD_BETA,LSD_GAMMA,LSD_MAT52_D0,LSD_MAT_B,LSD_BP,LSD_B1,LSD_L);
    }
}