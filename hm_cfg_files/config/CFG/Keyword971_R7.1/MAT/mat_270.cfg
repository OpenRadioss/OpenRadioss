//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 270
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    EncTypeEnumField                        = VALUE(INT,  "Type");
    RegTypeEnumField                        = VALUE(INT,  "Type");
    LSD_LCID4                               = VALUE(FUNCT,  "Youngs modulus as function of temperature");
    LSD_LCID5                               = VALUE(FUNCT,  "Poissons ratio as function of temperature");
    LSD_LCID6                               = VALUE(FUNCT,  "Yield stress as function of temperature");
    LSD_LCID7                               = VALUE(FUNCT,  "hardening modulus as function of temperature");
    LSD_LCID8                               = VALUE(FUNCT,  "thermal expansion coefficient as function of temperature");
    LSD_MAT_BETA                            = VALUE(FLOAT,  "Fraction isotropic hardening");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    MATL270_AGHOST                          = VALUE(FLOAT,  "Thermal expansion coefficient");
    MATL270_EGHOST                          = VALUE(FLOAT,  "Youngs modulus");
    MATL270_OPT_CARD3                       = VALUE(INT,  "OptionalCard flag");
    MATL270_PGHOST                          = VALUE(FLOAT,  "Poissons ratio");
    MATL270_T1PHASE                         = VALUE(FLOAT,  "Temperature at which phase change ends");
    MATL270_T2PHASE                         = VALUE(FLOAT,  "Temperature at which phase change starts");
    MATL270_TAEND                           = VALUE(FLOAT,  "Annealing temperature end");
    MATL270_TASTART                         = VALUE(FLOAT,  "Annealing temperature start");
    MATL270_TLEND                           = VALUE(FLOAT,  "Birth temperature end");
    MATL270_TLSTART                         = VALUE(FLOAT,  "Birth temperature start");
    Rho                                     = VALUE(FLOAT,  "Material density");
    IO_FLAG                                 = VALUE(INT, "io flag");
    _HMCOMMENTSFLAG                         = VALUE(INT, "Write HM Comments");
    TITLE                                   = VALUE(STRING, "Title");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSD_LCID4                               = 171;
    LSD_LCID5                               = 172;
    LSD_LCID6                               = 199;
    LSD_LCID7                               = 200;
    LSD_LCID8                               = 224;
    LSD_MAT_BETA                            = 306;
    LSD_TitleOpt                            = 90;
    MATL270_AGHOST                          = 7963;
    MATL270_EGHOST                          = 7961;
    MATL270_OPT_CARD3                       = 7966;
    MATL270_PGHOST                          = 7962;
    MATL270_T1PHASE                         = 7965;
    MATL270_T2PHASE                         = 7964;
    MATL270_TAEND                           = 7958;
    MATL270_TASTART                         = 7957;
    MATL270_TLEND                           = 7960;
    MATL270_TLSTART                         = 7959;
    Num_Comments                            = 3101;
    Rho                                     = 118;
    IO_FLAG                                 = -1;
    EncTypeEnumField                        = 5828;
    Num_Comments                            = 3101;
    RegTypeEnumField                        = 5827;
    TITLE                                   = -1;
}


DEFAULTS(COMMON) {

}

CHECK(COMMON)
{

    LSD_MAT_BETA                              >=0.0;
    LSD_MAT_BETA                              <=1.0;
}

DRAWABLES(COMMON) {
       public:
       MASS_DENSITY=SCALAR(Rho);
       YOUNG_MODULUS=SCALAR(LSD_LCID4);
       POISSON_RATIO=SCALAR(LSD_LCID5);
       //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2      = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_CWM");
     RADIO(CommentEnumField)
     {
         ////////ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:    
     SCALAR(Rho)                         {DIMENSION="density";}
     DATA(LSD_LCID4);
 optional:
     DATA(LSD_LCID5);
 mandatory:
     DATA(LSD_LCID6);
 optional:     
     DATA(LSD_LCID7);
     DATA(LSD_LCID8);
     SCALAR(LSD_MAT_BETA)                {DIMENSION="k";}
     SCALAR(MATL270_TASTART)             {DIMENSION="k";}
     SCALAR(MATL270_TAEND)               {DIMENSION="k";}
     SCALAR(MATL270_TLSTART)             {DIMENSION="k";}
     SCALAR(MATL270_TLEND)               {DIMENSION="k";}
     SCALAR(MATL270_EGHOST)              {DIMENSION="pressure";}
     SCALAR(MATL270_PGHOST)              {DIMENSION="DIMENSIONLESS";}
     SCALAR(MATL270_AGHOST)              {DIMENSION="DIMENSIONLESS";} 
     FLAG(MATL270_OPT_CARD3);
     if(MATL270_OPT_CARD3 == TRUE)
     {
         SCALAR(MATL270_T2PHASE)         {DIMENSION="k";}
         SCALAR(MATL270_T1PHASE)         {DIMENSION="k";}
     }
/*
  graphical SUPPORT("Part(s) to which material is applied") {
    OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/TETRA10,/COMPONENT/SPHCEL);
    ADD(COMPONENT,"Parts");
  }          
*/
}

// File format
FORMAT(Keyword971_R7.1) 
{
    
    //
    COMMENT("$      MID       RHO      LCEM      LCPR      LCSY      LCHR      LCAT      BETA");
    CARD("%10d%10lg%10d%10d%10d%10d%10d%10lg",_ID_,Rho,LSD_LCID4,LSD_LCID5,LSD_LCID6,LSD_LCID7,LSD_LCID8,LSD_MAT_BETA);
    //
    COMMENT("$  TASTART     TAEND   TLSTART     TLEND    EGHOST    PGHOST    AGHOST");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",MATL270_TASTART,MATL270_TAEND,MATL270_TLSTART,MATL270_TLEND,MATL270_EGHOST,MATL270_PGHOST,MATL270_AGHOST);
    //
    if (MATL270_OPT_CARD3==TRUE)
    {
        COMMENT("$  T2PHASE   T1PHASE");
    }
    FREE_CARD(MATL270_OPT_CARD3,"%10lg%10lg",MATL270_T2PHASE,MATL270_T1PHASE);

}
