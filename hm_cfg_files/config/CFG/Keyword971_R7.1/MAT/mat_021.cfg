//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material 021
// 

ATTRIBUTES(COMMON) 
{
    KEYWORD_STR                     = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt                    = VALUE(INT, "Title");
    CommentEnumField                = VALUE(INT, "User Comments");
    Num_Comments                    = SIZE("No. of comment lines");
    Comments                        = ARRAY[Num_Comments](STRING, "Entity Comments");
    Rho                             = VALUE(FLOAT, "Rho");  
    MATL21_Option                   = VALUE(INT, "Options");
    LSDYNA_EA                       = VALUE(FLOAT, "EA");
    LSDYNA_EB                       = VALUE(FLOAT, "EB");
    LSDYNA_EC                       = VALUE(FLOAT, "EC");
    LSDYNA_PRBA                     = VALUE(FLOAT, "PRBA");
    LSDYNA_PRCA                     = VALUE(FLOAT, "PRCA");
    LSDYNA_PRCB                     = VALUE(FLOAT, "PRCB");
    LSDYNA_GAB                      = VALUE(FLOAT, "GAB");
    LSDYNA_GBC                      = VALUE(FLOAT, "GBC");
    LSDYNA_GCA                      = VALUE(FLOAT, "GCA");
    LSD_aA                          = VALUE(FLOAT, "AA");
    LSD_aB                          = VALUE(FLOAT, "AB");
    LSD_aC                          = VALUE(FLOAT, "AC");
    LSDYNA_AOPT                     = VALUE(FLOAT, "AOPT");
    LSD_MAT142_MACF                 = VALUE(INT, "MACF");
    LSD_MAT_REF                     = VALUE(FLOAT, "REF");
    LSDYNA_XP                       = VALUE(FLOAT, "XP");
    LSDYNA_YP                       = VALUE(FLOAT, "YP");
    LSDYNA_ZP                       = VALUE(FLOAT, "ZP");
    LSDYNA_A1                       = VALUE(FLOAT, "A1");
    LSDYNA_A2                       = VALUE(FLOAT, "A2");
    LSDYNA_A3                       = VALUE(FLOAT, "A3");
    LSDYNA_V1                       = VALUE(FLOAT, "V1");
    LSDYNA_V2                       = VALUE(FLOAT, "V2");
    LSDYNA_V3                       = VALUE(FLOAT, "V3");
    LSDYNA_D1                       = VALUE(FLOAT, "D1");
    LSDYNA_D2                       = VALUE(FLOAT, "D2");
    LSDYNA_D3                       = VALUE(FLOAT, "D3");
    LSDYNA_BETA                     = VALUE(FLOAT, "BETA");
    MATL21_A1                       = VALUE(FLOAT, "A1");
    MATL21_A11                      = VALUE(FLOAT, "A11");
    MATL21_A2                       = VALUE(FLOAT, "A2");
    MATL21_A5                       = VALUE(FLOAT, "A5");
    MATL21_A55                      = VALUE(FLOAT, "A55");
    MATL21_A4                       = VALUE(FLOAT, "A4");
    MATL21_NIP                      = VALUE(FLOAT, "NIP");
    MATL21_K1                       = VALUE(FLOAT, "K1");
    MATL21_K2                       = VALUE(FLOAT, "K2");
    MATL21_C1                       = VALUE(FLOAT, "C1");
    MATL21_C2                       = VALUE(FLOAT, "C2");
    MATL21_M                        = VALUE(FLOAT, "M");
    MATL21_N                        = VALUE(FLOAT, "N");
    MATL21_R                        = VALUE(FLOAT, "R");
    MATL21_LCCHA                    = VALUE(FUNCT, "LCCHA");
    MATL21_LCCHB                    = VALUE(FUNCT, "LCCHB");
    MATL21_LCCHC                    = VALUE(FUNCT, "LCCHC");
    MATL21_LCAA                     = VALUE(FUNCT, "LCAA");
    MATL21_LCAB                     = VALUE(FUNCT, "LCAB");
    MATL21_LCAC                     = VALUE(FUNCT, "LCAC");
    IO_FLAG                         = VALUE(INT, "IO");
    OPT_TYPE_STR                    = VALUE(STRING, "OPT");
    HAS_TITLE                       = VALUE(STRING, "Has Title");
    TITLE                           = VALUE(STRING, "Title");
    //empty_string               = VALUE(STRING, "Used as a local variable for free format case");
    _HAS_HEADER                     = VALUE(BOOL,"Has Header Card");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    IO_FLAG                       = -1;
    OPT_TYPE_STR                  = -1;
    HAS_TITLE                     = -1;
    KEYWORD_STR                   = 9000;
    CommentEnumField              = 3220;
    Num_Comments                  = 3101;
    LSD_TitleOpt                  = 90;
    Comments                      = 3100;
    MATL21_Option                 = 8320;
    Rho                           = 118;
    LSDYNA_EA                     = 126;
    LSDYNA_EB                     = 127;
    LSDYNA_EC                     = 128;
    LSDYNA_PRBA                   = 129;
    LSDYNA_PRCA                   = 130;
    LSDYNA_PRCB                   = 131;
    LSDYNA_GAB                    = 132;
    LSDYNA_GBC                    = 133;
    LSDYNA_GCA                    = 134;
    LSD_aA                        = 3052;
    LSD_aB                        = 3057;
    LSD_aC                        = 4825;
    LSDYNA_AOPT                   = 135;
    LSD_MAT142_MACF               = 1045;
    LSDYNA_XP                     = 136;
    LSDYNA_YP                     = 137;
    LSDYNA_ZP                     = 138;
    LSDYNA_A1                     = 139;
    LSDYNA_A2                     = 140;
    LSDYNA_A3                     = 141;
    LSDYNA_V1                     = 142;
    LSDYNA_V2                     = 143;
    LSDYNA_V3                     = 144;
    LSDYNA_D1                     = 145;
    LSDYNA_D2                     = 146;
    LSDYNA_D3                     = 147;
    LSDYNA_BETA                   = 148;
    MATL21_A1                     = 8321;
    MATL21_A11                    = 8322;
    MATL21_A2                     = 8323;
    MATL21_A5                     = 8324;
    MATL21_A55                    = 8325;
    MATL21_A4                     = 8326;
    MATL21_NIP                    = 8327;
    MATL21_K1                     = 8328;
    MATL21_K2                     = 8329;
    MATL21_C1                     = 8330;
    MATL21_C2                     = 8331;
    MATL21_M                      = 8332;
    MATL21_N                      = 8333;
    MATL21_R                      = 8334;
    MATL21_LCCHA                  = 8335;
    MATL21_LCCHB                  = 8336;
    MATL21_LCCHC                  = 8337;
    MATL21_LCAA                   = 8338;
    MATL21_LCAB                   = 8339;
    MATL21_LCAC                   = 8340;
    //empty_string             = -1;
    _HAS_HEADER                   = -1;
}

DEFAULTS(COMMON)
{
    LSD_MAT142_MACF     = 1;
    _HAS_HEADER         = TRUE;
}

DRAWABLES(COMMON) {
public:
    MASS_DENSITY=SCALAR(Rho);
    YOUNG_MODULUS_A-DIRECTION=SCALAR(LSDYNA_EA);
    YOUNG_MODULUS_B-DIRECTION=SCALAR(LSDYNA_EB);
    YOUNG_MODULUS_C-DIRECTION=SCALAR(LSDYNA_EC);
    POISSON_RATIO_BA=SCALAR(LSDYNA_PRBA);
    POISSON_RATIO_CA=SCALAR(LSDYNA_PRCA);
    POISSON_RATIO_CB=SCALAR(LSDYNA_PRCB);
    SHEAR_MODULUS_AB=SCALAR(LSDYNA_GAB);
    SHEAR_MODULUS_BC=SCALAR(LSDYNA_GBC);
    SHEAR_MODULUS_CA=SCALAR(LSDYNA_GCA);
    COEFFICIENTS_A-DIRECTION=SCALAR(LSD_aA);
    COEFFICIENTS_B-DIRECTION=SCALAR(LSD_aB);
    COEFFICIENTS_C-DIRECTION=SCALAR(LSD_aC);
    MATERIAL_AXES_OPTION=SCALAR(LSDYNA_AOPT);
    MATERIAL_ANGLE=SCALAR(LSDYNA_BETA);
    REFERENCE_GEOMETRY=SCALAR(LSD_MAT_REF);
    YOUNG_MODULUS = MAX(YOUNG_MODULUS_A-DIRECTION,YOUNG_MODULUS_B-DIRECTION,YOUNG_MODULUS_C-DIRECTION);
    POISSON_RATIO = MAX(POISSON_RATIO_BA,POISSON_RATIO_CA,POISSON_RATIO_CB);
    SHEAR_MODULUS = MAX(SHEAR_MODULUS_AB,SHEAR_MODULUS_BC,SHEAR_MODULUS_CA);
        //SOUND_SPEED is speed for ISDO = 0 and 1
    SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
    SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
    C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
    SOUND_SPEED_SOLID = EVAL(((4*SHEAR_MODULUS/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON) 
{
    ASSIGN(KEYWORD_STR, "*MAT_ORTHOTROPIC_THERMAL");
    RADIO(CommentEnumField)
    {
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do not export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
            SCALAR(Comments);
        }
    }     
    RADIO(MATL21_Option)
    {
        ADD(1, "None");
        ADD(2, "FAILURE");
    }
    if(MATL21_Option == 2)
    {
        ASSIGN(KEYWORD_STR, "_FAILURE");
    }
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == TRUE)
    {
        ASSIGN(KEYWORD_STR, "_TITLE");
    } 
mandatory:
    SCALAR(Rho)                     { DIMENSION="density";}
    SCALAR(LSDYNA_EA)               {DIMENSION="pressure";}
    SCALAR(LSDYNA_EB)               {DIMENSION="pressure";}
    SCALAR(LSDYNA_EC)               {DIMENSION="pressure";}
optional:
    SCALAR(LSDYNA_PRBA)             {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_PRCA)             {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_PRCB)             {DIMENSION="DIMENSIONLESS";}
mandatory:
    SCALAR(LSDYNA_GAB)              {DIMENSION="pressure";}
    SCALAR(LSDYNA_GBC)              {DIMENSION="pressure";}
    SCALAR(LSDYNA_GCA)              {DIMENSION="pressure";}
optional:
    SCALAR(LSD_aA)                  {DIMENSION="e";}
    SCALAR(LSD_aB)                  {DIMENSION="e";}
    SCALAR(LSD_aC)                  {DIMENSION="e";}
    RADIO(LSDYNA_AOPT)
    {
        ADD(0.0, "0.0: Locally orthotropic : axis given by nodes 1,2, and 4");
        ADD(1.0, "1.0: A-direction given by a point and global location of element center");
        ADD(2.0, "2.0: Axis given by vectors");
        ADD(3.0, "3.0: Axis given by rotating the material axes by an angle BETA");
        ADD(4.0, "4.0: Cylindrical coordinate given by vector v and point p");
    }
    RADIO(LSD_MAT142_MACF)
    {
        ADD(1, "1: No change (default)");
        ADD(2, "2: Switch material axes a and b");
        ADD(3, "3: Switch material axes a and c");
        ADD(4, "4: Switch material axes b and c"); 
    }
    if(LSDYNA_AOPT == 1 || LSDYNA_AOPT == 4)
    {
        SCALAR(LSDYNA_XP)           {DIMENSION="l";}
        SCALAR(LSDYNA_YP)           {DIMENSION="l";}
        SCALAR(LSDYNA_ZP)           {DIMENSION="l";}
    }
    if(MATL21_Option == 2)
    {
        SCALAR(LSDYNA_A1)           {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSDYNA_A2)           {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSDYNA_A3)           {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSDYNA_D1)           {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSDYNA_D2)           {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSDYNA_D3)           {DIMENSION="DIMENSIONLESS";}
    }
    if(LSDYNA_AOPT == 3 || LSDYNA_AOPT == 4)
    {
        SCALAR(LSDYNA_V1)           {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSDYNA_V2)           {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSDYNA_V3)           {DIMENSION="DIMENSIONLESS";}
    }
    if(LSDYNA_AOPT == 3)
    {
        SCALAR(LSDYNA_BETA)         {DIMENSION="a";}
    }
    SCALAR(LSD_MAT_REF);
    if(MATL21_Option == 2)
    {
        SCALAR(MATL21_A1);
        SCALAR(MATL21_A11);
        SCALAR(MATL21_A2);
        SCALAR(MATL21_A5);
        SCALAR(MATL21_A55);
        SCALAR(MATL21_A4);
        SCALAR(MATL21_NIP);

    }
    if(MATL21_Option == 3)
    {
        SCALAR(MATL21_K1)         {DIMENSION="f";}
        SCALAR(MATL21_K2)         {DIMENSION="f";}
        SCALAR(MATL21_C1)         {DIMENSION="DIMENSIONLESS";}
        SCALAR(MATL21_C2)         {DIMENSION="DIMENSIONLESS";}
        SCALAR(MATL21_M)          {DIMENSION="DIMENSIONLESS";}
        SCALAR(MATL21_N)          {DIMENSION="DIMENSIONLESS";}
        SCALAR(MATL21_R)          {DIMENSION="thermal_molar_capacity";}
    FUNCTION(MATL21_LCCHA)
    {
      X_TITLE = "State of curve"; X_DIMENSION = "DIMENSIONLESS";
      Y_TITLE = "Shrinkage coefficient in a direction"; Y_DIMENSION = "DIMENSIONLESS";
    }
    FUNCTION(MATL21_LCCHB)
    {
      X_TITLE = "State of curve"; X_DIMENSION = "DIMENSIONLESS";
      Y_TITLE = "Shrinkage coefficient in b direction"; Y_DIMENSION = "DIMENSIONLESS";
    }
    FUNCTION(MATL21_LCCHC)
    {
      X_TITLE = "State of curve"; X_DIMENSION = "DIMENSIONLESS";
      Y_TITLE = "Shrinkage coefficient in c direction"; Y_DIMENSION = "DIMENSIONLESS";
    }
    FUNCTION(MATL21_LCAA)
    {
      X_TITLE = "Temperature"; X_DIMENSION = "k";
      Y_TITLE = "Coef of thermal expansion"; Y_DIMENSION = "e";
    }
    FUNCTION(MATL21_LCAB)
    {
      X_TITLE = "Temperature"; X_DIMENSION = "k";
      Y_TITLE = "Coef of thermal expansion"; Y_DIMENSION = "e";
    }        
    FUNCTION(MATL21_LCAC)
    {
      X_TITLE = "Temperature"; X_DIMENSION = "k";
      Y_TITLE = "Coef of thermal expansion"; Y_DIMENSION = "e";
    }

    }
    /*
    graphical SUPPORT("Part(s) to which material is applied") {
    OBJECTS=(/PART/BRICK,/PART/TETRA4,/PART/LINEAR_3D,/PART/SHELL,/PART/PENTA6,/PART/SHEL16,/PART/TSHELL);
    ADD(PART,"Parts");
    }
    */
}

// File format
FORMAT(Keyword971) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    //

    // export time
    if(IO_FLAG == 2 && MATL21_Option == 2 && LSD_TitleOpt == 0)
    {
        HEADER("*MAT_ORTHOTROPIC_THERMAL_FAILURE");
    }
    else if(IO_FLAG == 2 && MATL21_Option == 2 && LSD_TitleOpt == 1)
    {
        HEADER("*MAT_ORTHOTROPIC_THERMAL_FAILURE_TITLE");
    }
    else if(IO_FLAG == 2 && LSD_TitleOpt == 0)
    {
        HEADER("*MAT_ORTHOTROPIC_THERMAL");
    }
    else if(IO_FLAG == 2 && LSD_TitleOpt == 1)
    {
        HEADER("*MAT_ORTHOTROPIC_THERMAL_TITLE");
    }	
	
	
    //
    COMMENT("$      MID       RHO        EA        EB        EC      PRBA      PRCA      PRCB");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSDYNA_EA,LSDYNA_EB,LSDYNA_EC,LSDYNA_PRBA,LSDYNA_PRCA,LSDYNA_PRCB);
    //
    COMMENT("$      GAB       GBC       GCA        AA        AB        AC      AOPT      MACF");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_aA,LSD_aB,LSD_aC,LSDYNA_AOPT,LSD_MAT142_MACF);
    //
    if(LSD_MAT142_MACF == 0 && IO_FLAG ==1)
    {
        ASSIGN(LSD_MAT142_MACF, 1,IMPORT);
    }
    //
    COMMENT("$       XP        YP        ZP        A1        A2        A3");
    if(LSDYNA_AOPT == 1.0 || LSDYNA_AOPT == 4.0)
    {
        CARD("%10lg%10lg%10lg",LSDYNA_XP,LSDYNA_YP,LSDYNA_ZP);
    }
    else if(LSDYNA_AOPT == 2.0)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$       V1        V2        V3        D1        D2        D3      BETA       REF");
    if(LSDYNA_AOPT == 2.0)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg%10s%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3,_BLANK_,LSD_MAT_REF);
    }
    else if(LSDYNA_AOPT == 4.0)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10s%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_MAT_REF);
    }
    else if(LSDYNA_AOPT == 3.0)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,LSDYNA_BETA,LSD_MAT_REF);
    }
    else
    {
        CARD("%10s%10s%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_MAT_REF);
    }
    //
}

FORMAT(Keyword971_R7.1) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);

    // import time
    if(IO_FLAG == 1)
    {
        HEADER("*MAT_021%14s",OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "" || OPT_TYPE_STR != "_TITLE" ||OPT_TYPE_STR != "_FAILURE" ||OPT_TYPE_STR != "_FAILURE_TITLE"))
    {
        HEADER("*MAT_ORTHOTROPIC_THERMAL%14s",OPT_TYPE_STR);
    }
    if(IO_FLAG == 1 && (OPT_TYPE_STR == "" || OPT_TYPE_STR == "_TITLE"))
    {
        ASSIGN(MATL21_Option, 1);
    }     
    else if(IO_FLAG == 1 && (OPT_TYPE_STR == "_FAILURE" ||OPT_TYPE_STR == "_FAILURE_TITLE"))
    {
        ASSIGN(MATL21_Option, 2);
    }

    // export time
    if(IO_FLAG == 2 && MATL21_Option == 2 && LSD_TitleOpt == 0)
    {
        HEADER("*MAT_ORTHOTROPIC_THERMAL_FAILURE");
    }
    else if(IO_FLAG == 2 && MATL21_Option == 2 && LSD_TitleOpt == 1)
    {
        HEADER("*MAT_ORTHOTROPIC_THERMAL_FAILURE_TITLE");
    }
    else if(IO_FLAG == 2 && LSD_TitleOpt == 0)
    {
        HEADER("*MAT_ORTHOTROPIC_THERMAL");
    }
    else if(IO_FLAG == 2 && LSD_TitleOpt == 1)
    {
        HEADER("*MAT_ORTHOTROPIC_THERMAL_TITLE");
    }

    if(IO_FLAG == 2 && LSD_TitleOpt == 1)  
    {
        CARD("%-80s", TITLE);
    }

    //
    COMMENT("$      MID       RHO        EA        EB        EC      PRBA      PRCA      PRCB");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSDYNA_EA,LSDYNA_EB,LSDYNA_EC,LSDYNA_PRBA,LSDYNA_PRCA,LSDYNA_PRCB);
    //
    COMMENT("$      GAB       GBC       GCA        AA        AB        AC      AOPT      MACF");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_aA,LSD_aB,LSD_aC,LSDYNA_AOPT,LSD_MAT142_MACF);
    //
    if(LSD_MAT142_MACF == 0 && IO_FLAG ==1)
    {
        ASSIGN(LSD_MAT142_MACF, 1,IMPORT);
    }
    //
    COMMENT("$       XP        YP        ZP        A1        A2        A3");
    if(LSDYNA_AOPT == 1.0 || LSDYNA_AOPT == 4.0)
    {
        CARD("%10lg%10lg%10lg",LSDYNA_XP,LSDYNA_YP,LSDYNA_ZP);
    }
    else if(LSDYNA_AOPT == 2.0)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$       V1        V2        V3        D1        D2        D3      BETA       REF");
    if(LSDYNA_AOPT == 2.0)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg%10s%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3,_BLANK_,LSD_MAT_REF);
    }
    else if(LSDYNA_AOPT == 4.0)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10s%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_MAT_REF);
    }
    else if(LSDYNA_AOPT == 3.0)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,LSDYNA_BETA,LSD_MAT_REF);
    }
    else
    {
        CARD("%10s%10s%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_MAT_REF);
    }
    //
    if(MATL21_Option == 2)
    {
        //
        COMMENT("$       A1       A11        A2        A5       A55        A4       NIP");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",MATL21_A1 ,MATL21_A11 ,MATL21_A2 ,MATL21_A5 ,MATL21_A55 ,MATL21_A4 ,MATL21_NIP);
        //
    }
}
