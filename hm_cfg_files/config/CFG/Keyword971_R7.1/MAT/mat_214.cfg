//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 214
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    LSDYNA_A1                               = VALUE(FLOAT, "Components of vector a");
    LSDYNA_A2                               = VALUE(FLOAT, "Components of vector a");
    LSDYNA_A3                               = VALUE(FLOAT, "Components of vector a");
    LSDYNA_D1                               = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_D2                               = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_D3                               = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_EA                               = VALUE(FLOAT,  "Modulus of elasticity in longitudinal direction");
    LSDYNA_EB                               = VALUE(FLOAT,  "Modulus of elasticity in transverse direction");
    LSDYNA_GBC                              = VALUE(FLOAT,  "Shear modulus in bc direction");
    LSDYNA_GCA                              = VALUE(FLOAT,  "Shear modulus in ca direction");
    LSDYNA_V1                               = VALUE(FLOAT,  "Components of vector v");
    LSDYNA_V2                               = VALUE(FLOAT,  "Components of vector v");
    LSDYNA_V3                               = VALUE(FLOAT,  "Components of vector v");
    LSDYNA_XP                               = VALUE(FLOAT,  "Coordinates of point p");
    LSDYNA_YP                               = VALUE(FLOAT,  "Coordinates of point p");
    LSDYNA_ZP                               = VALUE(FLOAT,  "Coordinates of point p");
    LSD_MAT_BETA                            = VALUE(FLOAT,  "Material angle");
    LSD_NODE1                               = VALUE(NODE,  "Node");
    LSD_NODE3                               = VALUE(NODE,  "Node1");
    LSD_NODE4                               = VALUE(NODE,  "Node2");
    LSD_NODE5                               = VALUE(NODE,  "Node1");
    LSD_NODE6                               = VALUE(NODE,  "Node2");
    LSD_NODE7                               = VALUE(NODE,  "Node1");
    LSD_NODE8                               = VALUE(NODE,  "Node2");
    LSD_SYSTEM                              = VALUE(SYSTEM,  "coordinate system ID number");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    MAT214_CCE                              = VALUE(FLOAT,  "Strain rate parameter Cowper-Symonds factor for modulus");
    MAT214_CSE                              = VALUE(FLOAT,  "Strain rate parameter Cowper-Symonds factor for stress to peak");
    MAT214_DFAC                             = VALUE(FLOAT,  "Damage factor");
    MAT214_EACRF                            = VALUE(FLOAT,  "Factor for crimp region modulus of elasticity");
    MAT214_EACRP                            = VALUE(FLOAT,  "Crimp strain in longitudinal direction");
    MAT214_EAFAIL                           = VALUE(FLOAT,  "Erosion strain in longitudinal direction");
    MAT214_EAMAX                            = VALUE(FLOAT,  "Strain at peak stress in longitudinal direction");
    MAT214_EASF                             = VALUE(FLOAT,  "Factor for post-peak region modulus of elasticity in longitudinal direction");
    MAT214_EBCRF                            = VALUE(FLOAT,  "Factor for crimp region modulus of elasticity");
    MAT214_EBCRP                            = VALUE(FLOAT,  "Crimp strain in transverse direction");
    MAT214_EBFAIL                           = VALUE(FLOAT,  "Erosion strain in transverse direction");
    MAT214_EBMAX                            = VALUE(FLOAT,  "Strain at peak stress in transverse direction");
    MAT214_EBSF                             = VALUE(FLOAT,  "Factor for post-peak region modulus of elasticity in transverse direction");
    MAT214_ECOMF                            = VALUE(FLOAT,  "Factor for compression zone modulus of elasticity");
    MAT214_EMAX                             = VALUE(FLOAT,  "Erosion strain of element");
    MAT214_EUNLF                            = VALUE(FLOAT,  "Factor for unloading modulus of elasticity");
    MAT214_GAB1                             = VALUE(FLOAT,  "Slope in Shear stress-strain behavior graph");
    MAT214_GAB2                             = VALUE(FLOAT,  "Slope in Shear stress-strain behavior graph");
    MAT214_GAB3                             = VALUE(FLOAT,  "Slope in Shear stress-strain behavior graph");
    MAT214_GAMAB1                           = VALUE(FLOAT,  "Start for segment in Shear stress-strain behavior graph");
    MAT214_GAMAB2                           = VALUE(FLOAT,  "End for segment in Shear stress-strain behavior graph");
    MAT214_PCE                              = VALUE(FLOAT,  "Strain rate parameter Cowper-Symonds factor for modulus");
    MAT214_PSE                              = VALUE(FLOAT,  "Strain rate parameter Cowper-Symonds factor for stress to peak");
    MAT214_SIGPOST                          = VALUE(FLOAT,  "Stress value in post-peak region at which nonlinear behavior begins");
    Rho                                     = VALUE(FLOAT,  "mass density");
    axisOptFlag                             = VALUE(INT,  "Anisotropy axis definition");
    AOPT_SKEW_FLAG                          = VALUE(INT,  "Flag for defining coordinate system ID number");
    IO_FLAG                                 = VALUE(INT, "io flag");
    _HMCOMMENTSFLAG                         = VALUE(INT, "Write HM Comments");
    TITLE                                   = VALUE(STRING, "Title");
    EncTypeEnumField                        = VALUE(INT,  "Type");
    RegTypeEnumField                        = VALUE(INT,  "Type");
    LOC_AOPT                                = VALUE(FLOAT, "");
    //empty_string                       = VALUE(STRING, "Used as a local variable for free format case");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSDYNA_A1                               = 139;
    LSDYNA_A2                               = 140;
    LSDYNA_A3                               = 141;
    LSDYNA_D1                               = 145;
    LSDYNA_D2                               = 146;
    LSDYNA_D3                               = 147;
    LSDYNA_EA                               = 126;
    LSDYNA_EB                               = 127;
    LSDYNA_GBC                              = 133;
    LSDYNA_GCA                              = 134;
    LSDYNA_V1                               = 142;
    LSDYNA_V2                               = 143;
    LSDYNA_V3                               = 144;
    LSDYNA_XP                               = 136;
    LSDYNA_YP                               = 137;
    LSDYNA_ZP                               = 138;
    LSD_MAT_BETA                            = 306;
    LSD_NODE1                               = 86;
    LSD_NODE3                               = 2802;
    LSD_NODE4                               = 2803;
    LSD_NODE5                               = 5078;
    LSD_NODE6                               = 5079;
    LSD_NODE7                               = 5080;
    LSD_NODE8                               = 5081;
    LSD_SYSTEM                              = 184;
    LSD_TitleOpt                            = 90;
    MAT214_CCE                              = 7940;
    MAT214_CSE                              = 7942;
    MAT214_DFAC                             = 7944;
    MAT214_EACRF                            = 7949;
    MAT214_EACRP                            = 7951;
    MAT214_EAFAIL                           = 7946;
    MAT214_EAMAX                            = 7937;
    MAT214_EASF                             = 7953;
    MAT214_EBCRF                            = 7950;
    MAT214_EBCRP                            = 7952;
    MAT214_EBFAIL                           = 7947;
    MAT214_EBMAX                            = 7938;
    MAT214_EBSF                             = 7954;
    MAT214_ECOMF                            = 7936;
    MAT214_EMAX                             = 7945;
    MAT214_EUNLF                            = 7955;
    MAT214_GAB1                             = 7924;
    MAT214_GAB2                             = 7925;
    MAT214_GAB3                             = 7926;
    MAT214_GAMAB1                           = 7927;
    MAT214_GAMAB2                           = 7930;
    MAT214_PCE                              = 7941;
    MAT214_PSE                              = 7943;
    MAT214_SIGPOST                          = 7939;
    Num_Comments                            = 3101;
    Rho                                     = 118;
    axisOptFlag                             = 4946;
    AOPT_SKEW_FLAG                          = -1;
    EncTypeEnumField                        = 5828;
    RegTypeEnumField                        = 5827;
    TITLE                                   = -1;
    LOC_AOPT                                = -1;
    IO_FLAG                                 = -1;
    //empty_string                       = -1;
}

DRAWABLES(COMMON) {
}

CHECK(COMMON){
}

DEFAULTS(COMMON)
{
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_DRY_FABRIC");
     RADIO(CommentEnumField)
     {
         //ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
mandatory:
     SCALAR(Rho)                         {DIMENSION="density";}
     SCALAR(LSDYNA_EA)                   {DIMENSION="pressure";}
     SCALAR(LSDYNA_EB)                   {DIMENSION="pressure";}
     SCALAR(MAT214_GAB1);
     SCALAR(MAT214_GAB2);
     SCALAR(MAT214_GAB3);
     SCALAR(LSDYNA_GBC)                  {DIMENSION="pressure";}
     SCALAR(LSDYNA_GCA)                  {DIMENSION="pressure";}
optional:
     SCALAR(MAT214_GAMAB1);
     SCALAR(MAT214_GAMAB2);
     RADIO(axisOptFlag)
     {
        ADD(1, "0.0: Locally orthotropic: axis given by nodes 1,2 and 4");
        ADD(2, "2.0: Globally orthotropic: axis given by vectors");
        ADD(3, "3.0: Locally orthotropic: axis given by rotating the material axes by an angle BETA");
        ADD(4, "Pick System");
     }
     if(axisOptFlag == 4)
     {
        DATA(LSD_SYSTEM);
     }
     if(axisOptFlag == 1)
     {
        DATA(LSD_NODE1);
        ASSIGN(LSDYNA_XP,[@getentityvalue(nodes,$LSD_NODE1,x)],FALSE);
        ASSIGN(LSDYNA_YP,[@getentityvalue(nodes,$LSD_NODE1,y)],FALSE);
        ASSIGN(LSDYNA_ZP,[@getentityvalue(nodes,$LSD_NODE1,z)],FALSE);
        //SCALAR(LSDYNA_XP)               {DIMENSION="l";}
        //SCALAR(LSDYNA_YP)               {DIMENSION="l";}
        //SCALAR(LSDYNA_ZP)               {DIMENSION="l";}
        SCALAR(LSD_MAT_BETA)            {DIMENSION="DIMENSIONLESS";}
     }
     if(axisOptFlag == 2)
     {
        DATA(LSD_NODE3);
        DATA(LSD_NODE4);
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],FALSE);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],FALSE);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],FALSE);
        //SCALAR(LSDYNA_A1)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_A2)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_A3)               {DIMENSION="DIMENSIONLESS";}
        DATA(LSD_NODE7);                
        DATA(LSD_NODE8);                
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],FALSE);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],FALSE);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],FALSE);
        //SCALAR(LSDYNA_D1)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_D2)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_D3)               {DIMENSION="DIMENSIONLESS";}
     }
     if(axisOptFlag == 3)
     {
        DATA(LSD_NODE5);
        DATA(LSD_NODE6);
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],FALSE);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],FALSE);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],FALSE);
        //SCALAR(LSDYNA_V1)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_V2)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_V3)               {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT_BETA)            {DIMENSION="DIMENSIONLESS";}
     }     
     SCALAR(MAT214_EACRF);
     SCALAR(MAT214_EBCRF);
     SCALAR(MAT214_EACRP);
     SCALAR(MAT214_EBCRP);
     SCALAR(MAT214_EASF);
     SCALAR(MAT214_EBSF);
     SCALAR(MAT214_EUNLF);
     SCALAR(MAT214_ECOMF);
     SCALAR(MAT214_EAMAX);
     SCALAR(MAT214_EBMAX);
     SCALAR(MAT214_SIGPOST);
     SCALAR(MAT214_CCE);
     SCALAR(MAT214_PCE);
     SCALAR(MAT214_CSE);
     SCALAR(MAT214_PSE);
     SCALAR(MAT214_DFAC);
     SCALAR(MAT214_EMAX);
     SCALAR(MAT214_EAFAIL);
     SCALAR(MAT214_EBFAIL);

}

// File format
FORMAT(Keyword971_R7.1) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, IMPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, EXPORT);
    //
    if(LSD_NODE1 != NONE)
    {
        ASSIGN(LSDYNA_XP,[@getentityvalue(nodes,$LSD_NODE1,x)],EXPORT);
        ASSIGN(LSDYNA_YP,[@getentityvalue(nodes,$LSD_NODE1,y)],EXPORT);
        ASSIGN(LSDYNA_ZP,[@getentityvalue(nodes,$LSD_NODE1,z)],EXPORT);
    }
    if(LSD_NODE4 != NONE && LSD_NODE3 != NONE)
    {
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],EXPORT);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],EXPORT);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],EXPORT);
    }
    if(LSD_NODE8 != NONE && LSD_NODE7 != NONE)
    {
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],EXPORT);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],EXPORT);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],EXPORT);
    }
    if(LSD_NODE6 != NONE && LSD_NODE5 != NONE)
    {
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],EXPORT);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],EXPORT);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],EXPORT);
    }
    //
    if(axisOptFlag == 1 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,0.0,EXPORT);
    }
    else if(axisOptFlag == 2 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,2.0,EXPORT);
    }
    else if(axisOptFlag == 3 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,3.0,EXPORT);
    }
    //
    COMMENT("$      MID        RO        EA        EB      GAB1      GAB2      GAB3");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSDYNA_EA,LSDYNA_EB,MAT214_GAB1,MAT214_GAB2,MAT214_GAB3);
    //
    COMMENT("$      GBC       GCA    GAMAB1    GAMAB2");
    CARD("%10lg%10lg%10lg%10lg",LSDYNA_GBC,LSDYNA_GCA,MAT214_GAMAB1,MAT214_GAMAB2);
    //
    COMMENT("$     AOPT                  XP        YP        ZP        A1        A2        A3");
    if(IO_FLAG == 2)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 4)
        {
            if(axisOptFlag == 1)
            {
                CARD("%10lg%10s%10lg%10lg%10lg",LOC_AOPT,_BLANK_,LSDYNA_XP,LSDYNA_YP,LSDYNA_ZP);
            }
            else if(axisOptFlag == 2)
            {
                CARD("%10lg%10s%10s%10s%10s%10lg%10lg%10lg",LOC_AOPT,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
            }
            else if(axisOptFlag == 3)
            {
                CARD("%10lg",LOC_AOPT);
            }
        }
        else
        {
            CARD("%10lg",SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM));
        }
    }
    CARD_PREREAD("%10lg",LOC_AOPT);
    if(LOC_AOPT == 0.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,1,IMPORT);
    }
    else if(LOC_AOPT == 2.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,2,IMPORT);
    }
    else if(LOC_AOPT == 3.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,3,IMPORT);
    }
    if(IO_FLAG == 1)
    {
        if(axisOptFlag == 1)
        {
            CARD("%10lg%10s%10lg%10lg%10lg",LOC_AOPT,_BLANK_,LSDYNA_XP,LSDYNA_YP,LSDYNA_ZP);
        }
        else if(axisOptFlag == 2)
        {
            CARD("%10lg%10s%10s%10s%10s%10lg%10lg%10lg",LOC_AOPT,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
        }
        else if(axisOptFlag == 3)
        {
            CARD("%10lg",LOC_AOPT);
        }
        else
        {
            CARD("%10lg",SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM));
            ASSIGN(axisOptFlag, 4, IMPORT);
        }
    }
    //
    COMMENT("$       V1        V2        V3        D1        D2        D3      BETA");
    if(axisOptFlag == 3)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,LSD_MAT_BETA);
    }
    else if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg%10s",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3,_BLANK_);
    }
    else if(axisOptFlag == 1)
    {
        CARD("%10s%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_MAT_BETA);
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$    EACRF     EBCRF     EACRP     EBCRP");
    CARD("%10lg%10lg%10lg%10lg",MAT214_EACRF,MAT214_EBCRF,MAT214_EACRP,MAT214_EBCRP);
    //
    COMMENT("$     EASF      EBSF     EUNLF     ECOMF     EAMAX     EBMAX   SIGPOST");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",MAT214_EASF,MAT214_EBSF,MAT214_EUNLF,MAT214_ECOMF,MAT214_EAMAX,MAT214_EBMAX,MAT214_SIGPOST);
    //
    COMMENT("$      CCE       PCE       CSE       PSE      DFAC      EMAX    EAFAIL    EBFAIL");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",MAT214_CCE,MAT214_PCE,MAT214_CSE,MAT214_PSE,MAT214_DFAC,MAT214_EMAX,MAT214_EAFAIL,MAT214_EBFAIL);
    //

}
