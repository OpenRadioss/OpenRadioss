//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 030
// 


ATTRIBUTES(COMMON) 

{

    // Initial and reference densities
    KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt                      = VALUE(INT, "Title");
    CommentEnumField                  = VALUE(INT, "User Comments");
    Num_Comments                      = SIZE("No. of comment lines");
    Comments                          = ARRAY[Num_Comments](STRING, "Entity Comments");
    Rho                               = VALUE(FLOAT, "Rho");  
    E                                 = VALUE(FLOAT, "E");
    Nu                                = VALUE(FLOAT, "Nu");
    LSD_SIG_ASS                       = VALUE(FLOAT, "SIG_ASS");
    LSD_SIG_ASF                       = VALUE(FLOAT, "SIG_ASF");  
    LSD_SIG_SAS                       = VALUE(FLOAT, "SIG_SAS");
    LSD_SIG_SAF                       = VALUE(FLOAT, "SIG_SAF");
    LSD_EPSL                          = VALUE(FLOAT, "EPSL");
    LSD_ALPHA                         = VALUE(FLOAT, "ALPHA");
    LSD_YMRT                          = VALUE(FLOAT, "YMRT");
    optionalCards                     = VALUE(INT, "OptionalCard");
    LSD_LCID2                         = VALUE(FUNCT, "LCID_AS");
    LSD_LCID3                         = VALUE(FUNCT, "LCID_SA");
    SIG_ASSOpt                        = VALUE(INT, "SIG_ASSOpt");
    SIG_ASFOpt                        = VALUE(INT, "SIG_ASFOpt");
    SIG_SASOpt                        = VALUE(INT, "SIG_SASOpt");
    SIG_SAFOpt                        = VALUE(INT, "SIG_SAFOpt");
    LSD_LCID                          = VALUE(FUNCT, "SIG_ASS");
    LSD_LCID4                         = VALUE(FUNCT, "SIG_ASF");
    LSD_LCID5                         = VALUE(FUNCT, "SIG_SAS");
    LSD_LCID6                         = VALUE(FUNCT, "SIG_SAF");


}

SKEYWORDS_IDENTIFIER(COMMON)

{

    KEYWORD_STR                   = 9000;
    CommentEnumField              = 3220;
    Num_Comments                  = 3101;
    LSD_TitleOpt                  = 90;
    Comments                      = 3100;
    Rho                           = 118;
    E                             = 119;
    Nu                            = 120;
    LSD_SIG_ASS                   = 4724;
    LSD_SIG_ASF                   = 4725;
    LSD_SIG_SAS                   = 4726;
    LSD_SIG_SAF                   = 4727;
    LSD_EPSL                      = 4728;
    LSD_ALPHA                     = 1651;
    LSD_YMRT                      = 4729;
    optionalCards                 = 4772; 
    LSD_LCID2                     = 168;
    LSD_LCID3                     = 170;
    SIG_ASSOpt                    = 8774;
    SIG_ASFOpt                    = 8775;
    SIG_SASOpt                    = 8776;
    SIG_SAFOpt                    = 8777;
    LSD_LCID                      = 45;
    LSD_LCID4                     = 171;
    LSD_LCID5                     = 172;
    LSD_LCID6                     = 199;
}

DRAWABLES(COMMON) {
public:
    MASS_DENSITY=SCALAR(Rho);
    YOUNG_MODULUS=SCALAR(E);
    POISSON_RATIO=SCALAR(Nu);
    RECOVERABLE_STRAIN=SCALAR(LSD_EPSL);
    SIG_ASS=SCALAR(LSD_SIG_ASS);
    SIG_ASF=SCALAR(LSD_SIG_ASF);
    SIG_SAS=SCALAR(LSD_SIG_SAS);
    SIG_SAF=SCALAR(LSD_SIG_SAF);
    DIFFERENCE_MATERIAL_TENSION_COMPRESSION=SCALAR(LSD_ALPHA);
    YOUNG_MODULUS=SCALAR(LSD_YMRT);
public:
    //SOUND_SPEED is speed for ISDO = 0 and 1
    SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
    SOUND_SPEED_ISDO_2      = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
private:
    G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
    C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
public:
    SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON) 

{


    ASSIGN(KEYWORD_STR, "*MAT_SHAPE_MEMORY");
    RADIO(CommentEnumField)
    {
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do not export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
            SCALAR(Comments);
        }
    }     
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == TRUE)
    {
        ASSIGN(KEYWORD_STR, "_TITLE");
    } 
mandatory:
    SCALAR(Rho)                         { DIMENSION="density";}
    SCALAR(E)                          {DIMENSION="pressure";}
optional:
    SCALAR(Nu)                         {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_SIG_ASS)                {DIMENSION="pressure";}
    SCALAR(LSD_SIG_ASF)                {DIMENSION="pressure";}
    SCALAR(LSD_SIG_SAS)                {DIMENSION="pressure";}
    SCALAR(LSD_SIG_SAF)                {DIMENSION="pressure";}
    SCALAR(LSD_EPSL)                   {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_ALPHA)                  {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_YMRT)                   {DIMENSION="pressure";}
    FLAG(optionalCards);
    if(optionalCards == TRUE)
    {
        FUNCTION(LSD_LCID2)
        {
          X_TITLE = "Martensite Fraction"; X_DIMENSION = "DIMENSIONLESS";
          Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
          Z_TITLE = "Martensite Fraction Rate"; Z_DIMENSION = "DIMENSIONLESS";
        }
        FUNCTION(LSD_LCID3)
        {
          X_TITLE = "Martensite Fraction"; X_DIMENSION = "DIMENSIONLESS";
          Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
          Z_TITLE = "Martensite Fraction Rate"; Z_DIMENSION = "DIMENSIONLESS";
        }
    }
    /*
    graphical SUPPORT("Part(s) to which material is applied") {
    OBJECTS=(/PART/BRICK,/PART/TETRA4,/PART/LINEAR_3D);
    ADD(PART,"Parts");
    }
    */
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID       RHO         E        PR");
    CARD("%10d%10lg%10lg%10lg",_ID_,Rho,E,Nu);
    //
    COMMENT("$  SIG_ASS   SIG_ASF   SIG_SAS   SIG_SAF      EPSL     ALPHA      YMRT");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",SCALAR_OR_OBJECT(SIG_ASSOpt, LSD_SIG_ASS, LSD_LCID),SCALAR_OR_OBJECT(SIG_ASFOpt, LSD_SIG_ASF, LSD_LCID4),
        SCALAR_OR_OBJECT(SIG_SASOpt, LSD_SIG_SAS, LSD_LCID5),SCALAR_OR_OBJECT(SIG_SAFOpt, LSD_SIG_SAF, LSD_LCID6),LSD_EPSL,LSD_ALPHA,LSD_YMRT);
    //
}
FORMAT(Keyword971_R7.1) 
{
    //
    COMMENT("$      MID       RHO         E        PR");
    CARD("%10d%10lg%10lg%10lg",_ID_,Rho,E,Nu);
    //
    COMMENT("$  SIG_ASS   SIG_ASF   SIG_SAS   SIG_SAF      EPSL     ALPHA      YMRT");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",SCALAR_OR_OBJECT(SIG_ASSOpt, LSD_SIG_ASS, LSD_LCID),SCALAR_OR_OBJECT(SIG_ASFOpt, LSD_SIG_ASF, LSD_LCID4),
        SCALAR_OR_OBJECT(SIG_SASOpt, LSD_SIG_SAS, LSD_LCID5),SCALAR_OR_OBJECT(SIG_SAFOpt, LSD_SIG_SAF, LSD_LCID6),LSD_EPSL,LSD_ALPHA,LSD_YMRT);
    //
    if(optionalCards == TRUE)
    {
        COMMENT("$  LCID_AS   LCID_SA");
    }
    FREE_CARD(optionalCards,"%10d%10d",LSD_LCID2 ,LSD_LCID3);
} 