//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
ATTRIBUTES(COMMON) {

  
    IO_FLAG                             = VALUE(INT, "Import/Export flag");
    _HMCOMMENTSFLAG                     = VALUE(INT, "Write HM Comments");
    _HWCOLOR                            = VALUE(INT, "Entity Color");
    TITLE                               = VALUE(STRING, "TITLE");
    
    DEFORM                              = VALUE(BOOL,"Option for Deform");
    CDAMP                               = VALUE(FLOAT,"Fraction of damping critical");
    FLOW                                = VALUE(FLOAT,"Lowest frequency range in region of interest");
    FHIGH                               = VALUE(FLOAT,"Highest frequency range in region of interest");
    PSID                                = VALUE(SETS,"Part Set ID") { SUBTYPES = (/SETS/SET_PART_IDPOOL) ; }
    PIDRB                               = VALUE(COMPONENT,"Optional part ID of rigid body");
    IFLAG                               = VALUE(INT,"Method used for internal calculation of damping");
    
    TYPE                                = VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
  	IO_FLAG=-1;
	_HMCOMMENTSFLAG=-1;
	_HWCOLOR=-1;
    TYPE=-1;
}
/*
DEFAULTS(COMMON)
{

}
*/


// File format
FORMAT(Keyword971_R7.1) {
    
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
	
    if(IO_FLAG == 2 && DEFORM == FALSE)
    {
        HEADER("*DAMPING_FREQUENCY_RANGE");
        COMMENT("$    CDAMP      FLOW     FHIGH      PSID              PIDREL     IFLAG");
        CARD("%10lg%10lg%10lg%10d          %10lg%10d",CDAMP,FLOW,FHIGH,PSID,PIDRB,IFLAG);
    }
    else if(IO_FLAG == 2 && DEFORM == TRUE)
    {
        HEADER("*DAMPING_FREQUENCY_RANGE_DEFORM");
        COMMENT("$    CDAMP      FLOW     FHIGH      PSID                         IFLAG");
        CARD("%10lg%10lg%10lg%10d                    %10d",CDAMP,FLOW,FHIGH,PSID,IFLAG);
    }
    else if(IO_FLAG ==1)
   {
        HEADER("*DAMPING_FREQUENCY_RANGE%7s",TYPE);   
        if(TYPE =="_DEFORM")
        {
            ASSIGN(DEFORM, 1);
            COMMENT("$    CDAMP      FLOW     FHIGH      PSID                         IFLAG");
            CARD("%10lg%10lg%10lg%10d                    %10d",CDAMP,FLOW,FHIGH,PSID,IFLAG);
        
        }
        else 
        {
            ASSIGN(DEFORM, 0);
            COMMENT("$    CDAMP      FLOW     FHIGH      PSID              PIDREL     IFLAG");
            CARD("%10lg%10lg%10lg%10d          %10d%10d",CDAMP,FLOW,FHIGH,PSID,PIDRB,IFLAG);
        }
    } 
}

FORMAT(Keyword971) {
    COMMENT("$    CDAMP      FLOW     FHIGH      PSID");
    CARD("%10lg%10lg%10lg%10d",CDAMP,FLOW,FHIGH,PSID);
	 
}

