//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// DATABASE_NODAL_FORCE_GROUP
// 


 ATTRIBUTES(COMMON) 
  {

    //INPUT ATTRIBUTES

    //Title
    TITLE               = VALUE(STRING,    "Title");
    Title               = VALUE(BOOL,      "Title Flag");

    // Database nodal force
    KEYWORD_STR                     = VALUE(STRING, "Solver Keyword");
    LSD_CID                         = VALUE(SYSTEM,  "Coordinate ID");
    LSD_NSID                        = VALUE(SETS, "Nodal set ID") { SUBTYPES = (/SETS/SET_NODE_IDPOOL) ; }

      //HM_INTERNAL
    IOFLAG              = VALUE(INT,       "IO Flag");
    _opt                = VALUE(STRING,    "Keyword Option");
    _dummy              = VALUE(INT,       "Dummy Keyword");
    solverkeyword       = VALUE(STRING,    "Solver Keyword");
  
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    // Card
    LSD_CID             = 412;
    LSD_NSID            = 7841;

    //HM INTERNAL
    KEYWORD_STR         = 9000;

    IOFLAG              = -1;
    _opt                = -1;
    _dummy              = -1;
    solverkeyword       = -1;
}


GUI(COMMON) 
{
    FLAG(Title);

    //ASSIGN(KEYWORD_STR, "*DATABASE_NODAL_FORCE_GROUP");

    if(Title == 0)
    {
        ASSIGN(solverkeyword, *DATABASE_NODAL_FORCE_GROUP);
    }
    else if(Title == 1)
    {
        ASSIGN(solverkeyword, *DATABASE_NODAL_FORCE_GROUP_TITLE);
    }

    DATA(LSD_CID,"Skew ID"); 
    DATA(LSD_NSID,"Nodal set ID");
}

// File format
   FORMAT(Keyword971_R14.1) {

    ASSIGN(IOFLAG, 0, EXPORT);
    ASSIGN(IOFLAG, 1, IMPORT);

    if(IOFLAG == 0)
    {
      if(Title == 0)
      {
        HEADER("*DATABASE_NODAL_FORCE_GROUP");
      }
      else if(Title == 1)
      {
        HEADER("*DATABASE_NODAL_FORCE_GROUP_TITLE");
      }
    }
    else //IMPORT
    {
        HEADER("*DATABASE_NODAL_FORCE_GROUP%30s", _opt);

        ASSIGN(_dummy, _FIND(_opt, "TITLE"), IMPORT);
        if(_dummy == 1)
        {
            ASSIGN(Title, 1, IMPORT);
        }
        else
        {
            ASSIGN(Title, 0, IMPORT);
        }
    }

    if(IOFLAG == 1 && Title == 1)
    {
        CARD("%-80s", TITLE);
    }

  COMMENT("$     NSID       CID");
  CARD("%10d%10d",LSD_NSID,LSD_CID);

}
