//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Property Shell type1
ATTRIBUTES(COMMON)
{
    Ishell                                  = VALUE(INT,  " 4 Node Shell Element Formulation Flag");
    Ismstr                                  = VALUE(INT,  " Shell Small Strain Formulation Flag");
    Ish3                                    = VALUE(INT,  " 3 Node Shell Element Formulation Flag");
    Idrill                                  = VALUE(INT,  " Drilling Degree of Freedom Stiffness Flag");
    Hm                                      = VALUE(FLOAT,  " Shell Membrane Hourglass Coefficient");
    Hf                                      = VALUE(FLOAT,  " Shell Out-of-Plane Hourglass");
    Hr                                      = VALUE(FLOAT,  " Shell Rotation Hourglass Coefficient");
    Dm                                      = VALUE(FLOAT,  " Shell Membrane Damping");
    Dn                                      = VALUE(FLOAT,  " Shell Numerical Damping");
    NIP                                     = VALUE(INT,  " Number of Integration Points Through the Thickness");
    ISTRAIN                                 = VALUE(INT,  " Compute Strains for Post-Processing Flag");
    THICK                                   = VALUE(FLOAT,  " Shell Thickness");
    AREA_SHEAR                              = VALUE(FLOAT,  " Shear Factor");
    ITHICK                                  = VALUE(INT,  " Shell Resultant Stresses Calculation Flag");
    IPLAS                                   = VALUE(INT,  " Shell Plane Stress Plasticity Flag");
    P_Thick_Fail                            = VALUE(FLOAT, " Percentage of through thickness integration points");   
    
    //Attributes for HM usage
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING,  "Entity_Comments");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Prop_Name_OR_Type                       = VALUE(INT, "");
    TITLE                                   = VALUE(STRING, "");
    IO_FLAG                                 = VALUE(INT, "");
    TYPE_NO                                 = VALUE(STRING, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    NUM_COMMENTS                            = 5110;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;    
    Ishell                                  = 8028;
    Ismstr                                  = 5152;
    Ish3                                    = 4134;
    Idrill                                  = 4827;
    Hm                                      = 8024;
    Hf                                      = 8025;
    Hr                                      = 8026;
    Dm                                      = 8027;
    Dn                                      = 4135;
    NIP                                     = 427;
    ISTRAIN                                 = 2177;
    THICK                                   = 431;
    AREA_SHEAR                              = 402;
    ITHICK                                  = 2092;
    IPLAS                                   = 2089;
    P_Thick_Fail                            = 5407;   
    Prop_Name_OR_Type                       = 4537;
    TITLE                                   =   -1;
    IO_FLAG                                 =   -1;
    TYPE_NO                                 =   -1;
}

DRAWABLES(COMMON) {
  THICKNESS = SCALAR(THICK);
}

/* PARAMETERS(PARAMETERS) {                                                        
  THICK = INPUT_SCALAR(THICK,"Thickness"); 
} */

CHECK(COMMON)
{
    Hf                                      >=  0.0;
    Hf                                      <= 0.05;
    Hm                                      >=  0.0;
    Hm                                      <= 0.05;
    Hr                                      >=  0.0;
    Hr                                      <= 0.05;
    THICK                                   >   0.0;
    P_Thick_Fail                            >=  0.0;
    P_Thick_Fail                            <=  1.0;
}

DEFAULTS(COMMON)
{
    AREA_SHEAR                              = 0.833333;
    Hf                                      =     0.01;
    Hm                                      =     0.01;
    Hr                                      =     0.01;
    NIP                                     =        0;
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
       ENUM_VALUE_FLAG=TRUE;
       ADD(1, "1:Hide in Menu/Export");
       ADD(2, "2:Show in Menu/Export");
       ADD(3, "3:Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Prop_Name_OR_Type == 2)
    {
        ASSIGN(KEYWORD_STR, "/PROP");
        ASSIGN(KEYWORD_STR, "/TYPE1/");

    }
    else
    {
        ASSIGN(KEYWORD_STR, "/PROP");
        ASSIGN(KEYWORD_STR, "/SHELL/");
    }
   
 optional:
    RADIO(Ishell)
    {
       ADD(0, "0:Use Value in /DEF_SHELL");
       ADD(1, "1:Q4, Visco-Elastic Hourglass Modes Orthogonal to Deformation and Rigid Modes (Belytschko)");
       ADD(2, "2:Q4, Visco-Elastic Hourglass without Orthogonality (Hallquist)");
       ADD(3, "3:Q4, Elasto-Plastic Hourglass with Orthogonality");
       ADD(4, "4:Q4 with Improved Type 1 Formulation");
       ADD(12, "12:QBAT Shell Formulation");
       ADD(24, "24:QEPH Shell Formulation");
    }
    RADIO(Ismstr)
    {
       ADD(0, "0:Use Value in /DEF_SHELL");
       ADD(1, "1:Small Strain from Time = 0");
       ADD(2, "2:Full Geometric Nonlinearities with Possible Small Strain Formulation Activation in RADIOSS Engine");
       ADD(3, "3:Old small strain formulation");
       ADD(4, "4:Full Geometric Nonlinearities");
       ADD(10,"10:Lagrange type total strain for hyperelastic material laws");
    }
    RADIO(Ish3)
    {
       ADD(0, "0:Use Value in /DEF_SHELL");
       ADD(1, "1:Standard Triangle");
       ADD(2, "2:Standard Triangle with Modification for Large Rotation");
       ADD(30, "30:DKT18");
       ADD(31, "31:DKT_S3, Which Based on DTK12 of BATOZ");
    }
    RADIO(Idrill)
    {
       ADD(0, "0:No");
       ADD(1, "1:Yes");
    }
    SCALAR(P_Thick_Fail);
    SCALAR(Hm);
    SCALAR(Hf);
    SCALAR(Hr);
    SCALAR(Dm);
    SCALAR(Dn);
    RADIO(NIP)
    {
       ADD(0,"0");
       ADD(1,"1");
       ADD(2,"2");
       ADD(3,"3");
       ADD(4,"4");
       ADD(5,"5");
       ADD(6,"6");
       ADD(7,"7");
       ADD(8,"8");
       ADD(9,"9");
       ADD(10,"10");
    }
    RADIO(ISTRAIN)
    {
       ADD(0, "0:Default, Set to Value Defined with /DEF_SHELL");
       ADD(1, "1:Yes");
       ADD(2, "2:No");
    }
 mandatory:
    SCALAR(THICK){ DIMENSION="l";        }
    SCALAR(AREA_SHEAR);
 optional:
    RADIO(ITHICK)
    {
       ADD(0, "0:Default, Set to Value Defined with /DEF_SHELL");
       ADD(1, "1:Thickness Change is Taken into Account");
       ADD(2, "2:Thickness is Constant");
    }
    RADIO(IPLAS)
    {
       ADD(0, "0:Default, Set to Value Defined with /DEF_SHELL");
       ADD(1, "1:Iterative Projection with Three Newton Iterations");
       ADD(2, "2:Radial Return");
    }

    /*
     mandatory:
      graphical SUPPORT("Support") {
        OBJECTS=(/PART/SHELL);
        ADD(PART,"Parts");
      }
    */
}

// File format for Radioss 2018
FORMAT(radioss2018) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE1/%d",_ID_);
    }
    else 
    {
        HEADER("/PROP/SHELL/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    COMMENT("#   Ishell    Ismstr     Ish3n    Idrill                            P_Thick_Fail");
    CARD("%10d%10d%10d%10d                    %20lg",Ishell,Ismstr,Ish3,Idrill,P_Thick_Fail);
    COMMENT("#                 Hm                  Hf                  Hr                  Dm                  Dn");
    CARD("%20lg%20lg%20lg%20lg%20lg",Hm,Hf,Hr,Dm,Dn); 
    COMMENT("#        N   Istrain               Thick              Ashear              Ithick     Iplas");
    CARD("%10d%10d%20lg%20lg          %10d%10d",NIP,ISTRAIN,THICK,AREA_SHEAR,ITHICK,IPLAS);
}
// File format for Radioss 110
FORMAT(radioss110) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE1/%d",_ID_);
    }
    else 
    {
        HEADER("/PROP/SHELL/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    COMMENT("#   Ishell    Ismstr     Ish3n    Idrill");
    CARD("%10d%10d%10d%10d",Ishell,Ismstr,Ish3,Idrill);
    COMMENT("#                 Hm                  Hf                  Hr                  Dm                  Dn");
    CARD("%20lg%20lg%20lg%20lg%20lg",Hm,Hf,Hr,Dm,Dn); 
    COMMENT("#        N   Istrain               Thick              AShear              Ithick     Iplas");
    CARD("%10d%10d%20lg%20lg          %10d%10d",NIP,ISTRAIN,THICK,AREA_SHEAR,ITHICK,IPLAS);
}
// File format for Radioss 51
FORMAT(radioss51) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE1/%d",_ID_);
    }
    else 
    {
        HEADER("/PROP/SHELL/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    COMMENT("#   Ishell    Ismstr      Ish3");
    CARD("%10d%10d%10d",Ishell,Ismstr,Ish3);
    COMMENT("#                 Hm                  Hf                  Hr                  Dm                  Dn");
    CARD("%20lg%20lg%20lg%20lg%20lg",Hm,Hf,Hr,Dm,Dn); 
    COMMENT("#        N   Istrain               Thick              AShear              Ithick     Iplas");
    CARD("%10d%10d%20lg%20lg          %10d%10d",NIP,ISTRAIN,THICK,AREA_SHEAR,ITHICK,IPLAS);
}
FORMAT(radioss44) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s/%d/%s",TYPE_NO,_ID_,TITLE);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    COMMENT("# Ishell  Ismstr");
    CARD("%8d%8d",Ishell,Ismstr);
    COMMENT("#             Hm              Hf              Hr              Dm              Dn");
    CARD("%16lg%16lg%16lg%16lg%16lg",Hm,Hf,Hr,Dm,Dn); 
    COMMENT("#      N Istrain           Thick          AShear          Ihick   Iplas");
    CARD("%8d%8d%16lg%16lg        %8d%8d",NIP,ISTRAIN,THICK,AREA_SHEAR,ITHICK,IPLAS);
}
// File format for Radioss 41
FORMAT(radioss41) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s/%d/%s",TYPE_NO,_ID_,TITLE);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    COMMENT("# Ishell  Ismstr");
    CARD("%8d%8d",Ishell,Ismstr);
    COMMENT("#             Hm              Hf              Hr              Dm");
    CARD("%16lg%16lg%16lg%16lg",Hm,Hf,Hr,Dm); 
    COMMENT("#      N Istrain           Thick          AShear          Ihick   Iplas");
    CARD("%8d%8d%16lg%16lg        %8d%8d",NIP,ISTRAIN,THICK,AREA_SHEAR,ITHICK,IPLAS);
}

