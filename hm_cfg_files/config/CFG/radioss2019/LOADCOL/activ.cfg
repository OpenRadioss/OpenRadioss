//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- activ.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    displayname                             = VALUE(STRING, "Element deactivation block title");

    //Card 2
    ISENSOR                                 = VALUE(SENSOR, "Sensor identifier");
    GR_BRICK_SET                            = VALUE(SETS,   "Brick element group identifier")   { SUBTYPES = (/SETS/GRBRIC) ; }
    GR_QUAD_SET                             = VALUE(SETS,   "Quad element group identifier")    { SUBTYPES = (/SETS/GRQUAD) ; }
    GRSHEL_SET                              = VALUE(SETS,   "Shell element group identifier")   { SUBTYPES = (/SETS/GRSHEL) ; }
    GR_TRUSS_SET                            = VALUE(SETS,   "Truss element group identifier")   { SUBTYPES = (/SETS/GRTRUSS) ; }
    GR_BEAM_SET                             = VALUE(SETS,   "Beam element group identifier")    { SUBTYPES = (/SETS/GRBEAM) ; }
    GR_SPRING_SET                           = VALUE(SETS,   "Spring element group identifier")  { SUBTYPES = (/SETS/GRSPRI) ; }
    GR_SH3N_SET                             = VALUE(SETS,   "3N shell element group identifier"){ SUBTYPES = (/SETS/GRSH3N) ; }
    ACTIV_Iform                             = VALUE(INT,    "Formulation flag");

    //Card 3 - (Iform = 2)
    ACTIV_Tstart                            = VALUE(FLOAT,  "Activation time");
    ACTIV_Tstop                             = VALUE(FLOAT,  "Deactivation time");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 2
    ISENSOR                                 = 5157;
    GR_BRICK_SET                            = 949;
    GR_QUAD_SET                             = 950;
    GRSHEL_SET                              = 8078;
    GR_TRUSS_SET                            = 951;
    GR_BEAM_SET                             = 952;
    GR_SPRING_SET                           = 953;
    GR_SH3N_SET                             = 954;
    ACTIV_Iform                             = 1755;

    //Card 3 - (Iform = 2)
    ACTIV_Tstart                            = 1756;
    ACTIV_Tstop                             = 2716;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;
}

DEFAULTS(COMMON)
{
    ACTIV_Iform                             = 1;
    ACTIV_Tstop                             = 1.0e30;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/ACTIV/");

    DATA(ISENSOR,       "sens_ID");
    DATA(GR_BRICK_SET,  "grbric_ID");
    DATA(GR_QUAD_SET,   "grquad_ID");
    DATA(GRSHEL_SET,    "grshel_ID");
    DATA(GR_TRUSS_SET,  "grtrus_ID");
    DATA(GR_BEAM_SET,   "grbeam_ID");
    DATA(GR_SPRING_SET, "grspr_ID");
    DATA(GR_SH3N_SET,   "grsh3n_ID");
    mandatory:
        RADIO(ACTIV_Iform, "Iform")
        {
            ADD(1, "1: (Default) Elements are deactivated when the sensor is activated (ON)");
            ADD(2, "2: Elements are activated when T>Tstart or if sens_ID is defined T>Tstart+Tsensor. Elements are deactivated when T>Tstop or if sens_ID is defined T>Tstop+Tsensor");
        }
    optional:
        if(ACTIV_Iform == 2)
        {
            SCALAR(ACTIV_Tstart, "Tstart")       { DIMENSION = "t" ; }
            SCALAR(ACTIV_Tstop,  "Tstop")        { DIMENSION = "t" ; }
        }
}

// File format
FORMAT(radioss51)
{
    HEADER("/ACTIV/%-d", _ID_);

    //Card 1
    COMMENT("#activ_title                                                                                        ");
    CARD("%-100s", displayname);

    //Card 2
    COMMENT("#  sens_id grbric_id grquad_id grshel_id grtrus_id grbeam_id grspri_id grsh3n_id");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10d", ISENSOR, GR_BRICK_SET, GR_QUAD_SET, GRSHEL_SET, GR_TRUSS_SET, GR_BEAM_SET, GR_SPRING_SET, GR_SH3N_SET);

    if(ACTIV_Iform == 2)
    {
        //Card 3
        COMMENT("#             Tstart               Tstop");
        CARD("%20lg%20lg", ACTIV_Tstart, ACTIV_Tstop);
    }
}

FORMAT(radioss2017)
{
    HEADER("/ACTIV/%-d", _ID_);

    //Card 1
    COMMENT("#activ_title                                                                                        ");
    CARD("%-100s", displayname);

    //Card 2
    COMMENT("#  sens_ID grbric_ID grquad_ID grshel_ID grtrus_ID grbeam_ID  grspr_ID grsh3n_ID               Iform");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10d%10s%10d", ISENSOR, GR_BRICK_SET, GR_QUAD_SET, GRSHEL_SET, GR_TRUSS_SET, GR_BEAM_SET, GR_SPRING_SET, GR_SH3N_SET, _BLANK_, ACTIV_Iform);

    if(ACTIV_Iform == 2)
    {
        //Card 3
        COMMENT("#             Tstart");
        CARD("%20lg", ACTIV_Tstart);
    }
}

FORMAT(radioss2019)
{
    HEADER("/ACTIV/%-d", _ID_);

    //Card 1
    COMMENT("#activ_title                                                                                        ");
    CARD("%-100s", displayname);

    //Card 2
    COMMENT("#  sens_ID grbric_ID grquad_ID grshel_ID grtrus_ID grbeam_ID  grspr_ID grsh3n_ID               Iform");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10d%10s%10d", ISENSOR, GR_BRICK_SET, GR_QUAD_SET, GRSHEL_SET, GR_TRUSS_SET, GR_BEAM_SET, GR_SPRING_SET, GR_SH3N_SET, _BLANK_, ACTIV_Iform);

    if(ACTIV_Iform == 2)
    {
        //Card 3
        COMMENT("#             Tstart               Tstop");
        CARD("%20lg%20lg", ACTIV_Tstart, ACTIV_Tstop);
    }
}