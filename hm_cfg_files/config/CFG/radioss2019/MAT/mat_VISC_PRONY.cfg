//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material Visc_Prony
ATTRIBUTES(COMMON) 
{
    IO_FLAG         = VALUE(INT, "");
    Model_Order     = SIZE("Maxwell Model Order");
    MAT_K           = VALUE(FLOAT,"Viscous Bulk Modulus");
    Fport1          = ARRAY[Model_Order](FLOAT,"Shear Relaxation Modulus");
    Fporp1          = ARRAY[Model_Order](FLOAT,"Decay Shear Constant");
    Ki              = ARRAY[Model_Order](FLOAT,"Bulk Relaxation Modulus");
    Beta_ki         = ARRAY[Model_Order](FLOAT,"Decay Bulk Constant");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    IO_FLAG         = -1;
    Model_Order     = 2907;
    MAT_K           = 998;
    Fport1          = 4119;
    Fporp1          = 4120;
    Ki              = 2723;
    Beta_ki         = 2724;
}

DEFAULTS(COMMON)
{
    Model_Order     = 0;
    MAT_K           = 0;
}

CHECK(COMMON)
{
    Model_Order         >  0;
    Model_Order         <= 100;
}

GUI(COMMON) 
{
mandatory:
    SIZE(Model_Order);
    SCALAR(MAT_K)   {DIMENSION = "dynamicviscosity"; }
    if( Model_Order > 0 && Model_Order <= 100)
    {
        ARRAY(Model_Order,"Strain rate") 
        {
            SCALAR(Fport1)  {DIMENSION = "pressure"; }
            SCALAR(Fporp1)  {DIMENSION = "strain_rate"; }
            SCALAR(Ki)      {DIMENSION = "pressure"; }
            SCALAR(Beta_ki) {DIMENSION = "strain_rate"; }
        }
    }
}

FORMAT(radioss2019) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/VISC/PRONY/%d",_ID_);
    }
    COMMENT("#        M                           K_v");
    CARD("%10d          %20lg",Model_Order,MAT_K);
    if( Model_Order > 0 && Model_Order <= 100)
    {
        COMMENT("#                G_i              Beta_i                  Ki             Beta_ki");
        CARD_LIST(Model_Order)
        {
            CARD("%20lg%20lg%20lg%20lg",Fport1,Fporp1,Ki,Beta_ki);
        }
    }
}
FORMAT(radioss110) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/VISC/PRONY/%d",_ID_);
    }
    COMMENT("#        M                           K_v");
    CARD("%10d          %20lg",Model_Order,MAT_K);
    if( Model_Order > 0 && Model_Order <= 100)
    {
        COMMENT("#                G_i              Beta_i");
        CARD_LIST(Model_Order)
        {
            CARD("%20lg%20lg",Fport1,Fporp1);
        }
    }
}
