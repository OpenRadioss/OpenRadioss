//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- func_2d.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES

    //Title Card
    displayname                 = VALUE(STRING, "2D function title","TITLE");

    //Card 1
    dim                         = VALUE(INT,    "Dimension of the 2D function values");

    //Card 2
    FUNC_size                   = SIZE(         "Number of lines");
    X                           = ARRAY[FUNC_size](FLOAT, "Coordinate 1");
    Y                           = ARRAY[FUNC_size](FLOAT, "Coordinate 2");
    Z1                          = ARRAY[FUNC_size](FLOAT, "2D function value along first basis axis");
    Z2                          = ARRAY[FUNC_size](FLOAT, "2D function value along second basis axis, only used when dim=2 or 3");
    Z3                          = ARRAY[FUNC_size](FLOAT, "2D function value along third basis axis, only used when dim=3");

    //HM INTERNAL
    KEYWORD_STR                 = VALUE(STRING, "Solver Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //Card 1
    dim                         = -1;

    //Card 2
    FUNC_size                   = -1;
    X                           = -1;
    Y                           = -1;
    Z1                          = -1;
    Z2                          = -1;
    Z3                          = -1;

    //HM INTERNAL
    KEYWORD_STR                 = 9000;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/FUNC_2D/");

    //Title Card
    SCALAR(displayname)      { DIMENSION = "DIMENSIONLESS" ; }

    //Card 1

    mandatory:
    RADIO(dim)
    {
        ADD(1, "1");
        ADD(2, "2");
        ADD(3, "3");
    }
    optional:

    //Card 2

    SIZE( FUNC_size, "size");
    ARRAY(FUNC_size, "size")
    {
        SCALAR(X)               { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(Y)               { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(Z1)              { DIMENSION = "DIMENSIONLESS" ; }

        if(dim >= 2)
        {
            SCALAR(Z2)          { DIMENSION = "DIMENSIONLESS" ; }
        }
        else if(dim == 3)
        {
            SCALAR(Z3)          { DIMENSION = "DIMENSIONLESS" ; }
        }
    }
}

// File format
FORMAT(radioss2019)
{
    HEADER("/FUNC_2D/%-d", _ID_);

    //Title Card
    COMMENT("#fct2d_title                                                                                        ");
    CARD("%-100s", displayname);

    //Card 1
    COMMENT("#      dim");
    CARD("%10d", dim);

    //Card 2
    COMMENT("#                  X                   Y                  Z1                  Z2                  Z3");
    FREE_CARD_LIST(FUNC_size)
    {
        if(dim == 1)
            CARD("%20lg%20lg%20lg", X, Y, Z1);
        else if(dim == 2)
            CARD("%20lg%20lg%20lg%20lg", X, Y, Z1, Z2);
        else if(dim == 3)
            CARD("%20lg%20lg%20lg%20lg%20lg", X, Y, Z1, Z2, Z3);
    }
}