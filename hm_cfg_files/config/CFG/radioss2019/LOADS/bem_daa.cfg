//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- bem_daa.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES

    //Title Card
    displayname                             = VALUE(STRING, "DAA block title", "TITLE");

    //Card 1
    surf_ID                                 = VALUE(SETS,   "Wet surface identifier")  { SUBTYPES = (/SETS/SURF_IDPOOL); }
    grav_ID                                 = VALUE(INT,    "/GRAV option identifier");

    //Card 2
    rho                                     = VALUE(FLOAT,  "Fluid density");
    C                                       = VALUE(FLOAT,  "Fluid sound speed");
    Pmin                                    = VALUE(FLOAT,  "Pressure cutoff");

    //Card 3
    Xs                                      = VALUE(FLOAT,  "X-coordinate of standoff point");
    Ys                                      = VALUE(FLOAT,  "Y-coordinate of standoff point");
    Zs                                      = VALUE(FLOAT,  "Z-coordinate of standoff point");

    //Card 4
    Iform                                   = VALUE(INT,    "BEM solution flag");
    Ipri                                    = VALUE(INT,    "Printout flag level");
    Ipres                                   = VALUE(INT,    "Pressure loading flag");
    Kform                                   = VALUE(INT,    "Analysis flag");
    Freesurf                                = VALUE(INT,    "Free surface flag");
    Afterflow                               = VALUE(INT,    "Afterflow computation");
    Integr                                  = VALUE(INT,    "Time integer flag");

    //Card 5 - If Ipres = 1
    Pm                                      = VALUE(FLOAT,  "Maximum pressure");
    theta                                   = VALUE(FLOAT,  "Decay time");
    a                                       = VALUE(FLOAT,  "Maximum pressure constant");
    aTheta                                  = VALUE(FLOAT,  "Pressure decay time constant");

    //Card 6 - If Ipres = 2
    fctIDp                                  = VALUE(FUNCT,  "Incident pressure function identifier");
    Fscalep                                 = VALUE(FLOAT,  "Ordinate (pressure) scale factor for fct_IDP");

    //Card 7 - If Ipres = 2
    Xc                                      = VALUE(FLOAT,  "X-coordinate of explosive charge");
    Yc                                      = VALUE(FLOAT,  "Y-coordinate of explosive charge");
    Zc                                      = VALUE(FLOAT,  "Z-coordinate of explosive charge");

    //Card 8 - If grav_ID > 0 or Freesurf = 2
    Xa                                      = VALUE(FLOAT,  "X-coordinate of point A on the free surface");
    Ya                                      = VALUE(FLOAT,  "Y-coordinate of point A on the free surface");
    Za                                      = VALUE(FLOAT,  "Z-coordinate of point A on the free surface");

    //Card 8 - If grav_ID > 0 or Freesurf = 2
    Dirx                                    = VALUE(FLOAT,  "X-component of the normal to the free surface plane");
    Diry                                    = VALUE(FLOAT,  "Y-component of the normal to the free surface plane");
    Dirz                                    = VALUE(FLOAT,  "Z-component of the normal to the free surface plane");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
}


SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    surf_ID                                 = -1;
    grav_ID                                 = -1;

    //Card 2
    rho                                     = -1;
    C                                       = -1;
    Pmin                                    = -1;

    //Card 3
    Xs                                      = -1;
    Ys                                      = -1;
    Zs                                      = -1;

    //Card 4
    Iform                                   = -1;
    Ipri                                    = -1;
    Ipres                                   = -1;
    Kform                                   = -1;
    Freesurf                                = -1;
    Afterflow                               = -1;
    Integr                                  = -1;

    //Card 5 - If Ipres = 1
    Pm                                      = -1;
    theta                                   = -1;
    a                                       = -1;
    aTheta                                  = -1;

    //Card 6 - If Ipres = 2
    fctIDp                                  = -1;
    Fscalep                                 = -1;

    //Card 7 - If Ipres = 2
    Xc                                      = -1;
    Yc                                      = -1;
    Zc                                      = -1;

    //Card 8 - If grav_ID > 0 or Freesurf = 2
    Xa                                      = -1;
    Ya                                      = -1;
    Za                                      = -1;

    //Card 8 - If grav_ID > 0 or Freesurf = 2
    Dirx                                    = -1;
    Diry                                    = -1;
    Dirz                                    = -1;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;
}

CHECK(COMMON)
{
    Pmin                                    < 0;
}

DEFAULTS(COMMON)
{
    Pmin                                    = -10E30;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/BEM/DAA");

    //Title Card
    SCALAR(displayname, "daa_title")        { DIMENSION = "DIMENSIONLESS" ; }

    //Card 1
    DATA(surf_ID, "surf_ID");
    SCALAR(grav_ID, "grav_ID")              { DIMENSION = "DIMENSIONLESS" ; }

    //Card 2
    SCALAR(rho,     "Rho")                  { DIMENSION = "density" ; }
    SCALAR(C,       "C")                    { DIMENSION = "velocity" ; }
    SCALAR(Pmin,    "Pmin")                 { DIMENSION = "pressure" ; }

    //Card 3
    SCALAR(Xs,      "Xs")                   { DIMENSION = "l" ; }
    SCALAR(Ys,      "Yx")                   { DIMENSION = "l" ; }
    SCALAR(Zs,      "Zs")                   { DIMENSION = "l" ; }

    //Card 4
    mandatory:
    RADIO(Iform,    "Iform")
    {
        ADD(1, "1: (Default) Gauss Integration");
        ADD(2, "2: Analytical integration");
    }
    RADIO(Ipri,     "Ipri")
    {
        ADD(1, "1: Reduced printout");
        ADD(2, "2: Full printout");
    }
    RADIO(Ipres,    "Ipres")
    {
        ADD(1, "1: Pressure computed");
        ADD(2, "2: Input by function");
    }
    RADIO(Kform,    "Kform")
    {
        ADD(1, "1:  (Default) DAA1 formulation");
        ADD(2, "2: High frequency");
    }
    RADIO(Freesurf, "Freesurf")
    {
        ADD(1, "1: (Default) No");
        ADD(2, "2: Yes");
    }
    RADIO(Afterflow, "Afterflow")
    {
        ADD(1, "1: No");
        ADD(2, "2: (Default) Yes");
    }
    RADIO(Integr,    "Integr")
    {
        ADD(1, "1: First order");
        ADD(2, "2: Second order");
    }

    optional:
    if(Ipres == 1)
    {
        //Card 5 - If Ipres = 1
        SCALAR(Pm,    "Pm")                     { DIMENSION = "pressure" ; }
        SCALAR(theta, "theta")                  { DIMENSION = "t" ; }
        SCALAR(a,     "a")                      { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(aTheta,"aTheta")                 { DIMENSION = "DIMENSIONLESS" ; }
    }
    else if(Ipres == 2)
    {
        //Card 6 - If Ipres = 2
        DATA(fctIDp,    "fctIDp");
        SCALAR(Fscalep, "Fscalep")              { DIMENSION = "pressure" ; }

        //Card 7 - If Ipres = 2
        SCALAR(Xc, "Xc")                        { DIMENSION = "l" ; }
        SCALAR(Yc, "Yc")                        { DIMENSION = "l" ; }
        SCALAR(Zc, "Zc")                        { DIMENSION = "l" ; }
    }

    if(grav_ID > 0 || Freesurf == 2)
    {
        //Card 8 - If grav_ID > 0 or Freesurf = 2
        SCALAR(Xa, "Xa")                        { DIMENSION = "l" ; }
        SCALAR(Ya, "Ya")                        { DIMENSION = "l" ; }
        SCALAR(Za, "Za")                        { DIMENSION = "l" ; }

        //Card 8 - If grav_ID > 0 or Freesurf = 2
        SCALAR(Dirx, "Dirx")                    { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(Diry, "Diry")                    { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(Dirz, "Dirz")                    { DIMENSION = "DIMENSIONLESS" ; }
    }
}

// File format
FORMAT(radioss2019)
{
    HEADER("/BEM/DAA/%-d", _ID_);

    //Title Card
    COMMENT("#daa_title                                                                                          ");
    CARD("%-100s", displayname);

    //Card 1
    COMMENT("#  surf_ID   grav_ID");
    CARD("%10d%10d", surf_ID, grav_ID);

    //Card 2
    COMMENT("#                Rho                   C                Pmin");
    CARD("%20lg%20lg%20lg", rho, C, Pmin);

    //Card 3
    COMMENT("#                 Xs                  Ys                  Zs");
    CARD("%20lg%20lg%20lg", Xs, Ys, Zs);

    //Card 4
    COMMENT("#    Iform      Ipri     Ipres                         Kform  Freesurf Afterflow    Integr");
    CARD("%10d%10d%10d%20s%10d%10d%10d%10d", Iform, Ipri, Ipres, _BLANK_, Kform, Freesurf, Afterflow, Integr);

    if(Ipres == 1)
    {
        //Card 5 - If Ipres = 1
        COMMENT("#                 Pm               Theta                   a              aTheta");
        CARD("%20lg%20lg%20lg%20lg", Pm, theta, a, aTheta);
    }
    else if(Ipres == 2)
    {
        //Card 6 - If Ipres = 2
        COMMENT("#  fct_IDP                       FscaleP");
        CARD("%10d%10s%20lg", fctIDp, _BLANK_, Fscalep);
    }

    //Card 7 
    COMMENT("#                 Xc                  Yc                  Zc");
    CARD("%20lg%20lg%20lg", Xc, Yc, Zc);

    if(grav_ID > 0 || Freesurf == 2)
    {
        //Card 8 - If grav_ID > 0 or Freesurf = 2
        COMMENT("#                 XA                  YA                  ZA");
        CARD("%20lg%20lg%20lg", Xa, Ya, Za);

        //Card 8 - If grav_ID > 0 or Freesurf = 2
        COMMENT("#              Dir-X               Dir-Y               Dir-Z");
        CARD("%20lg%20lg%20lg", Dirx, Diry, Dirz);
    }
}