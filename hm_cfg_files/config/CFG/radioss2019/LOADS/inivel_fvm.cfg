//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /INIVEL/FVM
//

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    // Card
    Vx                                        = VALUE(FLOAT, "X velocity");
    Vy                                        = VALUE(FLOAT, "Y velocity");
    Vz                                        = VALUE(FLOAT, "Z velocity");
    grbric_ID                                 = VALUE(SETS, "Brick group on which specific initial velocities are applied")  { SUBTYPES = (/SETS/GRBRIC); }
    grqd_ID                                   = VALUE(SETS, "Quad groups on which specific initial velocities are applied")  { SUBTYPES = (/SETS/GRQUAD); }
    grtria_ID                                 = VALUE(SETS, "Tria groups on which specific initial velocities are applied")  { SUBTYPES = (/SETS/GRSH3N); }
    skew_ID                                   = VALUE(SYSTEM, "Skew Identifier");

    //HM INTERNAL
    KEYWORD_STR                               = VALUE(STRING, "Solver Keyword");

    displayname                               = VALUE(STRING, "Initial velocity block title", "TITLE");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    //INPUT ATTRIBUTES

    // Card
    Vx                                        = 4156; //attribute name as per manual, already exists
    Vy                                        = 4157; //attribute name as per manual, already exists
    Vz                                        = 4158; //attribute name as per manual, already exists
    grbric_ID                                 = -1;
    grqd_ID                                   = -1;
    grtria_ID                                 = -1;
    skew_ID                                   = -1;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{

}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/INIVEL/FVM");

    //Title Card
    SCALAR(displayname, "Initial velocity block title")      { DIMENSION = "DIMENSIONLESS" ; }

    //  Card
    SCALAR(Vx, "Vx")                             { DIMENSION = "velocity"; }
    SCALAR(Vy, "Vy")                             { DIMENSION = "velocity"; }
    SCALAR(Vz, "Vz")                             { DIMENSION = "velocity"; }
    DATA(grbric_ID, "grbric_ID");
    DATA(grqd_ID, "grqd_ID");
    DATA(grtria_ID, "grtria_ID");
    DATA(skew_ID, "skew_ID");
}

// File format
FORMAT(radioss2019)
{
    HEADER("/INIVEL/FVM/%d", _ID_);
    CARD("%-100s", displayname);

    //  Card
    COMMENT("#                 Vx                  Vy                  Vz grbric_ID   grqd_ID grtria_ID   skew_ID");
    CARD("%20lg%20lg%20lg%10d%10d%10d%10d", Vx, Vy, Vz, grbric_ID, grqd_ID, grtria_ID, skew_ID);
}
