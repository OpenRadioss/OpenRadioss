//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /INIVEL/NODE
//

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES
    NB_NODES = SIZE("Number of additional nodes"); 
    NODE     = ARRAY[NB_NODES](NODE,"Additional nodes","Node_ID"); 
    //
    VXTA    =  ARRAY[NB_NODES](FLOAT,"X component in the local frame of the translational velocity","Vxt") ;
    VYTA    =  ARRAY[NB_NODES](FLOAT,"Y component in the local frame of the translational velocity","Vyt") ;
    VZTA    =  ARRAY[NB_NODES](FLOAT,"Z component in the local frame of the translational velocity","Vzt") ;
    VXRA    =  ARRAY[NB_NODES](FLOAT,"X component in the local frame of the rotational velocity",   "Vxr") ;
    VYRA    =  ARRAY[NB_NODES](FLOAT,"Y component in the local frame of the rotational velocity",   "Vyr") ;
    VZRA    =  ARRAY[NB_NODES](FLOAT,"Z component in the local frame of the rotational velocity",   "Vzr") ;
    SKEWA   =  ARRAY[NB_NODES](SYSTEM, "Skew Identifier","Skew_ID");
    
    //HM INTERNAL
    KEYWORD_STR                               = VALUE(STRING, "Solver Keyword");

    displayname                               = VALUE(STRING, "Initial velocity block title", "TITLE");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    //INPUT ATTRIBUTES

    // Card

}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{

}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/INIVEL/NODE");

    //Title Card
    SCALAR(displayname, "Initial velocity node title")      { DIMENSION = "DIMENSIONLESS" ; }

    SIZE(NB_NODES);
    ARRAY(NB_NODES,"Pairs") 
    {  
        mandatory:  
            DATA(NODE   ,"Support nodes");
        optional:
            DATA(SKEWA);
            SCALAR(VXTA) {TITLE="[Vxt] Translational velocity around the x axis";DIMENSION="velocity";} 
            SCALAR(VYTA) {TITLE="[Vyt] Translational velocity around the y axis";DIMENSION="velocity";} 
            SCALAR(VZTA) {TITLE="[Vzt] Translational velocity around the z axis";DIMENSION="velocity";} 
            SCALAR(VXRA) {TITLE="[Vxr] Rotational velocity around the x axis";DIMENSION="ang_velocity";} 
            SCALAR(VYRA) {TITLE="[Vyr] Rotational velocity around the y axis";DIMENSION="ang_velocity";} 
            SCALAR(VZRA) {TITLE="[Vzr] Rotational velocity around the z axis";DIMENSION="ang_velocity";} 
    }
}

// File format
FORMAT(radioss2019)
{
    HEADER("/INIVEL/NODE/%d", _ID_);
    CARD("%-100s", displayname);
    FREE_CARD_LIST(NB_NODES) 
    {
        COMMENT("#  Node_ID   Skew_ID                 Vxt                 Vyt                 Vzt");
        CARD("%10d%10d%20lg%20lg%20lg",NODE,SKEWA,VXTA,VYTA,VZTA);
        COMMENT("#                                    Vxr                 Vyr                 Vzr");
        CARD("                    %20lg%20lg%20lg",VXRA,VYRA,VZRA);
    }
}
