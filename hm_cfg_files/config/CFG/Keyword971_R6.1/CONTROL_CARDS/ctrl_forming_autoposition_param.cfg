//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// *CONTROL_FORMING_AUTOPOSITION_PARAMETER and *CONTROL_FORMING_AUTOPOSITION_PARAMETER_SET
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    ControlFormAutoParamSet                 = VALUE(INT, "ControlFormAutoParamSet");

    LSD_PID                                 = VALUE(COMPONENT, "Part ID");
    LSD_PSID                                = VALUE(SETS, "Part Set ID");
    LSD_P_CID                               = VALUE(SYSTEM, "Coordinate ID (Default is global coordinate system)");
    LSD_DIR                                 = VALUE(INT, "Direction in which the part will be moved");
    LSD_MPID                                = VALUE(COMPONENT, "Master Part ID");
    LSD_MSID                                = VALUE(SETS, "Master Part Set ID");
    LSD_POSITION                            = VALUE(INT, "Definition of relative position between PID and MPID");
    LSD_PREMOVE                             = VALUE(FLOAT, "PID is moved with a value of PREMOVE before it is positioned");
    LSD_THICK                               = VALUE(FLOAT, "Thickness of the PID");
    LSD_PORDER_Opt                          = VALUE(INT, "LSD_PORDER_String");
    LSD_PORDER_Int                          = VALUE(INT, "The position or order of the parameter");
    LSD_PORDER                              = VALUE(STRING, "The name of the variable without the ampersand &");
    
    IO_FLAG                                 = VALUE(INT, "");
    option                                  = VALUE(STRING, "");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    ControlFormAutoParamSet                 = 7978;

    LSD_PID                                 = 149;
    LSD_PSID                                = 768;
    LSD_P_CID                               = 2897;
    LSD_DIR                                 = 5006;
    LSD_MPID                                = 7984;
    LSD_MSID                                = 7985;
    LSD_POSITION                            = 7986;
    LSD_PREMOVE                             = 7975;
    LSD_THICK                               = 7976;
    LSD_PORDER_Opt                          = 8082;
    LSD_PORDER_Int                          = 8081;
    LSD_PORDER                              = 7977;

    IO_FLAG                                 = -1;
    option                                  = -1;

}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    ControlFormAutoParamSet  =0;
    //LSD_P_CID = 0;
    LSD_POSITION = 0;
    LSD_PREMOVE = 0.0;
    LSD_THICK = 0.0;
}

GUI(COMMON)
{

    FLAG(ControlFormAutoParamSet);
    if(ControlFormAutoParamSet == 0)
    {
        ASSIGN(KEYWORD_STR, "*CONTROL_FORMING_AUTOCHECK");
        SCALAR(LSD_PID);
        SCALAR(LSD_P_CID);
        RADIO(LSD_DIR)
        {
           ADD(1, "1: x direction");
           ADD(2, "2: y direction");
           ADD(3, "3: z direction");
        }
        SCALAR(LSD_MPID);
        RADIO(LSD_POSITION)
        {
           ADD(1, "1: PID is above MPID");
           ADD(-1, "-1: PID is below MPID");
        }
        SCALAR(LSD_PREMOVE);
        SCALAR(LSD_THICK);
    }
    else
    {
        ASSIGN(KEYWORD_STR, "*CONTROL_FORMING_AUTOCHECK_SET");
        SCALAR(LSD_PSID);
        SCALAR(LSD_P_CID);
        RADIO(LSD_DIR)
        {
           ADD(1, "1: x direction");
           ADD(2, "2: y direction");
           ADD(3, "3: z direction");
        }
        SCALAR(LSD_MSID);
        RADIO(LSD_POSITION)
        {
           ADD(1, "1: PID is above MPID");
           ADD(-1, "-1: PID is below MPID");
        }
        SCALAR(LSD_PREMOVE);
        SCALAR(LSD_THICK);
    }

    FLAG(LSD_PORDER_Opt);
    if(LSD_PORDER_Opt == 0)
    {
        SCALAR(LSD_PORDER_Int);
    }
    else
    {
        SCALAR(LSD_PORDER);
    }
}

// File format
FORMAT(Keyword971_R6.1)
{

  ASSIGN(IO_FLAG,0,IMPORT);
  ASSIGN(IO_FLAG,1,EXPORT);

  if(IO_FLAG == 0)
  {
    HEADER("*CONTROL_FORMING_AUTOPOSITION_PARAMETER%s",option);
  }
  else if(IO_FLAG == 1 && ControlFormAutoParamSet == 0)
  {
    HEADER("*CONTROL_FORMING_AUTOPOSITION_PARAMETER");
  }
  else if(IO_FLAG == 1 && ControlFormAutoParamSet == 1)
  {
    HEADER("*CONTROL_FORMING_AUTOPOSITION_PARAMETER_SET");
  }

  if(IO_FLAG == 0)
  {
    if(option == "")
    {
      ASSIGN(ControlFormAutoParamSet,0);
    }
    else
    {
      ASSIGN(ControlFormAutoParamSet,1);
    }
  }

  if (ControlFormAutoParamSet == 0)
  {
    COMMENT("$      PID       CID       DIR      MPID  POSITION   PREMOVE     THICK    PORDER");
    if(LSD_PORDER_Opt == 0)
    {
        CARD("%10d%10d%10d%10d%10d%10d%10d%10d",LSD_PID,LSD_P_CID,LSD_DIR,LSD_MPID,LSD_POSITION,LSD_PREMOVE,LSD_THICK,LSD_PORDER_Int);
    }
    else
    {
        CARD("%10d%10d%10d%10d%10d%10d%10d%10s",LSD_PID,LSD_P_CID,LSD_DIR,LSD_MPID,LSD_POSITION,LSD_PREMOVE,LSD_THICK,LSD_PORDER);
    }
  }
  else
  {
    COMMENT("$     PSID       CID       DIR      MSID  POSITION   PREMOVE     THICK    PORDER");
    if(LSD_PORDER_Opt == 0)
    {
        CARD("%10d%10d%10d%10d%10d%10d%10d%10d",LSD_PSID,LSD_P_CID,LSD_DIR,LSD_MSID,LSD_POSITION,LSD_PREMOVE,LSD_THICK,LSD_PORDER_Int);
    }
    else
    {
        CARD("%10d%10d%10d%10d%10d%10d%10d%10s",LSD_PSID,LSD_P_CID,LSD_DIR,LSD_MSID,LSD_POSITION,LSD_PREMOVE,LSD_THICK,LSD_PORDER);
    }
  }

}
