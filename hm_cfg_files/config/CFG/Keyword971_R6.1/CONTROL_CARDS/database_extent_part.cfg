//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// DATABASE_EXTENT_D3PART
//

ATTRIBUTES(COMMON)
{
// INPUT ATTRIBUTES
    // CARD 1
    LSD_NEIPH                               = VALUE(INT,    "Number of additional integration point history variables written to the binary database for solid elements");
    LSD_NEIPS                               = VALUE(INT,    "Number of additional integration point history variables written to the binary database for both shell and thick shell elements for each integration point");
    LSD_MAXINT                              = VALUE(INT,    "Number of shell integration points written to the binary database");
    LSD_ISTRN                               = VALUE(INT,    "Set to 1 to dump strain tensors for solid, shell and thick shell elements for plotting by LS-PREPOST and ASCII file ELOUT");
    LSD_SIGFLG                              = VALUE(INT,    "Flag for including stress tensor in the shell LS-DYNA database");
    LSD_EPSFLG                              = VALUE(INT,    "Flag for including the effective plastic strains in the shell LS-DYNA database");
    LSD_RLTFLG                              = VALUE(INT,    "Flag for including stress resultants in the shell LS-DYNA database");
    LSD_ENGFLG                              = VALUE(INT,    "Flag for including shell internal energy density and thickness in the LS-DYNA database");

    // CARD 2
    LSD_IEVERP                              = VALUE(INT,    "Every plot state for 'd3plot' database is written to a separate file");
    LSD_SHGE                                = VALUE(INT,    "Output shell hourglass energy density");
    LSD_STSSZ                               = VALUE(INT,    "Output shell element time step, mass, or added mass");

    // CARD 3
    LSD_NINTSLD                             = VALUE(INT,    "Number of solid element integration points written to the LS-DYNA database");

// HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    // CARD 1
    LSD_NEIPH                               = 2174;
    LSD_NEIPS                               = 2175;
    LSD_MAXINT                              = 2176;
    LSD_ISTRN                               = 2177;
    LSD_SIGFLG                              = 2178;
    LSD_EPSFLG                              = 2179;
    LSD_RLTFLG                              = 2180;
    LSD_ENGFLG                              = 2181;

    // CARD 2
    LSD_IEVERP                              = 2182;
    LSD_SHGE                                = 2187;
    LSD_STSSZ                               = 2188;

    // CARD 3
    LSD_NINTSLD                             = 4485;

// HM INTERNAL
    KEYWORD_STR                             = 9000;
}

DEFAULTS(COMMON)
{
    // CARD 1
    LSD_NEIPH                               = 0;
    LSD_NEIPS                               = 0;
    LSD_MAXINT                              = 3;
    LSD_ISTRN                               = 0;
    LSD_SIGFLG                              = 1;
    LSD_EPSFLG                              = 1;
    LSD_RLTFLG                              = 1;
    LSD_ENGFLG                              = 1;

    // CARD 2
    LSD_IEVERP                              = 0;
    LSD_SHGE                                = 0;
    LSD_STSSZ                               = 0;

    // CARD 3
    LSD_NINTSLD                             = 1;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*DATABASE_EXTENT_D3PART");

    // CARD 1
    SCALAR(LSD_NEIPH) {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_NEIPS) {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAXINT) {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_ISTRN) {DIMENSION="DIMENSIONLESS";}
    RADIO(LSD_SIGFLG) {
        ADD(1, "1: include (default)");
        ADD(2, "2: exclude");
    }
    RADIO(LSD_EPSFLG) {
        ADD(1, "1: include (default)");
        ADD(2, "2: exclude");
    }
    RADIO(LSD_RLTFLG) {
        ADD(1, "1: include (default)");
        ADD(2, "2: exclude");
    }
    RADIO(LSD_ENGFLG) {
        ADD(1, "1: include (default)");
        ADD(2, "2: exclude");
    }

    // CARD 2
    RADIO(LSD_IEVERP) {
        ADD(0, "0: more than one state can be on each plot file");
        ADD(1, "1: one state only on each plot file");
    }
    RADIO(LSD_SHGE) {
        ADD(1, "1: off (default), no hourglass energy written");
        ADD(2, "2: on");
    }
    RADIO(LSD_STSSZ) {
        ADD(1, "1: off (default)");
        ADD(2, "2: output time step size");
        ADD(3, "3: output mass, added mass, or time step size");
    }

    // CARD 3
    SCALAR(LSD_NINTSLD) {DIMENSION="DIMENSIONLESS";}
}

// File format
FORMAT(Keyword971_R6.1)
{
  HEADER("*DATABASE_EXTENT_D3PART");
  
  COMMENT("$    NEIPH     NEIPS    MAXINT    STRFLG    SIGFLG    EPSFLG    RLTFLG    ENGFLG");
  CARD("%10d%10d%10d%10d%10d%10d%10d%10d",LSD_NEIPH,LSD_NEIPS,LSD_MAXINT,LSD_ISTRN,LSD_SIGFLG,LSD_EPSFLG,LSD_RLTFLG,LSD_ENGFLG);

  COMMENT("$             IEVERP                          SHGE     STSSZ");
  CARD("%10d%10d%10d%10d%10d%10d",_BLANK_,LSD_IEVERP,_BLANK_,_BLANK_,LSD_SHGE,LSD_STSSZ);

  COMMENT("$  NINTSLD");
  CARD("%10d",LSD_NINTSLD);
}
