//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// *INTERFACE_COMPENSATION_NEW
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");

    INTER_METHOD                            = VALUE(INT,    "There are several extrapolation methods for the addendum and binder outside of trim lines");
    INTER_SL                                = VALUE(FLOAT,  "The smooth level parameter controls the smoothness of the modified surfaces. A large value makes the surface smoother");
    INTER_SF                                = VALUE(FLOAT,  "Shape compensation scale factor");
    INTER_ELREF                             = VALUE(INT,    "Element refinement option");
    INTER_PSIDm                             = VALUE(SETS,   "Define the part set ID for master parts") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    INTER_UNDCT                             = VALUE(INT,    "Tool undercut treatment option");
    LSD_ANGLE                               = VALUE(FLOAT,  "An angle defining the undercut");
    LSD_NLINEAR                             = VALUE(INT,    "Activate nonlinear extrapolation");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;

    INTER_METHOD                            = 5525;
    INTER_SL                                = 5526;
    INTER_SF                                = 5527;
    INTER_ELREF                             = 5528;
    INTER_PSIDm                             = 5529;
    INTER_UNDCT                             = 5530;
    LSD_ANGLE                               = 3109;
    LSD_NLINEAR                             = 8642;

}

CHECK(COMMON)
{


}

DEFAULTS(COMMON)
{

    INTER_METHOD  = 6;
    INTER_SL      = 5.0;
    INTER_SF      = 0.75;
    INTER_ELREF   = 1;
    LSD_ANGLE     = 0.0;
    LSD_NLINEAR   = 1;

}

GUI(COMMON)
{

    ASSIGN(KEYWORD_STR, "*INTERFACE_COMPENSATION_NEW");
    RADIO(INTER_METHOD)
    {
       ADD(1, "1: deprecated");
       ADD(2, "2: deprecated");
       ADD(3, "3: Similar to Method 6, however, it is a linear method and no iteration is necessary");
       ADD(4, "4: deprecated");
       ADD(5, "5: deprecated");
       ADD(6, "6: The smoothness and the transition region of the modified surface will depend on the spring back magnitude and the smoothing factor");
       ADD(7, "7: If the punch is chosen as the master side, the binder will not be changed");
    }
    SCALAR(INTER_SL);
    SCALAR(INTER_SF);
    RADIO(INTER_ELREF)
    {
        ADD(1, "1: Special element refinement is used with the tool elements");
        ADD(2, "2: Special element refinement is turned off");
    }
    DATA(INTER_PSIDm) { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    RADIO(INTER_UNDCT)
    {
        ADD(0, "0: No check");
        ADD(1, "1: Check and fix undercut");
    }
    SCALAR(LSD_ANGLE);
    SCALAR(LSD_NLINEAR);

}

// File format
FORMAT(Keyword971)
{
  HEADER("*INTERFACE_COMPENSATION_NEW");
  COMMENT("$   METHOD        SL        SF     ELREF     PSIDm     UNDCT");
  CARD("%10d%10lg%10lg%10d%10d%10d",INTER_METHOD,INTER_SL,INTER_SF,INTER_ELREF,INTER_PSIDm,INTER_UNDCT);
}

FORMAT(Keyword971_R6.1)
{
  HEADER("*INTERFACE_COMPENSATION_NEW");
  COMMENT("$   METHOD        SL        SF     ELREF     PSIDm     UNDCT     ANGLE   NLINEAR");
  CARD("%10d%10lg%10lg%10d%10d%10d%10lg%10d",INTER_METHOD,INTER_SL,INTER_SF,INTER_ELREF,INTER_PSIDm,INTER_UNDCT,LSD_ANGLE,LSD_NLINEAR);
}
