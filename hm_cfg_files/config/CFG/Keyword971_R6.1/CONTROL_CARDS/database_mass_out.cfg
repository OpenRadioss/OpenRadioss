//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- dbmassout.cfg ---
//  GROUP DBMassOut 7854 6.1
//   20/03/2020

ATTRIBUTES(COMMON)
{
   LSD_NDFLG                               = VALUE(INT,    "Database Extent");
   LSD_RBFLG                               = VALUE(INT,    "Rigid Body Data");
   LSD_SETID                               = VALUE(SETS,   "Optional Set Id") { SUBTYPES = (/SETS/SET_NODE_IDPOOL) ; }

   //INTERNAL
   KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
   LSD_SETIDOpt                            = VALUE(INT,    "Option");
   _int_opt                                = VALUE(INT,    "");
   IO_FLAG                                 = VALUE(INT,    "");

}

SKEYWORDS_IDENTIFIER(COMMON)
{
   LSD_NDFLG                               = 7868;
   LSD_RBFLG                               = 7869;
   LSD_SETID                               = 7866;
   
   KEYWORD_STR                             = 9000;
   LSD_SETIDOpt                            = 1399;
   _int_opt                                = -1;
   IO_FLAG                                 = -1;
}

DEFAULTS(COMMON)
{
   LSD_NDFLG = 1;
   LSD_RBFLG = 0;
}

GUI(COMMON)
{
   ASSIGN(KEYWORD_STR, "*DATABASE_MASSOUT");

   RADIO(LSD_SETIDOpt)
   {
      ADD(1, "Mass output for all nodes");
      ADD(2, "No output");
      ADD(3, "Set ID");
   }
   if(LSD_SETIDOpt == 3)
   {
      SEPARATOR("Set ID");
      DATA(LSD_SETID);
      SEPARATOR();
   }
   RADIO(LSD_NDFLG)
   {
      ADD(1, "1: Output translational mass for deformable nodes identified by SETID");
      ADD(2, "2: Output translational mass and rotary inertias for the deformable nodes identified by the SETID");
      ADD(3, "3: Output translational mass for deformable and rigid nodes identified by SETID");
      ADD(4, "4: Output translational mass and rotary inertias for the deformable and rigid nodes identified by the SETID");
   }
   RADIO(LSD_RBFLG)
   {
      ADD(0, "0: No output for rigid bodies");
      ADD(1, "1: Output rigid body mass and inertia");
   }
}

// File format
FORMAT(Keyword971_R6.1)
{
   ASSIGN(IO_FLAG,1,IMPORT);
   ASSIGN(IO_FLAG,0,EXPORT);
   
   HEADER("*DATABASE_MASSOUT");
   
   if(IO_FLAG == 0)
   {
      COMMENT("$    SETID     NDFLG     RBFLG");
      
      if (LSD_SETIDOpt == 1)
      {
         ASSIGN(_int_opt,0,EXPORT);
         CARD("%10d%10d%10d",_int_opt,LSD_NDFLG,LSD_RBFLG);
      }
      else if (LSD_SETIDOpt == 2)
      {
         ASSIGN(_int_opt,-1,EXPORT);
         CARD("%10d%10d%10d",_int_opt,LSD_NDFLG,LSD_RBFLG);
      }
      else if (LSD_SETIDOpt == 3)
         CARD("%10d%10d%10d",LSD_SETID,LSD_NDFLG,LSD_RBFLG);
   }
   else if(IO_FLAG == 1)
   {
      CARD("%10d%10d%10d",_int_opt,LSD_NDFLG,LSD_RBFLG);
   
      if(_int_opt == 0)
         ASSIGN(LSD_SETIDOpt,1,IMPORT);
      else if(_int_opt == -1)
         ASSIGN(LSD_SETIDOpt,2,IMPORT);
      else
      {
         ASSIGN(LSD_SETIDOpt,3,IMPORT);
         ASSIGN(LSD_SETID,_int_opt,IMPORT);
      }
   }
}
