//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// CONTROL_MPP_DECOMPOSITION_SCALE_CONTACT_COST
//

ATTRIBUTES(COMMON)
{
    KEYWORD_STR                             = VALUE(STRING, "CONTROL_MPP_DECOMPOSITION_SCALE_CONTACT_COST");

    LSD_SFT                                 = VALUE(FLOAT, "Scale factor for the contact segments listed in the interface ID");
    ID_PID1                                 = VALUE(GROUP, "Interface ID's to be considered for scaling");
    ID_PID2                                 = VALUE(GROUP, "Interface ID's to be considered for scaling");
    ID_PID3                                 = VALUE(GROUP, "Interface ID's to be considered for scaling");
    ID_PID4                                 = VALUE(GROUP, "Interface ID's to be considered for scaling");
    ID_PID5                                 = VALUE(GROUP, "Interface ID's to be considered for scaling");
    ID_PID6                                 = VALUE(GROUP, "Interface ID's to be considered for scaling");
    ID_PID7                                 = VALUE(GROUP, "Interface ID's to be considered for scaling");
    ID_PID8                                 = VALUE(GROUP, "Interface ID's to be considered for scaling");
    ID_PID9                                 = VALUE(GROUP, "Interface ID's to be considered for scaling");
    ID_PID10                                = VALUE(GROUP, "Interface ID's to be considered for scaling");
    ID_PID11                                = VALUE(GROUP, "Interface ID's to be considered for scaling");
    ID_PID12                                = VALUE(GROUP, "Interface ID's to be considered for scaling");
    ID_PID13                                = VALUE(GROUP, "Interface ID's to be considered for scaling");
    ID_PID14                                = VALUE(GROUP, "Interface ID's to be considered for scaling");
    ID_PID15                                = VALUE(GROUP, "Interface ID's to be considered for scaling");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;

    LSD_SFT                                 = 2494;
    ID_PID1                                 = 8735;
    ID_PID2                                 = 8736;
    ID_PID3                                 = 8737;
    ID_PID4                                 = 8738;
    ID_PID5                                 = 8739;
    ID_PID6                                 = 8740;
    ID_PID7                                 = 8741;

    ID_PID8                                 = 8742;
    ID_PID9                                 = 8743;
    ID_PID10                                = 8744;
    ID_PID11                                = 8745;
    ID_PID12                                = 8746;
    ID_PID13                                = 8747;
    ID_PID14                                = 8748;
    ID_PID15                                = 8749;
}

DEFAULTS(COMMON)
{
}

GUI(COMMON)
{
  ASSIGN(KEYWORD_STR, "*CONTROL_MPP_DECOMPOSITION_SCALE_CONTACT_COST");

  SCALAR(LSD_SFT);
  SCALAR(ID_PID1);
  SCALAR(ID_PID2);
  SCALAR(ID_PID3);
  SCALAR(ID_PID4);
  SCALAR(ID_PID5);
  SCALAR(ID_PID6);
  SCALAR(ID_PID7);

  SCALAR(ID_PID8);
  SCALAR(ID_PID9);
  SCALAR(ID_PID10);
  SCALAR(ID_PID11);
  SCALAR(ID_PID12);
  SCALAR(ID_PID13);
  SCALAR(ID_PID14);
  SCALAR(ID_PID15);
}

// File format
FORMAT(Keyword971_R6.1)
{
  HEADER("*CONTROL_MPP_DECOMPOSITION_SCALE_CONTACT_COST");
  
  COMMENT("$       SF       ID1       ID2       ID3       ID4       ID5       ID6       ID7");
  CARD("%10lg%10d%10d%10d%10d%10d%10d%10d",LSD_SFT,ID_PID1,ID_PID2,ID_PID3,ID_PID4,ID_PID5,ID_PID6,ID_PID7);

  COMMENT("$      ID8       ID9      ID10      ID11      ID12      ID13      ID14      ID15");
  CARD("%10d%10d%10d%10d%10d%10d%10d%10d",ID_PID8,ID_PID9,ID_PID10,ID_PID11,ID_PID12,ID_PID13,ID_PID14,ID_PID15);
}
