//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//  initial_velocity_node.cfg
// CARD INITIAL_VELOCITY_NODE 971 id

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES
    entityid                                = VALUE(NODE,   "Node ID");
    LSD_VX                                  = VALUE(FLOAT,  "Initial translational velocity in x-direction");
    LSD_VY                                  = VALUE(FLOAT,  "Initial translational velocity in y-direction");
    LSD_VZ                                  = VALUE(FLOAT,  "Initial translational velocity in z-direction");
    LSD_VXR                                 = VALUE(FLOAT,  "Initial rotational velocity in x-direction");
    LSD_VYR                                 = VALUE(FLOAT,  "Initial rotational velocity in y-direction");
    LSD_VZR                                 = VALUE(FLOAT,  "Initial rotational velocity in z-direction");
    LSD_ICID                                = VALUE(SYSTEM, "Local coordinate system ID");

    // HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    InitVeloRotn                            = VALUE(INT,    "Rotation");

    _IO_FLAG                                = VALUE(INT,    "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    // INPUT ATTRIBUTES
    LSD_VX                                  = 747;
    LSD_VY                                  = 748;
    LSD_VZ                                  = 749;
    LSD_VXR                                 = 750;
    LSD_VYR                                 = 751;
    LSD_VZR                                 = 752;
    LSD_ICID                                = 5867;

    // HM_INTERNAL
    KEYWORD_STR                             = 9000;
    InitVeloRotn                            = 4157;

    _IO_FLAG                                = -1;
}

DEFAULTS(COMMON)
{
    LSD_VX                                  = 0.0;
    LSD_VY                                  = 0.0;
    LSD_VZ                                  = 0.0;
    LSD_VXR                                 = 0.0;
    LSD_VYR                                 = 0.0;
    LSD_VZR                                 = 0.0;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR,"*INITIAL_VELOCITY_NODE");

    FLAG(InitVeloRotn, "InitVeloRotn"); // moved up for if(InitVeloRotn)

    DATA(entityid, "ID");
 /*   if(InitVeloRotn == 0)
    {*/
        SCALAR(LSD_VX,  "VX")    { DIMENSION = "velocity"; }
        SCALAR(LSD_VY,  "VY")    { DIMENSION = "velocity"; }
        SCALAR(LSD_VZ,  "VZ")    { DIMENSION = "velocity"; }
  /*  }
    else
    {*/
        SCALAR(LSD_VXR, "VXR")   { DIMENSION = "ang_velocity"; }
        SCALAR(LSD_VYR, "VYR")   { DIMENSION = "ang_velocity"; }
        SCALAR(LSD_VZR, "VZR")   { DIMENSION = "ang_velocity"; }
 /*   }*/

    DATA(LSD_ICID, "ICID");
}

// File format
FORMAT(Keyword971_R6.1)
{
    ASSIGN(_IO_FLAG, 1, IMPORT);
    ASSIGN(_IO_FLAG, 0, EXPORT);

    HEADER("*INITIAL_VELOCITY_NODE");

   /* if(_IO_FLAG == 1) // IMPORT
    {
        CARD_PREREAD("          %10d%10d%10d", LSD_VX, LSD_VY, LSD_VZ);
        if(LSD_VX == 0 && LSD_VY == 0 && LSD_VZ == 0)
        {
            ASSIGN(InitVeloRotn, 1, IMPORT);
        }
        else
        {
            ASSIGN(InitVeloRotn, 0, IMPORT);
        }
    }

    if(InitVeloRotn == 1)
    {
        COMMENT("$      NID                                     VXR       VYR       VZR      ICID");
        CARD("%10d%30s%10lg%10lg%10lg%10d", entityid, _BLANK_, LSD_VXR, LSD_VYR, LSD_VZR, LSD_ICID);
    }
    else
    {
        COMMENT("$      NID        VX        VY        VZ                                    ICID");
        CARD("%10d%10lg%10lg%10lg%30s%10d", entityid, LSD_VX, LSD_VY, LSD_VZ, _BLANK_, LSD_ICID);
    }*/
    COMMENT("$      NID        VX        VY        VZ       VXR       VYR       VZR      ICID");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10d", entityid, LSD_VX, LSD_VY, LSD_VZ, LSD_VXR, LSD_VYR, LSD_VZR, LSD_ICID);
}
