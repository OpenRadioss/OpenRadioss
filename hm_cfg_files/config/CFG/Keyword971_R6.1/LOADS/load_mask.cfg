//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// *LOAD_MASK
//

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    LSD_PID                                = VALUE(COMPONENT, "Part ID (PID). This part must consist of three-dimensional shell elements");
    LSD_LCID                               = VALUE(CURVE, "Curve ID defining the pressure time history, see *DEFINE_CURVE");
    LSD_VID1                               = VALUE(VECTOR, "Vector ID normal to the surface on which the applied pressure acts");
    LSD_OFFO                               = VALUE(FLOAT, "Pressure loads will be discontinued if |VID1 * nshell| < OFF where nshell is the normal vector to the shell element");
    LSD_BOXID                              = VALUE(BLOCK, "Only elements inside the box with part ID, PID, are considered. If no ID is given, all elements of PID, are included");
    LSDM_LCIDM                             = VALUE(CURVE, "Curve ID defining the mask");
    LSD_VID2                               = VALUE(VECTOR, "Vector ID used to project the masking curve onto the surface of part ID, PID");
    LSD_INOUT                              = VALUE(INT, "Flag for applying pressure to elements inside or outside of projected curve");
    LSD_ICUCLE                             = VALUE(INT, "Number of time steps between updating the list of active elements");

    //HM INTERNAL
    KEYWORD_STR                            = VALUE(STRING, "Solver Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    // Card 1
    LSD_PID                                = 149;
    LSD_LCID                               = 45;
    LSD_VID1                               = 4125;
    LSD_OFFO                               = 514;
    LSD_BOXID                              = 4170;
    LSDM_LCIDM                             = 1073;
    LSD_VID2                               = 1071;
    LSD_INOUT                              = 89;
    
    // Card 2
    LSD_ICUCLE                             = 1072;

    //HM INTERNAL
    KEYWORD_STR                            = 9000;
}

DEFAULTS(COMMON)
{
    LSD_OFFO                               = 0.0;
    LSD_INOUT                              = 0;
    LSD_ICUCLE                             = 200;
}

GUI(COMMON)
{

    ASSIGN(KEYWORD_STR,"*LOAD_MASK");

    // Card 1
    DATA(LSD_PID);
    DATA(LSD_LCID);
    SCALAR(LSD_OFFO)                       { DIMENSION = "DIMENSIONLESS"; }
    DATA(LSD_BOXID);
    DATA(LSD_VID2);

    RADIO(LSD_INOUT,"INOUT")
    {
        ADD(0,"elements whose center falls inside the projected curve are considered");
        ADD(1,"elements whose center falls outside the projected curve are considered");
    }

    // Card 2
    SCALAR(LSD_ICUCLE)                     { DIMENSION = "DIMENSIONLESS"; }
}


// File format
FORMAT(Keyword971_R6.1)
{
    HEADER("*LOAD_MASK");

    // Card 1
    COMMENT("$      PID      LCID      VID1       OFF     BOXID     LCIDM      VID2     INOUT");
    CARD("%10d%10d%10d%10lg%10d%10d%10d%10d",LSD_PID,LSD_LCID,LSD_VID1,LSD_OFFO,LSD_BOXID,LSDM_LCIDM,LSD_VID2,LSD_INOUT);
  
    // Card 2
    COMMENT("$   ICYCLE");
    CARD("%10d",LSD_ICUCLE);
}
