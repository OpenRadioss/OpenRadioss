//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// LOAD_BODY
//

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES

    //LOAD_BODY_X:
    LSD_LCID                                = VALUE(CURVE,  "Load curve ID specifying loading");
    LSD_SFX                                 = VALUE(FLOAT,  "Load curve scale factor");
    LSD_LCID2                               = VALUE(CURVE,  "Load curve ID for dynamic relaxation phase");
    LSD_SYSTEM_X                            = VALUE(SYSTEM, "Coordinate system ID to define acceleration in local coordinate system");

    //LOAD_BODY_Y:
    LSD_LCID3                               = VALUE(CURVE,  "Load curve ID specifying loading");
    LSD_SFY                                 = VALUE(FLOAT,  "Load curve scale factor");
    LSD_LCID4                               = VALUE(CURVE,  "Load curve ID for dynamic relaxation phase");
    LSD_SYSTEM_Y                            = VALUE(SYSTEM, "Coordinate system ID to define acceleration in local coordinate system");

    //LOAD_BODY_Z:
    LSD_LCID5                               = VALUE(CURVE,  "Load curve ID specifying loading");
    LSD_SFZ                                 = VALUE(FLOAT,  "Load curve scale factor");
    LSD_LCID6                               = VALUE(CURVE,  "Load curve ID for dynamic relaxation phase");
    LSD_SYSTEM_Z                            = VALUE(SYSTEM, "Coordinate system ID to define acceleration in local coordinate system");

    //LOAD_BODY_RX:
    LSD_LCID7                               = VALUE(CURVE,  "Load curve ID specifying loading");
    LSD_SFRX                                = VALUE(FLOAT,  "Load curve scale factor");
    LSD_LCID8                               = VALUE(CURVE,  "Load curve ID for dynamic relaxation phase");
    LSD_XCRX                                = VALUE(FLOAT,  "X-center of rotation, define for angular velocities");
    LSD_YCRX                                = VALUE(FLOAT,  "Y-center of rotation, define for angular velocities");
    LSD_ZCRX                                = VALUE(FLOAT,  "Z-center of rotation, define for angular velocities");
    LSD_P_CID                               = VALUE(SYSTEM, "Coordinate system ID to define acceleration in local coordinate system");

    //LOAD_BODY_RY:
    LSD_LCID9                               = VALUE(CURVE,  "Load curve ID specifying loading");
    LSD_SFRY                                = VALUE(FLOAT,  "Load curve scale factor");
    LSD_LCID10                              = VALUE(CURVE,  "Load curve ID for dynamic relaxation phase");
    LSD_XCRY                                = VALUE(FLOAT,  "X-center of rotation, define for angular velocities");
    LSD_YCRY                                = VALUE(FLOAT,  "Y-center of rotation, define for angular velocities");
    LSD_ZCRY                                = VALUE(FLOAT,  "Z-center of rotation, define for angular velocities");
    LSD_CID                                 = VALUE(SYSTEM, "Coordinate system ID to define acceleration in local coordinate system");

    //LOAD_BODY_RZ:
    LSD_LCID11                              = VALUE(CURVE,  "Load curve ID specifying loading");
    LSD_SFRZ                                = VALUE(FLOAT,  "Load curve scale factor");
    LSD_LCID12                              = VALUE(CURVE,  "Load curve ID for dynamic relaxation phase");
    LSD_XCRZ                                = VALUE(FLOAT,  "X-center of rotation, define for angular velocities");
    LSD_YCRZ                                = VALUE(FLOAT,  "Y-center of rotation, define for angular velocities");
    LSD_ZCRZ                                = VALUE(FLOAT,  "Z-center of rotation, define for angular velocities");
    LSD_SYSTEM                              = VALUE(SYSTEM, "Coordinate system ID to define acceleration in local coordinate system");

    //LOAD_BODY_VECTOR:
    LSD_LCID13                              = VALUE(CURVE,  "Load curve ID specifying loading");
    LSD_SFRV                                = VALUE(FLOAT,  "Load curve scale factor");
    LSD_LCID14                              = VALUE(CURVE,  "Load curve ID for dynamic relaxation phase");
    LSD_XCRV                                = VALUE(FLOAT,  "X-center of rotation, define for angular velocities");
    LSD_YCRV                                = VALUE(FLOAT,  "Y-center of rotation, define for angular velocities");
    LSD_ZCRV                                = VALUE(FLOAT,  "Z-center of rotation, define for angular velocities");
    LSD_SYSTEMV                             = VALUE(SYSTEM, "Coordinate system ID to define acceleration in local coordinate system");
    LSDYNA_V1                               = VALUE(FLOAT,  "Vector component of vector V");
    LSDYNA_V2                               = VALUE(FLOAT,  "Vector component of vector V");
    LSDYNA_V3                               = VALUE(FLOAT,  "Vector component of vector V");

    //LOAD_BODY_PARTS
    LSD_PSID                                = VALUE(SETS,   "Part set ID")  { SUBTYPES = (/SETS/SET_PART_IDPOOL); }

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    XOpt                                    = VALUE(INT,    "LOAD_BODY_X");
    YOpt                                    = VALUE(INT,    "LOAD_BODY_Y");
    ZOpt                                    = VALUE(INT,    "LOAD_BODY_Z");
    RXOpt                                   = VALUE(INT,    "LOAD BODY_RX");
    RYOpt                                   = VALUE(INT,    "LOAD BODY_RY");
    RZOpt                                   = VALUE(INT,    "LOAD BODY_RZ");
    VectorOpt                               = VALUE(INT,    "LOAD_BODY_VECTOR");
    PartOpt                                 = VALUE(INT,    "LOAD_BODY_PARTS");

    IOFLAG                                  = VALUE(INT,    "IOFLAG");
    _opt                                    = VALUE(STRING, "Keyword Option");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //LOAD_BODY_X:
    LSD_LCID                                = 45;
    LSD_SFX                                 = 736;
    LSD_LCID2                               = 168;
    LSD_SYSTEM_X                            = 5453;

    //LOAD_BODY_Y:
    LSD_LCID3                               = 170;
    LSD_SFY                                 = 737;
    LSD_LCID4                               = 171;
    LSD_SYSTEM_Y                            = 5454;

    //LOAD_BODY_Z:
    LSD_LCID5                               = 172;
    LSD_SFZ                                 = 738;
    LSD_LCID6                               = 199;
    LSD_SYSTEM_Z                            = 5455;

    //LOAD_BODY_RX:
    LSD_LCID7                               = 200;
    LSD_SFRX                                = 739;
    LSD_LCID8                               = 224;
    LSD_XCRX                                = 759;
    LSD_YCRX                                = 760;
    LSD_ZCRX                                = 761;
    LSD_P_CID                               = 2897;

    //LOAD_BODY_RY:
    LSD_LCID9                               = 1141;
    LSD_SFRY                                = 740;
    LSD_LCID10                              = 1142;
    LSD_XCRY                                = 762;
    LSD_YCRY                                = 763;
    LSD_ZCRY                                = 764;
    LSD_CID                                 = 412;

    //LOAD_BODY_RZ:
    LSD_LCID11                              = 1175;
    LSD_SFRZ                                = 741;
    LSD_LCID12                              = 1176;
    LSD_XCRZ                                = 765;
    LSD_YCRZ                                = 766;
    LSD_ZCRZ                                = 767;
    LSD_SYSTEM                              = 184;

    //LOAD_BODY_VECTOR:
    LSD_LCID13                              = 1189;
    LSD_SFRV                                = 8538;
    LSD_LCID14                              = 4602;
    LSD_XCRV                                = 8539;
    LSD_YCRV                                = 8540;
    LSD_ZCRV                                = 8541;
    LSD_SYSTEMV                             = 8542;
    LSDYNA_V1                               = 142;
    LSDYNA_V2                               = 143;
    LSDYNA_V3                               = 144;

    //LOAD_BODY_PARTS
    LSD_PSID                                = 768;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;
    XOpt                                    = 729;
    YOpt                                    = 730;
    ZOpt                                    = 731;
    RXOpt                                   = 732;
    RYOpt                                   = 733;
    RZOpt                                   = 734;
    VectorOpt                               = 8537;
    PartOpt                                 = 735;

    IOFLAG                                  = -1;
    _opt                                    = -1;
}

DEFAULTS(COMMON)
{
    //LOAD_BODY_X:
    LSD_SFX                                 = 1.0;

    //LOAD_BODY_Y:
    LSD_SFY                                 = 1.0;

    //LOAD_BODY_Z:
    LSD_SFZ                                 = 1.0;

    //LOAD_BODY_RX:
    LSD_SFRX                                = 1.0;
    LSD_XCRX                                = 0.0;
    LSD_YCRX                                = 0.0;
    LSD_ZCRX                                = 0.0;

    //LOAD_BODY_RY:
    LSD_SFRY                                = 1.0;
    LSD_XCRY                                = 0.0;
    LSD_YCRY                                = 0.0;
    LSD_ZCRY                                = 0.0;

    //LOAD_BODY_RZ:
    LSD_SFRZ                                = 1.0;
    LSD_XCRZ                                = 0.0;
    LSD_YCRZ                                = 0.0;
    LSD_ZCRZ                                = 0.0;

    //LOAD_BODY_VECTOR:
    LSD_SFRV                                = 1.0;
    LSD_XCRV                                = 0.0;
    LSD_YCRV                                = 0.0;
    LSD_ZCRV                                = 0.0;
    LSDYNA_V1                               = 0.0;
    LSDYNA_V2                               = 0.0;
    LSDYNA_V3                               = 0.0;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*LOAD_BODY");

    FLAG  (XOpt, "XOpt");
    if(XOpt == 1)
    {
        ASSIGN(KEYWORD_STR, "_X");

        DATA  (LSD_LCID, "LCID");
        SCALAR(LSD_SFX, "SF")   { DIMENSION = "DIMENSIONLESS"; }
        DATA  (LSD_LCID2, "LCIDDR");
        DATA  (LSD_SYSTEM_X, "CID" );
    }

    FLAG  (YOpt, "YOpt" );
    if(YOpt == 1)
    {
        ASSIGN(KEYWORD_STR, "_Y");

        DATA  (LSD_LCID3, "LCID");
        SCALAR(LSD_SFY, "SF")   { DIMENSION = "DIMENSIONLESS"; }
        DATA  (LSD_LCID4, "LCIDDR");
        DATA  (LSD_SYSTEM_Y, "CID");
    }

    FLAG  (ZOpt, "ZOpt" );
    if(ZOpt == 1)
    {
        ASSIGN(KEYWORD_STR, "_Z");

        DATA  (LSD_LCID5, "LCID");
        SCALAR(LSD_SFZ, "SF")   { DIMENSION = "DIMENSIONLESS"; }
        DATA  (LSD_LCID6, "LCIDDR");
        DATA  (LSD_SYSTEM_Z, "CID");
    }

    FLAG  (RXOpt, "RXOpt");
    if(RXOpt == 1)
    {
        ASSIGN(KEYWORD_STR, "_RX" );

        DATA  (LSD_LCID7, "LCID");
        SCALAR(LSD_SFRX, "SF")   { DIMENSION = "DIMENSIONLESS"; }
        DATA  (LSD_LCID8, "LCIDDR");
        SCALAR(LSD_XCRX, "XC")   { DIMENSION = "l"; }
        SCALAR(LSD_YCRX, "YC")   { DIMENSION = "l"; }
        SCALAR(LSD_ZCRX, "ZC")   { DIMENSION = "l"; }
        DATA  (LSD_P_CID, "CID");
    }

    FLAG  (RYOpt, "RYOpt");
    if(RYOpt == 1)
    {
        ASSIGN(KEYWORD_STR, "_RY" );

        DATA  (LSD_LCID9, "LCID");
        SCALAR(LSD_SFRY, "SF")   { DIMENSION = "DIMENSIONLESS"; }
        DATA  (LSD_LCID10,  "LCIDDR");
        SCALAR(LSD_XCRY, "XC")   { DIMENSION = "l"; }
        SCALAR(LSD_YCRY, "YC")   { DIMENSION = "l"; }
        SCALAR(LSD_ZCRY, "ZC")   { DIMENSION = "l"; }
        DATA  (LSD_CID, "CID");
    }

    FLAG  (RZOpt, "RZOpt");
    if(RZOpt == 1)
    {
        ASSIGN(KEYWORD_STR, "_RZ" );

        DATA(LSD_LCID11, "LCID");
        SCALAR(LSD_SFRZ, "SF")   { DIMENSION = "DIMENSIONLESS"; }
        DATA(LSD_LCID12, "LCIDDR");
        SCALAR(LSD_XCRX, "XC")   { DIMENSION = "l"; }
        SCALAR(LSD_YCRY, "YC")   { DIMENSION = "l"; }
        SCALAR(LSD_ZCRZ, "ZC")   { DIMENSION = "l"; }
        DATA(LSD_SYSTEM, "CID");
    }

    FLAG  (VectorOpt, "VectorOpt" );
    if(VectorOpt == 1)
    {
        ASSIGN(KEYWORD_STR, "_VECTOR");

        DATA(LSD_LCID13,  "LCID");
        SCALAR(LSD_SFRV,  "SF")   { DIMENSION = "DIMENSIONLESS"; }
        DATA(LSD_LCID14,  "LCIDDR");
        SCALAR(LSD_XCRV,  "XC")   { DIMENSION = "l"; }
        SCALAR(LSD_YCRV,  "YC")   { DIMENSION = "l"; }
        SCALAR(LSD_ZCRV,  "ZC")   { DIMENSION = "l"; }
        DATA(LSD_SYSTEMV, "CID");
        SCALAR(LSDYNA_V1, "V1")   { DIMENSION = "DIMENSIONLESS"; }
        SCALAR(LSDYNA_V2, "V2")   { DIMENSION = "DIMENSIONLESS"; }
        SCALAR(LSDYNA_V3, "V3")   { DIMENSION = "DIMENSIONLESS"; }
    }

    FLAG  (PartOpt, "PartOpt");
    if(VectorOpt == 1)
    {
        ASSIGN(KEYWORD_STR, "_PARTS");
        DATA(LSD_PSID, "PSID");
    }
}

// File format
FORMAT(Keyword971_R6.1)
{
    ASSIGN(IOFLAG, 0, EXPORT);
    ASSIGN(IOFLAG, 1, IMPORT);

    if(IOFLAG == 0)
    {
        if(XOpt == 1)
            HEADER("*LOAD_BODY_X");

        if(YOpt == 1)
            HEADER("*LOAD_BODY_Y");

        if(ZOpt == 1)
            HEADER("*LOAD_BODY_Z");

        if(RXOpt == 1)
            HEADER("*LOAD_BODY_RX");

        if(RYOpt == 1)
            HEADER("*LOAD_BODY_RY");

        if(RZOpt == 1)
            HEADER("*LOAD_BODY_RZ");

        if(VectorOpt == 1)
            HEADER("*LOAD_BODY_VECTOR");

        if(PartOpt == 1)
            HEADER("*LOAD_BODY_PARTS");
    }
    else //IMPORT
    {
        HEADER("*LOAD_BODY%s", _opt);

        if(_opt == "_X")
        {
            ASSIGN(XOpt, 1, IMPORT);
        }
        else if(_opt == "_RX")
        {
            ASSIGN(RXOpt, 1, IMPORT);
        }
        else if(_opt == "_Y" )
        {
            ASSIGN(YOpt, 1, IMPORT);
        }
        else if(_opt == "_RY")
        {
            ASSIGN(RYOpt, 1, IMPORT);
        }
        else if(_opt == "_Z")
        {
            ASSIGN(ZOpt, 1, IMPORT);
        }
        else if(_opt == "_RZ")
        {
            ASSIGN(RZOpt, 1, IMPORT);
        }

        ASSIGN(VectorOpt, _FIND(_opt, "VECTOR"), IMPORT);

        ASSIGN(PartOpt, _FIND(_opt, "PARTS"), IMPORT);
    }

    //LOAD_BODY_X:
    if(XOpt == 1)
    {
        COMMENT("$     LCID        SF    LCIDDR                                     CID");
        CARD("%10d%10lg%10d%30s%10d", LSD_LCID, LSD_SFX, LSD_LCID2, _BLANK_, LSD_SYSTEM_X);
    }

    //LOAD_BODY_Y:
    if(YOpt == 1)
    {
        COMMENT("$     LCID        SF    LCIDDR                                     CID");
        CARD("%10d%10lg%10d%30s%10d", LSD_LCID3, LSD_SFY, LSD_LCID4, _BLANK_, LSD_SYSTEM_Y);
    }

    //LOAD_BODY_Z:
    if(ZOpt == 1)
    {
        COMMENT("$     LCID        SF    LCIDDR                                     CID");
        CARD("%10d%10lg%10d%30s%10d", LSD_LCID5, LSD_SFZ, LSD_LCID6, _BLANK_, LSD_SYSTEM_Z);
    }

    //LOAD_BODY_RX:
    if(RXOpt == 1)
    {
        COMMENT("$     LCID        SF    LCIDDR        XC        YC        ZC       CID");
        CARD("%10d%10lg%10d%10lg%10lg%10lg%10d", LSD_LCID7, LSD_SFRX, LSD_LCID8, LSD_XCRX, LSD_YCRX, LSD_ZCRX, LSD_P_CID);
    }

    //LOAD_BODY_RY:
    if(RYOpt == 1)
    {
        COMMENT("$     LCID        SF    LCIDDR        XC        YC        ZC       CID");
        CARD("%10d%10lg%10d%10lg%10lg%10lg%10d", LSD_LCID9, LSD_SFRY, LSD_LCID10, LSD_XCRY, LSD_YCRY, LSD_ZCRY, LSD_CID);
    }

    //LOAD_BODY_RZ:
    if(RZOpt == 1)
    {
        COMMENT("$     LCID        SF    LCIDDR        XC        YC        ZC       CID");
        CARD("%10d%10lg%10d%10lg%10lg%10lg%10d", LSD_LCID11, LSD_SFRZ, LSD_LCID12, LSD_XCRZ, LSD_YCRZ, LSD_ZCRZ, LSD_SYSTEM);
    }

    //LOAD_BODY_VECTOR:
    if(VectorOpt == 1)
    {
        COMMENT("$     LCID        SF    LCIDDR        XC        YC        ZC       CID");
        CARD("%10d%10lg%10d%10lg%10lg%10lg%10d", LSD_LCID13, LSD_SFRV, LSD_LCID14, LSD_XCRV, LSD_ZCRV, LSD_ZCRZ, LSD_SYSTEMV);

        COMMENT("$       V1        V2        V3");
        CARD("%10lg%10lg%10lg", LSDYNA_V1, LSDYNA_V2, LSDYNA_V3);
    }

    //LOAD_BODY_PARTS
    if(PartOpt == 1)
    {
        COMMENT("$     PSID");
        CARD("%10d", LSD_PSID);
    }
}
