//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 226
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    E                                       = VALUE(FLOAT,  "Youngs modulus");
    LSDYNA_A1                               = VALUE(FLOAT, "Components of vector a");
    LSDYNA_A2                               = VALUE(FLOAT, "Components of vector a");
    LSDYNA_A3                               = VALUE(FLOAT, "Components of vector a");
    LSDYNA_D1                               = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_D2                               = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_D3                               = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_V1                               = VALUE(FLOAT,  "Components of vector v");
    LSDYNA_V2                               = VALUE(FLOAT,  "Components of vector v");
    LSDYNA_V3                               = VALUE(FLOAT,  "Components of vector v");
    LSD_MATL125_H                           = VALUE(FLOAT,  "Anisotropic parameter");
    LSD_MATL125_K                           = VALUE(FLOAT,  "Hardening parameter");
    LSD_MATL125_SC                          = VALUE(FLOAT,  "c in Yoshidas equations");
    LSD_MAT_BETA                            = VALUE(FLOAT,  "Material angle");
    LSD_MAT_CB                              = VALUE(FLOAT,  "B in Yoshidas equations");
    LSD_MAT_M                               = VALUE(FLOAT,  "Exponent in Barlat's yield criterion");
    LSD_MAT_RSAT                            = VALUE(FLOAT,  "Hardening parameter");
    LSD_MAT_SB                              = VALUE(FLOAT,  "b in Yoshidas equations");
    LSD_MAT_XP                              = VALUE(FLOAT,  "Coordinates of point p");
    LSD_MAT_Y                               = VALUE(FLOAT,  "Hardening parameter");
    LSD_MAT_YP                              = VALUE(FLOAT,  "Coordinates of point p");
    LSD_MAT_ZP                              = VALUE(FLOAT,  "Coordinates of point p");
    LSD_NODE1                               = VALUE(NODE,  "Node");
    LSD_NODE3                               = VALUE(NODE,  "Node1");
    LSD_NODE4                               = VALUE(NODE,  "Node2");
    LSD_NODE5                               = VALUE(NODE,  "Node1");
    LSD_NODE6                               = VALUE(NODE,  "Node2");
    LSD_NODE7                               = VALUE(NODE,  "Node1");
    LSD_NODE8                               = VALUE(NODE,  "Node2");
    LSD_R00                                 = VALUE(FLOAT,  "Lankford parameter in 0 degree direction");
    LSD_R45                                 = VALUE(FLOAT,  "Lankford parameter in 45 degree direction");
    LSD_R90                                 = VALUE(FLOAT,  "Lankford parameter in 90 degree direction");
    LSD_SYSTEM                              = VALUE(SYSTEM,  "coordinate system ID number");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    MATL226_C1                              = VALUE(FLOAT,  "Constants used to modify R");
    MATL226_C2                              = VALUE(FLOAT,  "Constants used to modify R");
    MATL226_HLCID                           = VALUE(FUNCT,  "true strain vs true stress");
    MATL226_IOPT                            = VALUE(INT,  "Kinematic hardening rule flag");
    Nu                                      = VALUE(FLOAT,  "Poissons ratio");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    axisOptFlag                             = VALUE(INT,  "Anisotropy axis definition");
    AOPT_SKEW_FLAG                          = VALUE(INT,  "Flag for defining coordinate system ID number");
    IO_FLAG                                 = VALUE(INT, "io flag");
    _HMCOMMENTSFLAG                         = VALUE(INT, "Write HM Comments");
    TITLE                                   = VALUE(STRING, "Title");
    EncTypeEnumField                        = VALUE(INT,  "Type");
    RegTypeEnumField                        = VALUE(INT,  "Type");
    LOC_AOPT                                = VALUE(FLOAT, "");
    //empty_string                       = VALUE(STRING, "Used as a local variable for free format case");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    E                                       = 119;
    LSDYNA_A1                               = 139;
    LSDYNA_A2                               = 140;
    LSDYNA_A3                               = 141;
    LSDYNA_D1                               = 145;
    LSDYNA_D2                               = 146;
    LSDYNA_D3                               = 147;
    LSDYNA_V1                               = 142;
    LSDYNA_V2                               = 143;
    LSDYNA_V3                               = 144;
    LSD_MATL125_H                           = 4976;
    LSD_MATL125_K                           = 4973;
    LSD_MATL125_SC                          = 4972;
    LSD_MAT_BETA                            = 306;
    LSD_MAT_CB                              = 4970;
    LSD_MAT_M                               = 314;
    LSD_MAT_RSAT                            = 4974;
    LSD_MAT_SB                              = 4975;
    LSD_MAT_XP                              = 338;
    LSD_MAT_Y                               = 4971;
    LSD_MAT_YP                              = 339;
    LSD_MAT_ZP                              = 340;
    LSD_NODE1                               = 86;
    LSD_NODE3                               = 2802;
    LSD_NODE4                               = 2803;
    LSD_NODE5                               = 5078;
    LSD_NODE6                               = 5079;
    LSD_NODE7                               = 5080;
    LSD_NODE8                               = 5081;
    LSD_R00                                 = 5048;
    LSD_R45                                 = 5049;
    LSD_R90                                 = 5050;
    LSD_SYSTEM                              = 184;
    LSD_TitleOpt                            = 90;
    MATL226_C1                              = 1742;
    MATL226_C2                              = 1743;
    MATL226_HLCID                           = 1740;
    MATL226_IOPT                            = 1741;
    Nu                                      = 120;
    Num_Comments                            = 3101;
    Rho                                     = 118;
    axisOptFlag                             = 4946;
    AOPT_SKEW_FLAG                          = -1;
    EncTypeEnumField                        = 5828;
    RegTypeEnumField                        = 5827;
    TITLE                                   = -1;
    LOC_AOPT                                = -1;
    IO_FLAG                                 = -1;
    //empty_string                       = -1;
}

DRAWABLES(COMMON) {
       public:
       MASS_DENSITY=SCALAR(Rho);
       YOUNG_MODULUS=SCALAR(E);
       POISSON_RATIO=SCALAR(Nu);
               //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED= EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
  private:
  G = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1 = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
  public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

CHECK(COMMON)
{}
DEFAULTS(COMMON)
{
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_KINEMATIC_HARDENING_BARLAT89");
     RADIO(CommentEnumField)
     {
         //////ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
        ASSIGN(KEYWORD_STR, "_TITLE");
     } 
mandatory:
     SCALAR(Rho)                        {DIMENSION="density";} 
     SCALAR(E)                          {DIMENSION="pressure";} 
     SCALAR(Nu)                         {DIMENSION="DIMENSIONLESS";}
optional: 
     SCALAR(LSD_MAT_M)                  {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_R00)                    {DIMENSION="DIMENSIONLESS";} 
     SCALAR(LSD_R45)                    {DIMENSION="DIMENSIONLESS";}  
     SCALAR(LSD_R90)                    {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_CB)                 {DIMENSION="pressure";}
     SCALAR(LSD_MAT_Y)                  {DIMENSION="pressure";}
     SCALAR(LSD_MATL125_SC)             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MATL125_K)              {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MAT_RSAT)               {DIMENSION="pressure";}
     SCALAR(LSD_MAT_SB)                 {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MATL125_H)              {DIMENSION="DIMENSIONLESS";}
     DATA(MATL226_HLCID);
     RADIO(axisOptFlag)
     {
        ADD(1, "0.0: By element nodes");
        ADD(2, "1.0: By point");
        ADD(3, "2.0: Define global vector");
        ADD(4, "3.0: Define local vector");
        ADD(5, "4.0: pick system");
     }
     if(axisOptFlag == 5)
     {
        DATA(LSD_SYSTEM);
     }
     RADIO(MATL226_IOPT)
     {
        ADD(0, "0: Original Yoshida formulation");
        ADD(1, "1: Modified formulation : Define C1,C2 as below");
     }
     SCALAR(MATL226_C1)                 {DIMENSION="DIMENSIONLESS";}
     SCALAR(MATL226_C2)                 {DIMENSION="DIMENSIONLESS";}
     if(axisOptFlag == 2)
     {
        DATA(LSD_NODE1);
        ASSIGN(LSD_MAT_XP,[@getentityvalue(nodes,$LSD_NODE1,x)],FALSE);
        ASSIGN(LSD_MAT_YP,[@getentityvalue(nodes,$LSD_NODE1,y)],FALSE);
        ASSIGN(LSD_MAT_ZP,[@getentityvalue(nodes,$LSD_NODE1,z)],FALSE);
        //SCALAR(LSD_MAT_XP)               {DIMENSION="l";}
        //SCALAR(LSD_MAT_YP)               {DIMENSION="l";}
        //SCALAR(LSD_MAT_ZP)               {DIMENSION="l";}
     }
     if(axisOptFlag == 3)
     {
        DATA(LSD_NODE3);
        DATA(LSD_NODE4);
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],FALSE);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],FALSE);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],FALSE);
        //SCALAR(LSDYNA_A1)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_A2)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_A3)               {DIMENSION="DIMENSIONLESS";}
        DATA(LSD_NODE7);                
        DATA(LSD_NODE8);                
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],FALSE);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],FALSE);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],FALSE);
        //SCALAR(LSDYNA_D1)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_D2)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_D3)               {DIMENSION="DIMENSIONLESS";}
     }
     if(axisOptFlag == 4)
     {
        DATA(LSD_NODE5);
        DATA(LSD_NODE6);
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],FALSE);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],FALSE);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],FALSE);
        //SCALAR(LSDYNA_V1)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_V2)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_V3)               {DIMENSION="DIMENSIONLESS";}
     }     
     if(axisOptFlag == 1 || axisOptFlag == 4)
     {
        SCALAR(LSD_MAT_BETA)            {DIMENSION="a";}
     }     
/*
     graphical SUPPORT("Part(s) to which material is applied") {
        OBJECTS=(/COMPONENT/SHELL,/COMPONENT/TSHELL);
        ADD(COMPONENT,"Parts");
      }
*/
}

// File format
FORMAT(Keyword971_R6.1) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, IMPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, EXPORT);
    //
    if(LSD_NODE1 != NONE)
    {
        ASSIGN(LSD_MAT_XP,[@getentityvalue(nodes,$LSD_NODE1,x)],EXPORT);
        ASSIGN(LSD_MAT_YP,[@getentityvalue(nodes,$LSD_NODE1,y)],EXPORT);
        ASSIGN(LSD_MAT_ZP,[@getentityvalue(nodes,$LSD_NODE1,z)],EXPORT);
    }
    if(LSD_NODE4 != NONE && LSD_NODE3 != NONE)
    {
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],EXPORT);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],EXPORT);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],EXPORT);
    }
    if(LSD_NODE8 != NONE && LSD_NODE7 != NONE)
    {
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],EXPORT);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],EXPORT);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],EXPORT);
    }
    if(LSD_NODE6 != NONE && LSD_NODE5 != NONE)
    {
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],EXPORT);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],EXPORT);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],EXPORT);
    }
    //
    if(axisOptFlag == 1 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,0.0,EXPORT);
    }
    else if(axisOptFlag == 2 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,1.0,EXPORT);
    }
    else if(axisOptFlag == 3 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,2.0,EXPORT);
    }
    else if(axisOptFlag == 4 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,3.0,EXPORT);
    }
    //
    COMMENT("$      MID       RHO         E        PR         M       R00       R45       R90");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,Nu,LSD_MAT_M,LSD_R00,LSD_R45,LSD_R90);
    //
    COMMENT("$       CB         Y        SC         K      RSAT        SB         H     HLCID");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10d",LSD_MAT_CB,LSD_MAT_Y,LSD_MATL125_SC,LSD_MATL125_K,LSD_MAT_RSAT,LSD_MAT_SB,LSD_MATL125_H,MATL226_HLCID);
    //
    COMMENT("$     AOPT      IOPT        C1        C2");
    if(IO_FLAG == 2)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 5)
        {
            CARD("%10lg%10d%10lg%10lg",LOC_AOPT,MATL226_IOPT,MATL226_C1,MATL226_C2);
        }
        else
        {
            CARD("%10lg%10d%10lg%10lg",SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM),MATL226_IOPT,MATL226_C1,MATL226_C2);
        }
    }
    CARD_PREREAD("%10lg",LOC_AOPT);
    if(LOC_AOPT == 0.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,1,IMPORT);
    }
    else if(LOC_AOPT == 1.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,2,IMPORT);
    }
    else if(LOC_AOPT == 2.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,3,IMPORT);
    }
    else if(LOC_AOPT == 3.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,4,IMPORT);
    }
    if(IO_FLAG == 1)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 5)
        {
            CARD("%10lg%10d%10lg%10lg",LOC_AOPT,MATL226_IOPT,MATL226_C1,MATL226_C2);
        }
        else
        {
            CARD("%10lg%10d%10lg%10lg",SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM),MATL226_IOPT,MATL226_C1,MATL226_C2);
            ASSIGN(axisOptFlag, 5, IMPORT);
        }
    } 
    //
    COMMENT("$       XP        YP        ZP        A1        A2        A3");
    if(axisOptFlag == 2)
    {
        CARD("%10lg%10lg%10lg",LSD_MAT_XP,LSD_MAT_YP,LSD_MAT_ZP);
    }
    else if(axisOptFlag == 3)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$       V1        V2        V3        D1        D2        D3      BETA"); 
    if(axisOptFlag == 4)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,LSD_MAT_BETA);
    }
    else if(axisOptFlag == 3)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3);
    }
    else if(axisOptFlag == 1)
    {
        CARD("%10s%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_MAT_BETA);
    }
    else
    {
        BLANK;
    }

}
