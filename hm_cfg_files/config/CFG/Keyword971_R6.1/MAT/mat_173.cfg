//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 005
// 

ATTRIBUTES(COMMON)
{
    KEYWORD_STR           = VALUE(STRING, "Solver Keyword");
    CommentEnumField      = VALUE(INT, "User Comments");
    Num_Comments          = SIZE("No. of comment lines");
    Comments              = ARRAY[Num_Comments](STRING, "Entity Comments");
    LSD_TitleOpt          = VALUE(INT, "Title");
    
    Rho                          = VALUE(FLOAT, "Rho");
    LSD_GMOD                     = VALUE(FLOAT, "Elastic shear modulus");
    Nu                           = VALUE(FLOAT, "Poissonâ€™s ratio");
    LSD_MAT_PHI                  = VALUE(FLOAT, "Angle of friction");
    LSD_CVAL                     = VALUE(FLOAT, "Cohesion value");
    LSD_PSI                      = VALUE(FLOAT, "Dilation angle");
    
    LSD_MAT_NOVOID               = VALUE(INT, "Voiding behavior flag");
    LSD_MAT_NPLANES              = SIZE("Number of joint planes");
    LSD_MAT_LCCPDR               = VALUE(FUNCT, "Load curve for extra cohesion for parent material");
    LSD_MAT_LCCPT                = VALUE(FUNCT, "Load curve for extra cohesion for parent material");
    LSD_MAT_LCCJDR               = VALUE(FUNCT, "Load curve for extra cohesion for joints");
    LSD_MAT_LCCJT                = VALUE(FUNCT, "Load curve for extra cohesion for joints");
    LSD_MAT_LCSFAC               = VALUE(FUNCT, "Load curve giving factor on strength as a function of time");
    
    LSD_MAT_GMODDP               = VALUE(FLOAT, "z coordinate at which GMOD and CVAL are correct");
    LSD_MAT_GMODGR               = VALUE(FLOAT, "Gradient of GMOD as a function of z coordinate");
    LSD_MAT_LCGMEP               = VALUE(FUNCT, "Load curve of GMOD as a function of plastic strain");
    LSD_MAT_LCPHIEP              = VALUE(FUNCT, "Load curve of PHI as a function of plastic strain");
    LSD_MAT_LCPSIEP              = VALUE(FUNCT, "Load curve of PSI as a function of plastic strain");
    LSD_MAT_LCGMST               = VALUE(INT, "Leave blank");
    LSD_MAT_CVALGR               = VALUE(FLOAT, "Gradient of CVAL as a function of z coordinate");
    LSD_MAT_ANISO                = VALUE(FLOAT, "Factor applied to elastic shear stiffness in global XZ and YZ planes");
    
    LSD_MAT_DIP                  = ARRAY[LSD_MAT_NPLANES](FLOAT, "Angle of the plane in degrees below the horizontal");
    LSD_MAT_DIPANG               = ARRAY[LSD_MAT_NPLANES](FLOAT, "Plan view angle (degrees) of downhill vector drawn on the plane");
    LSD_MAT_CPLANE               = ARRAY[LSD_MAT_NPLANES](FLOAT, "Cohesion for shear behavior on plane");
    LSD_MAT_FRPLANE              = ARRAY[LSD_MAT_NPLANES](FLOAT, "Friction angle for shear behavior on plane");
    LSD_MAT_TPLANE               = ARRAY[LSD_MAT_NPLANES](FLOAT, "Tensile strength across plane");
    LSD_MAT_SHRMAX               = ARRAY[LSD_MAT_NPLANES](FLOAT, "Max shear stress on plane");
    LSD_MAT_LOCAL                = ARRAY[LSD_MAT_NPLANES](INT, "Axes");

}

SKEYWORDS_IDENTIFIER(COMMON)
{
    LSD_TitleOpt      = 90;
    Rho               = 118;
    KEYWORD_STR       = 9000;
    CommentEnumField  = 3220;
    Num_Comments      = 3101;
    Comments          = 3100;

    LSD_GMOD             = 812;
    Nu                   = 120;
    LSD_MAT_PHI          = 1123;
    LSD_CVAL             = 11120;
    LSD_PSI              = 11121;
    
    LSD_MAT_NOVOID       = 9066;
    LSD_MAT_NPLANES      = 9049;
    LSD_MAT_LCCPDR       = 9050;
    LSD_MAT_LCCPT        = 9051;
    LSD_MAT_LCCJDR       = 9052;
    LSD_MAT_LCCJT        = 9053;
    LSD_MAT_LCSFAC       = 9054;
    
    LSD_MAT_GMODDP       = 9068;
    LSD_MAT_GMODGR       = 9069;
    LSD_MAT_LCGMEP       = 9055;
    LSD_MAT_LCPHIEP      = 9056;
    LSD_MAT_LCPSIEP      = 9057;
    LSD_MAT_LCGMST       = 9058;
    LSD_MAT_CVALGR       = 9048;
    LSD_MAT_ANISO        = 9059;
    
    LSD_MAT_DIP          = 9060;
    LSD_MAT_DIPANG       = 9061;
    LSD_MAT_CPLANE       = 9062;
    LSD_MAT_FRPLANE      = 9063;
    LSD_MAT_TPLANE       = 9064;
    LSD_MAT_SHRMAX       = 9065;
    LSD_MAT_LOCAL        = 9067;
    
}

DEFAULTS(COMMON)
{
    LSD_PSI           = 0.0;
    LSD_MAT_NOVOID    = 0.0;
    LSD_MAT_NPLANES   = 0;
    LSD_MAT_GMODDP    = 0.0;
    LSD_MAT_LCGMST    = 0;
    LSD_MAT_ANISO     = 1.0;
    LSD_MAT_DIP       = 0.0;
    LSD_MAT_DIPANG    = 0.0;
    LSD_MAT_CPLANE    = 0.0;
    LSD_MAT_FRPLANE   = 0.0;
    LSD_MAT_TPLANE    = 0.0;
    LSD_MAT_SHRMAX    = 1E+20;
    LSD_MAT_LOCAL     = 0;
}

DRAWABLES(COMMON) {
       
  public:
  
    MASS_DENSITY=SCALAR(Rho);  
    ELASTIC_SHEAR_MODULUS=SCALAR(LSD_GMOD);  
    POISSON_RATIO=SCALAR(Nu);  
    ANGLE_OF_FRICTION=SCALAR(LSD_MAT_PHI);  
    COHESION_VALUE=SCALAR(LSD_CVAL);  
    DILATION_ANGLE=SCALAR(LSD_PSI);  
    Z_COORDINATE_AT_WHICH_GMOD_AND_CVAL_ARE_CORRECT=SCALAR(LSD_MAT_GMODDP);  
    GRADIENT_OF_GMOD_VERSUS_Z_COORDINATE=SCALAR(LSD_MAT_GMODGR);  
    LCGMST=SCALAR(LSD_MAT_LCGMST);  
    GRADIENT_OF_CVAL_VERSUS_Z_COORDINATE=SCALAR(LSD_MAT_CVALGR);  
    ELASTIC_SHEAR_STIFFNESS_FACTOR=SCALAR(LSD_MAT_ANISO);  
    ANGLE_OF_PLANE_IN_DEGREE_BELOW_HORIZONTAL=SCALAR(LSD_MAT_DIP);  
    PLANE_VIEW_ANGLE_OF_DOWNHILL_VECTOR=SCALAR(LSD_MAT_DIPANG);  
    COHESION_FOR_SHEAR_BEHAVIOUR=SCALAR(LSD_MAT_CPLANE);  
    FRICTION_ANGLE_FOR_SHEAR_BEHAVIOUR=SCALAR(LSD_MAT_FRPLANE);  
    TENSILE_STRENGTH=SCALAR(LSD_MAT_TPLANE);  
    MAX_SHEAR_STRESS=SCALAR(LSD_MAT_SHRMAX);  
    YOUNG_MODULUS=EVAL(3*(1-2*POISSON_RATIO)*ELASTIC_SHEAR_MODULUS) ;   
    BULK_MODULUS=EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));    
    public:   
        SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);    
    public:   
        SOUND_SPEED_SOLID = EVAL(((4*ELASTIC_SHEAR_MODULUS/3+BULK_MODULUS)/MASS_DENSITY)^0.5);
}

GUI(COMMON) 
{

    ASSIGN(KEYWORD_STR, "*MAT_MOHR_COULOMB");

    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do not export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
            SCALAR(Comments);
        }
    } 
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == TRUE)
    {
        ASSIGN(KEYWORD_STR, "_TITLE");
    } 
mandatory:
    SCALAR(Rho)         {DIMENSION="density";}
optional:
    SCALAR(LSD_GMOD)         { DIMENSION="pressure";}
    SCALAR(Nu)      { DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT_PHI)      { DIMENSION="a";}
    SCALAR(LSD_CVAL)         { DIMENSION="pressure";}
    SCALAR(LSD_PSI)          { DIMENSION="a";}
    SCALAR(LSD_MAT_GMODDP)   { DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT_ANISO)    { DIMENSION="DIMENSIONLESS";}

    SIZE(LSD_MAT_NPLANES);
    ARRAY(LSD_MAT_NPLANES,"")
    {
      SCALAR(LSD_MAT_DIP)      { DIMENSION="a";}
      SCALAR(LSD_MAT_DIPANG)   { DIMENSION="a";}
      SCALAR(LSD_MAT_CPLANE)   { DIMENSION="DIMENSIONLESS";}
      SCALAR(LSD_MAT_FRPLANE)  { DIMENSION="a";}
      SCALAR(LSD_MAT_TPLANE)   { DIMENSION="DIMENSIONLESS";}
      SCALAR(LSD_MAT_SHRMAX)   { DIMENSION="pressure";}
      RADIO(LSD_MAT_LOCAL)
      {
        ADD(0, "DIP and DIPANG are with respect to the global axes");
        ADD(1, "DIP and DIPANG are with respect to the local element axes");
      }
    }
    
    RADIO(LSD_MAT_NOVOID);

    FUNCTION(LSD_MAT_LCCPDR);
    FUNCTION(LSD_MAT_LCCPT);
    FUNCTION(LSD_MAT_LCCJDR);
    FUNCTION(LSD_MAT_LCCJT);
    FUNCTION(LSD_MAT_LCSFAC)
    {
      X_TITLE = "Time"; X_DIMENSION = "t";
      Y_TITLE = "Factor on strength"; Y_DIMENSION = "DIMENSIONLESS";
    }
    FUNCTION(LSD_MAT_LCGMEP)
    {
      X_TITLE = "Plastic strain"; X_DIMENSION = "DIMENSIONLESS";
      Y_TITLE = "GMOD"; Y_DIMENSION = "pressure";
    }
    FUNCTION(LSD_MAT_LCPHIEP)
    {
      X_TITLE = "Plastic strain"; X_DIMENSION = "DIMENSIONLESS";
      Y_TITLE = "PHI"; Y_DIMENSION = "a";
    }
    FUNCTION(LSD_MAT_LCPSIEP)
    {
      X_TITLE = "Plastic strain"; X_DIMENSION = "DIMENSIONLESS";
      Y_TITLE = "PSI"; Y_DIMENSION = "a";
    }
    /*
    graphical SUPPORT("Part(s) to which material is applied") {
    OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D);
    ADD(COMPONENT,"Parts");
    }
    */
}

// File format

FORMAT(Keyword971_R6.1) 
{
    COMMENT("$      MID        RO      GMOD       RNU                 PHI      CVAL       PSI");
    CARD("%10d%10lg%10lg%10lg          %10lg%10lg%10lg",_ID_,Rho,LSD_GMOD,Nu,LSD_MAT_PHI,LSD_CVAL,LSD_PSI);

    COMMENT("$   NOVOID   NPLANES              LCCPDR     LCCPT    LCCJDR     LCCJT    LCSFAC");
    CARD("%10d%10d          %10d%10d%10d%10d%10d",LSD_MAT_NOVOID,LSD_MAT_NPLANES,LSD_MAT_LCCPDR,LSD_MAT_LCCPT,LSD_MAT_LCCJDR,LSD_MAT_LCCJT,LSD_MAT_LCSFAC);

    COMMENT("$   GMODDP    GMODGR    LCGMEP   LCPHIEP   LCPSIEP    LCGMST    CVALGR     ANISO");
    CARD("%10lg%10lg%10d%10d%10d%10d%10lg%10lg",LSD_MAT_GMODDP,LSD_MAT_GMODGR,LSD_MAT_LCGMEP,LSD_MAT_LCPHIEP,LSD_MAT_LCPSIEP,LSD_MAT_LCGMST,LSD_MAT_CVALGR,LSD_MAT_ANISO);

    CARD_LIST(LSD_MAT_NPLANES)
    {
      COMMENT("$      DIP    DIPANG    CPLANE   FRPLANE    TPLANE    SHRMAX     LOCAL");
      CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10d",LSD_MAT_DIP,LSD_MAT_DIPANG,LSD_MAT_CPLANE,LSD_MAT_FRPLANE,LSD_MAT_TPLANE,LSD_MAT_SHRMAX,LSD_MAT_LOCAL);
    }
}
