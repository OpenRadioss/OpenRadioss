//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//Material law 102 (INV_HYPERBOLIC_SIN) Setup File
//


ATTRIBUTES(COMMON)
{
    KEYWORD_STR         = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt        = VALUE(INT, "Title");
    CommentEnumField    = VALUE(INT, "User Comments");
    Num_Comments        = SIZE("No. of comment lines");
    Comments            = ARRAY[Num_Comments](STRING, "Entity Comments");

    //Card1 of LS-Dyna manual
    Rho                 = VALUE(FLOAT, "Mass density");  
    E                   = VALUE(FLOAT,"Young's Modulus");
    PR                  = VALUE(FLOAT,"Poisson's ratio");
    LSD_MAT52_T         = VALUE(FLOAT,"Initial Temperature");
    LSD_MAT52_HC        = VALUE(FLOAT,"Heat generation coefficient");
    LSD_MAT_VP          = VALUE(FLOAT,"Formulation for rate effects");

    //Card2 of LS-Dyna manual
    LSD_ALPHA           = VALUE(FLOAT,"Material constitutive constant alpha");
    LSDYNA_N            = VALUE(FLOAT,"Material constitutive constant n");
    LSD_MAT_A           = VALUE(FLOAT,"Material constitutive constant a");
    LSD_MAT_Q           = VALUE(FLOAT,"Activation energy for flow");
    LSD_G               = VALUE(FLOAT,"Universal gas constant");
    LSD_MAT_EPSO        = VALUE(FLOAT,"Reference strain rate");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR         = 9000;
    CommentEnumField    = 3220;
    Num_Comments        = 3101;
    LSD_TitleOpt        = 90;
    Comments            = 3100;
    Rho                 = 118;
    E                   = 119;
    PR                  = 120;
    LSD_MAT52_T         = 1226;
    LSD_MAT52_HC        = 1227;
    LSD_MAT_VP          = 4391;

    LSD_ALPHA           = 1651;
    LSDYNA_N            = 71;
    LSD_MAT_A           = 310;
    LSD_MAT_Q           = 6071;
    LSD_G               = 1560;
    LSD_MAT_EPSO        = 317;
}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  YOUNG_MODULUS=SCALAR(E);
  POISSON_RATIO=SCALAR(PR);
  INITIAL_TEMPERATURE=SCALAR(LSD_MAT52_T);
  HEAT_GENERATION_COEFFICIENT=SCALAR(LSD_MAT52_HC);
  FORMULATION_FOR_RATE_EFFECTS=SCALAR(LSD_MAT_VP);
  MATERIAL_CONSTITUTIVE_CONSTANT_ALPHA=SCALAR(LSD_ALPHA);
  MATERIAL_CONSTITUTIVE_CONSTANT_N=SCALAR(LSDYNA_N);
  MATERIAL_CONSTITUTIVE_CONSTANT_A=SCALAR(LSD_MAT_A);
  ACTIVATION_ENERGY_FOR_FLOW=SCALAR(LSD_MAT_Q);
  UNIVERSAL_GAS_CONSTANT=SCALAR(LSD_G);
  REFERENCE_STRAIN_RATE=SCALAR(LSD_MAT_EPSO);
 public:
 //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2      = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON){
  mandatory:
    SCALAR(Rho){DIMENSION="density";}
  optional:  
    SCALAR(E){DIMENSION="pressure";}
    SCALAR(PR){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT52_T){DIMENSION="k";}
    SCALAR(LSD_MAT52_HC){DIMENSION="DIMENSIONLESS";}
    RADIO(LSD_MAT_VP)
    {
      ADD(0.,"Scale yield stress") ;
      ADD(1.,"Viscoplastic formulation") ;
    }
    SCALAR(LSD_ALPHA){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_N){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT_A){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT_Q){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_G){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT_EPSO){DIMENSION="DIMENSIONLESS";}
  //
/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/PART/BRICK,/PART/TETRA4,/PART/LINEAR_3D);
      ADD(PART,"Parts");
    }
*/
}

//File format
FORMAT(Keyword971)
{
    COMMENT("$      MID       RHO         E        PR         T        HC        VP");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,PR,LSD_MAT52_T,LSD_MAT52_HC,LSD_MAT_VP);

    COMMENT("$    ALPHA         N         A         Q         G      EPS0");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_ALPHA,LSDYNA_N,LSD_MAT_A,LSD_MAT_Q,LSD_G,LSD_MAT_EPSO);
}
