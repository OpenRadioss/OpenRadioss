//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 244
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    E                                       = VALUE(FLOAT,  "Youngs modulus");
    LSD_AL                                  = VALUE(FLOAT,  "weight %");
    LSD_ALPHA                               = VALUE(FLOAT,  "Material constant");
    LSD_AS                                  = VALUE(FLOAT,  "weight %");
    LSD_AUST                                = VALUE(FLOAT,  "sets initial amount of austenite");
    LSD_BAIN                                = VALUE(FLOAT,  "sets initial amount of austenite");
    LSD_BO                                  = VALUE(FLOAT,  "weight %");
    LSD_BS                                  = VALUE(FLOAT,  "Manual start temperature Bainite");
    LSD_C                                   = VALUE(FLOAT,  "weight %");
    LSD_CO                                  = VALUE(FLOAT,  "weight %");
    LSD_CR                                  = VALUE(FLOAT,  "weight %");
    LSD_CRSH                                = VALUE(INT,  "switch for material model");
    LSD_CU                                  = VALUE(FLOAT,  "weight %");
    LSD_DTCRIT                              = VALUE(FLOAT,  "Critical cooling rate");
    LSD_EXPA                                = VALUE(FLOAT,  "grain growth parameter");
    LSD_EXPB                                = VALUE(FLOAT,  "grain growth parameter");
    LSD_FEAR                                = VALUE(FLOAT,  "sets initial amount of austenite");
    LSD_FERR                                = VALUE(FLOAT,  "sets initial amount of austenite");
    LSD_FS                                  = VALUE(FLOAT,  "Manual start temperature Ferrite");
    LSD_GRA                                 = VALUE(FLOAT,  "grain growth parameter");
    LSD_GRAIN                               = VALUE(FLOAT,  "ASTM grain size number");
    LSD_GRB                                 = VALUE(FLOAT,  "grain growth parameter");
    LSD_GRCC                                = VALUE(FLOAT,  "grain growth parameter");
    LSD_GRCM                                = VALUE(FLOAT,  "grain growth parameter");
    LSD_GRK                                 = VALUE(FLOAT,  "Growth parameter");
    LSD_GRQR                                = VALUE(FLOAT,  "Grain growth activation energy");
    LSD_HEAT                                = VALUE(INT,  "Switch for heating algorithms");
    LSD_HEATN                               = VALUE(FLOAT,  "Grain growth parameter");
    LSD_KFER                                = VALUE(FLOAT,  "Correction factor");
    LSD_KPER                                = VALUE(FLOAT,  "Correction factor");
    LSD_LAT1                                = VALUE(FLOAT,  "Latent heat for the decomposition");
    LSD_LAT5                                = VALUE(FLOAT,  "Latent heat for the decomposition");
    LSD_LCE                                 = VALUE(FUNCT,  "Temp. dependent Youngs modulus");
    LSD_LCEPS23                             = VALUE(FUNCT,  "plastic strain vs activation energy");
    LSD_LCEPS4                              = VALUE(FUNCT,  "plastic strain vs activation energy");
    LSD_LCEPS5                              = VALUE(FUNCT,  "martensite start temp. vs plastic strain");
    LSD_LCH4                                = VALUE(FUNCT,  "Vicker hardness vs temp. for Bainite hardness");
    LSD_LCH5                                = VALUE(FUNCT,  "Vicker hardness vs temp. for Martensite hardness");
    LSD_LCHEAT                              = VALUE(FUNCT,  "Switch between cooling and heating");
    LSD_LCLAT1                              = VALUE(FUNCT,  "Curve ID or Table ID");
    LSD_LCLAT5                              = VALUE(FUNCT,  "Curve ID or Table ID");
    LSD_LCNu                                = VALUE(FUNCT,  "Temp. dependent Poisson ratio");
    LSD_LCSTRC                              = VALUE(FUNCT,  "Effective strain rate parameter");
    LSD_LCSTRP                              = VALUE(FUNCT,  "Effective strain rate parameter");
    LSD_LCTH1                               = VALUE(FUNCT,  "thermal expansion coefficient");
    LSD_LCTH5                               = VALUE(FUNCT,  "thermal expansion coefficient");
    LSD_LCY1                                = VALUE(FUNCT,  "yield stress vs plastic strain");
    LSD_LCY2                                = VALUE(FUNCT,  "yield stress vs plastic strain");
    LSD_LCY3                                = VALUE(FUNCT,  "yield stress vs plastic strain");
    LSD_LCY4                                = VALUE(FUNCT,  "yield stress vs plastic strain");
    LSD_LCY5                                = VALUE(FUNCT,  "yield stress vs plastic strain");
    LSD_MART                                = VALUE(FLOAT,  "sets initial amount of austenite");
    LSD_MN                                  = VALUE(FLOAT,  "weight %");
    LSD_MO                                  = VALUE(FLOAT,  "weight %");
    LSD_MS                                  = VALUE(FLOAT,  "Manual start temperature Martensite");
    LSD_MSIG                                = VALUE(FLOAT,  "Describes the increase of martensite start temp.");
    LSD_NI                                  = VALUE(FLOAT,  "weight %");
    LSD_P                                   = VALUE(FLOAT,  "weight %");
    LSD_PHASE                               = VALUE(INT,  "Switch for middle phases");
    LSD_PLMEM2                              = VALUE(FLOAT,  "Memory coefficient");
    LSD_PLMEM3                              = VALUE(FLOAT,  "Memory coefficient");
    LSD_PLMEM4                              = VALUE(FLOAT,  "Memory coefficient");
    LSD_PLMEM5                              = VALUE(FLOAT,  "Memory coefficient");
    LSD_PS                                  = VALUE(FLOAT,  "Manual start temperature Pearlite");
    LSD_QR2                                 = VALUE(FLOAT,  "Activation energy/R");
    LSD_QR3                                 = VALUE(FLOAT,  "Activation energy/R");
    LSD_QR4                                 = VALUE(FLOAT,  "Activation energy/R");
    LSD_REACT                               = VALUE(INT,  "Flag for advanced reaction kinetics");
    LSD_SI                                  = VALUE(FLOAT,  "weight %");
    LSD_STRC                                = VALUE(FLOAT,  "Effective strain rate");
    LSD_STRP                                = VALUE(FLOAT,  "Effective strain rate");
    LSD_TABTH                               = VALUE(FUNCT,  "thermal expansion coefficient");
    LSD_TAU1                                = VALUE(FLOAT,  "grain growth parameter");
    LSD_TAU2                                = VALUE(FLOAT,  "grain growth parameter");
    LSD_TEMPER                              = VALUE(INT,  "Flag for tempering input");
    LSD_THEXP1                              = VALUE(FLOAT,  "Coefficient of thermal expansion");
    LSD_THEXP5                              = VALUE(FLOAT,  "Coefficient of thermal expansion");
    LSD_TI                                  = VALUE(FLOAT,  "weight %");
    LSD_TOFBA                               = VALUE(FLOAT,  "Number of degrees");
    LSD_TOFFE                               = VALUE(FLOAT,  "Number of degrees");
    LSD_TOFPE                               = VALUE(FLOAT,  "Number of degrees");
    LSD_TREF                                = VALUE(FLOAT,  "Reference temperature");
    LSD_TSAMP                               = VALUE(FLOAT,  "Sampling interval for temperature rate");
    LSD_TUNIT                               = VALUE(FLOAT,  "No. of time units/hr");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    LSD_V                                   = VALUE(FLOAT,  "weight %");
    LSD_W                                   = VALUE(FLOAT,  "weight %");
    Nu                                      = VALUE(FLOAT,  "Poissons ratio");
    Rho                                     = VALUE(FLOAT,  "Material density");
    optionE                                 = VALUE(INT,  "optionE");
    optionHEAT                              = VALUE(INT,  "optionHEAT");
    optionLAT1                              = VALUE(INT,  "optionLAT1");
    optionLAT5                              = VALUE(INT,  "optionLAT5");
    optionNu                                = VALUE(INT,  "optionNu");
    optionSTRC                              = VALUE(INT,  "optionSTRC");
    optionSTRP                              = VALUE(INT,  "optionSTRP");
    optionTABTH                             = VALUE(INT,  "optionTABTH");
    IO_FLAG                                 = VALUE(INT, "io flag");
    _HMCOMMENTSFLAG                         = VALUE(INT, "Write HM Comments");
    TITLE                                   = VALUE(STRING, "Title");
    EncTypeEnumField                        = VALUE(INT,  "Type");
    RegTypeEnumField                        = VALUE(INT,  "Type");
    
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    E                                       = 119;
    LSD_AL                                  = 7622;
    LSD_ALPHA                               = 1651;
    LSD_AS                                  = 7623;
    LSD_AUST                                = 7647;
    LSD_BAIN                                = 7650;
    LSD_BO                                  = 7612;
    LSD_BS                                  = 7664;
    LSD_C                                   = 1519;
    LSD_CO                                  = 7613;
    LSD_CR                                  = 7615;
    LSD_CRSH                                = 7602;
    LSD_CU                                  = 7620;
    LSD_DTCRIT                              = 7671;
    LSD_EXPA                                = 7657;
    LSD_EXPB                                = 7658;
    LSD_FEAR                                = 7649;
    LSD_FERR                                = 7648;
    LSD_FS                                  = 3009;
    LSD_GRA                                 = 7655;
    LSD_GRAIN                               = 7635;
    LSD_GRB                                 = 7656;
    LSD_GRCC                                = 7659;
    LSD_GRCM                                = 7660;
    LSD_GRK                                 = 7652;
    LSD_GRQR                                = 7653;
    LSD_HEAT                                = 7604;
    LSD_HEATN                               = 7661;
    LSD_KFER                                = 7610;
    LSD_KPER                                = 7611;
    LSD_LAT1                                = 7629;
    LSD_LAT5                                = 7630;
    LSD_LCE                                 = 7674;
    LSD_LCEPS23                             = 7666;
    LSD_LCEPS4                              = 7667;
    LSD_LCEPS5                              = 7668;
    LSD_LCH4                                = 7669;
    LSD_LCH5                                = 7670;
    LSD_LCHEAT                              = 7678;
    LSD_LCLAT1                              = 7680;
    LSD_LCLAT5                              = 7682;
    LSD_LCNu                                = 7676;
    LSD_LCSTRC                              = 7684;
    LSD_LCSTRP                              = 7686;
    LSD_LCTH1                               = 7627;
    LSD_LCTH5                               = 7628;
    LSD_LCY1                                = 7605;
    LSD_LCY2                                = 7606;
    LSD_LCY3                                = 7607;
    LSD_LCY4                                = 7608;
    LSD_LCY5                                = 7609;
    LSD_MART                                = 7651;
    LSD_MN                                  = 7617;
    LSD_MO                                  = 7614;
    LSD_MS                                  = 368;
    LSD_MSIG                                = 7665;
    LSD_NI                                  = 7616;
    LSD_P                                   = 7621;
    LSD_PHASE                               = 7603;
    LSD_PLMEM2                              = 7639;
    LSD_PLMEM3                              = 7640;
    LSD_PLMEM4                              = 7641;
    LSD_PLMEM5                              = 7642;
    LSD_PS                                  = 7663;
    LSD_QR2                                 = 7632;
    LSD_QR3                                 = 7633;
    LSD_QR4                                 = 7634;
    LSD_REACT                               = 7645;
    LSD_SI                                  = 7618;
    LSD_STRC                                = 7643;
    LSD_STRP                                = 7644;
    LSD_TABTH                               = 7631;
    LSD_TAU1                                = 7654;
    LSD_TAU2                                = 7662;
    LSD_TEMPER                              = 7646;
    LSD_THEXP1                              = 7625;
    LSD_THEXP5                              = 7626;
    LSD_TI                                  = 7624;
    LSD_TOFBA                               = 7638;
    LSD_TOFFE                               = 7636;
    LSD_TOFPE                               = 7637;
    LSD_TREF                                = 1643;
    LSD_TSAMP                               = 7672;
    LSD_TUNIT                               = 7601;
    LSD_TitleOpt                            = 90;
    LSD_V                                   = 7619;
    LSD_W                                   = 1638;
    Nu                                      = 120;
    Num_Comments                            = 3101;
    Rho                                     = 118;
    optionE                                 = 7673;
    optionHEAT                              = 7677;
    optionLAT1                              = 7679;
    optionLAT5                              = 7681;
    optionNu                                = 7675;
    optionSTRC                              = 7683;
    optionSTRP                              = 7685;
    optionTABTH                             = 7687;
    IO_FLAG                                 = -1;
    EncTypeEnumField                        = 5828;
    RegTypeEnumField                        = 5827;
    TITLE                                   = -1;
}

DEFAULTS(COMMON)
{

    LSD_EXPA    = 1.0;
    LSD_EXPB    = 1.0;
    LSD_GRA    = 3.11;
    LSD_GRB    = 7520.;
    LSD_HEATN    = 1.0;
    LSD_TAU1    = 2.08e+8;
    LSD_TAU2    = 4.806;
    LSD_TREF    = 273.15;
    LSD_TUNIT    = 3600.;
}

CHECK(COMMON)
{
}

DRAWABLES(COMMON) {
 public:
   MASS_DENSITY=SCALAR(Rho);
   YOUNG_MODULUS=SCALAR(E);
   POISSON_RATIO=SCALAR(Nu);
 private:
   G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
   C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public: 
   //SOUND_SPEED is speed for ISDO = 0 and 1
   SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
   SOUND_SPEED_ISDO_2      = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
   SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_UHS_STEEL");
     RADIO(CommentEnumField)
     {
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(Rho)                                {DIMENSION="density";}
     FLAG(optionE);
     if(optionE == FALSE)
     {
        SCALAR(E)                               {DIMENSION="pressure";}
     }
     if(optionE == TRUE)
     {
        DATA(LSD_LCE);
     }
     FLAG(optionNu);
     if(optionNu == FALSE)
     {
        SCALAR(Nu)                              {DIMENSION="DIMENSIONLESS";}
     }
     if(optionNu == TRUE)
     {
        DATA(LSD_LCNu);
     }
 optional:
     SCALAR(LSD_TUNIT)                          {DIMENSION="DIMENSIONLESS";}
     RADIO(LSD_CRSH)
     {
        ADD(0, "0: Hot stamping simulation");
        ADD(1, "1: Hot stamping simulation into other simulation");
     }
     RADIO(LSD_PHASE)
     {
        ADD(0, "0: All phases ACTIVE");
        ADD(1, "1: Pearlite and bainite ACTIVE");
        ADD(2, "2: Bainite ACTIVE");
        ADD(3, "3: Ferrite and pearlite ACTIVE");
        ADD(4, "4: Ferrite and bainite ACTIVE");
        ADD(5, "5: NO ACTIVE middle phases");
     }
     FLAG(optionHEAT);
     if(optionHEAT == FALSE)
     {
         RADIO(LSD_HEAT)
         {
            ADD(0, "0: Heating is not activated. No transformation in Autstenite is possible");
            ADD(1, "1: Heating is not activated. Only transformation in Autstenite is possible");
            ADD(2, "2: Automatic switching between cooling and heating");
         }     
     }
     if(optionHEAT == TRUE)
     {
        DATA(LSD_LCHEAT);
     }
     DATA(LSD_LCY1);
     DATA(LSD_LCY2);
     DATA(LSD_LCY3);
     DATA(LSD_LCY4);
     DATA(LSD_LCY5);
     SCALAR(LSD_KFER)                           {DIMENSION="DIMENSIONLESS";} 
     SCALAR(LSD_KPER)                           {DIMENSION="DIMENSIONLESS";} 
     SCALAR(LSD_BO)                             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_C)                              {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_CO)                             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MO)                             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_CR)                             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_NI)                             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MN)                             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_SI)                             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_V)                              {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_W)                              {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_CU)                             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_P)                              {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_AL)                             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_AS)                             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_TI)                             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_THEXP1)                         {DIMENSION="coefficient_of_linear_inflation";}
     SCALAR(LSD_THEXP5)                         {DIMENSION="coefficient_of_linear_inflation";}
     DATA(LSD_LCTH1);
     DATA(LSD_LCTH5);
     SCALAR(LSD_TREF)                           {DIMENSION="k";}
     FLAG(optionLAT1);
     if(optionLAT1 == FALSE)
     {
        SCALAR(LSD_LAT1)                        {DIMENSION="pressure";}
     }
     if(optionLAT1 == TRUE)
     {
        DATA(LSD_LCLAT1);
     }
     FLAG(optionLAT5);
     if(optionLAT5 == FALSE)
     {
        SCALAR(LSD_LAT5)                        {DIMENSION="pressure";}
     }
     if(optionLAT5 == TRUE)
     {
        DATA(LSD_LCLAT5);
     }

     FLAG(optionTABTH);
     if(optionTABTH == FALSE || optionTABTH == TRUE)
     {
        DATA(LSD_TABTH);
     }
/*     if(optionTABTH == TRUE)
     {
        DATA(LSD_TABTH);
     }
*/
     SCALAR(LSD_QR2)                            {DIMENSION="k";}
     SCALAR(LSD_QR3)                            {DIMENSION="k";}
     SCALAR(LSD_QR4)                            {DIMENSION="k";}
     SCALAR(LSD_ALPHA)                          {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_GRAIN)                          {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_TOFFE)                          {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_TOFPE)                          {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_TOFBA)                          {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_PLMEM2)                         {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_PLMEM3)                         {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_PLMEM4)                         {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_PLMEM5)                         {DIMENSION="DIMENSIONLESS";} 
     FLAG(optionSTRC);
     if(optionSTRC == FALSE)
     {
        SCALAR(LSD_STRC)                        {DIMENSION="DIMENSIONLESS";}
     }
     if(optionSTRC == TRUE)
     {
        DATA(LSD_LCSTRC);
     }
     FLAG(optionSTRP);
     if(optionSTRP == FALSE)
     {
        SCALAR(LSD_STRP)                        {DIMENSION="DIMENSIONLESS";}
     }
     if(optionSTRP == TRUE)
     {
        DATA(LSD_LCSTRP);
     }
     RADIO(LSD_REACT)
     {
        ADD(0, "0: Active");
        ADD(1, "1: Inactive");
     }
     RADIO(LSD_TEMPER)
     {
        ADD(0, "0: Active");
        ADD(1, "1: Inactive");
     }
     if(optionHEAT == FALSE && LSD_HEAT == 1)
     {
         SCALAR(LSD_AUST)                       {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_FERR)                       {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_FEAR)                       {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_BAIN)                       {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_MART)                       {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_GRK)                        {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_GRQR)                       {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_TAU1)                       {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_GRA)                        {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_GRB)                        {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_EXPA)                       {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_EXPB)                       {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_GRCC)                       {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_GRCM)                       {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_HEATN)                      {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_TAU2)                       {DIMENSION="DIMENSIONLESS";}
     }
     if(LSD_REACT == 1)
     {
         SCALAR(LSD_FS)                         {DIMENSION="k";}
         SCALAR(LSD_PS)                         {DIMENSION="k";}
         SCALAR(LSD_BS)                         {DIMENSION="k";}
         SCALAR(LSD_MS)                         {DIMENSION="k";}
         SCALAR(LSD_MSIG);
         DATA(LSD_LCEPS23);
         DATA(LSD_LCEPS4);
         DATA(LSD_LCEPS5);
     }
     if(LSD_TEMPER == 1)
     {
         DATA(LSD_LCH4);
         DATA(LSD_LCH5);
         SCALAR(LSD_DTCRIT)                     {DIMENSION="DIMENSIONLESS";}
         SCALAR(LSD_TSAMP)                      {DIMENSION="DIMENSIONLESS";}
     }
/*
   graphical SUPPORT("Part(s) to which material is applied")
   {
      OBJECTS = (/PART/BRICK,/PART/TETRA4,/PART/TETRA10);
      ADD(PART,"Parts");
   }
*/
}

// File format
FORMAT(Keyword971_R6.1) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    //
    COMMENT("$      MID       RHO         E        PR     TUNIT      CRSH     PHASE      HEAT");
    CARD("%10d%10lg%10lg%10lg%10lg%10d%10d%10d",_ID_,Rho,SCALAR_OR_FUNCTION(optionE,E,LSD_LCE),SCALAR_OR_FUNCTION(optionNu,Nu,LSD_LCNu),LSD_TUNIT,LSD_CRSH,LSD_PHASE,SCALAR_OR_OBJECT(optionHEAT,LSD_HEAT,LSD_LCHEAT));
    //
    COMMENT("$     LCY1      LCY2      LCY3      LCY4      LCY5      KFER      KPER         B");
    CARD("%10d%10d%10d%10d%10d%10lg%10lg%10lg",LSD_LCY1,LSD_LCY2,LSD_LCY3,LSD_LCY4,LSD_LCY5,LSD_KFER,LSD_KPER,LSD_BO);
    //
    COMMENT("$        C        Co        Mo        Cr        Ni        Mn        Si         V");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_C,LSD_CO,LSD_MO,LSD_CR,LSD_NI,LSD_MN,LSD_SI,LSD_V);
    //
    COMMENT("$        W        Cu         P        Al        As        Ti");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_W,LSD_CU,LSD_P,LSD_AL,LSD_AS,LSD_TI);
    //
    COMMENT("$   THEXP1    THEXP5     LCTH1     LCTH5      TREF      LAT1      LAT5     TABTH");
    CARD("%10lg%10lg%10d%10d%10lg%10lg%10lg%10d",LSD_THEXP1,LSD_THEXP5,LSD_LCTH1,LSD_LCTH5,LSD_TREF,SCALAR_OR_FUNCTION(optionLAT1,LSD_LAT1,LSD_LCLAT1),SCALAR_OR_FUNCTION(optionLAT5,LSD_LAT5,LSD_LCLAT5),FLAGGED_OBJECT(LSD_TABTH,optionTABTH));
    //
    COMMENT("$      QR2       QR3       QR4     ALPHA     GRAIN     TOFFE     TOFPE     TOFBA");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_QR2,LSD_QR3,LSD_QR4,LSD_ALPHA,LSD_GRAIN,LSD_TOFFE,LSD_TOFPE,LSD_TOFBA);
    //
    COMMENT("$   PLMEM2    PLMEM3    PLMEM4    PLMEM5      STRC      STRP     REACT    TEMPER");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10d%10d",LSD_PLMEM2,LSD_PLMEM3,LSD_PLMEM4,LSD_PLMEM5,SCALAR_OR_OBJECT(optionSTRC,LSD_STRC,LSD_LCSTRC),SCALAR_OR_OBJECT(optionSTRP,LSD_STRP,LSD_LCSTRP),LSD_REACT,LSD_TEMPER);   
    //
    if(optionHEAT == FALSE && LSD_HEAT == 1)
    {
        //
        COMMENT("$     AUST      FERR      PEAR      BAIN      MART       GRK      GRQR      TAU1");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_AUST,LSD_FERR,LSD_FEAR,LSD_BAIN,LSD_MART,LSD_GRK,LSD_GRQR,LSD_TAU1);
        //
        COMMENT("$      GRA       GRB      EXPA      EXPB      GRCC      GRCM     HEATN      TAU2");
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_GRA,LSD_GRB,LSD_EXPA,LSD_EXPB,LSD_GRCC,LSD_GRCM,LSD_HEATN,LSD_TAU2);
        //
    }
    if(LSD_REACT == 1)
    {        
        //
        COMMENT("$       FS        PS        BS        BS      MSIG   LCEPS23    LCEPS4    LCEPS5");
        CARD("%10lg%10lg%10lg%10lg%10lg%10d%10d%10d",LSD_FS,LSD_PS,LSD_BS,LSD_MS,LSD_MSIG,LSD_LCEPS23,LSD_LCEPS4,LSD_LCEPS5);
        //
    }
    if(LSD_TEMPER == 1)
    {    
        //
        COMMENT("$     LCH4      LCH5    DTCRIT     TSAMP");
        CARD("%10d%10d%10lg%10lg",LSD_LCH4,LSD_LCH5,LSD_DTCRIT,LSD_TSAMP);
        //
    }
}
