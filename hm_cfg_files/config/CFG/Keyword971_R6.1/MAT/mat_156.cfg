//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//  *MAT_MUSCLE: Material law 156
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt                      = VALUE(INT, "Title");
    CommentEnumField                  = VALUE(INT, "User Comments");
    Num_Comments                      = SIZE("No. of comment lines");
    Comments                          = ARRAY[Num_Comments](STRING, "Entity Comments");

    // Card 1
    Rho                                     = VALUE(FLOAT, "Material density in the initial undeformed configuration");
    LSD_SNO                                 = VALUE(FLOAT, "Initial stretch ratio");
    LSD_SRM                                 = VALUE(FLOAT, "Maximum strain rate");
    LSD_PIS                                 = VALUE(FLOAT, "Peak isometric stress corresponding to the dimensionless value of unity in the dimensionless stress versus strain function");
    LSD_SSM                                 = VALUE(FLOAT, "Strain when the dimensionless stress versus strain function, SSP below, reaches its maximum stress value");
    LSD_CER                                 = VALUE(FLOAT, "Constant governing exponential rise of SSP");
    LSD_DMP                                 = VALUE(FLOAT, "Damping constant (stress * time units)");

    // Card 2
    FLAG_ALM                                = VALUE(INT, "Activation level vs. time");
    CURVE_ALM                               = VALUE(FUNCT, "Absolute value gives load curve ID");
    LSD_ALM                                 = VALUE(FLOAT, "Constant value of ALM is used");

    FLAG_SFR                                = VALUE(INT, "Scale factor for strain rate maximum vs. activation level, a(t)");
    CURVE_SFR                               = VALUE(FUNCT, "Absolute value gives load curve ID");
    LSD_SFR                                 = VALUE(FLOAT, "Constant value of 1.0 is used");
  
    FLAG_SVS                                = VALUE(INT, "Active dimensionless tensile stress vs. the stretch ratio, l/lorig");
    CURVE_SVS                               = VALUE(FUNCT, "Absolute value gives load curve ID");
    LSD_SVS                                 = VALUE(FLOAT, "Constant value of 1.0 is used");

    FLAG_SVR                                = VALUE(INT, "Active dimensionless tensile stress vs. the normalized strain rate");
    CURVE_SVR                               = VALUE(FUNCT, "Absolute value gives load curve ID");
    LSD_SVR                                 = VALUE(FLOAT, "Constant value of 1.0 is used");

    FLAG_SSP                                = VALUE(INT, "Isometric dimensionless stress varies with stretch ratio, l/lorig for the parallel elastic elements");
    CURVE_SSP                               = VALUE(FUNCT, "Absolute value gives load curve ID or table ID");
    LSD_SSP                                 = VALUE(FLOAT, "Isometric dimensionless stress (if 0. exponential function is used, >0 constant value of 0.0 is used");

}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Num_Comments                            = 3101;
    LSD_TitleOpt                            = 90;
    Comments                                = 3100;

    // Card 1
    Rho                                     = 118;
    LSD_SNO                                 = 9016;
    LSD_SRM                                 = 9017;
    LSD_PIS                                 = 9018;
    LSD_SSM                                 = 9019;
    LSD_CER                                 = 9020;
    LSD_DMP                                 = 9021;

    // Card 2
    FLAG_ALM                                = 9027;
    CURVE_ALM                               = 9032;
    LSD_ALM                                 = 9022;

    FLAG_SFR                                = 9028;
    CURVE_SFR                               = 9033;
    LSD_SFR                                 = 9023;

    FLAG_SVS                                = 9029;
    CURVE_SVS                               = 9034;
    LSD_SVS                                 = 9024;

    FLAG_SVR                                = 9030;
    CURVE_SVR                               = 9035;
    LSD_SVR                                 = 9025;

    FLAG_SSP                                = 9031;
    CURVE_SSP                               = 9036;
    LSD_SSP                                 = 9026;

}

DEFAULTS(COMMON)
{
    // Card 2
    LSD_ALM                                 = 0.0;
    LSD_SFR                                 = 1.0;
    LSD_SVS                                 = 1.0;
    LSD_SVR                                 = 1.0;
    LSD_SSP                                 = 0.0;
}

CHECK(COMMON)
{
  LSD_ALM >= 0;
  LSD_SFR >= 0;
  LSD_SVS >= 0;
  LSD_SVR >= 0;
  LSD_SSP >= 0;
}

DRAWABLES(COMMON)
{  
  public:  
  MATERIAL_DENSITY=SCALAR(Rho);   
}

GUI(COMMON)
{
     ASSIGN(KEYWORD_STR, "*MAT_MUSCLE");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 

    // Card 1
    SCALAR(Rho)                             { DIMENSION = "density"; }
    SCALAR(LSD_SNO)                         { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(LSD_SRM)                         { DIMENSION = "strain_rate"; }
    SCALAR(LSD_PIS)                         { DIMENSION = "pressure"; }
    SCALAR(LSD_SSM)                         { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(LSD_CER)                         { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(LSD_DMP)                         { DIMENSION = "damping"; }

    //Card 2
     FLAG(FLAG_ALM, "Flag_ALM");
     if(FLAG_ALM == 0)
     {
        SCALAR(LSD_ALM)                     { DIMENSION = "DIMENSIONLESS"; }
     }
     else
     {
        FUNCTION(CURVE_ALM)
        {
            X_TITLE = "Time"; X_DIMENSION = "t";
            Y_TITLE = "Activation level"; Y_DIMENSION = "DIMENSIONLESS";
        }
     }

     FLAG(FLAG_SFR, "Flag_SFR");
     if(FLAG_SFR == 0)
     {
        SCALAR(LSD_SFR)                     { DIMENSION = "DIMENSIONLESS"; }
     }
     else
     {
        FUNCTION(CURVE_SFR)
        {
            X_TITLE = "Activation level"; X_DIMENSION = "DIMENSIONLESS";
            Y_TITLE = "Scale factor for strain rate maximum"; Y_DIMENSION = "DIMENSIONLESS";
        }
     }
  
     FLAG(FLAG_SVS, "Flag_SVS");
     if(FLAG_SVS == 0)
     {
        SCALAR(LSD_SVS)                     { DIMENSION = "DIMENSIONLESS"; }
     }
     else
     {
        FUNCTION(CURVE_SVS)
        {
            X_TITLE = "Stretch ratio"; X_DIMENSION = "DIMENSIONLESS";
            Y_TITLE = "Tensile stress"; Y_DIMENSION = "DIMENSIONLESS";
        }
     }

     FLAG(FLAG_SVR, "Flag_SVR");
     if(FLAG_SVR == 0)
     {
        SCALAR(LSD_SVR)                     { DIMENSION = "DIMENSIONLESS"; }
     }
     else
     {
        FUNCTION(CURVE_SVR)
        {
            X_TITLE = "Normalized strain rate"; X_DIMENSION = "DIMENSIONLESS";
            Y_TITLE = "Tensile stress"; Y_DIMENSION = "DIMENSIONLESS";
        }
     }

     FLAG(FLAG_SSP, "Flag_SSP");
     if(FLAG_SSP == 0)
     {
        SCALAR(LSD_SSP)                     { DIMENSION = "DIMENSIONLESS"; }
     }
     else
     {
        FUNCTION(CURVE_SSP)
        {
            X_TITLE = "Stretch ratio"; X_DIMENSION = "DIMENSIONLESS";
            Y_TITLE = "Isometric dimensionless stress"; Y_DIMENSION = "DIMENSIONLESS";
        }
     }
}

// File format
FORMAT(Keyword971_R6.1)
{
  
    COMMENT("$      MID        RO       SNO       SRM       PIS       SSM       CER       DMP");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg", _ID_, Rho, LSD_SNO, LSD_SRM, LSD_PIS, LSD_SSM, LSD_CER, LSD_DMP);

    COMMENT("$      ALM       SFR       SVS       SVR       SSP");
    CARD("%10lg%10lg%10lg%10lg%10lg", SCALAR_OR_FUNCTION(FLAG_ALM,LSD_ALM,CURVE_ALM), SCALAR_OR_FUNCTION(FLAG_SFR,LSD_SFR,CURVE_SFR), SCALAR_OR_FUNCTION(FLAG_SVS,LSD_SVS,CURVE_SVS), SCALAR_OR_FUNCTION(FLAG_SVR,LSD_SVR,CURVE_SVR), SCALAR_OR_FUNCTION(FLAG_SSP,LSD_SSP,CURVE_SSP));
}
