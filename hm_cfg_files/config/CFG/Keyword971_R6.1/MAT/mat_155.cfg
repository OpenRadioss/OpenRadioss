//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 155
//

ATTRIBUTES(COMMON)
{
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    ArrayCount                              = SIZE("ArrayCount");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    LSD_MATL85_PR                           = VALUE(FLOAT,  "Poissons ratio");
    E                                       = VALUE(FLOAT,  "Youngs modulus");
    LSDYNA_K                                = VALUE(FLOAT,  "Optional bulk modulus for the viscoelastic material");
    LSD_MATL124_LCSRC                       = VALUE(FUNCT,  "strain rate scaling effect on yield stress when compression");
    LSD_MATL124_LCSRT                       = VALUE(FUNCT,  "strain rate scaling effect on yield stress in tension");
    LSD_MATL124_PCUTC                       = VALUE(FLOAT,  "Pressure cut-off in compression");
    LSD_MATL124_PCUTF                       = VALUE(FLOAT,  "Pressure cut-off flag");
    LSD_MATL124_PCUTT                       = VALUE(FLOAT,  "Pressure cut-off in tension");
    LSD_MATL124_SRFLAG                      = VALUE(FLOAT,  "Formulation for rate effects");
    LSD_MATL85_C                            = VALUE(FLOAT,  "Strain rate parameter");
    LSD_MATL85_Fail                         = VALUE(FLOAT,  "Failure flag");
    LSD_MATL85_LCIDC                        = VALUE(FUNCT,  "yield stress versus effective plastic strain in compression");
    LSD_MATL85_LCIDT                        = VALUE(FUNCT,  "yield stress versus effective plastic strain in tension");
    LSD_MATL85_P                            = VALUE(FLOAT,  "Strain rate parameter");
    LSD_MATL85_PC                           = VALUE(FLOAT,  "Compressive mean stress");
    LSD_MATL85_PT                           = VALUE(FLOAT,  "Tensile mean stress");
    LSD_MATL85_TDEL                         = VALUE(FLOAT,  "Minimum time step size for automatic element deletion");
    LSD_MAT_Beta                            = ARRAY[ArrayCount](FLOAT,  "Optional shear decay constant");
    LSD_MAT_Gi                              = ARRAY[ArrayCount](FLOAT,  "Optional shear relaxation modulus");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    ArrayCount                              = 2246;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSDYNA_K                                = 124;
    LSD_MATL124_LCSRC                       = 5346;
    LSD_MATL124_LCSRT                       = 5347;
    LSD_MATL124_PCUTC                       = 5349;
    LSD_MATL124_PCUTF                       = 5351;
    LSD_MATL124_PCUTT                       = 5350;
    LSD_MATL124_SRFLAG                      = 5348;
    LSD_MATL85_C                            = 2808;
    E                                       = 119;
    LSD_MATL85_Fail                         = 2810;
    LSD_MATL85_LCIDC                        = 2812;
    LSD_MATL85_LCIDT                        = 2813;
    LSD_MATL85_P                            = 2809;
    LSD_MATL85_PC                           = 2814;
    LSD_MATL85_PR                           = 2807;
    LSD_MATL85_PT                           = 2815;
    Rho                                     = 118;
    LSD_MATL85_TDEL                         = 2811;
    LSD_MAT_Beta                            = 355;
    LSD_MAT_Gi                              = 354;
    LSD_TitleOpt                            = 90;
    Num_Comments                            = 3101;
}

DEFAULTS(COMMON)
{
    LSD_MATL85_Fail    = 1.000e+20;
}

DRAWABLES(COMMON)
{
 public:  
      MASS_DENSITY=SCALAR(Rho);
      YOUNG_MODULUS=SCALAR(E);
      POISSON_RATIO=SCALAR(LSD_MATL85_PR);
      STRAIN_RATE_PARAMETER_C=SCALAR(LSD_MATL85_C);
      STRAIN_RATE_PARAMETER_P=SCALAR(LSD_MATL85_P);
      FAILURE_FLAG=SCALAR(LSD_MATL85_Fail);
      MINIMUM_TIME_STEP_SIZE=SCALAR(LSD_MATL85_TDEL); 
      COMPRESSIVE_MEAN_STRESS=SCALAR(LSD_MATL85_PC);
      TENSILE_MEAN_STRESS=SCALAR(LSD_MATL85_PT);
      PRESSURE_CUTOFF_IN_COMPRESSION=SCALAR(LSD_MATL124_PCUTC);
      PRESSURE_CUTOFF_IN_TENSION=SCALAR(LSD_MATL124_PCUTT);  
      BULK_MODULUS=SCALAR(LSDYNA_K);  
 public:
 //SOUND_SPEED is speed for ISDO = 0 and 1
      SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
      SOUND_SPEED_ISDO_2      = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
      G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
      C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
      public:
      SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5); 
}

GUI(COMMON)
{
     ASSIGN(KEYWORD_STR, "*MAT_PLASTICITY_COMPRESSION_TENSION_EOS");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
     SCALAR(Rho)                                {DIMENSION="density";}
     SCALAR(E)                                  {DIMENSION="pressure";}
     SCALAR(LSD_MATL85_PR)                      {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MATL85_C)                       {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MATL85_P)                       {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MATL85_Fail)                    {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_MATL85_TDEL)                    {DIMENSION="t";}
     DATA(LSD_MATL85_LCIDC);
     DATA(LSD_MATL85_LCIDT);
     DATA(LSD_MATL124_LCSRC);
     DATA(LSD_MATL124_LCSRT);
     RADIO(LSD_MATL124_SRFLAG)
     {
        ADD(0.0, "0.0: Total strain rate");
        ADD(1.0, "1.0: Deviatoric strain rate");
     }
     SCALAR(LSD_MATL85_PC)                      {DIMENSION="pressure";}
     SCALAR(LSD_MATL85_PT)                      {DIMENSION="pressure";}
     SCALAR(LSD_MATL124_PCUTC)                  {DIMENSION="pressure";}
     SCALAR(LSD_MATL124_PCUTT)                  {DIMENSION="pressure";}
     RADIO(LSD_MATL124_PCUTF)
     {
        ADD(0.0, "0.0: Inactive");
        ADD(1.0, "1.0: Active");
     }
     SCALAR(LSDYNA_K)                           {DIMENSION="pressure";}
     SIZE_RADIO(ArrayCount)
     {
        ADD(0,  "OFF");
        ADD(1,  " 1");
        ADD(2,  " 2");
        ADD(3,  " 3");
        ADD(4,  " 4");
        ADD(5,  " 5");
        ADD(6,  " 6");
      }
      ARRAY(ArrayCount,"")
      {
         SCALAR(LSD_MAT_Gi)                     {DIMENSION="pressure";}
         SCALAR(LSD_MAT_Beta)                   {DIMENSION="DIMENSIONLESS";}
      }
/*
      graphical SUPPORT("Part(s) to which material is applied") 
      {
        OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D);
        ADD(COMPONENT,"Parts");
      }
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID       RHO         E        PR         C         P      FAIL      TDEL");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,LSD_MATL85_PR,LSD_MATL85_C,LSD_MATL85_P,LSD_MATL85_Fail,LSD_MATL85_TDEL);
    //
    COMMENT("$    LCIDC     LCIDT     LCSRC     LCSRT    SRFLAG");
    CARD("%10d%10d%10d%10d%10lg",LSD_MATL85_LCIDC,LSD_MATL85_LCIDT,LSD_MATL124_LCSRC,LSD_MATL124_LCSRT,LSD_MATL124_SRFLAG);
    //
    COMMENT("$       PC        PT     PCUTC     PCUTT     PCUTF");
    CARD("%10lg%10lg%10lg%10lg%10lg",LSD_MATL85_PC,LSD_MATL85_PT,LSD_MATL124_PCUTC,LSD_MATL124_PCUTT,LSD_MATL124_PCUTF);
    //
    COMMENT("$        K");
    CARD("%10lg",LSDYNA_K);

    if(ArrayCount > 0)
    {
        COMMENT("$       GI     BETAI");
    }
    FREE_CARD_LIST(ArrayCount)
    {
        CARD("%10lg%10lg",LSD_MAT_Gi,LSD_MAT_Beta);
    }
}

FORMAT(Keyword971_R6.1) 
{
    //
    COMMENT("$      MID       RHO         E        PR         C         P      FAIL      TDEL");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,LSD_MATL85_PR,LSD_MATL85_C,LSD_MATL85_P,LSD_MATL85_Fail,LSD_MATL85_TDEL);
    //
    COMMENT("$    LCIDC     LCIDT     LCSRC     LCSRT    SRFLAG");
    CARD("%10d%10d%10d%10d%10lg",LSD_MATL85_LCIDC,LSD_MATL85_LCIDT,LSD_MATL124_LCSRC,LSD_MATL124_LCSRT,LSD_MATL124_SRFLAG);
    //
    COMMENT("$       PC        PT     PCUTC     PCUTT     PCUTF");
    CARD("%10lg%10lg%10lg%10lg%10lg",LSD_MATL85_PC,LSD_MATL85_PT,LSD_MATL124_PCUTC,LSD_MATL124_PCUTT,LSD_MATL124_PCUTF);
    //
    COMMENT("$        K");
    CARD("%10lg",LSDYNA_K);

    if(ArrayCount > 0)
    {
        COMMENT("$       GI     BETAI");
    }
    FREE_CARD_LIST(ArrayCount)
    {
        CARD("%10lg%10lg",LSD_MAT_Gi,LSD_MAT_Beta);
    }
}
