//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- mat_129.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    LSD_MID                                 = VALUE(MATERIAL,      "Material identification");
    LSD_RO                                  = VALUE(FLOAT,         "Mass density");
    LSD_K                                   = VALUE(FLOAT,         "Bulk modulus");
    LSD_C                                   = VALUE(FLOAT,         "Material coefficient");
    LSD_DELTA1                              = VALUE(FLOAT,         "Delta, material coefficient");
    LSD_ALPHA                               = VALUE(FLOAT,         "Alpha, material coefficient");
    LSDYNA_BETA                             = VALUE(FLOAT,         "Beta, material coefficient");

    //Card 2
    LSD_MAT_C1                              = VALUE(FLOAT,         "Material coefficient");
    LSD_MAT_C2                              = VALUE(FLOAT,         "Material coefficient");
    LSD_LCID                                = VALUE(CURVE,         "Optional load curve ID of relaxation curve");
    LSD_MAT_TRAMP                           = VALUE(FLOAT,         "Optional ramp time for loading");
    LSD_NT                                  = SIZE (               "Number of Prony series terms in optional fit");

    //Card 3
    LSD_Gi                                  = ARRAY[LSD_NT](FLOAT, "Optional shear relaxation modulus for the ith term");
    LSD_BETAi                               = ARRAY[LSD_NT](FLOAT, "Optional decay constant if ith term");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING,        "Solver Keyword");
    LSD_TitleOpt                            = VALUE(INT,           "Title Option");

    TITLE                                   = VALUE(STRING,        "Title");
    _opt                                    = VALUE(STRING,        "Option");
    IO_FLAG                                 = VALUE(INT,           "IO_FLAG");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    LSD_MID                                 = 2458;
    LSD_RO                                  = 3054;
    LSD_K                                   = 1656;
    LSD_C                                   = 1519;
    LSD_DELTA1                              = 880;
    LSD_ALPHA                               = 1651;
    LSDYNA_BETA                             = 148;

    //Card 2
    LSD_MAT_C1                              = 1139;
    LSD_MAT_C2                              = 1140;
    LSD_LCID                                = 45;
    LSD_MAT_TRAMP                           = 3004;
    LSD_NT                                  = 5227;

    //Card 3
    LSD_Gi                                  = 8378;
    LSD_BETAi                               = 8379;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;
    LSD_TitleOpt                            = 90;

    TITLE                                   = -1;
    _opt                                    = -1;
    IO_FLAG                                 = -1;
}

CHECK(COMMON)
{
    LSD_NT                                  > 0;
    LSD_NT                                  <= 6;
}

DEFAULTS(COMMON)
{
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*MAT_LUNG_TISSUE");

    FLAG(LSD_TitleOpt);

    if(LSD_TitleOpt == 1)
    {
        ASSIGN(KEYWORD_STR, "_TITLE");
        SCALAR(TITLE, "TITLE")                  { DIMENSION = "DIMENSIONLESS" ; }
    }

    DATA(  LSD_MID,        "MID");
    SCALAR(LSD_RO,         "RO")                { DIMENSION = "density" ; }
    SCALAR(LSD_K,          "K")                 { DIMENSION = "VISCOUS BULK MODULUS" ; }
    SCALAR(LSD_C,          "C")                 { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(LSD_DELTA1,     "DELTA")             { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(LSD_ALPHA,      "ALPHA")             { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(LSDYNA_BETA,    "BETA")              { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(LSD_MAT_C1,     "C1")                { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(LSD_MAT_C2,     "C2")                { DIMENSION = "DIMENSIONLESS" ; }
    DATA(  LSD_LCID,       "LCID");
    SCALAR(LSD_MAT_TRAMP,  "TRAMP")             { DIMENSION = "t" ; }
    SIZE(  LSD_NT,         "NT");
    ARRAY( LSD_NT,         "NT")
    {
        SCALAR(LSD_Gi,     "Gi")                { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(LSD_BETAi,  "BETAi")             { DIMENSION = "DIMENSIONLESS" ; }
    }
}

FORMAT(Keyword971_R6.1)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);

    if(IO_FLAG == 0)
    {
        if(LSD_TitleOpt == 0)
        {
            HEADER("*MAT_LUNG_TISSUE");
        }
        else
        {
            HEADER("*MAT_LUNG_TISSUE_TITLE");
        }
    }
    else
    {
        HEADER("*MAT_LUNG_TISSUE%s", _opt);
        ASSIGN(LSD_TitleOpt, _FIND(_opt, "_TITLE"), IMPORT);
    }

    if(IO_FLAG == 0 && LSD_TitleOpt == 1)
    {
        CARD("%-80s", TITLE);
    }

    //Card 1
    COMMENT("$      MID        RO         K         C     DELTA     ALPHA      BETA");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg", LSD_MID, LSD_RO,LSD_K, LSD_C, LSD_DELTA1, LSD_ALPHA, LSDYNA_BETA);

    //Card 2
    COMMENT("$       C1        C2      LCID     TRAMP        NT");
    CARD("%10lg%10lg%10d%10lg%10d", LSD_MAT_C1, LSD_MAT_C2, LSD_LCID, LSD_MAT_TRAMP, LSD_NT);

    //Card 3
    if(LSD_NT > 0 && LSD_NT <= 6)
    {
        FREE_CARD_LIST(LSD_NT)
        {
            COMMENT("$       Gi     BETAi");
            CARD("%10lg%10lg", LSD_Gi, LSD_BETAi);
        }
    }
}