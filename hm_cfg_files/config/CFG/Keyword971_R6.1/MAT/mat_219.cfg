//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 219
//
ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    LSDYNA_A1                               = VALUE(FLOAT, "Components of vector a");
    LSDYNA_A2                               = VALUE(FLOAT, "Components of vector a");
    LSDYNA_A3                               = VALUE(FLOAT, "Components of vector a");
    LSDYNA_BETA                             = VALUE(FLOAT,  "Material angle");
    LSDYNA_D1                               = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_D2                               = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_D3                               = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_EA                               = VALUE(FLOAT,  "Youngs modulus in a-direction");
    LSDYNA_EB                               = VALUE(FLOAT,  "Youngs modulus in b-direction");
    LSDYNA_GAB                              = VALUE(FLOAT,  "in-plane shear modulus");
    LSDYNA_PRBA                             = VALUE(FLOAT,  "minor in-plane Poisson’s ratio");
    LSDYNA_PRCB                             = VALUE(FLOAT,  "Poissons ratio in plane of isotropy");
    LSDYNA_V1                               = VALUE(FLOAT,  "Components of vector v");
    LSDYNA_V2                               = VALUE(FLOAT,  "Components of vector v");
    LSDYNA_V3                               = VALUE(FLOAT,  "Components of vector v");
    LSDYNA_XP                               = VALUE(FLOAT,  "Coordinates of point p");
    LSDYNA_YP                               = VALUE(FLOAT,  "Coordinates of point p");
    LSDYNA_ZP                               = VALUE(FLOAT,  "Coordinates of point p");
    LSD_NODE1                               = VALUE(NODE,  "Node");
    LSD_NODE3                               = VALUE(NODE,  "Node1");
    LSD_NODE4                               = VALUE(NODE,  "Node2");
    LSD_NODE5                               = VALUE(NODE,  "Node1");
    LSD_NODE6                               = VALUE(NODE,  "Node2");
    LSD_NODE7                               = VALUE(NODE,  "Node1");
    LSD_NODE8                               = VALUE(NODE,  "Node2");
    LSD_SYSTEM                              = VALUE(SYSTEM,  "Coordinate system ID number");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    MAT219_ANGLE1                           = VALUE(FLOAT,  "Rotation of layers W.R.T material axes");
    MAT219_ANGLE2                           = VALUE(FLOAT,  "Rotation of layers W.R.T material axes");
    MAT219_ANGLE3                           = VALUE(FLOAT,  "Rotation of layers W.R.T material axes");
    MAT219_ANGLE4                           = VALUE(FLOAT,  "Rotation of layers W.R.T material axes");
    MAT219_ANGLE5                           = VALUE(FLOAT,  "Rotation of layers W.R.T material axes");
    MAT219_ANGLE6                           = VALUE(FLOAT,  "Rotation of layers W.R.T material axes");
    MAT219_ANGLE7                           = VALUE(FLOAT,  "Rotation of layers W.R.T material axes");
    MAT219_ANGLE8                           = VALUE(FLOAT,  "Rotation of layers W.R.T material axes");
    MAT219_ERODE                            = VALUE(INT,  "Erosion Flag");
    MAT219_ERPAR1                           = VALUE(FLOAT,  "Erosion parameter");
    MAT219_ERPAR2                           = VALUE(FLOAT,  "Erosion parameter");
    MAT219_IDELC                            = VALUE(FLOAT,  "Initiation strain for delamination");
    MAT219_IDELT                            = VALUE(FLOAT,  "IDELT");
    MAT219_IFIBC                            = VALUE(FLOAT,  "Initiation strain for damage in the fiber");
    MAT219_IFIBT                            = VALUE(FLOAT,  "Initiation strain for damage in the fiber");
    MAT219_ILOCC                            = VALUE(FLOAT,  "Initiation strain for the anti-locking mechanism");
    MAT219_ILOCT                            = VALUE(FLOAT,  "Initiation strain for the anti-locking mechanism");
    MAT219_IMATC                            = VALUE(FLOAT,  "Initiation strain for damage in matrix");
    MAT219_IMATT                            = VALUE(FLOAT,  "Initiation strain for damage in matrix");
    MAT219_NFREQ                            = VALUE(INT,  "Number of time steps");
    MAT219_NLAYER                           = VALUE(INT,  "No. of layers in sub-laminate excluding symmetry");
    MAT219_R1                               = VALUE(FLOAT,  "Non-local averaging radius");
    MAT219_R2                               = VALUE(FLOAT,  "Non-local averaging radius");
    MAT219_RESIDS                           = VALUE(FLOAT,  "Residual strength for layer damage");
    MAT219_SDELC                            = VALUE(FLOAT,  "Delamination strain");
    MAT219_SDELT                            = VALUE(FLOAT,  "SDELT");
    MAT219_SFIBC                            = VALUE(FLOAT,  "Saturation strain for damage in the fiber");
    MAT219_SFIBT                            = VALUE(FLOAT,  "Saturation strain for damage in the fiber");
    MAT219_SLOCC                            = VALUE(FLOAT,  "Saturation strain for anti-locking mechanism under compression");
    MAT219_SLOCT                            = VALUE(FLOAT,  "Saturation strain for the anti-locking mechanism");
    MAT219_SMATC                            = VALUE(FLOAT,  "Saturation strain for damage in matrix");
    MAT219_SMATT                            = VALUE(FLOAT,  "Saturation strain for damage in matrix");
    MAT221_MACF                             = VALUE(INT,  "Material axes");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    axisOptFlag                             = VALUE(INT,  "Anisotropy axis definition");
    AOPT_SKEW_FLAG                          = VALUE(INT,  "Flag for defining coordinate system ID number");
    IO_FLAG                                 = VALUE(INT, "io flag");
    _HMCOMMENTSFLAG                         = VALUE(INT, "Write HM Comments");
    TITLE                                   = VALUE(STRING, "Title");
    EncTypeEnumField                        = VALUE(INT,  "Type");
    RegTypeEnumField                        = VALUE(INT,  "Type");
    LOC_AOPT                                = VALUE(INT, "");
    //empty_string                       = VALUE(STRING, "Used as a local variable for free format case");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSDYNA_A1                               = 139;
    LSDYNA_A2                               = 140;
    LSDYNA_A3                               = 141;
    LSDYNA_BETA                             = 148;
    LSDYNA_D1                               = 145;
    LSDYNA_D2                               = 146;
    LSDYNA_D3                               = 147;
    LSDYNA_EA                               = 126;
    LSDYNA_EB                               = 127;
    LSDYNA_GAB                              = 132;
    LSDYNA_PRBA                             = 129;
    LSDYNA_PRCB                             = 131;
    LSDYNA_V1                               = 142;
    LSDYNA_V2                               = 143;
    LSDYNA_V3                               = 144;
    LSDYNA_XP                               = 136;
    LSDYNA_YP                               = 137;
    LSDYNA_ZP                               = 138;
    LSD_NODE1                               = 86;
    LSD_NODE3                               = 2802;
    LSD_NODE4                               = 2803;
    LSD_NODE5                               = 5078;
    LSD_NODE6                               = 5079;
    LSD_NODE7                               = 5080;
    LSD_NODE8                               = 5081;
    LSD_SYSTEM                              = 184;
    LSD_TitleOpt                            = 90;
    MAT219_ANGLE1                           = 7203;
    MAT219_ANGLE2                           = 7204;
    MAT219_ANGLE3                           = 7205;
    MAT219_ANGLE4                           = 7206;
    MAT219_ANGLE5                           = 7207;
    MAT219_ANGLE6                           = 7208;
    MAT219_ANGLE7                           = 7209;
    MAT219_ANGLE8                           = 7210;
    MAT219_ERODE                            = 7227;
    MAT219_ERPAR1                           = 7228;
    MAT219_ERPAR2                           = 7229;
    MAT219_IDELC                            = 7222;
    MAT219_IDELT                            = 7214;
    MAT219_IFIBC                            = 7220;
    MAT219_IFIBT                            = 7212;
    MAT219_ILOCC                            = 7221;
    MAT219_ILOCT                            = 7213;
    MAT219_IMATC                            = 7219;
    MAT219_IMATT                            = 7211;
    MAT219_NFREQ                            = 7202;
    MAT219_NLAYER                           = 7201;
    MAT219_R1                               = 7231;
    MAT219_R2                               = 7232;
    MAT219_RESIDS                           = 7230;
    MAT219_SDELC                            = 7226;
    MAT219_SDELT                            = 7218;
    MAT219_SFIBC                            = 7224;
    MAT219_SFIBT                            = 7216;
    MAT219_SLOCC                            = 7225;
    MAT219_SLOCT                            = 7217;
    MAT219_SMATC                            = 7223;
    MAT219_SMATT                            = 7215;
    MAT221_MACF                             = 1451;
    Num_Comments                            = 3101;
    Rho                                     = 118;
    axisOptFlag                             = 4946;
    AOPT_SKEW_FLAG                          = -1;
    EncTypeEnumField                        = 5828;
    RegTypeEnumField                        = 5827;
    TITLE                                   = -1;
    LOC_AOPT                                = -1;
    IO_FLAG                                 = -1;
    //empty_string                       = -1;
}

DRAWABLES(COMMON) {
       public:
       MASS_DENSITY=SCALAR(Rho);
       EA = SCALAR(LSDYNA_EA);
       EB = SCALAR(LSDYNA_EB);
       PRBA = SCALAR(LSDYNA_PRBA);
       PRCB = SCALAR(LSDYNA_PRCB);
       YOUNG_MODULUS=MAX(EA,EB);
       POISSON_RATIO=MAX(PRBA,PRCB);
               //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED= EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
  private:
  G = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1 = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
  public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

DEFAULTS(COMMON)
{
}

CHECK(COMMON)
{}

GUI(COMMON)
{
     ASSIGN(KEYWORD_STR, "*MAT_CODAM2");
     RADIO(CommentEnumField)
     {
         //////ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
mandatory:
     SCALAR(Rho)                        {DIMENSION="density";} 
     SCALAR(LSDYNA_EA)                  {DIMENSION="pressure";} 
     SCALAR(LSDYNA_EB)                  {DIMENSION="pressure";} 
     SCALAR(LSDYNA_PRBA)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_PRCB)                {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_GAB)                 {DIMENSION="pressure";}
optional:
     SCALAR(MAT219_NLAYER);
     SCALAR(MAT219_R1)                  {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_R2)                  {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_NFREQ)               {DIMENSION="DIMENSIONLESS";}
     RADIO(axisOptFlag)
     {
        ADD(1, "0: Locally orthotropic: axis given by nodes 1,2 and 4");
        ADD(2, "1: Locally orthotropic: a-dir given by a point and global location of element center");
        ADD(3, "2: Globally orthotropic: axis given by vectors");
        ADD(4, "3: Locally orthotropic: axis given by rotating the material axes by an angle BETA");
        ADD(5, "4: Locally orhtotropic: cylindrical coordinate given by vector v and point P");
        ADD(6, "Pick System");
     }
     if(axisOptFlag == 6)
     {
        DATA(LSD_SYSTEM);
     }
     if(axisOptFlag == 2 || axisOptFlag == 5)
     {
        DATA(LSD_NODE1);
        ASSIGN(LSDYNA_XP,[@getentityvalue(nodes,$LSD_NODE1,x)],FALSE);
        ASSIGN(LSDYNA_YP,[@getentityvalue(nodes,$LSD_NODE1,y)],FALSE);
        ASSIGN(LSDYNA_ZP,[@getentityvalue(nodes,$LSD_NODE1,z)],FALSE);
        //SCALAR(LSDYNA_XP)               {DIMENSION="l";}
        //SCALAR(LSDYNA_YP)               {DIMENSION="l";}
        //SCALAR(LSDYNA_ZP)               {DIMENSION="l";}
     }
     if(axisOptFlag == 3)
     {
        DATA(LSD_NODE3);
        DATA(LSD_NODE4);
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],FALSE);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],FALSE);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],FALSE);
        //SCALAR(LSDYNA_A1)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_A2)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_A3)               {DIMENSION="DIMENSIONLESS";}
        DATA(LSD_NODE7);                
        DATA(LSD_NODE8);                
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],FALSE);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],FALSE);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],FALSE);
        //SCALAR(LSDYNA_D1)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_D2)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_D3)               {DIMENSION="DIMENSIONLESS";}
     }
     if(axisOptFlag == 4 || axisOptFlag == 5)
     {
        DATA(LSD_NODE5);
        DATA(LSD_NODE6);
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],FALSE);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],FALSE);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],FALSE);
        //SCALAR(LSDYNA_V1)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_V2)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_V3)               {DIMENSION="DIMENSIONLESS";}        
     }  
     if(axisOptFlag == 4)
     {
         SCALAR(LSDYNA_BETA)            {DIMENSION="a";}
     }
     RADIO(MAT221_MACF)
     {
        ADD(1, "1: No Change");
        ADD(2, "2: Switch material axes a and b");
        ADD(3, "3: Switch material axes a and c");
        ADD(4, "4: Switch material axes b and c");
     }
     SCALAR(MAT219_ANGLE1)              {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_ANGLE2)              {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_ANGLE3)              {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_ANGLE4)              {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_ANGLE5)              {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_ANGLE6)              {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_ANGLE7)              {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_ANGLE8)              {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_IMATT)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_IFIBT)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_ILOCT)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_IDELT)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_SMATT)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_SFIBT)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_SLOCT)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_SDELT)               {DIMENSION="DIMENSIONLESS";} 
     SCALAR(MAT219_IMATC)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_IFIBC)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_ILOCC)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_IDELC)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_SMATC)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_SFIBC)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_SLOCC)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_SDELC)               {DIMENSION="DIMENSIONLESS";}
     RADIO(MAT219_ERODE)
     {
        ADD(0, "0: Erosion is turned off");
        ADD(1, "1: Non-local strain based erosion criterion");
        ADD(2, "2: Local strain based erosion criterion");
        ADD(3, "3: Use both ERODE =1 annd ERODE = 2 criteria");
     }
     SCALAR(MAT219_ERPAR1)              {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_ERPAR2)              {DIMENSION="DIMENSIONLESS";}
     SCALAR(MAT219_RESIDS)              {DIMENSION="DIMENSIONLESS";}
/*
       graphical SUPPORT("Part(s) to which material is applied") {
          OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/TETRA10,/COMPONENT/SHELL,/COMPONENT/TSHELL);
          ADD(COMPONENT,"Parts");
       }  
*/
}

// File format
FORMAT(Keyword971_R6.1) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, IMPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, EXPORT);
    //
    if(LSD_NODE1 != NONE)
    {
        ASSIGN(LSDYNA_XP,[@getentityvalue(nodes,$LSD_NODE1,x)],EXPORT);
        ASSIGN(LSDYNA_YP,[@getentityvalue(nodes,$LSD_NODE1,y)],EXPORT);
        ASSIGN(LSDYNA_ZP,[@getentityvalue(nodes,$LSD_NODE1,z)],EXPORT);
    }
    if(LSD_NODE4 != NONE && LSD_NODE3 != NONE)
    {
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],EXPORT);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],EXPORT);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],EXPORT);
    }
    if(LSD_NODE8 != NONE && LSD_NODE7 != NONE)
    {
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],EXPORT);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],EXPORT);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],EXPORT);
    }
    if(LSD_NODE6 != NONE && LSD_NODE5 != NONE)
    {
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],EXPORT);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],EXPORT);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],EXPORT);
    }
    //
    if(axisOptFlag == 1 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,0,EXPORT);
    }
    else if(axisOptFlag == 2 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,1,EXPORT);
    }
    else if(axisOptFlag == 3 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,2,EXPORT);
    }
    else if(axisOptFlag == 4 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,3,EXPORT);
    }
    else if(axisOptFlag == 5 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,4,EXPORT);
    }
    //
    COMMENT("$      MID       RHO        EA        EB                PRBA                PRCB");
    CARD("%10d%10lg%10lg%10lg%10s%10lg%10s%10lg",_ID_,Rho,LSDYNA_EA,LSDYNA_EB,_BLANK_,LSDYNA_PRBA,_BLANK_,LSDYNA_PRCB);
    //
    COMMENT("$      GAB                        NLAYER        R1        R2     NFREQ");
    CARD("%10lg%10s%10s%10d%10lg%10lg%10d",LSDYNA_GAB,_BLANK_,_BLANK_,MAT219_NLAYER,MAT219_R1,MAT219_R2,MAT219_NFREQ);
    //
    COMMENT("$       XP        YP        ZP        A1        A2        A3      AOPT");
    if(IO_FLAG == 2)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 6)
        {
            if(axisOptFlag == 2 || axisOptFlag == 5)
            {
                CARD("%10lg%10lg%10lg%10s%10s%10s%10d",LSDYNA_XP,LSDYNA_YP,LSDYNA_ZP,_BLANK_,_BLANK_,_BLANK_,LOC_AOPT);
            }
            else if(axisOptFlag == 3)
            {
                CARD("%10s%10s%10s%10lg%10lg%10lg%10d",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3,LOC_AOPT);
            }
            else
            {
                CARD("%10s%10s%10s%10s%10s%10s%10d",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LOC_AOPT);
            }
        }
        else
        {
            CARD("%10s%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM));
        }
    }
    CARD_PREREAD("%10s%10s%10s%10s%10s%10s%10d",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LOC_AOPT);
    if(LOC_AOPT == 0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,1,IMPORT);
    }
    else if(LOC_AOPT == 1 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,2,IMPORT);
    }
    else if(LOC_AOPT == 2 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,3,IMPORT);
    }
    else if(LOC_AOPT == 3 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,4,IMPORT);
    }
    else if(LOC_AOPT == 4 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,5,IMPORT);
    }
    if(IO_FLAG == 1)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 6)
        {
            if(axisOptFlag == 2 || axisOptFlag == 5)
            {
                CARD("%10lg%10lg%10lg%10s%10s%10s%10d",LSDYNA_XP,LSDYNA_YP,LSDYNA_ZP,_BLANK_,_BLANK_,_BLANK_,LOC_AOPT);
            }
            else if(axisOptFlag == 3)
            {
                CARD("%10s%10s%10s%10lg%10lg%10lg%10d",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3,LOC_AOPT);
            }
            else
            {
                CARD("%10s%10s%10s%10s%10s%10s%10d",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LOC_AOPT);
            }
        }
        else
        {
            CARD("%10s%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM));
            ASSIGN(axisOptFlag, 6, IMPORT);
        }
    }
    //
    COMMENT("$       V1        V2        V3        D1        D2        D3      BETA      MACF"); 
    if(axisOptFlag == 4)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg%10d",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,LSDYNA_BETA,MAT221_MACF);
    }
    else if(axisOptFlag == 3)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg%10s%10d",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3,_BLANK_,MAT221_MACF);
    }
    else if(axisOptFlag == 5)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10s%10d",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,_BLANK_,MAT221_MACF);
    }
    else
    {
        CARD("%10s%10s%10s%10s%10s%10s%10s%10d",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,MAT221_MACF);
    }
    //
    COMMENT("$   ANGLE1    ANGLE2    ANGLE3    ANGLE4    ANGLE5    ANGLE6    ANGLE7    ANGLE8"); 
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",MAT219_ANGLE1,MAT219_ANGLE2,MAT219_ANGLE3,MAT219_ANGLE4,MAT219_ANGLE5,MAT219_ANGLE6,MAT219_ANGLE7,MAT219_ANGLE8);
    //
    COMMENT("$    IMATT     IFIBT     ILOCT     IDELT     SMATT     SFIBT     SLOCT     SDELT"); 
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",MAT219_IMATT,MAT219_IFIBT,MAT219_ILOCT,MAT219_IDELT,MAT219_SMATT,MAT219_SFIBT,MAT219_SLOCT,MAT219_SDELT);
    //
    COMMENT("$    IMATC     IFIBC     ILOCC     IDELC     SMATC     SFIBC     SLOCC     SDELC"); 
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",MAT219_IMATC,MAT219_IFIBC,MAT219_ILOCC,MAT219_IDELC,MAT219_SMATC,MAT219_SFIBC,MAT219_SLOCC,MAT219_SDELC);
    //
    COMMENT("$    ERODE    ERPAR1    ERPAR2    RESIDS");
    CARD("%10d%10lg%10lg%10lg",MAT219_ERODE,MAT219_ERPAR1,MAT219_ERPAR2,MAT219_RESIDS);
    //

}