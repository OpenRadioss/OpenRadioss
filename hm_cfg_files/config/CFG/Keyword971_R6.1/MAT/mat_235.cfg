//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 235
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    LSDYNA_A1                               = VALUE(FLOAT, "Components of vector a");
    LSDYNA_A2                               = VALUE(FLOAT, "Components of vector a");
    LSDYNA_A3                               = VALUE(FLOAT, "Components of vector a");
    LSDYNA_D1                               = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_D2                               = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_D3                               = VALUE(FLOAT,  "Components of vector d");
    LSDYNA_V1                               = VALUE(FLOAT,  "Components of vector v");
    LSDYNA_V2                               = VALUE(FLOAT,  "Components of vector v");
    LSDYNA_V3                               = VALUE(FLOAT,  "Components of vector v");
    LSD_MAT_XP                              = VALUE(FLOAT,  "Coordinates of point p");
    LSD_MAT_YP                              = VALUE(FLOAT,  "Coordinates of point p");
    LSD_MAT_ZP                              = VALUE(FLOAT,  "Coordinates of point p");
    LSD_NODE1                               = VALUE(NODE,  "Node");
    LSD_NODE3                               = VALUE(NODE,  "Node1");
    LSD_NODE4                               = VALUE(NODE,  "Node2");
    LSD_NODE5                               = VALUE(NODE,  "Node1");
    LSD_NODE6                               = VALUE(NODE,  "Node2");
    LSD_NODE7                               = VALUE(NODE,  "Node1");
    LSD_NODE8                               = VALUE(NODE,  "Node2");
    LSD_SYSTEM                              = VALUE(SYSTEM,  "coordinate system ID number");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    MATL234_E1                              = VALUE(FLOAT,  "Youngs modulus of the yarn in axial-direction");
    MATL234_E2                              = VALUE(FLOAT,  "Youngs modulus of the yarn in transverse-direction");
    MATL234_G12                             = VALUE(FLOAT,  "shear modulus of the yarns");
    MATL234_G23                             = VALUE(FLOAT,  "transverse shear modulus of the yarns");
    MATL234_THI                             = VALUE(FLOAT,  "Initial brade angle");
    MATL234_THL                             = VALUE(FLOAT,  "Yarn locking angle");
    MATL234_VMB                             = VALUE(FLOAT,  "Damping coef. of element B");
    MATL235_ATLR                            = VALUE(FLOAT,  "Angle tolerance for locking");
    MATL235_BFI                             = VALUE(FLOAT,  "Initial undulation angle in fill direction");
    MATL235_BWI                             = VALUE(FLOAT,  "Initial undulation angle in warp direction");
    MATL235_CNST                            = VALUE(FLOAT,  "Reorientation damping constant");
    MATL235_DSCF                            = VALUE(FLOAT,  "Discount factor");
    MATL235_FFLG                            = VALUE(FLOAT,  "Flag for stress or strain based failure");
    MATL235_TRS                             = VALUE(FLOAT,  "Transverse shear modulus");
    MATL235_V12                             = VALUE(FLOAT,  "Poissons ratio");
    MATL235_V23                             = VALUE(FLOAT,  "Transverse Poissons ratio");
    MATL235_VME                             = VALUE(FLOAT,  "Viscous modulus for normal strain rate");
    MATL235_XT                              = VALUE(FLOAT,  "Stress or strain to failure");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    axisOptFlag                             = VALUE(INT,  "Anisotropy axis definition");
    AOPT_SKEW_FLAG                          = VALUE(INT,  "Flag for defining coordinate system ID number");
    IO_FLAG                                 = VALUE(INT, "io flag");
    _HMCOMMENTSFLAG                         = VALUE(INT, "Write HM Comments");
    TITLE                                   = VALUE(STRING, "Title");
    EncTypeEnumField                        = VALUE(INT,  "Type");
    RegTypeEnumField                        = VALUE(INT,  "Type");
    LOC_AOPT                                = VALUE(FLOAT, "");
    //empty_string                       = VALUE(STRING, "Used as a local variable for free format case");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    LSDYNA_A1                               = 139;
    LSDYNA_A2                               = 140;
    LSDYNA_A3                               = 141;
    LSDYNA_D1                               = 145;
    LSDYNA_D2                               = 146;
    LSDYNA_D3                               = 147;
    LSDYNA_V1                               = 142;
    LSDYNA_V2                               = 143;
    LSDYNA_V3                               = 144;
    LSD_MAT_XP                              = 338;
    LSD_MAT_YP                              = 339;
    LSD_MAT_ZP                              = 340;
    LSD_NODE1                               = 86;
    LSD_NODE3                               = 2802;
    LSD_NODE4                               = 2803;
    LSD_NODE5                               = 5078;
    LSD_NODE6                               = 5079;
    LSD_NODE7                               = 5080;
    LSD_NODE8                               = 5081;
    LSD_SYSTEM                              = 184;
    LSD_TitleOpt                            = 90;
    MATL234_E1                              = 6433;
    MATL234_E2                              = 6434;
    MATL234_G12                             = 6435;
    MATL234_G23                             = 6449;
    MATL234_THI                             = 6438;
    MATL234_THL                             = 6437;
    MATL234_VMB                             = 6447;
    MATL235_ATLR                            = 6459;
    MATL235_BFI                             = 6455;
    MATL235_BWI                             = 6456;
    MATL235_CNST                            = 6458;
    MATL235_DSCF                            = 6457;
    MATL235_FFLG                            = 6462;
    MATL235_TRS                             = 6461;
    MATL235_V12                             = 6452;
    MATL235_V23                             = 6453;
    MATL235_VME                             = 6460;
    MATL235_XT                              = 6454;
    Num_Comments                            = 3101;
    Rho                                     = 118;
    axisOptFlag                             = 4946;
    AOPT_SKEW_FLAG                          = -1;
    EncTypeEnumField                        = 5828;
    RegTypeEnumField                        = 5827;
    TITLE                                   = -1;
    LOC_AOPT                                = -1;
    IO_FLAG                                 = -1;
    //empty_string                       = -1;
}

DRAWABLES(COMMON) {
       public:
       MASS_DENSITY=SCALAR(Rho);
       E1 = SCALAR(MATL234_E1);
       E2 = SCALAR(MATL234_E2);
       YOUNG_MODULUS=MAX(E1,E2);
       POISSON_RATIO=SCALAR(MATL235_V12);
               //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED= EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
  private:
  G = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1 = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
  public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}


GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_MICROMECHANICS_DRY_FABRIC");
     RADIO(CommentEnumField)
     {
         //////ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
     SCALAR(Rho)                        {DIMENSION="density";} 
     SCALAR(MATL234_E1)                 {DIMENSION="pressure";} 
     SCALAR(MATL234_E2)                 {DIMENSION="pressure";}
     SCALAR(MATL234_G12)                {DIMENSION="pressure";}
     SCALAR(MATL234_G23)                {DIMENSION="pressure";}
     SCALAR(MATL235_V12)                {DIMENSION="DIMENSIONLESS";} 
     SCALAR(MATL235_V23)                {DIMENSION="DIMENSIONLESS";} 
     SCALAR(MATL235_XT)                 {DIMENSION="DIMENSIONLESS";}
     SCALAR(MATL234_THI)                {DIMENSION="a";}
     SCALAR(MATL234_THL)                {DIMENSION="a";}
     SCALAR(MATL235_BFI)                {DIMENSION="a";}
     SCALAR(MATL235_BWI)                {DIMENSION="a";}
     SCALAR(MATL235_DSCF)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MATL235_CNST)               {DIMENSION="DIMENSIONLESS";}
     SCALAR(MATL235_ATLR)               {DIMENSION="a";}
     SCALAR(MATL234_VMB)                {DIMENSION="pressure";}
     SCALAR(MATL235_VME)                {DIMENSION="pressure";}
     SCALAR(MATL235_TRS)                {DIMENSION="pressure";}
     SCALAR(MATL235_FFLG);
     RADIO(axisOptFlag)
     {
        ADD(1, "0.0: Locally orthotropic: axis given by nodes 1,2 and 4");
        ADD(2, "1.0: Locally orthotropic: a-dir given by a point and global location of element center");
        ADD(3, "2.0: Globally orthotropic: axis given by vectors");
        ADD(4, "3.0: Locally orthotropic: axis given by rotating the material axes by an angle BETA");
        ADD(5, "By System");
     }
     if(axisOptFlag == 5)
     {
        DATA(LSD_SYSTEM);
     }
     if(axisOptFlag == 2)
     {
        DATA(LSD_NODE1);
        ASSIGN(LSD_MAT_XP,[@getentityvalue(nodes,$LSD_NODE1,x)],FALSE);
        ASSIGN(LSD_MAT_YP,[@getentityvalue(nodes,$LSD_NODE1,y)],FALSE);
        ASSIGN(LSD_MAT_ZP,[@getentityvalue(nodes,$LSD_NODE1,z)],FALSE);
        //SCALAR(LSD_MAT_XP)               {DIMENSION="l";}
        //SCALAR(LSD_MAT_YP)               {DIMENSION="l";}
        //SCALAR(LSD_MAT_ZP)               {DIMENSION="l";}
     }
     if(axisOptFlag == 3)
     {
        DATA(LSD_NODE3);
        DATA(LSD_NODE4);
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],FALSE);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],FALSE);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],FALSE);
        //SCALAR(LSDYNA_A1)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_A2)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_A3)               {DIMENSION="DIMENSIONLESS";}
        DATA(LSD_NODE7);                
        DATA(LSD_NODE8);                
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],FALSE);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],FALSE);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],FALSE);
        //SCALAR(LSDYNA_D1)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_D2)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_D3)               {DIMENSION="DIMENSIONLESS";}
     }
     if(axisOptFlag == 4)
     {
        DATA(LSD_NODE5);
        DATA(LSD_NODE6);
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],FALSE);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],FALSE);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],FALSE);
        //SCALAR(LSDYNA_V1)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_V2)               {DIMENSION="DIMENSIONLESS";}
        //SCALAR(LSDYNA_V3)               {DIMENSION="DIMENSIONLESS";}
     }     
/*
     graphical SUPPORT("Part(s) to which material is applied") {
          OBJECTS=(/COMPONENT/SHELL,/COMPONENT/TSHELL);
          ADD(COMPONENT,"Parts");
        } 
*/
}

// File format
FORMAT(Keyword971) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    //
    COMMENT("$      MID       RHO        E1        E2       G12       G23       V12       V23");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,MATL234_E1,MATL234_E2,MATL234_G12,MATL234_G23,MATL235_V12,MATL235_V23);
    //
    COMMENT("$       XT       THI       THL       BFI       BWI      DSCF      CNST      ATLR");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",MATL235_XT,MATL234_THI,MATL234_THL,MATL235_BFI,MATL235_BWI,MATL235_DSCF,MATL235_CNST,MATL235_ATLR);
    //
    COMMENT("$      VMB       VME       TRS");
    CARD("%10lg%10lg%10lg",MATL234_VMB,MATL235_VME,MATL235_TRS);
    //

}
FORMAT(Keyword971_R6.1) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, IMPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, EXPORT);
    if(LSD_NODE4 != NONE && LSD_NODE3 != NONE)
    {
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],EXPORT);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],EXPORT);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],EXPORT);
    }
    if(LSD_NODE8 != NONE && LSD_NODE7 != NONE)
    {
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],EXPORT);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],EXPORT);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],EXPORT);
    }
    if(LSD_NODE1 != NONE)
    {
        ASSIGN(LSD_MAT_XP,[@getentityvalue(nodes,$LSD_NODE1,x)],EXPORT);
        ASSIGN(LSD_MAT_YP,[@getentityvalue(nodes,$LSD_NODE1,y)],EXPORT);
        ASSIGN(LSD_MAT_ZP,[@getentityvalue(nodes,$LSD_NODE1,z)],EXPORT);
    }
    if(LSD_NODE6 != NONE && LSD_NODE5 != NONE)
    {
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],EXPORT);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],EXPORT);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],EXPORT);
    }
    //
    if(axisOptFlag == 1 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,0.0,EXPORT);
    }
    else if(axisOptFlag == 2 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,1.0,EXPORT);
    }
    else if(axisOptFlag == 3 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,2.0,EXPORT);
    }
    else if(axisOptFlag == 4 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,3.0,EXPORT);
    }
    //
    COMMENT("$      MID       RHO        E1        E2       G12       G23       V12       V23");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,MATL234_E1,MATL234_E2,MATL234_G12,MATL234_G23,MATL235_V12,MATL235_V23);
    //
    COMMENT("$       XT       THI       THL       BFI       BWI      DSCF      CNST      ATLR");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",MATL235_XT,MATL234_THI,MATL234_THL,MATL235_BFI,MATL235_BWI,MATL235_DSCF,MATL235_CNST,MATL235_ATLR);
    //
    COMMENT("$      VMB       VME       TRS      FFLG      AOPT");
    if(IO_FLAG == 2)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 5)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",MATL234_VMB,MATL235_VME,MATL235_TRS,MATL235_FFLG,LOC_AOPT);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",MATL234_VMB,MATL235_VME,MATL235_TRS,MATL235_FFLG,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM));
        }
    }
    CARD_PREREAD("%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,LOC_AOPT);
    if(LOC_AOPT == 0.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,1,IMPORT);
    }
    else if(LOC_AOPT == 1.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,2,IMPORT);
    }
    else if(LOC_AOPT == 2.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,3,IMPORT);
    }
    else if(LOC_AOPT == 3.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,4,IMPORT);
    }
    if(IO_FLAG == 1)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 5)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",MATL234_VMB,MATL235_VME,MATL235_TRS,MATL235_FFLG,LOC_AOPT);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",MATL234_VMB,MATL235_VME,MATL235_TRS,MATL235_FFLG,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM));
            ASSIGN(axisOptFlag, 5, IMPORT);
        }
    }  
    //
    COMMENT("$       XP        YP        ZP        A1        A2        A3");
    if(axisOptFlag == 2)
    {
        CARD("%10lg%10lg%10lg",LSD_MAT_XP,LSD_MAT_YP,LSD_MAT_ZP);
    }
    else if(axisOptFlag == 3)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$       V1        V2        V3        D1        D2        D3"); 
    if(axisOptFlag == 4)
    {
        CARD("%10lg%10lg%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3);
    }
    else if(axisOptFlag == 3)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3);
    }
    else
    {
        BLANK;
    }

}
