//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 080 (RAMBERG-OSGOOD) Setup File
// 


ATTRIBUTES(COMMON)
{
    KEYWORD_STR         = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt        = VALUE(INT, "Title");
    CommentEnumField    = VALUE(INT, "User Comments");
    Num_Comments        = SIZE("No. of comment lines");
    Comments            = ARRAY[Num_Comments](STRING, "Entity Comments");
    Rho                 = VALUE(FLOAT, "Mass density");  
    LSD_GAMY            = VALUE(FLOAT,"Reference shear strain (Ry)");
    LSD_TAUY            = VALUE(FLOAT,"Reference shear stress (Ty)");
    LSD_ALPHA           = VALUE(FLOAT,"Stress coefficient (a)");
    LSD_R               = VALUE(FLOAT,"Stress exponent (r)");
    LSD_MAT88_BULK      = VALUE(FLOAT,"Elastic bulk modulus");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR         = 9000;
    CommentEnumField    = 3220;
    Num_Comments        = 3101;
    LSD_TitleOpt        = 90;
    Comments            = 3100;
    Rho                 = 118;
    LSD_GAMY            = 11051;
    LSD_TAUY            = 11049;
    LSD_ALPHA           = 1651;
    LSD_R               = 1166;
    LSD_MAT88_BULK      = 2558;
}

DRAWABLES(COMMON)
{
public:
  MASS_DENSITY=SCALAR(Rho);
  REFERENCE_SHEAR_STRAIN_RY=SCALAR(LSD_GAMY);
  REFERENCE_SHEAR_STRESS_TY=SCALAR(LSD_TAUY);
  // SHEAR_MODULUS =REFERENCE_SHEAR_STRESS_TY
  STRESS_COEFFICIENT_a=SCALAR(LSD_ALPHA);
  STRESS_EXPONENT_r=SCALAR(LSD_R);
  ELASTIC_BULK_MODULUS=SCALAR(LSD_MAT88_BULK);

    YOUNG_MODULUS=EVAL(2*1.463*REFERENCE_SHEAR_STRESS_TY);
    POISSON_RATIO     = EVAL((3.*ELASTIC_BULK_MODULUS-2.*REFERENCE_SHEAR_STRESS_TY)/(6.*ELASTIC_BULK_MODULUS+2.*REFERENCE_SHEAR_STRESS_TY));

  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);

  SOUND_SPEED_SOLID = EVAL(((4*REFERENCE_SHEAR_STRESS_TY/3+ELASTIC_BULK_MODULUS)/MASS_DENSITY)^0.5);


}

GUI(COMMON)
{
  mandatory:
  SCALAR(Rho){DIMENSION="density";}
  SCALAR(LSD_GAMY){DIMENSION="DIMENSIONLESS";}
  SCALAR(LSD_TAUY){DIMENSION="pressure";}
  optional:
  SCALAR(LSD_ALPHA){DIMENSION="pressure";}
  SCALAR(LSD_R){DIMENSION="pressure";}
  SCALAR(LSD_MAT88_BULK){DIMENSION="pressure";}
//
/* 
 graphical SUPPORT("Part(s) to which material is applied") {
 OBJECTS=(/PART/BRICK,/PART/TETRA4,/PART/LINEAR_3D,/PART/BEAM,/PART/SPRING,/PART/TRUSS,/PART/RIVET,/PART/SHELL,/PART/PENTA6,/PART/SHEL16);
 ADD(PART,"Parts");
}
*/
}

//File format
FORMAT(Keyword971)
{
    COMMENT("$      MID       RHO      GAMY      TAUY     ALPHA         R      BULK");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_GAMY,LSD_TAUY,LSD_ALPHA,LSD_R,LSD_MAT88_BULK);
}
