//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//Material law 107 (MODIFIED_JOHNSON_COOK) Setup File
//


ATTRIBUTES(COMMON)
{
  //Support
  KEYWORD_STR       = VALUE(STRING, "Solver Keyword"); // Always present
  CommentEnumField  = VALUE(INT,  "User Comments"); // Always present
  Num_Comments      = SIZE("No. of comment lines"); // Always present
  Comments          = ARRAY[Num_Comments](STRING,  "Entity_Comments"); // Always present
  LSD_TitleOpt      = VALUE(INT,  "Title"); // Always present

  //Card1 of LS-Dyna manual
  Rho               = VALUE(FLOAT,"Mass density");
  E                 = VALUE(FLOAT,"Young Modulus");
  Nu                = VALUE(FLOAT,"Poisson ratio");
  LSD_BETA          = VALUE(FLOAT,"Damage coupling parameter");
  LSD_XS1           = VALUE(FLOAT,"Taylor-Quineey coefficient Chi");
  LSDYNA_CP         = VALUE(FLOAT,"Specific heat");
  LSD_ALPHA         = VALUE(FLOAT,"Thermal expansion coefficient alpha");

  //Card2 of LS-Dyna manual
  LSD_E0DOT         = VALUE(FLOAT,"User-defined strain rate normalization factor");
  LSD_MAT_TR        = VALUE(FLOAT,"Room temperature Tr");
  LSD_TM            = VALUE(FLOAT,"Melt temperature Tm");
  LSD_T0            = VALUE(FLOAT,"Initial T0");
  LSD_FLAG1         = VALUE(INT,"Constitutive relation flag");
  LSD_FLAG2         = VALUE(INT,"Failure criterion flag");

  //Card3 of LS-Dyna manual
  LSD_MAT_A         = VALUE(FLOAT,"Johnson-Cook yield stress A");
  LSD_MAT_B         = VALUE(FLOAT,"Johnson-Cook hardening parameter B");
  LSDYNA_N          = VALUE(FLOAT,"Johnson-Cook hardening parameter N");
  LSDYNA_C          = VALUE(FLOAT,"Johnson-Cook strain-rate sensitivity parameter C");
  LSDYNA_M          = VALUE(FLOAT,"Johnson-Cook thermal softening parameter M");

  //Card4 of LS-Dyna manual
  LSD_Q1            = VALUE(FLOAT,"Voce hardening parameter Q1");
  LSD_MAT_C1        = VALUE(FLOAT,"Voce hardening parameter C1");
  LSD_Q2            = VALUE(FLOAT,"Voce hardening parameter Q2");
  LSD_MAT_C2        = VALUE(FLOAT,"Voce hardening parameter C2");

  //Card3 Zerilli Armstrong of LS-Dyna manual
  LSD_MAT88_SIGA    = VALUE(FLOAT,"Zerilli-Armstrong parameter sigma_a");
  LSDYNA_MAT_B      = VALUE(FLOAT,"Zerilli-Armstrong parameter B");
  MAT151_BETA0      = VALUE(FLOAT,"Zerilli-Armstrong parameter Beta 0");
  LSDYNA_BETA1      = VALUE(FLOAT,"Zerilli-Armstrong parameter Beta 1");

  //Card4 Zerilli Armstrong of LS-Dyna manual
  LSD_A             = VALUE(FLOAT,"Zerilli-Armstrong parameter A");
  LSDYNA_MAT_N      = VALUE(FLOAT,"Zerilli-Armstrong parameter N");
  MATL241_ALPHA     = VALUE(FLOAT,"Zerilli-Armstrong parameter alpha0");
  LSD_ALPHA1        = VALUE(FLOAT,"Zerilli-Armstrong parameter alpha1");

  //Card5 Modified Johnson-Cook LS-Dyna manual
  LSDYNA_DC         = VALUE(FLOAT,"Critical damage parameter, Dc");
  LSD_PD            = VALUE(FLOAT,"Damage threshold");
  LSD_MAT_D1        = VALUE(FLOAT,"Fracture parameter D1 in the Johnson-Cook fracture criterion");
  LSD_MAT_D2        = VALUE(FLOAT,"Fracture parameter D2 in the Johnson-Cook fracture criterion");
  LSD_MAT_D3        = VALUE(FLOAT,"Fracture parameter D3 in the Johnson-Cook fracture criterion");
  LSD_MAT_D4        = VALUE(FLOAT,"Fracture parameter D4 in the Johnson-Cook fracture criterion");
  LSD_MAT_D5        = VALUE(FLOAT,"Fracture parameter D5 in the Johnson-Cook fracture criterion");

  //Card5 Cockcroft-Latham LS-Dyna manual
  LSD_WC            = VALUE(FLOAT,"Critical Cockcroft-Latham parameter Wc");

  //Card6 LS-Dyna manual
  LSD_TC            = VALUE(FLOAT,"Critical temperature parameter Tc");
  MATL135_TAUC      = VALUE(FLOAT,"Critical shear stress parameter Tau_c");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
  KEYWORD_STR       = 9000;
  CommentEnumField  = 3220;
  Num_Comments      = 3101;
  Comments          = 3100;
  LSD_TitleOpt      = 90;

  Rho               = 118;
  E                 = 119;
  Nu                = 120;
  LSD_BETA          = 1662;
  LSD_XS1           = 9010;
  LSDYNA_CP         = 125;
  LSD_ALPHA         = 1651;

  //Card2 of LS-Dyna manual
  LSD_E0DOT         = 9011;
  LSD_MAT_TR        = 316;
  LSD_TM            = 469;
  LSD_T0            = 1571;
  LSD_FLAG1         = 9012;
  LSD_FLAG2         = 9013;

  //Card3 of LS-Dyna manual
  LSD_MAT_A         = 310;
  LSD_MAT_B         = 311;
  LSDYNA_N          = 71;
  LSDYNA_C          = 197;
  LSDYNA_M          = 72;

  //Card4 of LS-Dyna manual
  LSD_Q1            = 2101;
  LSD_MAT_C1        = 1139;
  LSD_Q2            = 2102;
  LSD_MAT_C2        = 1140;

  //Card3 Zerilli Armstrong of LS-Dyna manual
  LSD_MAT88_SIGA    = 2554;
  LSDYNA_MAT_B      = 4912;
  MAT151_BETA0      = 7114;
  LSDYNA_BETA1      = 259;

  //Card4 Zerilli Armstrong of LS-Dyna manual
  LSD_A             = 718;
  LSDYNA_MAT_N      = 4922;
  MATL241_ALPHA     = 6425;
  LSD_ALPHA1        = 4817;

  //Card5 Modified Johnson-Cook LS-Dyna manual
  LSDYNA_DC         = 7;
  LSD_PD            = 9014;
  LSD_MAT_D1        = 320;
  LSD_MAT_D2        = 321;
  LSD_MAT_D3        = 322;
  LSD_MAT_D4        = 323;
  LSD_MAT_D5        = 324;

  //Card5 Cockcroft-Latham LS-Dyna manual
  LSD_WC            = 4881;

  //Card6 LS-Dyna manual
  LSD_TC            = 2733;
  MATL135_TAUC      = 1749;
  //empty_string    = -1;
}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  YOUNG_MODULUS=SCALAR(E);
  POISSON_RATIO=SCALAR(Nu);
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  BULK_MODULUS      = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
  SHEAR_MODULUS=EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*SHEAR_MODULUS/3+BULK_MODULUS)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*MAT_MODIFIED_JOHNSON_COOK");
    RADIO(CommentEnumField)
    {
      ENUM_VALUE_FLAG=TRUE;
      ADD(1, "Hide in Menu/Export");
      ADD(2, "Show in Menu/Export");
      ADD(3, "Do not export");
    }
    if(CommentEnumField == 2)
    {  
      SIZE(Num_Comments);
      ARRAY(Num_Comments,"")
      {
        SCALAR(Comments);
      }
    }     
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == TRUE)
    {
      ASSIGN(KEYWORD_STR, "_TITLE");
    } 
  mandatory:
    SCALAR(Rho){DIMENSION="density";}
    SCALAR(E){DIMENSION="pressure";}
  optional:  
    SCALAR(Nu){DIMENSION="DIMENSIONLESS";}
    RADIO(LSD_BETA)
    {
       ADD(0,"No coupling between ductile damage and constitutive relation") ;
       ADD(1,"Full coupling between ductile damage and constitutive relation") ;
    }
    SCALAR(LSD_XS1){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_CP){DIMENSION="specificheat";} 
    SCALAR(LSD_ALPHA){DIMENSION="DIMENSIONLESS";}

     
    SCALAR(LSD_E0DOT){DIMENSION="strain_rate";}
    SCALAR(LSD_MAT_TR){DIMENSION="k";}
    SCALAR(LSD_TM){DIMENSION="k";}
    SCALAR(LSD_T0){DIMENSION="k";}
    RADIO(LSD_FLAG1)
    {
      ADD(0,"Modified Johnson-Cook");
      ADD(1,"Zerilli-Armstrong ");
    }
    RADIO(LSD_FLAG2)
    {
      ADD(0,"Modified Johnson-Cook");
      ADD(1,"Cockcroft-Latham");
    }
    if (LSD_FLAG1==0)
    {
       SCALAR(LSD_MAT_A){DIMENSION="pressure";}
       SCALAR(LSD_MAT_B){DIMENSION="pressure";}
       SCALAR(LSDYNA_N){DIMENSION="DIMENSIONLESS";}
       SCALAR(LSDYNA_C){DIMENSION="DIMENSIONLESS";}
       SCALAR(LSDYNA_M){DIMENSION="DIMENSIONLESS";}
       SCALAR(LSD_Q1){DIMENSION="pressure";}
       SCALAR(LSD_MAT_C1){DIMENSION="DIMENSIONLESS";}
       SCALAR(LSD_Q2){DIMENSION="pressure";}
       SCALAR(LSD_MAT_C2){DIMENSION="DIMENSIONLESS";}
    }
    if (LSD_FLAG1==1)
    {
       SCALAR(LSD_MAT88_SIGA){DIMENSION="pressure";}
       SCALAR(LSDYNA_MAT_B){DIMENSION="pressure";}
       SCALAR(MAT151_BETA0){DIMENSION="DIMENSIONLESS";}
       SCALAR(LSDYNA_BETA1){DIMENSION="DIMENSIONLESS";}
       SCALAR(LSD_A){DIMENSION="pressure";}                             
       SCALAR(LSDYNA_MAT_N){DIMENSION="DIMENSIONLESS";}
       SCALAR(MATL241_ALPHA){DIMENSION="DIMENSIONLESS";}
       SCALAR(LSD_ALPHA1){DIMENSION="DIMENSIONLESS";}
    }
    if (LSD_FLAG2==0)
    {
       SCALAR(LSDYNA_DC){DIMENSION="DIMENSIONLESS";}
       SCALAR(LSD_PD){DIMENSION="DIMENSIONLESS";}
       SCALAR(LSD_MAT_D1){DIMENSION="DIMENSIONLESS";}
       SCALAR(LSD_MAT_D2){DIMENSION="DIMENSIONLESS";}
       SCALAR(LSD_MAT_D3){DIMENSION="DIMENSIONLESS";}
       SCALAR(LSD_MAT_D4){DIMENSION="DIMENSIONLESS";}
       SCALAR(LSD_MAT_D5){DIMENSION="DIMENSIONLESS";}
    }
    if (LSD_FLAG2==1)
    {
       SCALAR(LSDYNA_DC){DIMENSION="DIMENSIONLESS";}
       SCALAR(LSD_WC){DIMENSION="DIMENSIONLESS";}
    }
    SCALAR(LSD_TC){DIMENSION="k";}
    SCALAR(MATL135_TAUC){DIMENSION="pressure";}
 
    /*graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/PART/BRICK,/PART/TETRA4,/PART/LINEAR_3D,/PART/SHELL);
      ADD(PART,"Parts");
    }*/
}

//File format
FORMAT(Keyword971_R6.1)
{
  COMMENT("$      MID       RHO         E        PR      BETA       XS1        CP     ALPHA");
  CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,Nu,LSD_BETA,LSD_XS1,LSDYNA_CP,LSD_ALPHA);
  
  COMMENT("$    E0DOT        TR        TM        T0     FLAG1     FLAG2");
  CARD("%10lg%10lg%10lg%10lg%10d%10d",LSD_E0DOT,LSD_MAT_TR,LSD_TM,LSD_T0,LSD_FLAG1,LSD_FLAG2);
  
  if (LSD_FLAG1==0)
  {
     COMMENT("$        A         B         N         C         M");
     CARD("%10lg%10lg%10lg%10lg%10lg",LSD_MAT_A,LSD_MAT_B,LSDYNA_N,LSDYNA_C,LSDYNA_M);
     COMMENT("$       Q1        C1        Q2        C2");
     CARD("%10lg%10lg%10lg%10lg",LSD_Q1,LSD_MAT_C1,LSD_Q2,LSD_MAT_C2);
  }
  if (LSD_FLAG1==1)
  {
     COMMENT("$     SIGA         B     BETA0     BETA1");
     CARD("%10lg%10lg%10lg%10lg",LSD_MAT88_SIGA,LSDYNA_MAT_B,MAT151_BETA0,LSDYNA_BETA1);
     COMMENT("$        A         N    ALPHA0    ALPHA1");
     CARD("%10lg%10lg%10lg%10lg",LSD_A,LSDYNA_MAT_N,MATL241_ALPHA,LSD_ALPHA1);
  }
  if (LSD_FLAG2==0)
  {
     COMMENT("$       DC        PD        D1        D2        D3        D4        D5");
     CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_DC,LSD_PD,LSD_MAT_D1,LSD_MAT_D2,LSD_MAT_D3,LSD_MAT_D4,LSD_MAT_D5);
  }
  if (LSD_FLAG2==1)
  {
     COMMENT("$       DC        WC");
     CARD("%10lg%10lg",LSDYNA_DC,LSD_WC);
  }
  COMMENT("$       TC      TAUC");
  CARD("%10lg%10lg",LSD_TC,MATL135_TAUC);
}
