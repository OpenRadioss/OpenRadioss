//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- mat_128.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    LSD_MID                                 = VALUE(MATERIAL, "Material identification");
    LSD_RO                                  = VALUE(FLOAT,    "Mass density");
    LSD_C                                   = VALUE(FLOAT,    "Diastolic material coefficient");
    LSD_B1                                  = VALUE(FLOAT,    "b1, diastolic material coefficient");
    LSD_B2                                  = VALUE(FLOAT,    "b2, diastolic material coefficient");
    LSD_B3                                  = VALUE(FLOAT,    "b3, diastolic material coefficient");
    LSD_P                                   = VALUE(FLOAT,    "Pressure in the muscle tissue");
    LSD_B_real                              = VALUE(FLOAT,    "Systolic material coefficient");

    //Card 2
    LSD_L                                   = VALUE(FLOAT,    "l0, sacromere length at which no active tension develops");
    LSD_CA0MAX                              = VALUE(INT,      "(Ca0)max, maximum peak intracellular calcium concentrate");
    LSD_LR                                  = VALUE(FLOAT,    "lr, Stress-free sacromere length");
    LSD_M                                   = VALUE(FLOAT,    "Systolic material coefficient");
    LSD_BB                                  = VALUE(FLOAT,    "Systolic material coefficient");
    LSD_CA0                                 = VALUE(FLOAT,    "Ca0, peak intracellular calcium concentration");
    LSD_TMAX                                = VALUE(FLOAT,    "Tmax, maximum isometric tension achieved at the longest sacromere length");
    LSD_TACT                                = VALUE(FLOAT,    "Tact, time at which active contraction initiates");

    //Card 3
    LSD_AOPT                                = VALUE(FLOAT,    "Material axes option");
    LSD_AOPT_sys                            = VALUE(SYSTEM,   "coordinate system ID number");
    LSD_MACF                                = VALUE(INT,      "Material axes change flag for brick elements");

    //Card 4
    LSD_XP                                  = VALUE(FLOAT,    "Xp, define coordinates of point p for AOPT = 1 and 4");
    LSD_YP                                  = VALUE(FLOAT,    "Yp, define coordinates of point p for AOPT = 1 and 4");
    LSD_ZP                                  = VALUE(FLOAT,    "Zp, define coordinates of point p for AOPT = 1 and 4");
    LSD_A1                                  = VALUE(FLOAT,    "a1, define components of vector a for AOPT = 2");
    LSD_A2                                  = VALUE(FLOAT,    "a2, define components of vector a for AOPT = 2");
    LSD_A3                                  = VALUE(FLOAT,    "a3, define components of vector a for AOPT = 2");

    //Card 5
    LSD_V1                                  = VALUE(FLOAT,    "v1, define components of vector v for AOPT = 3 and 4");
    LSD_V2                                  = VALUE(FLOAT,    "v2, define components of vector v for AOPT = 3 and 4");
    LSD_V3                                  = VALUE(FLOAT,    "v3, define components of vector v for AOPT = 3 and 4");
    LSD_D1                                  = VALUE(FLOAT,    "d1, define components of vector d for AOPT = 2");
    LSD_D2                                  = VALUE(FLOAT,    "d2, define components of vector d for AOPT = 2");
    LSD_D3                                  = VALUE(FLOAT,    "d3, define components of vector d for AOPT = 2");
    LSD_BETA                                = VALUE(FLOAT,    "Material angle in degrees for AOPT = 3, may be overridden on the element card");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING,   "Solver Keyword");
    LSD_TitleOpt                            = VALUE(INT,      "Title Option");

    LSD_AOPT_flag                           = VALUE(INT,      "AOPT flag");
    TITLE                                   = VALUE(STRING,   "Title");
    _opt                                    = VALUE(STRING,   "Option");
    IO_FLAG                                 = VALUE(INT,      "IO_FLAG");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    LSD_MID                                 = 2458;
    LSD_RO                                  = 3054;
    LSD_C                                   = 1519;
    LSD_B1                                  = 1517;
    LSD_B2                                  = 1518;
    LSD_B3                                  = -1;
    LSD_P                                   = 7621;
    LSD_B_real                              = -1;

    //Card 2
    LSD_L                                   = 32;
    LSD_CA0MAX                              = -1;
    LSD_LR                                  = -1;
    LSD_M                                   = 1570;
    LSD_BB                                  = -1;
    LSD_CA0                                 = -1;
    LSD_TMAX                                = 4285;
    LSD_TACT                                = -1;

    //Card 3
    LSD_AOPT                                = 5052;
    LSD_AOPT_sys                            = -1;
    LSD_MACF                                = -1;

    //Card 4
    LSD_XP                                  = -1;
    LSD_YP                                  = -1;
    LSD_ZP                                  = -1;
    LSD_A1                                  = 1514;
    LSD_A2                                  = 1515;
    LSD_A3                                  = 1516;

    //Card 5
    LSD_V1                                  = -1;
    LSD_V2                                  = -1;
    LSD_V3                                  = -1;
    LSD_D1                                  = 4806;
    LSD_D2                                  = 4807;
    LSD_D3                                  = -1;
    LSD_BETA                                = 1662;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;
    LSD_TitleOpt                            = 90;

    LSD_AOPT_flag                           = -1;
    TITLE                                   = -1;
    _opt                                    = -1;
    IO_FLAG                                 = -1;
}

DEFAULTS(COMMON)
{
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*MAT_HEART_TISSUE");

    FLAG(LSD_TitleOpt);

    if(LSD_TitleOpt == 1)
    {
        ASSIGN(KEYWORD_STR, "_TITLE");
        SCALAR(TITLE, "TITLE")               { DIMENSION = "DIMENSIONLESS" ; }
    }

    DATA(LSD_MID,       "MID");
    SCALAR(LSD_RO,      "RO")                { DIMENSION = "density" ; }
    SCALAR(LSD_C,       "C")                 { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(LSD_B1,      "B1")                { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(LSD_B2,      "B2")                { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(LSD_B3,      "B3")                { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(LSD_P,       "P")                 { DIMENSION = "pressure" ; }
    SCALAR(LSD_B_real,  "B")                 { DIMENSION = "DIMENSIONLESS" ; }

    SCALAR(LSD_L,      "L0")                 { DIMENSION = "l" ; }
    SCALAR(LSD_CA0MAX, "CA0MAX")             { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(LSD_LR,     "LR")                 { DIMENSION = "l" ; }
    SCALAR(LSD_M,      "M")                  { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(LSD_BB,     "BB")                 { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(LSD_CA0,    "CA0")                { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(LSD_TMAX,   "TMAX")               { DIMENSION = "TENSION SUPERFICIELLE" ; }
    SCALAR(LSD_TACT,   "TACT")               { DIMENSION = "t" ; }

    FLAG(LSD_AOPT_flag, "AOPT flag");
    if(LSD_AOPT_flag == 0)
    {
        RADIO(LSD_AOPT, "AOPT")
        {
            ADD(0, "0: Locally orthotropic with material axes determined by element nodes 1, 2, and 4, as with *DEFINE_COORDINATE_NODES");
            ADD(1, "1: Locally orthotropic with material axes determined by a point in space and the global location of the element center; this is the a-direction");
            ADD(2, "2: Globally orthotropic with material axes determined by vectors");
            ADD(3, "3: Locally orthotropic material axes determined by rotating the material axes about the element normal by an angle, BETA, from a line in the plane of the element defined by the cross product of the vector v with the element normal");
            ADD(4, "4: Locally orthotropic in cylindrical coordinate system with the material axes determined by a vector v, and an originating point, P, which define the centerline axis");
        }
    }
    else
    {
        DATA(LSD_AOPT_sys, "AOPT");
    }
    RADIO(LSD_MACF, "MACF")
    {
        ADD(1, "1: No change, default");
        ADD(2, "2: Switch material axes a and b");
        ADD(3, "3: Switch material axes a and c");
        ADD(4, "4: Switch material axes b and c");
    }

    if(LSD_AOPT_flag == 0 && LSD_AOPT == 1 || LSD_AOPT == 4)
    {
        SCALAR(LSD_XP, "XP")                { DIMENSION = "l" ; }
        SCALAR(LSD_YP, "YP")                { DIMENSION = "l" ; }
        SCALAR(LSD_ZP, "ZP")                { DIMENSION = "l" ; }
    }
    else if(LSD_AOPT_flag == 0 && LSD_AOPT == 2)
    {
        SCALAR(LSD_A1, "A1")                { DIMENSION = "l" ; }
        SCALAR(LSD_A2, "A2")                { DIMENSION = "l" ; }
        SCALAR(LSD_A3, "A3")                { DIMENSION = "l" ; }
        SCALAR(LSD_D1, "D1")                { DIMENSION = "l" ; }
        SCALAR(LSD_D2, "D2")                { DIMENSION = "l" ; }
        SCALAR(LSD_D3, "D3")                { DIMENSION = "l" ; }
    }

    if(LSD_AOPT_flag == 0 && LSD_AOPT == 3 || LSD_AOPT == 4)
    {
        SCALAR(LSD_V1, "V1")                { DIMENSION = "l" ; }
        SCALAR(LSD_V2, "V2")                { DIMENSION = "l" ; }
        SCALAR(LSD_V3, "V3")                { DIMENSION = "l" ; }
    }

    if(LSD_AOPT_flag == 0 && LSD_AOPT == 3)
    {
        SCALAR(LSD_BETA, "BETA")            { DIMENSION = "a" ; }
    }
}

FORMAT(Keyword971_R6.1)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);

    if(IO_FLAG == 0)
    {
        if(LSD_TitleOpt == 0)
            HEADER("*MAT_HEART_TISSUE");
        else
            HEADER("*MAT_HEART_TISSUE_TITLE");
    }
    else
    {
        HEADER("*MAT_HEART_TISSUE%s", _opt);

        ASSIGN(LSD_TitleOpt, _FIND(_opt, "_TITLE"), IMPORT);
    }

    if(IO_FLAG == 0 && LSD_TitleOpt == 1)
    {
        CARD("%-80s", TITLE);
    }

    //Card 1
    COMMENT("$      MID        RO         C        B1        B2        B3         P         B");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg", LSD_MID, LSD_RO, LSD_C, LSD_B1, LSD_B2, LSD_B3, LSD_P, LSD_B_real);

    //Card 2
    COMMENT("$       L0    CA0MAX        LR         M        BB       CA0      TMAX      TACT");
    CARD("%10lg%10d%10lg%10lg%10lg%10lg%10lg%10lg", LSD_L, LSD_CA0MAX, LSD_LR, LSD_M, LSD_BB, LSD_CA0, LSD_TMAX, LSD_TACT);

    //Card 3
    COMMENT("$     AOPT      MACF");
    CARD("%10lg%10d", SCALAR_OR_OBJECT(LSD_AOPT_flag, LSD_AOPT, LSD_AOPT_sys), LSD_MACF);

    //Card 4
    COMMENT("$       XP        YP        ZP        A1        A2        A3");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg", LSD_XP, LSD_YP, LSD_ZP, LSD_A1, LSD_A2, LSD_A3);

    //Card 5
    COMMENT("$       V1        V2        V3        D1        D2        D3      BETA");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg", LSD_V1, LSD_V2, LSD_V3, LSD_D1, LSD_D2, LSD_D3, LSD_BETA);
}