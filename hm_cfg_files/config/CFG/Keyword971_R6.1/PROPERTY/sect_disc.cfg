//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// *sect_disc.cfg
//

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES
    LSDYNA_SP_DRO                           = VALUE(INT,"Displacement/Rotation Option");
    LSDYNA_SP_KD                            = VALUE(FLOAT,"Dynamic magnification factor, Kd");
    LSDYNA_SP_VO                            = VALUE(FLOAT,"Test velocity, V0");
    LSDYNA_SP_CL                            = VALUE(FLOAT,"Clearance");
    LSDYNA_SP_FD                            = VALUE(FLOAT,"Failure deflection (twist for DRO = 1). Negative for compression, positive for tension");
    LSDYNA_SP_CDL                           = VALUE(FLOAT,"Deflection (twist for DRO = 1) limit in compression");
    LSDYNA_SP_TDL                           = VALUE(FLOAT,"Deflection (twist for DRO = 1) limit in tension");

    // HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt                            = VALUE(INT,"Title");

    IO_FLAG                                 = VALUE(INT,"");
    _opt                                    = VALUE(STRING, "");
    TITLE                                   = VALUE(STRING,"Title");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    LSDYNA_SP_DRO                           = 438;
    LSDYNA_SP_KD                            = 439;
    LSDYNA_SP_VO                            = 440;
    LSDYNA_SP_CL                            = 441;
    LSDYNA_SP_FD                            = 442;
    LSDYNA_SP_CDL                           = 443;
    LSDYNA_SP_TDL                           = 444;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;
    LSD_TitleOpt                            = 90;

    IO_FLAG                                 = -1;
    _opt                                    = -1;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    LSD_TitleOpt                            = 0;
}

GUI(COMMON)
{
    FLAG(LSD_TitleOpt,"Title");

    if(LSD_TitleOpt == 0)
    {
        ASSIGN(KEYWORD_STR, "*SECTION_DISCRETE");
    }
    else
    {
        ASSIGN(KEYWORD_STR,"*SECTION_DISCRETE_TITLE");
    }

    RADIO(LSDYNA_SP_DRO)
    {
       ADD(0, "0: the material describes a translational spring/damper");
       ADD(1, "1: the material describes a torsional spring/damper");
    }

    SCALAR(LSDYNA_SP_KD)                {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_SP_VO)                {DIMENSION="acceleration";}
    SCALAR(LSDYNA_SP_CL)                {DIMENSION="l";}
    SCALAR(LSDYNA_SP_FD)                {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_SP_CDL)               {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_SP_TDL)               {DIMENSION="DIMENSIONLESS";}
}

// File format
FORMAT(Keyword971_R6.1)
{
    ASSIGN(IO_FLAG, 0, IMPORT);
    ASSIGN(IO_FLAG, 1, EXPORT);

    if(IO_FLAG == 0)
    {
        HEADER("*SECTION_DISCRETE%s",_opt);
    }
    else
    {
       if(LSD_TitleOpt == 1)
       {
          HEADER("*SECTION_DISCRETE_TITLE");
       }
       else
       {
          HEADER("*SECTION_DISCRETE");
       }
    }

    if(LSD_TitleOpt == 1)
    {
        CARD("%-80s", TITLE);
    }

    COMMENT("$    SECID       DRO        KD        V0        CL        FD");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg",_ID_,LSDYNA_SP_DRO,LSDYNA_SP_KD,LSDYNA_SP_VO,LSDYNA_SP_CL,LSDYNA_SP_FD);

    COMMENT("$      CDL       TDL");
    CARD("%10lg%10lg",LSDYNA_SP_TDL,LSDYNA_SP_CDL);
}
