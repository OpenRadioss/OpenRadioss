//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//CONSTRAINED_RIGID_BODIES
//

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES 
    maincompid      = VALUE(COMPONENT,"Main rigid body part ID");
    Number_of_comps   = SIZE("Number_of_cards"); // HM INTERNAL
    secondarycompids      = ARRAY[Number_of_comps](COMPONENT,  "Secondary rigid body part ID");
    iflag             = VALUE(INT, "This flag is meaningful if and only if the inertia properties of the main part, PIDM, are defined in PART_INERTIA");
    maincompid_array= ARRAY[Number_of_comps](COMPONENT,"Main rigid body part ID");
    iflag_array       = ARRAY[Number_of_comps](INT, "This flag is meaningful if and only if the inertia properties of the main part, PIDM, are defined in PART_INERTIA");
    // HM INTERNAL
    KEYWORD_STR       = VALUE(STRING, "Solver Keyword");
    IOFLAG            = VALUE(INT,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR      = 9000;
    Number_of_comps  = -1;
    IOFLAG           = -1;
    maincompid_array = -1;
    iflag_array = -1;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*CONSTRAINED_RIGID_BODIES");
    // DATA(maincompid); // I need to filter component with a rigid material associated
    SIZE(Number_of_comps);
    ARRAY(Number_of_comps,"Number_of_comps")
    {
        DATA(secondarycompids) ; // I need to filter component with a rigid material associated
        DATA(maincompid_array) ;
        RADIO(iflag_array)
        {
            ADD(0,"0: Update the center-of-gravity, the translational mass, and the inertia matrix of PIDM to reflect its merging with the secondary rigid body (PIDS)");
            ADD(1,"1: The merged PIDS will not affect the properties defined in PART_INERTIA for PIDM since it is assumed the properties already account for merged parts");
        }
    }
   /* RADIO(iflag)
    {
        ADD(0,"0: Update the center-of-gravity, the translational mass, and the inertia matrix of PIDM to reflect its merging with the secondary rigid body (PIDS)");
        ADD(1,"1: The merged PIDS will not affect the properties defined in PART_INERTIA for PIDM since it is assumed the properties already account for merged parts");
    }*/
}

//File format
FORMAT(Keyword971_R6.1)
{
    HEADER("*CONSTRAINED_RIGID_BODIES");
    ASSIGN(IOFLAG,0,EXPORT);
    ASSIGN(IOFLAG,1,IMPORT);
    
    if(IOFLAG == 0 )
    {        
        COMMENT("$     PIDM      PIDS     IFLAG");
    }
    FREE_CARD_LIST(Number_of_comps)
    {
        CARD("%10d%10d%10d",maincompid_array,secondarycompids,iflag_array);
    }

}
