//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// *CONSTRAINED_EXTRA_NODES_SET
//

ATTRIBUTES(COMMON)
{
// INPUT ATTRIBUTES
  config                                    = VALUE(INT,"config");
  compid                                    = VALUE(COMPONENT,"Part ID of rigid body to which the nodes will be added, see *PART");
  entityid                                  = VALUE(SETS,"Node (keyword option: NODE) or node set ID (keyword option:SET), see *SET_NODE, of added nodes") { SUBTYPES = (/SETS/SET_NODE_IDPOOL); }
  iflag                                     = VALUE(INT,"This flag is meaningful if and only if the inertia properties of the Part ID are defined in PART_INERTIA");

// HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;

}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    iflag                                   = 0;
}

GUI(COMMON)
{

  ASSIGN(KEYWORD_STR, "*CONSTRAINED_EXTRA_NODES_SET");

  RADIO(config)
  {
     ADD(0,"Node");
     ADD(1,"Set");
  }  
  DATA(compid);
  DATA(entityid);
  RADIO(iflag)
  {
     ADD(0,"0: If IFLAG is defaulted to zero, the merged nodes will not affect the properties defined in PART_INERTIA since it is assumed the properties already account for merged nodes");
     ADD(1,"1: If set to unity, the center of gravity, the translational mass, and the inertia matrix of the PID will be updated to reflect the merged nodal masses of the node or node set");
  }

}

// File format
FORMAT(Keyword971_R6.1)
{
    HEADER("*CONSTRAINED_EXTRA_NODES_SET");

    COMMENT("$      PID      NSID     IFLAG");
    CARD("%10d%10d%10d",compid,entityid,iflag);
}
