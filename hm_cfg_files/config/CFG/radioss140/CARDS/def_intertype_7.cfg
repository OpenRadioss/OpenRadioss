//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// CARDS DefaultInterType7 - 8034

ATTRIBUTES(COMMON)
{

    KEYWORD_STR = VALUE(STRING, "/DEFAULT/INTER/TYPE7");
    Istf = VALUE(INT, "Interface stiffness definition flag ");//type,short_desc,tooltip
    Igap = VALUE(INT, "Gap/element option flag");
    Ibag = VALUE(INT, "Airbag vent holes closure flag in case of contact");
    Idel7 = VALUE(INT, "Node and segment deletion flag");
    IKREM = VALUE(INT, "Flag for deactivating slave nodes if element size < gap value, in case of self-impact contact");
    ICOG = VALUE(INT, "Flag for deactivating the slave node, if the same contact pair (nodes) has been defined in interface type 2.");
    INACTIV = VALUE(INT, "Deactivation flag of stiffness in case of initial penetrations");
    IFORM = VALUE(INT, "Friction penalty formulation type");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR = 9000;
    ICOG = 8048;
    IFORM = 4028;
    IKREM = 8047;
    INACTIV = 94;
    Ibag = 6300;
    Idel7 = 6301;
    Igap = 8045;
    Istf = 8044;
}

DEFAULTS(COMMON)
{

    ICOG = 1;
    IFORM = 1;
    IKREM = 1;
    INACTIV = 1000;
    Ibag = 1000;
    Idel7 = 1000;
    Igap = 1000;
    Istf = 1000;
}

GUI(COMMON)
{

    ASSIGN(KEYWORD_STR, "/DEFAULT/INTER/TYPE7");

    RADIO(Istf)
    {
        ADD(1, "1: Stfac is a constant stiffness value");
        ADD(2, "2: Stfac is a stiffness scale factor and the interface stiffness is computed from both master and slave characteristics");
        ADD(3, "3: Stfac is a stiffness scale factor and the interface stiffness is computed from both master and slave characteristics");
        ADD(4, "4: Stfac is a stiffness scale factor and the interface stiffness is computed from both master and slave characteristics");
        ADD(5, "5: Stfac is a stiffness scale factor and the interface stiffness is computed from both master and slave characteristics");
        ADD(1000, "1000: Stfac is a stiffness scale factor and interface stiffness is computed based only on the master side characteristics");
    }

    RADIO(Igap)
    {
        ADD(1, "1: variable gap varies according to the characteristics of the impacted master surface and the impacting slave node");
        ADD(2, "2: variable gap + gap scale correction of the computed gap");
        ADD(3, "3: variable gap + gap scale correction of the computed gap + size of the mesh taken into account to avoid initial penetrations.");
        ADD(1000, "1000: constant gap; equal to the minimum gap Gapmin");
    }

    RADIO(Ibag)
    {
        ADD(1, "1: closure");
        ADD(1000, "1000: no closure (default)");
    }

    RADIO(Idel7)
    {
        ADD(1, "1: when all the elements (4-node shells, 3-node shells, solids) associated to one segment are deleted, the segment is removed from the master side of the interface.");
        ADD(2, "2: when a 4-node shell, a 3-node shell or a solid element is deleted, the corresponding segment is removed from the master side of the interface.");
        ADD(-1, "-1: same as =1, except non-connected nodes are not removed from the slave side of the interface.");
        ADD(-2, "-2: same as =2, except non-connected nodes are not removed from the slave side of the interface.");
        ADD(1000, "1000: no default (default)");
    }

    RADIO(IKREM)
    {
        ADD(1, "1: no deactivation of slave nodes (default)");
        ADD(2, "2: deactivation of slave nodes");
    }

    RADIO(ICOG)
    {
        ADD(1, "1: with deactivating (default for implicit solution (if /IMPLICIT is defined)");
        ADD(3, "3: without deactivating (default for explicit solution)");
    }

    RADIO(INACTIV)
    {
        ADD(1, "1: deactivation of stiffness on nodes");
        ADD(2, "2: deactivation of stiffness on elements");
        ADD(3, "3: change node coordinates to avoid initial penetrations");
        ADD(5, "5: gap is variable with time and initial gap is adjusted as follows: gap0 = gap - P0, where P0 is the initial penetration");
        ADD(6, "6:gap is variable with time but initial gap is adjusted as follows (the node is slightly depenetrated): gap0 = gap - P0 -5%(gap- P0) ");
        ADD(1000, "1000: no action (default)");
    }

    RADIO(IFORM)
    {
        ADD(1, "1: viscous (total) formulation (default)");
        ADD(2, "2: stiffness (incremental) formulation");
    }
}

// File format
FORMAT(radioss140)
{
    HEADER("/DEFAULT/INTER/TYPE7");
    BLANK;
    COMMENT("#                         Istf                Igap                Ibag      Idel");
    CARD("                    %10d          %10d          %10d%10d", Istf, Igap, Ibag, Idel7);//show comment
    BLANK;
    COMMENT("#                                                                                 IRem_gap   Irem_i2");
    CARD("                                                                                %10d%10d", IKREM, ICOG);
    BLANK;
    COMMENT("#                                 Inacti");
    CARD("                              %10d", INACTIV);
    COMMENT("#                                            Iform");
    CARD("                                        %10d", IFORM);
}
