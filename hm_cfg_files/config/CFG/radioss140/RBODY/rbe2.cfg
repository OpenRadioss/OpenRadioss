//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /RBE2
//

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    // Card
    independentnode                         = VALUE(NODE, "Independent node identifier");
    independentdof                          = VALUE(INT, "Code of DOF used for the dependent components");
    NAME                                    = VALUE(STRING, "Rigid element title","TITLE");
    SKEW_CSID                               = VALUE(SYSTEM, "Local skew identifier of element");
    dependentnodeset                        = VALUE(SETS, "Dependent nodes group identifier")  { SUBTYPES = (/SETS/GRNOD); }
    Iflag                                   = VALUE(INT, "Dependent relation formulation flag");

    // Codes for Translation and Rotation: Trarot
    VX                                      = VALUE(INT, "Code for translation TX");
    VY                                      = VALUE(INT, "Code for translation TY");
    VZ                                      = VALUE(INT, "Code for translation TZ");
    WX                                      = VALUE(INT, "Code for rotation OMEGA_X");
    WY                                      = VALUE(INT, "Code for rotation OMEGA_Y");
    WZ                                      = VALUE(INT, "Code for rotation OMEGA_Z");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    CommentEnumField                        = VALUE(INT, "User Comments");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING, "Entity Comments");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    //INPUT ATTRIBUTES

    // Card
    NAME                                    = 8057;
    SKEW_CSID                               = 412;
    Iflag                                   = 4869;

    // Codes for Translation and Rotation: Trarot
    VX                                      = -1;
    VY                                      = -1;
    VZ                                      = -1;
    WX                                      = -1;
    WY                                      = -1;
    WZ                                      = -1;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    NUM_COMMENTS                            = 5110;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{

}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
       ENUM_VALUE_FLAG=TRUE;
       ADD(1, "1:Hide in Menu/Export");
       ADD(2, "2:Show in Menu/Export");
       ADD(3, "3:Do Not Export");
    }
    if(CommentEnumField == 2)
    {
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }

    ASSIGN(KEYWORD_STR, "/RBE2");

    // Card
    DATA(independentnode, "node_ID");
    SCALAR(independentdof, "Trarotref")     { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(NAME, "Title")                   { DIMENSION = "DIMENSIONLESS"; }
    DATA(SKEW_CSID, "Skew_ID");
    DATA(dependentnodeset, "grnd_ID");

    RADIO(Iflag, "Iflag")
    {
       ADD(0, "0: (Default) Rigid body formulation (OptiStruct)");
       ADD(1, "1: Rigid link formulation");
    }

    // Codes for Translation and Rotation: Trarot
    FLAG(VX);
    FLAG(VY);
    FLAG(VZ);
    FLAG(WX);
    FLAG(WY);
    FLAG(WZ);
}

// File format
FORMAT(radioss100)
{
    HEADER("/RBE2/%-d", _ID_);
    CARD("%-100s", NAME);

    // Card
    COMMENT("#Nod_IDmast Trarotref   Skew_ID  grnod_ID");
    CARD("%10d%3s%1d%1d%1d%1s%1d%1d%1d%10d%10d", independentnode, _BLANK_, VX, VY, VZ, _BLANK_, WX, WY, WZ, SKEW_CSID, dependentnodeset);
}

FORMAT(radioss110)
{
    HEADER("/RBE2/%-d", _ID_);
    CARD("%-100s", NAME);

    // Card
    COMMENT("#  Nod_IDm Trarotref   Skew_ID  grnod_ID     Iflag");
    CARD("%10d%3s%1d%1d%1d%1s%1d%1d%1d%10d%10d%10d", independentnode, _BLANK_, VX, VY, VZ, _BLANK_, WX, WY, WZ, SKEW_CSID, dependentnodeset, Iflag);
}

FORMAT(radioss140)
{
    HEADER("/RBE2/%-d", _ID_);
    CARD("%-100s", NAME);

    // Card
    COMMENT("#  node_ID Trarotref   skew_ID  grnod_ID     Iflag");
    CARD("%10d%3s%1d%1d%1d%1s%1d%1d%1d%10d%10d%10d", independentnode, _BLANK_, VX, VY, VZ, _BLANK_, WX, WY, WZ, SKEW_CSID, dependentnodeset, Iflag);
}
