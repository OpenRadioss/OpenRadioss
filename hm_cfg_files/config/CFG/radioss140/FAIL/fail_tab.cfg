//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//FAIL : Strain failure model
//

ATTRIBUTES(COMMON){

    _HMCOMMENTSFLAG     = VALUE(INT, "Write HM Comments");
    mat_id              = VALUE(MAT,  "Material");

    Ifail_sh            = VALUE( INT,   "Shell flag");
    Ifail_so            = VALUE( INT,   "Solid flag");
    N_rate              = SIZE("Number of strain rate dependant functions defining failure strain");
    P_thickfail         = VALUE( FLOAT, "Percent of thickness failure limit");
    Ixfem               = VALUE(INT, "XFEM flag (for /SHELL and /SH_SANDW properties only)");
    
    Dcrit               = VALUE( FLOAT, "Critical accumulated damage value");
    D                   = VALUE( FLOAT, "Damage accumulation parameter D");
    n                   = VALUE( FLOAT, "Damage accumulation parameter n");
    Dadv                = VALUE( FLOAT, "Criterion for the crack advancement ");
    
    fct_ID_TAB          = ARRAY[N_rate]( FUNCT, "Failure strain function identifier");
    Fscale              = ARRAY[N_rate]( FLOAT, "Failure strain function scale factor");
    Epsdot              = ARRAY[N_rate]( FLOAT, "Strain rate corresponding to failure strain function");
    
    fct_IDel            = VALUE( FUNCT, "Element size factor function identifier");
    Fscale_el           = VALUE( FLOAT, "Element size function scale factor");
    EI_ref              = VALUE( FLOAT, "Reference element size");
    
    fct_IDt             = VALUE( FUNCT, "Temperature factor function identifier");
    FscaleT             = VALUE( FLOAT, "Temperature function scale factor");
    
    ID_CARD_EXIST       = VALUE(BOOL, "Give an Id");

}
SKEYWORDS_IDENTIFIER(COMMON)
{
    _HMCOMMENTSFLAG=-1;
}

/*
DEFINITIONS(COMMON) {
    SUPPORTING=(MAT);
}
DEFAULTS(COMMON) {

}

GUI(COMMON){
    DATA(MAT)   {SUBTYPES=(/MAT/COWPER,
                   /MAT/DAMA,
                   /MAT/ELASTOMER,
                   /MAT/HANSEL,
                   /MAT/HILL,
                   /MAT/HILL_TAB,
                   /MAT/HONEYCOMB,
                   /MAT/HYD_JCOOK,
                   /MAT/HYDPLA,
                   /MAT/LAW66,
                   /MAT/PLAS_BRIT,
                   /MAT/PLAS_JOHNS,
                   /MAT/PLAS_TAB,
                   /MAT/PLAS_T3,
                   /MAT/PLAS_ZERIL,
                   /MAT/STEINB,
                   /MAT/UGINE_ALZ,
                   /MAT/ZHAO);}
    RADIO(ISHELL) {
        ADD(1, "1: Shell is deleted if damage criteria is satisfied in one integration point or layer");
        ADD(2, "2: Shell is deleted if damage criteria is satisfied in all shell layers");
        ADD(3, "3: Shell is deleted if damage criteria is satisfied in all layers");
    }
    RADIO(ISOLID) {
        ADD(1, "1: Solid is deleted if damage criteria is satisfied in one integration point");
        ADD(2, "2: Deviatoric stress components are set to zero for the integration points where criteria is satisfied");
    }
    SIZE(NRATE);
    SCALAR (P_THICKFAIL)    {DIMENSION="DIMENSIONLESS"; }

    SCALAR (DCRIT)          {DIMENSION="DIMENSIONLESS"; }
    SCALAR (D)              {DIMENSION="DIMENSIONLESS"; }
    SCALAR (N)              {DIMENSION="DIMENSIONLESS"; }

        ARRAY(NRATE,"")
        {
        FUNCTION(FCT_ID) {
                X_TITLE     = "Time";
                Y_TITLE     = "Failure strain";
                X_DIMENSION="t";
                Y_DIMENSION = "DIMENSIONLESS";
        }
    SCALAR (FSCALE)          {DIMENSION="DIMENSIONLESS"; }
    SCALAR (EPSDOT)          {DIMENSION="f"; }
        }

        FUNCTION(FCT_ID_EL) {
                X_TITLE     = "Element size";
                Y_TITLE     = "Failure strain";
                X_DIMENSION="l";
                Y_DIMENSION = "DIMENSIONLESS";
        }
    SCALAR (FSCALE_EL)          {DIMENSION="DIMENSIONLESS"; }
    SCALAR (EI_REF)             {DIMENSION="l"; }

        FUNCTION(FCT_ID_T) {
                X_TITLE     = "Temperature factor";
                Y_TITLE     = "Failure strain";
                X_DIMENSION="k";
                Y_DIMENSION = "DIMENSIONLESS";
        }
    SCALAR (FSCALE_T)           {DIMENSION="DIMENSIONLESS"; }

}
*/
FORMAT(radioss130) {
    HEADER("/FAIL/TAB/%d",mat_id);
    
    COMMENT("# IFAIL_SH  IFAIL_SO     NRATE                   P_THICKFAIL                                   IXFEM") ;
    CARD("%10d%10d%10d          %20lg                              %10d",Ifail_sh,Ifail_so,N_rate,P_thickfail,Ixfem);
    
    if(Ixfem==1)
    {
        COMMENT("#              DCRIT                   D                   N                DADV") ;
        CARD("%20lg%20lg%20lg%20lg",Dcrit,D,n,Dadv);

    }
    if(Ixfem==0)
    {
        COMMENT("#              DCRIT                   D                   N") ;
        CARD("%20lg%20lg%20lg",Dcrit,D,n);
    }
    
    
    CARD_LIST(N_rate){
        COMMENT("#   FCT_ID              FSCALE              EPSDOT") ;
        CARD("%10d%20lg%20lg",fct_ID_TAB,Fscale,Epsdot);
    }

    COMMENT("# FCT_IDEL           FSCALE_EL              EI_REF") ;
    CARD("%10d%20lg%20lg",fct_IDel,Fscale_el,EI_ref);

    COMMENT("# FCT_ID_T            FSCALE_T") ;
    CARD("%10d%20lg",fct_IDt,FscaleT);

    if (ID_CARD_EXIST==TRUE)
    {
     COMMENT("#  FAIL_ID") ;
    }
    FREE_CARD(ID_CARD_EXIST,"%10d", _ID_);
}

FORMAT(radioss120) {
    HEADER("/FAIL/TAB/%d",mat_id);
    
    COMMENT("# IFAIL_SH  IFAIL_SO     NRATE                   P_THICKFAIL                                   IXFEM") ;
    CARD("%10d%10d%10d          %20lg                              %10d",Ifail_sh,Ifail_so,N_rate,P_thickfail,Ixfem);
    
    if(Ixfem==1)
    {
        COMMENT("#              DCRIT                   D                   N                DADV") ;
        CARD("%20lg%20lg%20lg%20lg",Dcrit,D,n,Dadv);

    }
    if(Ixfem==0)
    {
        COMMENT("#              DCRIT                   D                   N") ;
        CARD("%20lg%20lg%20lg",Dcrit,D,n);
    }
    
    
    CARD_LIST(N_rate){
        COMMENT("#   FCT_ID              FSCALE              EPSDOT") ;
        CARD("%10d%20lg%20lg",fct_ID_TAB,Fscale,Epsdot);
    }

    COMMENT("# FCT_IDEL           FSCALE_EL              EI_REF") ;
    CARD("%10d%20lg%20lg",fct_IDel,Fscale_el,EI_ref);

    COMMENT("# FCT_ID_T            FSCALE_T") ;
    CARD("%10d%20lg",fct_IDt,FscaleT);

}


FORMAT(radioss110) {
    HEADER("/FAIL/TAB/%d",mat_id);
    
    COMMENT("#   ISHELL    ISOLID     NRATE                                       P_THICKFAIL") ;
    CARD("%10d%10d%10d                              %20lg",Ifail_sh,Ifail_so,N_rate,P_thickfail);

    COMMENT("#              DCRIT                   D                   N") ;
    CARD("%20lg%20lg%20lg",Dcrit,D,n);

    CARD_LIST(N_rate){
        COMMENT("#   FCT_ID              FSCALE              EPSDOT") ;
        CARD("%10d%20lg%20lg",fct_ID_TAB,Fscale,Epsdot);
    }

    COMMENT("# FCT_IDEL           FSCALE_EL              EI_REF") ;
    CARD("%10d%20lg%20lg",fct_IDel,Fscale_el,EI_ref);

    COMMENT("# FCT_ID_T            FSCALE_T") ;
    CARD("%10d%20lg",fct_IDt,FscaleT);

}