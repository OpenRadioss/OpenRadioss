//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Monitored volume type 2 (PRES) Setup File
// 

ATTRIBUTES(COMMON)
{
// INPUT ATTRIBUTES
    entityiddisplayed                         = VALUE(SETS,"External surface identifier");
    Scal_T                                    = VALUE(FLOAT,"Abscissa scale factor for time based functions");
    Scal_P                                    = VALUE(FLOAT,"Abscissa scale factor for pressure based functions");
    Scal_S                                    = VALUE(FLOAT,"Abscissa scale factor for area based functions");
    Scal_A                                    = VALUE(FLOAT,"Abscissa scale factor for angle based functions");
    Scal_D                                    = VALUE(FLOAT,"Abscissa scale factor for distance based functions");
    FUN_A1                                    = VALUE(CURVE,"Load curve identifier for DELTAp(V0 / V)  or Prel(t) depending on Itypfun input");
    Ffunc                                     = VALUE(FLOAT,"Load curve scale factor for relative pressure");
    Itype                                     = VALUE(INT,"Argument of the relative pressure function flag");
      
// HM INTERNAL
    KEYWORD_STR                               = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                              = SIZE("NUM_COMMENTS");
    CommentEnumField                          = VALUE(INT,"User Comments");
    COMMENTS                                  = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    TITLE                                     = VALUE(STRING,"");

}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                               = 9000;
    COMMENTS                                  = 5109;
    CommentEnumField                          = 7951;
    NUM_COMMENTS                              = 5110;
    TITLE                                     = -1;

    Scal_T                                    = 4103;
    Scal_P                                    = 4104;
    Scal_S                                    = 4105;
    Scal_A                                    = 4106;
    Scal_D                                    = 4107;
    FUN_A1                                    = 45;
    Ffunc                                     = 4108;
    Itype                                     = 5107;

}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    Ffunc                                     = 1.0;
    Scal_D                                    = 1.0;

}

GUI(COMMON)
{

    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }

    ASSIGN(KEYWORD_STR, "/MONVOL/PRESS");

    DATA(entityiddisplayed);
    SCALAR(Scal_T)                            { DIMENSION="t"; }
    SCALAR(Scal_P);
    SCALAR(Scal_S);
    SCALAR(Scal_A);
    SCALAR(Scal_D)                            { DIMENSION="l"; }
    DATA(FUN_A1);
    SCALAR(Ffunc)                             { DIMENSION="pressure"; }

    RADIO(Itype)
    {
      ADD(0,"0: pressure depends on relative volume");
      ADD(1,"1: pressure depends on time");
    }
}

//File format
FORMAT(radioss41) {
    HEADER("/MONVOL/PRES/%d/%s",_ID_,TITLE);

    COMMENT("#   Isur");
    CARD("%8d",entityiddisplayed);
  
    COMMENT("#  Ifunc");
    CARD("%8d",FUN_A1);
}

FORMAT(radioss51) {
    HEADER("/MONVOL/PRES/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("#   Isur");
    CARD("%10d",entityiddisplayed);


    COMMENT("#             Scal_T              Scal_P              Scal_S              Scal_A              Scal_D");
    CARD("%20lg%20lg%20lg%20lg%20lg",Scal_T, Scal_P,Scal_S,Scal_A,Scal_D);

    COMMENT("#  func_id               Ffunc");
    CARD("%10d%20lf",FUN_A1,Ffunc);
}

FORMAT(radioss90) {
    HEADER("/MONVOL/PRES/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("#surf_IDext");
    CARD("%10d",entityiddisplayed);

    COMMENT("#            AscaleT             AscaleP             AscaleS             AscaleA             AscaleD");
    CARD("%20lg%20lg%20lg%20lg%20lg",Scal_T, Scal_P,Scal_S,Scal_A,Scal_D);
  
    COMMENT("# funct_ID              Fscale");
    CARD("%10d%20lg",FUN_A1,Ffunc);
}

FORMAT(radioss110) {
    HEADER("/MONVOL/PRES/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("#surf_IDex");
    CARD("%10d",entityiddisplayed);

    COMMENT("#            AscaleT                                                                         AscaleD");
    CARD("%20lg%20s%20s%20s%20lg",Scal_T,_BLANK_,_BLANK_,_BLANK_,Scal_D);
  
    COMMENT("#   fct_ID              Fscale");
    CARD("%10d%20lg",FUN_A1,Ffunc);
}

FORMAT(radioss130) {
    HEADER("/MONVOL/PRES/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("#surf_IDex");
    CARD("%10d",entityiddisplayed);

    COMMENT("#            Ascalet                                                                         AscaleD");
    CARD("%20lg%20s%20s%20s%20lg",Scal_T,_BLANK_,_BLANK_,_BLANK_,Scal_D);
  
    COMMENT("#   fct_ID              Fscale             Itypfun");
    CARD("%10d%20lg%10s%10d",FUN_A1,Ffunc,_BLANK_,Itype);
}

FORMAT(radioss140) {
    HEADER("/MONVOL/PRES/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("#surf_IDex");
    CARD("%10d",entityiddisplayed);

    COMMENT("#            Ascalet");
    CARD("%20lg",Scal_T);
  
    COMMENT("#   fct_ID              Fscale             Itypfun");
    CARD("%10d%20lg%10s%10d",FUN_A1,Ffunc,_BLANK_,Itype);
}

