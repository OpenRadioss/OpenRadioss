//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material law 32 (HILL) Setup File
ATTRIBUTES(COMMON) {
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    CommentEnumField                        = VALUE(INT,"User Comments");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    // Initial and reference densities
    MAT_RHO                                 = VALUE(FLOAT,"Initial Density");
    Refer_Rho                               = VALUE(FLOAT,"Reference Density (for Lower than 14.0 Version)");
    DUMMY                                   = VALUE(STRING,"Dummy Variable for Ref_Rho Flag");
    MAT_REFRHO_Option                       = VALUE(INT, "RefRho_Option");
    // Other values
    MAT_E                                   = VALUE(FLOAT,"Young's Modulus");
    MAT_NU                                  = VALUE(FLOAT,"Poisson's Ratio");
    MAT_SIGY                                = VALUE(FLOAT,"Yield Parameter");
    MAT_BETA                                = VALUE(FLOAT,"Hardening Parameter");
    MAT_HARD                                = VALUE(FLOAT,"Hardening Exponent");
    MAT_SIG                                 = VALUE(FLOAT,"Maximum Stress");
    MAT_EPS                                 = VALUE(FLOAT,"Failure Plastic Strain");
    MAT_SRP                                 = VALUE(FLOAT,"Minimum Strain Rate");
    MAT_SRC                                 = VALUE(FLOAT,"Strain Rate Exponent");
    MAT_R00                                 = VALUE(FLOAT,"Lankford Parameter  0 Degrees");
    MAT_R45                                 = VALUE(FLOAT,"Lankford Parameter 45 Degrees");
    MAT_R90                                 = VALUE(FLOAT,"Lankford Parameter 90 Degrees");
    MAT_Iyield                              = VALUE(INT,"Yield Stress Flag");
    // HEAT
    Heat_Inp_opt                            = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT                         = VALUE(SUBOBJECT, "");
    // THERM_STRESS
    THERM_STRESS                            = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS                     = VALUE(SUBOBJECT, "");
    Mat_Name_OR_LawNo                       = VALUE(INT, "");
    TITLE                                   = VALUE(STRING,"");
    IO_FLAG                                 = VALUE(INT, "");
    LAW_NO                                  = VALUE(STRING, "");
}
SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    MAT_REFRHO_Option                       = 4285;
    MAT_RHO                                 = 118;
    Refer_Rho                               = 4229;
    MAT_E                                   = 119;
    MAT_NU                                  = 120;
    MAT_BETA                                = 148;
    MAT_EPS                                 = 195;
    MAT_HARD                                = 71;
    MAT_R00                                 = 5077;
    MAT_R45                                 = 5078;
    MAT_R90                                 = 5079;
    MAT_SIG                                 = 5038;
    MAT_SIGY                                = 152;
    MAT_SRC                                 = 155;
    MAT_SRP                                 = 156;
    NUM_COMMENTS                            = 5110;
    MAT_Iyield                              = 5010;
    Mat_Name_OR_LawNo                       = 4538;
    LAW_NO                                  = -1;
    IO_FLAG                                 = -1;
    TITLE                                   = -1;
    DUMMY                                   = -1;
    //HEAT
    Heat_Inp_opt                            = 4346;
    SUBGRP_HEAT_MAT                         = -1;
    // THERM_STRESS
    THERM_STRESS                            = 4555;
    SUBGRP_THERM_STRESS                     = -1;
}

PARAMETERS(PARAMETERS) {
    MAT_RHO                 = INPUT_SCALAR(MAT_RHO, "Initial density");
    MAT_E                   = INPUT_SCALAR(MAT_E, "Young modulus ");
    MAT_NU                  = INPUT_SCALAR(MAT_NU, "Poisson coeff.");
    MAT_SIGY                = INPUT_SCALAR(MAT_SIGY, "Yield parameter");
    MAT_BETA                = INPUT_SCALAR(MAT_BETA, "Hardening parameter");
    MAT_HARD                = INPUT_SCALAR(MAT_HARD, "Hardening exponent");
    MAT_SIG                 = INPUT_SCALAR(MAT_SIG, "Maximum stress");
    MAT_EPS                 = INPUT_SCALAR(MAT_EPS, "Failure plastic strain");
    MAT_SRP_MIN             = INPUT_SCALAR(MAT_SRP,"Reference strain rate");
    MAT_SRC_32              = INPUT_SCALAR(MAT_SRC,"Strain rate exponent");
    MAT_R00                 = INPUT_SCALAR(MAT_R00, "Lankford param.  0 deg");
    MAT_R45                 = INPUT_SCALAR(MAT_R45, "Lankford param. 45 deg");
    MAT_R90                 = INPUT_SCALAR(MAT_R90, "Lankford param. 90 deg");
}
DRAWABLES(COMMON) {
public:
    INITIAL_DENSITY         = SCALAR(MAT_RHO);
    YOUNG_MODULUS           = SCALAR(MAT_E);
    POISSON_RATIO           = SCALAR(MAT_NU);
    SOUND_SPEED             = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
private:
    G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
    C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
public:
    SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/INITIAL_DENSITY)^0.5);
}

CHECK(COMMON)
{
    MAT_BETA                >=0.0;
    MAT_E                   >0.0;
    MAT_EPS                 >=0.0;
    MAT_HARD                >=0.0;
    MAT_HARD                <=1.0;
    MAT_NU                  >=0.0;
    MAT_NU                  <0.5;
    MAT_RHO                 >0.0;
    MAT_SIG                 >=0.0;
    MAT_SIGY                >0.0;
    MAT_SRP                 >=0.0;
}

DEFAULTS(COMMON)
{
    MAT_EPS                 = 1.0e30;
    MAT_R00                 = 1.0;
    MAT_R45                 = 1.0;
    MAT_R90                 = 1.0;
    MAT_SIG                 = 1.0e30;
    MAT_SRC                 = 0.0;
    MAT_SRP                 = 1.0;
}

GUI(COMMON) {
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Mat_Name_OR_LawNo ==2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW32/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/HILL/");
    }
    FLAG(MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)       { DIMENSION="density";  }
    }
    mandatory:
        SCALAR(MAT_RHO)         { DIMENSION="density";  }
    mandatory:
        SCALAR(MAT_E)           { DIMENSION="pressure";      }
    optional:
        SCALAR(MAT_NU)          { DIMENSION="DIMENSIONLESS"; }
        //
    mandatory:
        SCALAR(MAT_SIGY)        { DIMENSION="pressure"; }              
    optional:
        SCALAR(MAT_BETA)        { DIMENSION="DIMENSIONLESS"; }
        SCALAR(MAT_HARD)        { DIMENSION="DIMENSIONLESS"; }
        SCALAR(MAT_EPS)         { DIMENSION="DIMENSIONLESS"; }
        SCALAR(MAT_SIG)         { DIMENSION="pressure";      }
        SCALAR(MAT_SRP)         { DIMENSION="f";     }
        SCALAR(MAT_SRC)         { DIMENSION="DIMENSIONLESS"; }
        SCALAR(MAT_R00)        { DIMENSION="DIMENSIONLESS"; }
        SCALAR(MAT_R45)        { DIMENSION="DIMENSIONLESS"; }
        SCALAR(MAT_R90)        { DIMENSION="DIMENSIONLESS"; }
        RADIO(MAT_Iyield) {
            ADD(0,"0: Average Yield Stress Input");
            ADD(1,"1: Yield Stress in Orthotropic Direction 1");
        }
        // HEAT data
        graphical FLAG(Heat_Inp_opt);
        if (Heat_Inp_opt!= 0) {
            SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
        } 
        // THERM_STRESS
        graphical FLAG(THERM_STRESS);
        if (THERM_STRESS!= 0) {
            SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
        }
    /*
    mandatory:
    graphical SUPPORT("Support") {
    OBJECTS=(/COMPONENT/SHELL);
    ADD(COMPONENT,"Parts");
    }
    */
}
// File format
FORMAT(radioss140) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW32/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else 
    {
        HEADER("/MAT/HILL/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                  E                  NU");
    CARD("%20lg%20lg",MAT_E,MAT_NU);
    COMMENT("#                  A           EPSILON_0                   n             EPS_max           SIGMA_max");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_SIGY,MAT_BETA,MAT_HARD,MAT_EPS,MAT_SIG);
    COMMENT("#          EPS_DOT_0                   m");
    CARD("%20lg%20lg",MAT_SRP,MAT_SRC);
    COMMENT("#                r00                 r45                 r90                       Iyield0");
    CARD("%20lg%20lg%20lg                    %10d",MAT_R00,MAT_R45,MAT_R90,MAT_Iyield);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
FORMAT(radioss90) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW32/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else 
    {
        HEADER("/MAT/HILL/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                  E                  NU");
    CARD("%20lg%20lg",MAT_E,MAT_NU);
    COMMENT("#                  A           EPSILON_0                   n             EPS_max           SIGMA_max");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_SIGY,MAT_BETA,MAT_HARD,MAT_EPS,MAT_SIG);
    COMMENT("#          EPS_DOT_0                   m");
    CARD("%20lg%20lg",MAT_SRP,MAT_SRC);
    COMMENT("#                r00                 r45                 r90");
    CARD("%20lg%20lg%20lg",MAT_R00,MAT_R45,MAT_R90);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
FORMAT(radioss51) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW32/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#        Init. dens.          Ref. dens.");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#        Init. dens.");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                  E                  NU");
    CARD("%20lg%20lg",MAT_E,MAT_NU);
    COMMENT("#                  A            EPSILON0                   N             EPS_MAX             SIG_MAX");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_SIGY,MAT_BETA,MAT_HARD,MAT_EPS,MAT_SIG);
    COMMENT("#          EPS_DOT_0                   M");
    CARD("%20lg%20lg",MAT_SRP,MAT_SRC);
    COMMENT("#                R00                 R45                 R90");
    CARD("%20lg%20lg%20lg",MAT_R00,MAT_R45,MAT_R90);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
FORMAT(radioss41) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    COMMENT("#    Init. dens.");
    CARD("%16lg",MAT_RHO);
    COMMENT("#                  E                  NU");
    CARD("%16lg%16lg",MAT_E,MAT_NU);
    COMMENT("#                  A            EPSILON0                   N             EPS_MAX             SIG_MAX");
    CARD("%16lg%16lg%16lg%16lg%16lg",MAT_SIGY,MAT_BETA,MAT_HARD,MAT_EPS,MAT_SIG);
    COMMENT("#               ESP0                   M");
    CARD("%16lg%16lg",MAT_SRP,MAT_SRC);
    COMMENT("#                R00                 R45                 R90");
    CARD("%16lg%16lg%16lg",MAT_R00,MAT_R45,MAT_R90);
}
