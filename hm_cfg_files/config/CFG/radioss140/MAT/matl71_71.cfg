//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.

// Material law 71 (Superelastic) Setup File

ATTRIBUTES(COMMON) 
{
    KEYWORD_STR             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS            = SIZE("NUM_COMMENTS");
    CommentEnumField        = VALUE(INT,"User Comments");
    COMMENTS                = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    MAT_RHO                 = VALUE(FLOAT,"Initial Density");
    Refer_Rho               = VALUE(FLOAT,"Reference Density (for lower than 14.0 version)");
    DUMMY                   = VALUE(STRING,"Dummy Variable for Ref_Rho Flag");
    MAT_REFRHO_Option       = VALUE(INT, "RefRho_Option");
    E                       = VALUE(FLOAT,"Young's modulus");
    nu                      = VALUE(FLOAT,"Poisson's Ratio");
    E_mart                  = VALUE(FLOAT,"Martensite Young's Modulus");
    Sig_sas                 = VALUE(FLOAT,"Parameter for Start of Phase Transformation From Austenite to Martensite");
    Sig_fas                 = VALUE(FLOAT,"Parameter for End of Phase Transformation From Austenite to Martensite");
    Sig_ssa                 = VALUE(FLOAT,"Parameter for Start of Phase Transformation From Martensite to Austenite");
    Sig_fsa                 = VALUE(FLOAT,"Parameter for End of Phase Transformation From Martensite to Austenite");
    Alpha                   = VALUE(FLOAT,"Parameter for Difference in Response Between Tension and Compression");
    EpsL                    = VALUE(FLOAT,"Maximum Residual Strain");
    CAS                     = VALUE(FLOAT,"Stress-Temperature Rate During Loading");
    CSA                     = VALUE(FLOAT,"Stress-Temperature Rate During Unloading");
    TSAS                    = VALUE(FLOAT,"Initial Temperature for Transformation (AS)");
    TFAS                    = VALUE(FLOAT,"Final Temperature for Transformation (AS)");
    TSSA                    = VALUE(FLOAT,"Initial Temperature for Transformation (SA)");
    TFSA                    = VALUE(FLOAT,"Final Temperature for Transformation (SA)");
    CP                      = VALUE(FLOAT,"Specific Heat Capacity");
    TINI                    = VALUE(FLOAT,"Initial Temperature");
    Heat_Inp_opt            = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT         = VALUE(SUBOBJECT, "");
    THERM_STRESS            = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS     = VALUE(SUBOBJECT, "");
    IO_FLAG                 = VALUE(INT, "");
    TITLE                   = VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR             = 9000;
    COMMENTS                = 5109;
    CommentEnumField        = 7951;
    Heat_Inp_opt            = 4346;
    SUBGRP_HEAT_MAT         = -1;
    THERM_STRESS            = 4555;
    SUBGRP_THERM_STRESS     = -1;
    MAT_REFRHO_Option       = 4285;
    MAT_RHO                 = 118;
    Refer_Rho               = 4229;
    E                       = 1448;
    nu                      = 1447;
    Alpha                   = 982;
    CAS                     = 1456;
    CP                      = 8160;
    CSA                     = 1457;
    E_mart                  = 1449;
    EpsL                    = 1455;
    Sig_fas                 = 1451;
    Sig_fsa                 = 1453;
    Sig_sas                 = 1450;
    Sig_ssa                 = 1452;
    TFAS                    = 1459;
    TFSA                    = 1461;
    TINI                    = 1463;
    TSAS                    = 1458;
    TSSA                    = 1460;
    NUM_COMMENTS            = 5110;
    DUMMY                   = -1;
    IO_FLAG                 = -1;
    TITLE                   = -1;
}
DRAWABLES(COMMON) {
public:
    INITIAL_DENSITY                 = SCALAR(MAT_RHO);
    YOUNG_MODULUS                   = SCALAR(E);
    POISSON_RATIO                   = SCALAR(nu);
public:
    SOUND_SPEED                     = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
private:
    G                               = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
    C1                              = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
public:
    SOUND_SPEED_SOLID               = EVAL(((4*G/3+C1)/INITIAL_DENSITY)^0.5);
}

CHECK(COMMON)
{
    MAT_RHO                 >0.0;
}

DEFAULTS(COMMON)
{
    CP                      = 10E30;
    TINI                    = 360;
}

GUI(COMMON) 
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    ASSIGN(KEYWORD_STR, "/MAT");
    ASSIGN(KEYWORD_STR, "/LAW71/");
    FLAG(MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)      { DIMENSION="density";       }
    }
mandatory:
    SCALAR(MAT_RHO)      { DIMENSION="density";            }
    SCALAR(E)       { DIMENSION="pressure";      }
    SCALAR(nu)      { DIMENSION = "DIMENSIONLESS"; }
optional:
    SCALAR(E_mart)  { DIMENSION="pressure";      }
mandatory:
    SCALAR(Sig_sas)  { DIMENSION="pressure";      }
    SCALAR(Sig_fas)  { DIMENSION="pressure";      }
    SCALAR(Sig_ssa)  { DIMENSION="pressure";      }
    SCALAR(Sig_fsa)  { DIMENSION="pressure";      }
optional:
    SCALAR(Alpha)   { DIMENSION = "DIMENSIONLESS"; }
optional:
    SCALAR(EpsL)    { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(CAS)     { DIMENSION = "pressure"; }
    SCALAR(CSA)     { DIMENSION = "pressure"; }
    SCALAR(TSAS)    { DIMENSION="k"; }
    SCALAR(TFAS)    { DIMENSION="k"; }
    SCALAR(TSSA)    { DIMENSION="k"; }
    SCALAR(TFSA)    { DIMENSION="k"; }
    SCALAR(CP)      { DIMENSION = "thermal_massic_capacity"; }
    SCALAR(TINI)    { DIMENSION="k"; }
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    } 
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    }
    /*
    mandatory:
    graphical SUPPORT("Support") {
    OBJECTS=(/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D,/COMPONENT/PENTA6,/COMPONENT/LINEAR_THICK,
    /COMPONENT/TETRA10,/COMPONENT/SHEL16,/COMPONENT/BRIC20,/COMPONENT/SHELL);
    ADD(COMPONENT,"Parts");
    }
    */
}

FORMAT(radioss140) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/MAT/LAW71/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                  E                  Nu              E_mart");
    CARD("%20lg%20lg%20lg",E,nu,E_mart);
    COMMENT("#            sig_sas             sig_fas             sig_ssa             sig_fsa               alpha");
    CARD("%20lg%20lg%20lg%20lg%20lg",Sig_sas,Sig_fas,Sig_ssa,Sig_fsa,Alpha);
    COMMENT("#               EpsL                 CAS                 CSA                TSAS                TFAS");
    CARD("%20lg%20lg%20lg%20lg%20lg",EpsL,CAS,CSA,TSAS,TFAS);
    COMMENT("#               TSSA                TFSA                  CP                TINI");
    CARD("%20lg%20lg%20lg%20lg",TSSA,TFSA,CP,TINI);  
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
