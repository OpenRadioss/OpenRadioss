//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2022 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to 
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided 
//Copyright>    that any modification to CFG by a third party must be provided back to 
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software. 
//Copyright>  
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR 
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, 
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /INIBRI/STRA_F subobject file
//

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    // Card 1
    brick_ID                                  = VALUE(ELEMS, "Element identifier");
    Nb_integr                                 = SIZE("Number of integration point");
    Isolnod                                   = VALUE(INT, "Number of nodes of solid element");
    Isolid                                    = VALUE(INT, "Solid elements formulation");
    nptr                                      = VALUE(INT, "Number of integration points in direction r");
    npts                                      = VALUE(INT, "Number of integration points in direction s");
    nptt                                      = VALUE(INT, "Number of integration points in direction t");
    nlay                                      = VALUE(INT, "Number of layers");

    // Card 2
    EPSILON_1                                 = ARRAY[Nb_integr](FLOAT, "Strain in direction 1");
    EPSILON_2                                 = ARRAY[Nb_integr](FLOAT, "Strain in direction 2");
    EPSILON_3                                 = ARRAY[Nb_integr](FLOAT, "Strain in direction 3");

    // Card 3
    EPSILON_12                                = ARRAY[Nb_integr](FLOAT, "Strain in direction 12");
    EPSILON_23                                = ARRAY[Nb_integr](FLOAT, "Strain in direction 23");
    EPSILON_31                                = ARRAY[Nb_integr](FLOAT, "Strain in direction 31");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    // Card 1
    brick_ID                                  = -1;
    Nb_integr                                 = -1;
    Isolnod                                   = -1;
    Isolid                                    = -1;
    nptr                                      = -1;
    npts                                      = -1;
    nptt                                      = -1;
    nlay                                      = -1;

    // Card 2
    EPSILON_1                                 = -1;
    EPSILON_2                                 = -1;
    EPSILON_3                                 = -1;

    // Card 3
    EPSILON_12                                = -1;
    EPSILON_23                                = -1;
    EPSILON_31                                = -1;
}


DEFAULTS(COMMON)
{
}

GUI(COMMON)
{
    DATA(brick_ID, "brick_ID");
    SIZE(Nb_integr);
    SCALAR(Isolnod, "Isolnod")                { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(Isolid, "Isolid")                  { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(nptr, "nptr")                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(npts, "npts")                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(nptt, "nptt")                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(nlay, "nlay")                      { DIMENSION = "DIMENSIONLESS"; }

    ARRAY(Nb_integr, "")
    {
      SCALAR(EPSILON_1, "EPSILON_1")          { DIMENSION = "DIMENSIONLESS"; }
      SCALAR(EPSILON_2, "EPSILON_2")          { DIMENSION = "DIMENSIONLESS"; }
      SCALAR(EPSILON_3, "EPSILON_3")          { DIMENSION = "DIMENSIONLESS"; }

      SCALAR(EPSILON_12, "EPSILON_12")        { DIMENSION = "DIMENSIONLESS"; }
      SCALAR(EPSILON_23, "EPSILON_23")        { DIMENSION = "DIMENSIONLESS"; }
      SCALAR(EPSILON_31, "EPSILON_31")        { DIMENSION = "DIMENSIONLESS"; }
    }
}

// File format
FORMAT(radioss110)
{
    COMMENT("# brick_ID Nb_integr   Isolnod    Isolid      nptr      npts      nptt");
    CARD("%10d%10d%10d%10d%10d%10d%10d", brick_ID, Nb_integr, Isolnod, Isolid, nptr, npts, nptt);

      CARD_LIST(Nb_integr)
      {
        COMMENT("#          EPSILON_1           EPSILON_2           EPSILON_3");
        CARD("%20lg%20lg%20lg", EPSILON_1, EPSILON_2, EPSILON_3);

        COMMENT("#         EPSILON_12          EPSILON_23          EPSILON_31");
        CARD("%20lg%20lg%20lg", EPSILON_12, EPSILON_23, EPSILON_31);
      }
}

FORMAT(radioss140)
{
    COMMENT("# brick_ID Nb_integr   Isolnod    Isolid      nptr      npts      nptt  nlay");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10d", brick_ID, Nb_integr, Isolnod, Isolid, nptr, npts, nptt, nlay);

      CARD_LIST(Nb_integr)
      {
        COMMENT("#          EPSILON_1           EPSILON_2           EPSILON_3");
        CARD("%20lg%20lg%20lg", EPSILON_1, EPSILON_2, EPSILON_3);

        COMMENT("#         EPSILON_12          EPSILON_23          EPSILON_31");
        CARD("%20lg%20lg%20lg", EPSILON_12, EPSILON_23, EPSILON_31);
      }
}
