//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- inish3_fail_sub.cfg ---

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    //Card 1
    shell_ID                           = VALUE(ELEMS,"Element identifier"){ SUBTYPES = ( /ELEMS/SH3N ) ; }
    Nlay                               = VALUE(INT,  "Number of layers");
    npg                                = VALUE(INT,  "Number of surface quadrature points");
    nptt                               = VALUE(INT,  "Integration point number through the thickness");
    lay_ID                             = VALUE(INT,  "Layer to initialize identifier");
    fail_ID                            = VALUE(FAIL,  "Failure criteria to initialize identifier");
    Ifail_typ                          = VALUE(INT,  "Failure criteria number to initialize");
    Nvar                               = SIZE(       "Number of failure criteria variables to initialize");
    mat_ID                             = VALUE(MAT,  "Material identifier to initialize");

    //Card 2
    num_lines                          = SIZE("Number of line");
//   V                                  = ARRAY[nptt][npg][Nlay][Nvar](FLOAT, "Nth failure criteria variable");
    V                                  = ARRAY[num_lines][Nvar](FLOAT, "Nth failure criteria variable");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    shell_ID                           = -1;
    Nlay                               = -1;
    npg                                = -1;
    nptt                               = -1;
    lay_ID                             = -1;
    fail_ID                            = -1;
    Ifail_typ                          = -1;
    Nvar                               = -1;
    mat_ID                             = -1;

    //Card 2
    num_lines                          = -1;
    V                                  = -1;
}


GUI(COMMON)
{
    //Card 1
    DATA(shell_ID, "shell_ID");
    SCALAR(Nlay,   "Nlay")   ;
    RADIO(npg,     "npg")
    {
        ADD(0, "0: (Default) Set to 1");
        ADD(1, "1: Must be used for shell formulations shell_ID =1, 2, 3, 4, 24 or Ish3n =1, 2, 31");
        ADD(3, "3: Must be used for DKT18 shell formulation (Ish3n =30)");
        ADD(4, "4: Must be used for BATOZ formulation (shell_ID =12)");
    }
    SCALAR(nptt,     "nptt")  ;
    SCALAR(lay_ID,   "lay_ID")         { DIMENSION = "DIMENSIONLESS" ; }
    DATA(fail_ID,  "fail_ID");
    SCALAR(Ifail_typ,"Ifail_typ")      { DIMENSION = "DIMENSIONLESS" ; }
    DATA(mat_ID,     "mat_ID");

    //Card 2
    SIZE(Nvar,  "num_lines");
    ASSIGN(num_lines, Nlay * nptt);
    if(npg >1)
    {
        ASSIGN(num_lines, num_lines * npg);
    }
    SIZE(num_lines,  "num_lines");
    ARRAY(num_lines, "num_lines")
    {
        SCALAR(V, "V")                 { DIMENSION = "DIMENSIONLESS" ; }
    }
}

// File format
FORMAT(radioss140)
{
    //Card 1
    COMMENT("# shell_ID      Nlay       npg      nptt    lay_ID   fail_ID Ifail_typ      Nvar    mat_ID");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10d%10d", shell_ID, Nlay, npg, nptt, lay_ID, fail_ID, Ifail_typ, Nvar, mat_ID);
    //Cards
    COMMENT("#                 Vi                  Vj                  Vk");
    ASSIGN(num_lines, Nlay * nptt,IMPORT);
    if(npg >1)
    {
        ASSIGN(num_lines, num_lines * npg,IMPORT);
    }
    CARD_LIST(num_lines)
    {
        CELL_LIST(Nvar,"%20lg", V,60);
    }
}