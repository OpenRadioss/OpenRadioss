//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// KEYWORD : SUBOBJECT of AIRBAG1 AND COMMU1
// HM TYPE : AIRBAGINJECTORS
//

ATTRIBUTES(COMMON)
{
  injector_id     = VALUE(PROP,   "Injector property identifier");
  sensor          = VALUE(SENSOR, "Sensor identifier");
  ijet            = VALUE(INT,    "Jetting flag");
  node1           = VALUE(NODE,   "Node identifiers N1 for jet shape definition");
  node2           = VALUE(NODE,   "Node identifiers N2 for jet shape definition");
  node3           = VALUE(NODE,   "Node identifiers N3 for jet shape definition");
  fct_pt          = VALUE(FUNCT,  "Identifier of the function number defining DeltaP(t)");
  fct_theta       = VALUE(FUNCT,  "Identifier of the function number defining DeltaP(theta)");
  fct_delta       = VALUE(FUNCT,  "Identifier of the function number defining DeltaP(delta)");
  fscale_pt       = VALUE(FLOAT,  "Scale factor for fct_IDP(t)");
  fscale_ptheta   = VALUE(FLOAT,  "Scale factor for fct_IDP(theta)");
  fscale_pdelta   = VALUE(FLOAT,  "Scale factor for fct_IDP(delta)");
}

CHECK(COMMON)
{
}

DEFAULTS(COMMON)
{
  fscale_pt       = 1.0;
  fscale_ptheta   = 1.0;
  fscale_pdelta   = 1.0;
}

GUI(COMMON)
{
  DATA(injector_id);
  DATA(sensor);
  RADIO(ijet)
  {
      ADD(0, "No jetting");
      ADD(1, "Jetting");
  }
  
  if (ijet == 1)
  {
    DATA(node1);
    DATA(node2);
    DATA(node3);
    DATA(fct_pt);
    DATA(fct_theta);
    DATA(fct_delta);
    SCALAR(fscale_pt)     {DIMENSION="pressure";} 
    SCALAR(fscale_ptheta) {DIMENSION="pressure";}
    SCALAR(fscale_pdelta) {DIMENSION="pressure";}
  }
}

FORMAT(radioss100) 
{
  COMMENT("#inject_ID   sens_ID      Ijet  node_ID1  node_ID2  node_ID3");
  CARD("%10d%10d%10d%10d%10d%10d",injector_id,sensor,ijet,node1,node2,node3);
  //
  if(ijet>0) 
  {
    COMMENT("# fct_IDptfct_pthetafct_pdelta                      Fscalept        Fscaleptheta        Fscalepdelta");
    CARD("%10d%10d%10d          %20lf%20lf%20lf",fct_pt,fct_theta,fct_delta,fscale_pt,fscale_ptheta,fscale_pdelta);
  }
}
