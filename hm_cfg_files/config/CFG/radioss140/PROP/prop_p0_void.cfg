//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Property void type0
ATTRIBUTES(COMMON)
{
    THICK                                   = VALUE(FLOAT,  "Thickness");
    TITLE                                   = VALUE(STRING,"");

    //Attributes used HM usage
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING,  "Entity_Comments");
    CommentEnumField                        = VALUE(INT,  "User Comments");   
    Prop_ThickOption                        = VALUE(INT,  "OptionThick");
    DUMMY                                   = VALUE(STRING,"Dummy variable for THICK flag");
    Prop_Name_OR_Type                       = VALUE(INT, "");
    IO_FLAG                                 = VALUE(INT, "");
    TYPE_NO                                 = VALUE(STRING, "");
}
SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    NUM_COMMENTS                            = 5110;    
    Prop_ThickOption                        = 4171;
    THICK                                   =  431;
    DUMMY                                   =   -1;
    Prop_Name_OR_Type                       = 4537;
    TYPE_NO                                 =   -1;
    IO_FLAG                                 =   -1;
    TITLE                                   =   -1;
}
DEFAULTS(COMMON)
{
}

GUI(COMMON)
{
   RADIO(CommentEnumField)
   {
       ENUM_VALUE_FLAG=TRUE;
       ADD(1, "1:Hide in Menu/Export");
       ADD(2, "2:Show in Menu/Export");
       ADD(3, "3:Do Not Export");
   }
   if(CommentEnumField == 2)
   {
       SIZE(NUM_COMMENTS);
       ARRAY(NUM_COMMENTS,"")
       {
          SCALAR(COMMENTS);
       }
   }
   if(Prop_Name_OR_Type == 2)
   {
       ASSIGN(KEYWORD_STR, "/PROP");
       ASSIGN(KEYWORD_STR, "/TYPE0/");
   }
   else
   {
       ASSIGN(KEYWORD_STR, "/PROP");
       ASSIGN(KEYWORD_STR, "/VOID/");
   }
   FLAG(Prop_ThickOption);
   if(Prop_ThickOption!=FALSE)
   {
       SCALAR(THICK) {DIMENSION="l";}
   }
}
// File format for radioss 140
FORMAT(radioss140) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE0/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/VOID/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    if(IO_FLAG==1)
    {
        FREE_CARD(Prop_ThickOption,"%20lg",THICK);
    }
    else if(Prop_ThickOption != 0)
    {
        COMMENT("#              THICK");
        CARD("%20lg",THICK);
    }
}
// File format for radioss 51
FORMAT(radioss51) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE0/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/VOID/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    if(IO_FLAG==1)
    {
        FREE_CARD(Prop_ThickOption,"%20lg",THICK);
    }
    else if(Prop_ThickOption != 0)
    {
        COMMENT("#              THICK");
        CARD("%20lg",THICK);
    }
}

//File format for radioss 41
FORMAT(radioss41)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s/%d/%s",TYPE_NO,_ID_,TITLE);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
}
