//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Property type 46 SPR_MUSCLE

ATTRIBUTES(COMMON)
{
    PROP_MASS                         = VALUE(FLOAT,  "Element Mass");
    STIFF0                            = VALUE(FLOAT,  "Initial Element Stiffness");
    VEL_X                             = VALUE(FLOAT,  "Maximum Velocity or Strain Rate");
    NFORCE                            = VALUE(FLOAT,  "Initial Force");
    STIFF1                            = VALUE(FLOAT,  "Contact Stiffness");
    FUN_A1                            = VALUE(FUNCT,  "Time Dependent Scale Function Identifier (Factor Vs. Time)");
    FUN_B1                            = VALUE(FUNCT,  "Scale Function Identifier (Factor vs Strain or Factor Vs Elongation)");
    FUN_C1                            = VALUE(FUNCT,  "Scale function identifier (Force Vs Strain or Force Vs velocity)");
    FUN_D1                            = VALUE(FUNCT,  "Function identifier for (Force Vs Strain or Force Vs Displacement)");
    MAT_IMASS                         = VALUE(INT,  "Mass Input Variable Flag");
    DAMP1                             = VALUE(FLOAT,  "Damping Coefficient");
    EPSI                              = VALUE(INT,  "Deflection Calculation Flag");
    FScale11                          = VALUE(FLOAT,  "Scale Factor for Abscissa (Time) for Fct_ID1");
    FScale22                          = VALUE(FLOAT,  "Scale Factor for Abscissa (Elongation) for Fct_ID2");
    FScale21                          = VALUE(FLOAT,  "Scale Factor for Abscissa for Fct_ID3 ");
    FScale12                          = VALUE(FLOAT,  "Scale Factor for Ordinate (Force) for Fct_ID4");
    
    //Attributes for HM usage
    KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                      = SIZE("NUM_COMMENTS");
    COMMENTS                          = ARRAY[NUM_COMMENTS](STRING,  "Entity_Comments");
    CommentEnumField                  = VALUE(INT,  "User Comments");
    Prop_Name_OR_Type                 = VALUE(INT, "");
    IO_FLAG                           = VALUE(INT, "");
    TYPE_NO                           = VALUE(STRING, "");
    TITLE                             = VALUE(STRING, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                       = 9000;
    NUM_COMMENTS                      = 5110;
    COMMENTS                          = 5109;
    CommentEnumField                  = 7951;
    //
    PROP_MASS                         = 1416;
    STIFF0                            =  831;
    VEL_X                             =  747;
    NFORCE                            = 5166;
    STIFF1                            = 1131;
    //
    FUN_A1                            =   45;
    FUN_B1                            =  168;
    FUN_C1                            = 1189;
    FUN_D1                            = 8035;
    MAT_IMASS                         = 1412;
    //
    DAMP1                             =  254;
    EPSI                              = 1425;
    //
    FScale11                          = 4050;
    FScale22                          = 4051;
    FScale21                          = 4426;
    FScale12                          = 4053;
    //
    Prop_Name_OR_Type                 = 4537;
    TITLE                             =   -1;
    TYPE_NO                           =   -1;
    IO_FLAG                           =   -1;
}

DEFAULTS(COMMON)
{
    Prop_Name_OR_Type                 = 0;
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "1:Hide in Menu/Export");
        ADD(2, "2:Show in Menu/Export");
        ADD(3, "3:Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Prop_Name_OR_Type == 2)
    {
        ASSIGN(KEYWORD_STR, "/PROP");
        ASSIGN(KEYWORD_STR, "/TYPE46/");

    }
    else
    {
        ASSIGN(KEYWORD_STR, "/PROP");
        ASSIGN(KEYWORD_STR, "/SPR_MUSCLE/");
    }
mandatory:
    SCALAR(PROP_MASS)       { if(MAT_IMASS==1) { DIMENSION="m"; } else { DIMENSION="lineic_mass"; } }
    SCALAR(STIFF0)          { DIMENSION="translation_stiffness";}
optional:
    SCALAR(VEL_X) {if(EPSI==1)   { DIMENSION="velocity";} else {DIMENSION="f";} }
    SCALAR(NFORCE)          { DIMENSION="force";}
    SCALAR(STIFF1)          { DIMENSION="translation_stiffness";}
    
    FUNCTION(FUN_A1) {
    X_TITLE="Time";
    Y_TITLE="Scale factor";
    /FILTER/groupEnumField/1/EQ;
  }
  FUNCTION(FUN_B1) {if (EPSI==0) {
    X_TITLE="Strain";
    Y_TITLE="Scale factor"; } else {
    X_TITLE="Elongation"; Y_TITLE="Scale factor";}
    /FILTER/groupEnumField/1/EQ;
    }
    
  FUNCTION(FUN_C1) {if (EPSI==0) {
    X_TITLE="Strain rate";
    Y_TITLE="Scale factor"; } else {
    X_TITLE="Velocity"; Y_TITLE="Scale factor";}
    /FILTER/groupEnumField/1/EQ;
    }
    
  FUNCTION(FUN_D1) {if (EPSI==0) {
    X_TITLE="Strain";
    Y_TITLE="Force"; } else {
    X_TITLE="Displacement"; Y_TITLE="Force";}
    /FILTER/groupEnumField/1/EQ;
    }

    RADIO(MAT_IMASS)
    {
        ADD(0, "0:Mass is Per Unit Length (Equivalent to Density)");
        ADD(1, "1:Mass");
    }
    SCALAR(DAMP1) {DIMENSION="massFlux";}
    RADIO(EPSI)
    {
        ADD(0, "0:Strain");
        ADD(1, "1:Elongation");
    }
    SCALAR(FScale11)            { DIMENSION="t"; }
    SCALAR(FScale22) {if(EPSI==1) { DIMENSION="l";} else {DIMENSION="DIMENSIONLESS";} }
    SCALAR(FScale21) {if(EPSI==1) { DIMENSION="velocity";}  else {DIMENSION="f";} }
    SCALAR(FScale12)            { DIMENSION="force"; }
    //
    /*mandatory:
    graphical SUPPORT("Support") {
    OBJECTS=(/PART/SPRING);
    ADD(PART,"Parts");
    }*/
}

// File format for Radioss 140
FORMAT(radioss140) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE46/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/SPR_MUSCLE/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    COMMENT("#               Mass           Stiffness             Vel_max               Force                  Xk");
    CARD("%20lg%20lg%20lg%20lg%20lg",PROP_MASS,STIFF0,VEL_X,NFORCE,STIFF1);
    //
    COMMENT("#  fct_id1   fct_id2   fct_id3   fct_id4               Idens");
    CARD("%10d%10d%10d%10d          %10d",FUN_A1,FUN_B1,FUN_C1,FUN_D1,MAT_IMASS);
    //
    COMMENT("#               Damp      Epsi");
    CARD("%20lg%10d",DAMP1,EPSI);
    //
    COMMENT("#            Scale_t             Scale_x             Scale_v             Scale_F");
    CARD("%20lg%20lg%20lg%20lg",FScale11,FScale22,FScale21,FScale12);
}

