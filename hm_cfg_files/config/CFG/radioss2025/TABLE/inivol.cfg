//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- inivol.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES

    //HEADER
    secondarycomponentlistmax               = SIZE("Number of Components");
    secondarycomponentlist                  = ARRAY[secondarycomponentlistmax](COMPONENT, "Part of multi-material ALE elements to be filled");

    //Card 1
    displayname                             = VALUE(STRING, "Initial volume fraction title");

    //Cards
    NIP                                     = SIZE("No. of items to be filled");

    SETSURFID_ARR                           = ARRAY[NIP](SETS,  "Surface identifier") { SUBTYPES = ( /SETS/SURF_IDPOOL, /SETS/GRNOD  ) ; }
    ALE_PHASE                               = ARRAY[NIP](INT,   "Phase of the multi-material ALE to fill elements");
    fill_opt_arr                            = ARRAY[NIP](INT,   "Reverse normal vectors");
    ICUMU                                   = ARRAY[NIP](INT,   "Cumulative filling");
    FILL_RATIO                              = ARRAY[NIP](FLOAT, "Volumetric Fraction to add in related elements");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //Cards
    NIP                                     = 427;

    SETSURFID_ARR                           = 4799;
    ALE_PHASE                               = 2733;
    fill_opt_arr                            = 4802;
    ICUMU                                   = 2734;
    FILL_RATIO                              = 2735;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;
}

CHECK(COMMON)
{
    FILL_RATIO                              >= 0.0;
    FILL_RATIO                              <= 1.0;
}

DEFAULTS(COMMON)
{
    FILL_RATIO                              = 1.0;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/INIVOL/");

    SIZE(secondarycomponentlistmax,  "Number of Components");
    ARRAY(secondarycomponentlistmax, "Number of Components")
    {
        DATA(secondarycomponentlist, "part_ID");
    }
    SIZE(NIP,  "No. of items to be filled");
    ARRAY(NIP, "No. of items to be filled")
    {
        DATA(SETSURFID_ARR, "surf_IDn");
        SCALAR(ALE_PHASE,   "ALE_PHASE")      { DIMENSION = "DIMENSIONLESS" ; }
        RADIO(fill_opt_arr, "FILL_OPT")
        {
            ADD(0, "0: (Default) Filling the side along the normal direction of surface");
            ADD(1, "1: Filling the reverse side (opposite of the normal direction of surface)");
        }
        RADIO(ICUMU, "ICUMU")
        {
            ADD(0, "0: Erase existing filling");
            ADD(1, "1: Cumulative filling");
        }
        SCALAR(FILL_RATIO, "FILL_RATIO")    { DIMENSION = "DIMENSIONLESS" ; }
    }
}

// File format
FORMAT(radioss110)
{
    HEADER("/INIVOL/%-d/%-d", secondarycomponentlist, _ID_);

    //Card 1
    COMMENT("#inivol_title                                                                                       ");
    CARD("%-100s", displayname);

    //Cards
    FREE_CARD_LIST(NIP)
    {
        COMMENT("#  surf_ID ALE_PHASE  FILL_OPT");
        CARD("%10d%10d%10d", SETSURFID_ARR, ALE_PHASE, fill_opt_arr);
    }
}

FORMAT(radioss2019)
{
    HEADER("/INIVOL/%-d/%-d", secondarycomponentlist, _ID_);

    //Card 1
    COMMENT("#inivol_title                                                                                       ");
    CARD("%-100s", displayname);

    //Cards
    FREE_CARD_LIST(NIP)
    {
        COMMENT("#  surf_ID ALE_PHASE  FILL_OPT     ICUMU          FILL_RATIO");
        CARD("%10d%10d%10d%10d%20lg", SETSURFID_ARR, ALE_PHASE, fill_opt_arr, ICUMU, FILL_RATIO);
    }
}
