//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// DEF_SOLID - Solid Default Values Initialization (control cards)
//

ATTRIBUTES(COMMON)
{
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    ISOLID                                  = VALUE(INT,    "Solid elements formulation flag");
    Ismstr                                  = VALUE(INT,    "Small strain formulation flag");
    Icpre                                   = VALUE(INT,    "Constant pressure formulation flag");
    Istrain                                 = VALUE(INT,    "Compute strains for post-processing flag");
    Imas                                    = VALUE(INT,    "Nodal mass distribution (per element) flag");
    Iframe                                  = VALUE(INT,    "Element coordinate system formulation flag");
    Itetra4                                 = VALUE(INT,    "4 node tetrahedral element formulation flag");
    Itetra10                                = VALUE(INT,    "10 node tetrahedral element formulation flag");
    Iplas                                   = VALUE(INT,    " ");
    Icontrol                                = VALUE(INT,    "distortion control flag");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 7000;
    ISOLID                                  = 8003;
    Iframe                                  = 4002;
    Ismstr                                  = 5152;
    Istrain                                 = 8009;
    Imas                                    = 760;
    Itetra4                                 = 2719;
    Itetra10                                = 2720;
    Iplas                                   = 8008;
    Icpre                                   = 5396;
}

DEFAULTS(COMMON)
{
    ISOLID                                  = 1;
    Iframe                                  = 1;
    Ismstr                                  = 4;
    Istrain                                 = 2;
    Imas                                    = 2;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/DEF_SOLID");
    RADIO(ISOLID)
    {
        ADD( 0,"0: Default, set to 1");
        ADD( 1,"1: Standard 8-node solid element, one integration point. Viscous hourglass formulation with orthogonal and rigid deformation modes compensation (Belytschko)");
        ADD( 2,"2: Standard 8-node solid element, one integration point. Viscous hourglass formulation without orthogonality (Hallquist)");
        ADD(14,"14: HA8 locking-free 8-node solid or thick shell elements, co-rotational, full integration, variable number of Gauss points");
        ADD(15,"15: HSEPH/PA6 thick shell elements (8-node and 6-node respectively). Co-rotational, under integrated (one Gauss point in the plane) with physical stabilization");
        ADD(16,"16: Quadratic 16-node thick shell or Quadratic 20-node solid, full integration, variable number of Gauss points in all directions");
        ADD(17,"17: H8C compatible solid full integration formulation");
        ADD(18,"18: 8-node solid element, Co-rotational, full integration, fixed 2*2*2 Gauss integration points, shear locking-free, Icpre and Ismstr defaults are based on material");
        ADD(24,"24: HEPH 8-node solid element. Co-rotational, under-integrated (one Gauss point) with physical stabilization");
    }
    
    RADIO(Ismstr)
    {
        ADD(-2,"-2: Overwrite the value defined in the property with the best value based on element type and material law");
        ADD(-1,"-1: Automatically define the best value based on element type and material law");
        ADD( 0,"0: Default, set to 4");
        ADD( 1,"1: Small strain from time = 0");
        ADD( 2,"2: Full geometric nonlinearities with possible small strain formulation in Altair Radioss Engine (/DT/Eltyp/Iflag)");
        ADD( 3,"3: Simplified small strain formulation from time =0 (non-objective formulation)");
        ADD( 4,"4: Full geometric nonlinearities (/DT/BRICK/CST has no effect)");
        ADD(10,"10: Lagrange type total strain");
        ADD(11,"11: Total small strain formulation from t=0");
        ADD(12,"12: Lagrange type total strain with possible switch to total small strain formulation in Altair Radioss Engine (/DT/BRICK/CST)");
    }
    if( ISOLID == 14 || ISOLID == 17 || ISOLID == 18 || ISOLID == 24)
    {
        RADIO(Icpre)
        {
            ADD(-2,"-2: Overwrite the value defined in the property with the best value based on element type and material law");
            ADD(-1,"-1: Automatically define the best value based on element type and material law");
            ADD( 0,"0: Default, set to 1 or 3 depending on the Isolid value");
            ADD( 1,"1: (Default if Isolid = 17) Constant pressure formulation to prevent volumetric locking. Use with incompressible material where Nu close from 0.5");
            ADD( 2,"2: Formulation used is a function of plasticity. This allows the correct modeling of the elastic region when the material is compressible and the plastic region when the material becomes incompressible. Only available for elasto-plastic material laws.");
            ADD( 3,"3: (Default if Isolid=14 or 24) Standard formulation without constant pressure. Use with compressible materials, like foam. ");
        }
    }
/*
    RADIO(Istrain)
    {
        ADD(0,"0: Default, set to 2");
        ADD(1,"1: Yes");
        ADD(2,"2: No");
    }
*/
    RADIO(Itetra4)
    {
        ADD( 0,"0: Set to 1000");
        ADD( 1,"1: Quadratic /TETRA4 formulation with six DOF per node and four integration points");
        ADD( 3,"3: Linear /TETRA4 with an average nodal pressure formulation");
        ADD( 1000,"1000: Linear /TETRA4 formulation with one integration point");
    }
    
    RADIO(Itetra10)
    {
        ADD( 0,"0: Set to 1000");
        ADD( 2,"2: Quadratic /TETRA10 formulation with four integration points and the same time step as a /TETRA4 element");
        ADD( 1000,"1000: Quadratic /TETRA10 formulation with four integration points");
    }
    RADIO(Imas)
    {
        ADD(0,"0: default set to 2");
        ADD(1,"1: Distribution taking into account nodal volume angle");
        ADD(2,"2: Homogeneous distribution");
    }
    
    if( ISOLID == 1 || ISOLID == 2 || ISOLID == 17)
    {
        RADIO(Iframe)
        {
            ADD(0,"0: Default, set to 1");
            ADD(1,"1: Non co-rotational formulation");
            ADD(2,"2: Co-rotational formulation");
        }
    }
    RADIO(Icontrol)
    {
        ADD(-2,"-2: Overwrite the value defined in the property with the best value based on material law");
        ADD(-1,"-1: Automatically define the best value based on material law");
        ADD( 0,"0: Default, set to 2");
        ADD( 1,"1: distortion control set-on");
        ADD( 2,"2: distortion control set-off");
    }
}

// File format
FORMAT(radioss2025)
{
    HEADER("/DEF_SOLID");
    COMMENT("#   Isolid    Ismstr     Icpre             Itetra4  Itetra10      Imas    Iframe  Icontrol");
    CARD("%10d%10d%10d          %10d%10d%10d%10d%10d",ISOLID,Ismstr,Icpre,Itetra4,Itetra10,Imas,Iframe,Icontrol);
}
 
FORMAT(radioss2021)
{
    HEADER("/DEF_SOLID");
    COMMENT("#   Isolid    Ismstr     Icpre             Itetra4  Itetra10      Imas    Iframe");
    CARD("%10d%10d%10d          %10d%10d%10d%10d",ISOLID,Ismstr,Icpre,Itetra4,Itetra10,Imas,Iframe);
}
 
FORMAT(radioss2019)
{
    HEADER("/DEF_SOLID");
    COMMENT("#   Isolid    Ismstr             Istrain   Itetra4  Itetra10      Imas    Iframe");
    CARD("%10d%10d          %10d%10d%10d%10d%10d",ISOLID,Ismstr,Istrain,Itetra4,Itetra10,Imas,Iframe);
}

FORMAT(radioss2018)
{
    HEADER("/DEF_SOLID");
    COMMENT("#   Isolid    Ismstr             Istrain                          Imas    Iframe");
    CARD("%10d%10d          %10d                    %10d%10d",ISOLID,Ismstr,Istrain,Imas,Iframe);
}

FORMAT(radioss120)
{
    HEADER("/DEF_SOLID");
    COMMENT("#   Isolid    Ismstr             Istrain                          Imas    Iframe");
    CARD("%10d%10d          %10d                    %10d%10d",ISOLID,Ismstr,Istrain,Imas,Iframe);
}

FORMAT(radioss100)
{
    HEADER("/DEF_SOLID");
    COMMENT("#   Isolid    Ismstr             Istrain                                  Iframe");
    CARD("%10d%10d          %10d                              %10d",ISOLID,Ismstr,Istrain,Iframe);
}

FORMAT(radioss90)
{
    HEADER("/DEF_SOLID");
    COMMENT("#   Isolid    Ismstr                                                      Iframe");
    CARD("%10d%10d                                                  %10d",ISOLID,Ismstr,Iframe);
}

FORMAT(radioss51)
{
    HEADER("/DEF_SOLID");
    COMMENT("#   Isolid    Ismstr                                                      Iframe");
    CARD("%10d%10d                                                  %10d",ISOLID,Ismstr,Iframe);
}

FORMAT(radioss44)
{
    HEADER("/DEF_SOLID");
    COMMENT("#B_HOURG B_SSTRN  B_PLAS");
    CARD("%8d%8d%8d",ISOLID,Ismstr,Iplas);
}

FORMAT(radioss41)
{
    HEADER("/DEF_SOLID");
    COMMENT("#B_HOURG B_SSTRN");
    CARD("%8d%8d",ISOLID,Ismstr);
}
