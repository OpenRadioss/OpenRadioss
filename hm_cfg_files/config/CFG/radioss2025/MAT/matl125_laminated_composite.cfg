//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//MATERIAL LAW125

ATTRIBUTES(COMMON) {
    KEYWORD_STR             = VALUE(STRING,"Solver Keyword");
    NUM_COMMENTS            = SIZE("No. of Comment Lines");
    COMMENTS                = ARRAY[NUM_COMMENTS](STRING, "Entity_Comments");
    CommentEnumField        = VALUE(INT,  "User Comments");

    // Elastic parameters
    MAT_RHO                 = VALUE(FLOAT,"Initial density");
    LSD_MAT_EA              = VALUE(FLOAT,"Young's modulus for tension in fiber direction a");
    LSD_MAT_EB              = VALUE(FLOAT,"Young's modulus in matrix direction b");
    LSD_MAT_EC              = VALUE(FLOAT,"Young's modulus in matrix direction c");
    LSD_MAT_GAB             = VALUE(FLOAT,"Shear modulus in plane ab");
    LSD_MAT_GBC             = VALUE(FLOAT,"Shear modulus in plane bc");
    LSD_MAT_GCA             = VALUE(FLOAT,"Shear modulus in plane ca");
    LSD_MAT_PRBA            = VALUE(FLOAT,"Poisson's ratio in plane ba");
    LSDYNA_PRCA             = VALUE(FLOAT,"Poisson's ratio in plane ca");
    LSDYNA_PRCB             = VALUE(FLOAT,"Poisson's ratio in plane cb");

    LSD_FS                  = VALUE(INT  ,"Failure surface type");
    LSD_SOFT                = VALUE(FLOAT  ,"Softening reduction factor");
    
    MATL58_GAMMA1           = VALUE(FLOAT, "strain limit of the first slightly nonlinear part of the shear stress 12 ");
    MATL58_TAU1             = VALUE(FLOAT, "stress limit of the first slightly nonlinear part of the shear stress 12 ");
    LSD_MAT_GAMMA2          = VALUE(FLOAT, "strain limit of the first slightly nonlinear part of the shear stress 13 ");
    LSD_MAT_TAU2            = VALUE(FLOAT, "stress limit of the first slightly nonlinear part of the shear stress 13 ");
    LSD_MAT_GAMMA3          = VALUE(FLOAT, "strain limit of the first slightly nonlinear part of the shear stress 23 ");
    LSD_MAT_TAU3            = VALUE(FLOAT, "stress limit of the first slightly nonlinear part of the shear stress 23 ");

    LSD_LCID                = VALUE(FUNCT, "Load curve ID defining longitudinal compressive strength XC vs strain rate");
    LSD_LCID2               = VALUE(FUNCT, "Load curve ID defining longitudinal tensile strength XT vs. strain rate");
    LSD_LCID3               = VALUE(FUNCT, "Load curve ID defining transverse compressive strength YC vs. strain rate");
    LSD_LCID4               = VALUE(FUNCT, "Load curve ID defining transverse tensile strength YT vs. strain rate");
    LSD_LCID5               = VALUE(FUNCT, "Load curve ID defining shear strength SC vs. strain rate");
   
    LSD_LCID6               = VALUE(FUNCT, "Load curve ID defining TAU1 vs. strain rate");
    LSD_LCID7               = VALUE(FUNCT, "Load curve ID defining GAMMA1 vs. strain rate");
    
    LSD_MAT_LCZT            = VALUE(FUNCT, "Load curve ID defining longitudinal tensile strength ZT vs. strain rate");
    LSD_MAT_LCZC            = VALUE(FUNCT, "Load curve ID defining longitudinal compressive strength ZC vs strain rate");
    LSD_MAT_LCSC23          = VALUE(FUNCT, "Load curve ID defining shear strength SC23 vs. strain rate");
    LSD_MAT_LCSC31          = VALUE(FUNCT, "Load curve ID defining shear strength SC31 vs. strain rate");
   
    
    LSD_MAT_LCTAU2          = VALUE(FUNCT, "Load curve ID defining TAU2 (13) vs. strain rate");
    LSD_MAT_LCGAM2          = VALUE(FUNCT, "Load curve ID defining GAMMA2 (13) vs. strain rate");
    LSD_MAT_LCTAU3          = VALUE(FUNCT, "Load curve ID defining TAU3  (23) vs. strain rate");
    LSD_MAT_LCGAM3          = VALUE(FUNCT, "Load curve ID defining GAMMA3 (23)  vs. strain rate");
 
    LSD_LCID11              = VALUE(FUNCT, "Load curve ID defining E11C vs. strain rate");
    LSD_LCID12              = VALUE(FUNCT, "Load curve ID defining E11T vs. strain rate");
    LSD_LCID13              = VALUE(FUNCT, "Load curve ID defining E22C vs. strain rate");
    LSD_LCID14              = VALUE(FUNCT, "Load curve ID defining E22T vs. strain rate");
    LSD_LCID15              = VALUE(FUNCT, "Load curve ID defining GMS vs. strain rate");   

    LSD_LCID16              = VALUE(FUNCT, "ERODS vs. strain rate");
    
    LSD_MAT_LCE33C          = VALUE(FUNCT, "Load curve ID defining E33C vs. strain rate");
    LSD_MAT_LCE33T          = VALUE(FUNCT, "Load curve ID defining E33T vs. strain rate");
    LSD_MAT_LCGMS31         = VALUE(FUNCT, "Load curve ID defining GMS13 vs. strain rate");   
    LSD_MAT_LCGMS23         = VALUE(FUNCT, "Load curve ID defining GMS23 vs. strain rate");   
   
    LSD_MAT_XT              = VALUE(FLOAT,"Longitudinal tensile strength ");
    LSD_MAT_XC              = VALUE(FLOAT,"Longitudinal compressive strength ");
    LSD_MAT_YT              = VALUE(FLOAT,"Transverse tensile strength ");
    LSD_MAT_YC              = VALUE(FLOAT,"Transverse compressive strength ");
    LSD_MAT_157_ZT          = VALUE(FLOAT,"Transverse tensile strength 33");
    LSD_MAT_157_ZC          = VALUE(FLOAT,"Transverse compressive strength 33");
    LSD_MAT_SC              = VALUE(FLOAT,"Shear strength 12");
    LSD_MAT_SC23            = VALUE(FLOAT,"Shear strength 23");
    LSD_MAT_SC31            = VALUE(FLOAT,"Shear strength 31");
    
    LSD_M11C                = VALUE(FLOAT,"Strain at longitudinal compressive strength ");
    LSD_M11T                = VALUE(FLOAT,"Strain at longitudinal tensile strength ");
    LSD_M22C                = VALUE(FLOAT,"Strain at transversale compressive strength 22");
    LSD_M22T                = VALUE(FLOAT,"Strain at transversale tensile strength 22");
    LSD_MAT_E33T            = VALUE(FLOAT,"Strain at transversale tensile strength 33");
    LSD_MAT_E33C            = VALUE(FLOAT,"Strain at transversale compressive strength 33");
   
    LSD_MS                  = VALUE(FLOAT,"Engineering shear strain at shear strength,12");
    LSD_MAT_GMS23           = VALUE(FLOAT,"Engineering shear strain at shear strength, 23");
    LSD_MAT_GMS31          = VALUE(FLOAT,"Engineering shear strain at shear strength, 31");

    LSD_MAT_EPSF            = VALUE(FLOAT,"Damage initiation transverse shear strain");
    LSD_MAT_EPSR            = VALUE(FLOAT,"Final rupture transverse shear strain");
    LSD_MAT_TSMD            = VALUE(FLOAT,"Transverse shear maximum damage");    
    
    MATL58_SLIMT1           = VALUE(FLOAT,"Scale for minimum longitudinal tensile stress limit ");
    MATL58_SLIMC1           = VALUE(FLOAT,"Scale for minimum longitudinal  compressive stress limit ");
    MATL58_SLIMT2           = VALUE(FLOAT,"Scale for minimum transverse tensile stress limit ");
    MATL58_SLIMC2           = VALUE(FLOAT,"Scale for minimum transverse  compressive stress limit ");
    LSD_MAT_SLIMT3          = VALUE(FLOAT,"Scale for minimum tensile stress limit dir 33");
    LSD_MAT_SLIMC3          = VALUE(FLOAT,"Scale for minimum compressive stress limit dir 33 ");
    MATL58_SLIMS            = VALUE(FLOAT,"Scale for minimum shear stress limit 12 ");
    LSD_MAT_SLIMS23         = VALUE(FLOAT,"Scale for minimum shear stress limit 23 ");
    LSD_MAT_SLIMS31         = VALUE(FLOAT,"Scale for minimum shear stress limit 31 ");
    MAT_LSD_MAT_TSMD        = VALUE(FLOAT,"Transverse shear maximum damage ");
    MATL58_ERODS            = VALUE(FLOAT, "Maximum effective strain for element layer failure");
    FCUT                    = VALUE(FLOAT,"Equivalent strain rate cutoff frequency");
    // HEAT
    Heat_Inp_opt            = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT         = VALUE(SUBOBJECT, "");
    // THERM_STRESS
    THERM_STRESS            = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS     = VALUE(SUBOBJECT, "");

    TITLE                   = VALUE(STRING,"");
    IO_FLAG                 = VALUE(INT, "");
    Mat_Name_OR_LawNo       = VALUE(INT,  "RADIOSS_COMMENT_FLAG");
    LAW_NO                  = VALUE(STRING, "");
}   

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR             = 9000;
    NUM_COMMENTS            = 5110;
    COMMENTS                = 5109;
    CommentEnumField        = 7951;

    MAT_RHO           = -1;
    LSD_MAT_EA        = -1;
    LSD_MAT_EB        = -1; 
    LSD_MAT_EC        = -1; 
    LSD_MAT_GAB       = -1; 
    LSD_MAT_GBC       = -1; 
    LSD_MAT_GCA       = -1; 
    LSD_MAT_PRBA      = -1; 
    LSDYNA_PRCA       = -1; 
    LSDYNA_PRCB       = -1; 
    MATL58_GAMMA1     = -1; 
    MATL58_TAU1       = -1; 
    LSD_FS            = -1; 
    LSD_SOFT          = -1; 
    LSD_LCID2         = -1; 
    LSD_LCID          = -1; 
    LSD_LCID4         = -1; 
    LSD_LCID3         = -1; 
    LSD_LCID5         = -1; 
    LSD_MAT_LCSC31    = -1; 
    LSD_MAT_LCSC23    = -1; 
    LSD_LCID6         = -1; 
    LSD_LCID7         = -1; 
    LSD_MAT_LCTAU2    = -1; 
    LSD_MAT_LCGAM2    = -1; 
    LSD_MAT_LCTAU3    = -1; 
    LSD_MAT_LCGAM3    = -1; 
    LSD_LCID12        = -1; 
    LSD_LCID11        = -1; 
    LSD_LCID14        = -1; 
    LSD_LCID13        = -1; 
    LSD_LCID15        = -1; 
    LSD_MAT_LCE33T    = -1; 
    LSD_MAT_LCE33C    = -1; 
    LSD_MAT_LCGMS31   = -1;  
    LSD_MAT_LCGMS23   = -1; 

    LSD_MAT_XT        = -1; 
    LSD_MAT_XC        = -1; 
    LSD_MAT_YT        = -1; 
    LSD_MAT_YC        = -1; 
    LSD_MAT_157_ZT    = -1; 
    LSD_MAT_157_ZC    = -1; 
    LSD_MAT_SC        = -1; 
    LSD_MAT_SC31      = -1; 
    LSD_MAT_SC23      = -1; 
    LSD_M11C          = -1; 
    LSD_M11T          = -1; 
    LSD_M22C          = -1; 
    LSD_M22T          = -1; 
    LSD_MAT_E33T      = -1; 
    LSD_MAT_E33C      = -1; 
    LSD_MS            = -1;
    LSD_MAT_GMS23     = -1;
    LSD_MAT_LCSC31    = -1;
    LSD_MAT_EPSF      = -1;
    LSD_MAT_EPSR      = -1;
    LSD_MAT_TSMD      = -1;
    MATL58_SLIMT1     = -1;
    MATL58_SLIMC1     = -1;
    MATL58_SLIMT2     = -1;
    MATL58_SLIMC2     = -1;
    LSD_MAT_SLIMT3    = -1;
    LSD_MAT_SLIMC3    = -1;
    MATL58_SLIMS      = -1;
    LSD_MAT_SLIMS23   = -1;
    LSD_MAT_SLIMS31   = -1;
    MAT_LSD_MAT_TSMD  = -1 ;
    MATL58_ERODS      = -1 ;
    LSD_LCID16        = -1 ;
    //HEAT
    Heat_Inp_opt      = 4346;
    SUBGRP_HEAT_MAT   = -1;
    // THERM_STRESS
    THERM_STRESS        = 4555;
    SUBGRP_THERM_STRESS = -1;

    TITLE               = -1;
    IO_FLAG             = -1;
    Mat_Name_OR_LawNo   = -1;
    LAW_NO              = -1;
}

DEFAULTS(COMMON) {
}

GUI(COMMON)    
{
    RADIO(CommentEnumField)   
    {

        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if( CommentEnumField == 2 )
    {
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }
    if(Mat_Name_OR_LawNo == 2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW125/");
    }
    else 
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAMINATED_COMPOSITE/");
    }

    SCALAR(MAT_RHO)              { DIMENSION="density";       } 
    SCALAR(LSD_MAT_EA)           { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_EB)           { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_EC)           { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_GAB)          { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_GBC)          { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_GCA)          { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_PRBA)         { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSDYNA_PRCB)          { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSDYNA_PRCA)          { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MATL58_GAMMA1)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MATL58_TAU1)          { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_GAMMA2)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_MAT_TAU2)         { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_GAMMA3)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_MAT_TAU3)         { DIMENSION="pressure";      }

    SCALAR(LSD_MAT_XT)           { DIMENSION="pressure";      } 
    SCALAR(LSD_MAT_YT)           { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_XC)           { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_YC)           { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_SC)           { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_SC31)         { DIMENSION="pressure";      }
    SCALAR(LSD_MAT_SC23)         { DIMENSION="pressure";      }

    SCALAR(LSD_M11C)             { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_M11T)             { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_M22C)             { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_M22T)             { DIMENSION="DIMENSIONLESS"; }  
    SCALAR(LSD_MAT_E33C)         { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_MAT_E33T)         { DIMENSION="DIMENSIONLESS"; }  


    SCALAR(LSD_MS)               { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_MAT_GMS31)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_MAT_GMS23)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_MAT_EPSF)         { DIMENSION="DIMENSIONLESS"; }  
    SCALAR(LSD_MAT_EPSR)         { DIMENSION="DIMENSIONLESS"; }  
  
    SCALAR(MATL58_SLIMT1)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MATL58_SLIMC1)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MATL58_SLIMT2)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MATL58_SLIMC2)        { DIMENSION="DIMENSIONLESS"; }  
    SCALAR(LSD_MAT_SLIMT3)       { DIMENSION="DIMENSIONLESS"; }  
    SCALAR(LSD_MAT_SLIMC3)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MATL58_SLIMS)         { DIMENSION="DIMENSIONLESS"; }
    SCALAR(LSD_MAT_SLIMS31 )     { DIMENSION="DIMENSIONLESS"; }  
    SCALAR(LSD_MAT_SLIMS23)      { DIMENSION="DIMENSIONLESS"; }  

    SCALAR(FCUT)                 { DIMENSION="f";}
    // HEAT data
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    }

}
//file format
FORMAT(radioss2025) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW125/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/LAMINATED_COMPOSITE/%d",_ID_);
        CARD("%-100s", TITLE);
    }    
    COMMENT("#                RHO");
    CARD("%20lg",MAT_RHO);
    COMMENT("#                 EA                  EB                  EC                SOFT        FS");
    CARD("%20lg%20lg%20lg%20lg%10d",LSD_MAT_EA,LSD_MAT_EB,LSD_MAT_EC,LSD_SOFT,LSD_FS);
    COMMENT("#                GAB                 GCA                 GBC");
    CARD("%20lg%20lg%20lg",LSD_MAT_GAB,LSD_MAT_GCA,LSD_MAT_GBC);
    COMMENT("#               PRBA                PRCA                PRCB");
    CARD("%20lg%20lg%20lg",LSD_MAT_PRBA,LSDYNA_PRCA,LSDYNA_PRCB);
    
    COMMENT("#   LCE11T                E11T      LCXT                  XT              SLIMT1");
    CARD("%10d%20lg%10d%20lg%20lg",LSD_LCID12,LSD_M11T,LSD_LCID2,LSD_MAT_XT,MATL58_SLIMT1);
    COMMENT("#   LCE11C                E11C      LCXC                  XC              SLIMC1");
    CARD("%10d%20lg%10d%20lg%20lg",LSD_LCID11,LSD_M11C,LSD_LCID,LSD_MAT_XC,MATL58_SLIMC1);
       
    COMMENT("#   LCE22T                E22T      LCYT                  YT              SLIMT2");
    CARD("%10d%20lg%10d%20lg%20lg",LSD_LCID14,LSD_M22T,LSD_LCID4,LSD_MAT_YT,MATL58_SLIMT2);
    COMMENT("#   LCE11C                E22C      LCYC                  YC              SLIMC2");
    CARD("%10d%20lg%10d%20lg%20lg",LSD_LCID13,LSD_M22C,LSD_LCID3,LSD_MAT_YC,MATL58_SLIMC2);
    
    COMMENT("#   LCE33T                E33T      LCZT                  ZT              SLIMT3");
    CARD("%10d%20lg%10d%20lg%20lg",LSD_MAT_LCE33T,LSD_MAT_E33T,LSD_MAT_LCZT,LSD_MAT_157_ZT,LSD_MAT_SLIMT3);
    COMMENT("#   LCE33C                E33C      LCZC                  ZC              SLIMC3");
    CARD("%10d%20lg%10d%20lg%20lg",LSD_MAT_LCE33C,LSD_MAT_E33C,LSD_MAT_LCZC,LSD_MAT_157_ZC,LSD_MAT_SLIMC3);

    COMMENT("#              gamma                 tau                 EMS                  SC               SLIMS");
    CARD("%20lg%20lg%20lg%20lg%20lg",MATL58_GAMMA1,MATL58_TAU1,LSD_MS,LSD_MAT_SC,MATL58_SLIMS);
    COMMENT("#    LCGAM     LCTAU     LCGMS      LCSC");
    CARD("%10d%10d%10d%10d",LSD_LCID7,LSD_LCID6,LSD_LCID15,LSD_LCID5);

    COMMENT("#             gamma2                tau2               EMS13                SC13             SLIMS31");
    CARD("%20lg%20lg%20lg%20lg%20lg",LSD_MAT_GAMMA2,LSD_MAT_TAU2,LSD_MAT_GMS31,LSD_MAT_SC31,LSD_MAT_SLIMS31);
    COMMENT("#   LCGAM2    LCTAU2   LCGMS31    LCSC31");
    CARD("%10d%10d%10d%10d",LSD_MAT_LCGAM2,LSD_MAT_LCTAU2,LSD_MAT_LCGMS31,LSD_MAT_LCSC31);
   
    COMMENT("#             gamma3                tau3               EMS23                SC23             SLIMS23");
    CARD("%20lg%20lg%20lg%20lg%20lg",LSD_MAT_GAMMA3,LSD_MAT_TAU3,LSD_MAT_GMS23,LSD_MAT_SC23,LSD_MAT_SLIMS23);
    COMMENT("#   LCGAM3    LCTAU3   LCGMS23    LCSC23");
    CARD("%10d%10d%10d%10d",LSD_MAT_LCGAM3,LSD_MAT_LCTAU3,LSD_MAT_LCGMS23,LSD_MAT_LCSC23);
    
    COMMENT("#               EPSF                EPSR        LSD_MAT_TSMD");
    CARD("%20lg%20lg%20lg",LSD_MAT_EPSF,LSD_MAT_EPSR,MAT_LSD_MAT_TSMD);

    COMMENT("#    LCEFS               ERODS");
    CARD("%10d%20lg", LSD_LCID16,MATL58_ERODS);

    COMMENT("#               FCUT");
    CARD("%20lg",FCUT);
    //
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
