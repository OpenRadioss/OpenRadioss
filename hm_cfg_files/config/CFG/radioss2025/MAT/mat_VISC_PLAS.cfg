//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material Visc_plas
ATTRIBUTES(COMMON) 
{
    IO_FLAG         = VALUE(INT, "");
    LSD_G           = VALUE(FLOAT, "Shear modulus for frequency independent damping");
    LSDYNA_SIGF     = VALUE(FLOAT, "Limit stress for frequency independent frictional damping");
    //
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    IO_FLAG         = -1;
    LSDYNA_SIGF     = 248;
    LSD_G           = 1560;
}
GUI(COMMON) 
{
mandatory:
    SCALAR(LSDYNA_SIGF)   {DIMENSION = "pressure"; }
    SCALAR(LSD_G) {DIMENSION = "pressure"; } 
}

FORMAT(radioss2025) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/VISC/PLAS/%d",_ID_);
    }
    COMMENT("#                  G                SIGY");
    CARD("%20lg%20lg",LSD_G,LSDYNA_SIGF);
}
