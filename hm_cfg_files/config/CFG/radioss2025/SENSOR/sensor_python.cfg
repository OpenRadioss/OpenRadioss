//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
///SENSOR/PYTHON/id
//def myfun(t):
//  return float( t > 0.1 )
//
ATTRIBUTES(COMMON) {
    Number_of_datalines     = SIZE("Number of cards");      
    arraydatalines          = ARRAY[Number_of_datalines](STRING,"Unsupported card");
    IO_FLAG                 = VALUE(INT, "");
    unsuppotedtype          = VALUE(STRING,"KeywordType");
    DUMMY                   = VALUE(STRING, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    Number_of_datalines     = 4670;
    arraydatalines          = 4671;
    IO_FLAG                 = -1;
    DUMMY                   = -1;

}

FORMAT(radioss2025) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    HEADER("/SENSOR/%s/%d",unsuppotedtype,_ID_);
#    CARD("%-100s", TITLE);
    COMMENT("#-------USER CARD DATA---------");
    FREE_CARD_LIST(Number_of_datalines)
    {
        CARD("%-100s",arraydatalines);
    }

//    HEADER("/SENSOR_PYTHON/%d",_ID_);
//    FREE_CARD_LIST(Number_of_datalines)
//    {
//        CARD("%-100s",arraydatalines);
//    }
}

