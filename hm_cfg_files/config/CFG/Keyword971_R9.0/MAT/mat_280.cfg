//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// MATL 280(MAT_GLASS)
//

ATTRIBUTES(COMMON)
{
    
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    EncTypeEnumField                        = VALUE(INT,  "Type");
    RegTypeEnumField                        = VALUE(INT,  "Type");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    E                                       = VALUE(FLOAT,  "Youngs modulus");
    Nu                                      = VALUE(FLOAT,  "Poissons ratio");
    LSD_FMOD                                = VALUE(FLOAT,  "Flag to choose between failure criteria");
    MATL172_FT                              = VALUE(FLOAT,  "Tensile strength");
    MATL172_FC                              = VALUE(FLOAT,  "Compressive strength");
    LSD_SFSTI                               = VALUE(FLOAT,  "Scale factor for stiffness");
    LSD_SFSTR                               = VALUE(FLOAT,  "Scale factor for stress");
    LSD_CRIN                                = VALUE(FLOAT,  "Flag for crack strain initialization");
    LSD_ECRCL                               = VALUE(FLOAT,  "Crack strain");
    LSD_NCYCR                               = VALUE(FLOAT,  "Number of cycles");
    LSD_NIPF                                = VALUE(FLOAT,  "Number of integration points");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    IO_FLAG                                 = VALUE(INT, "io flag");
    _HMCOMMENTSFLAG                         = VALUE(INT, "Write HM Comments");
    TITLE                                   = VALUE(STRING, "Title");
    LSD_FTSCL                               = VALUE(FLOAT, "Scale factor for the tensile strength");
    //empty_string                       = VALUE(STRING, "Used as a local variable for free format case");
}

DEFAULTS(COMMON)
{
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    EncTypeEnumField                        = 5828;
    Num_Comments                            = 3101;
    RegTypeEnumField                        = 5827;
    Rho                                     = 118;
    E                                       = 119;
    LSD_TitleOpt                            = 90;
    Nu                                      = 120;
    LSD_FMOD                                = 8194;
    LSD_SFSTI                               = 8195;
    LSD_SFSTR                               = 8196;
    LSD_CRIN                                = 8197;
    LSD_ECRCL                               = 8198;
    LSD_NCYCR                               = 8199;
    LSD_NIPF                                = 8200;
    MATL172_FT                              = 1854;
    MATL172_FC                              = 1853;
    LSD_FTSCL                               = 8838;
    //empty_string                       = -1;
    IO_FLAG                                 = -1;
}

DRAWABLES(COMMON) {
public:
    MASS_DENSITY=SCALAR(Rho);
    YOUNG_MODULUS = SCALAR(E);
    POISSON_RATIO = SCALAR(Nu);
                   //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2      = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{

    ASSIGN(KEYWORD_STR, "*MAT_GLASS");
    RADIO(CommentEnumField)
    {
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do not export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
    }     
    FLAG(LSD_TitleOpt);
    if(LSD_TitleOpt == TRUE)
    {
        ASSIGN(KEYWORD_STR, "_TITLE");
    }
mandatory:
     SCALAR(Rho)                                    {DIMENSION="density";}
     SCALAR(E)                                      {DIMENSION="pressure";}
     SCALAR(Nu)                                     {DIMENSION="DIMENSIONLESS";}
optional:
     RADIO(LSD_FMOD)
     {
        ADD( 0.0, "0.0: Rankine maximum stress");
        ADD( 1.0, "1.0: Mohr-Coulomb");
        ADD( 2.0, "2.0: Drucker-Prager");
     }
     SCALAR(MATL172_FT)         {DIMENSION="DIMENSIONLESS";}
     SCALAR(MATL172_FC)         {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_SFSTI)          {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_SFSTR)          {DIMENSION="DIMENSIONLESS";}
     RADIO(LSD_CRIN)            
     {
        ADD(0.0, "0.0: initial crack strain is strain at failure");
        ADD(1.0, "1.0: initial crack strain is zero");
     }
     SCALAR(LSD_ECRCL)          {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_NCYCR)          {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_NIPF)           {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_FTSCL)          {DIMENSION="DIMENSIONLESS";}
}


FORMAT(Keyword971_R9.0) 
{   
    
    COMMENT("$      MID       RHO         E        PR");
    CARD("%10d%10lg%10lg%10lg",_ID_,Rho,E,Nu);
    
    COMMENT("$     FMOD        FT        FC                                             FTSCL"); CARD("%10lg%10lg%10lg%10s%10s%10s%10s%10lg",LSD_FMOD,MATL172_FT,MATL172_FC,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_FTSCL);
    
    COMMENT("$    SFSTI     SFSTR      CRIN     ECRCL     NCYCR      NIPF");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_SFSTI,LSD_SFSTR,LSD_CRIN,LSD_ECRCL,LSD_NCYCR,LSD_NIPF);
}
