//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 165
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    E                                       = VALUE(FLOAT,  "E");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    Nu                                      = VALUE(FLOAT,  "PR");
    Rho                                     = VALUE(FLOAT,  "Rho");
	LSD_RE									= VALUE(FLOAT,  "RE");
	LSD_MAT_B								= VALUE(FLOAT,  "B");
	LSDYNA_MAT_Q							= VALUE(FLOAT,  "Q");
	LSD_MAT_C1								= VALUE(FLOAT,  "C1");
	LSD_MAT_C2								= VALUE(FLOAT,  "C2");
	LSD_MAT_C3								= VALUE(FLOAT,  "C3");
	LSD_GAMMA1								= VALUE(FLOAT,  "GAMMA1");
	LSD_GAMMA2								= VALUE(FLOAT,  "GAMMA2");
	LSD_GAMMA3								= VALUE(FLOAT,  "GAMMA3");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    E                                       = 119;
    LSD_TitleOpt                            = 90;
    Nu                                      = 120;
    Num_Comments                            = 3101;
    Rho                                     = 118;
	LSD_RE									= 8354;
	LSD_MAT_B								= 311;
	LSDYNA_MAT_Q							= 4916;
	LSD_MAT_C1								= 1139;
	LSD_MAT_C2								= 1140;
	LSD_MAT_C3								= 1136;
	LSD_GAMMA1								= 4820;
	LSD_GAMMA2								= 4823;
	LSD_GAMMA3								= 8355;
}

DRAWABLES(COMMON) {
public:
    MASS_DENSITY=SCALAR(Rho);
    YOUNG_MODULUS = SCALAR(E);
    POISSON_RATIO = SCALAR(Nu);
       //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2      = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{
     ASSIGN(KEYWORD_STR, "*MAT_PLASTIC_NONLINEAR_KINEMATIC_B");
     RADIO(CommentEnumField)
     {
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
	 FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 optional:
	 SCALAR(Rho)                            {DIMENSION="density";}
     SCALAR(E)                              {DIMENSION="pressure";}
     SCALAR(Nu)                             {DIMENSION="DIMENSIONLESS";}
	 SCALAR(LSD_RE)							{DIMENSION="DIMENSIONLESS";}
	 SCALAR(LSD_MAT_B)						{DIMENSION="DIMENSIONLESS";}
	 SCALAR(LSDYNA_MAT_Q)					{DIMENSION="DIMENSIONLESS";}
	 SCALAR(LSD_MAT_C1)						{DIMENSION="DIMENSIONLESS";}
	 SCALAR(LSD_GAMMA1)						{DIMENSION="DIMENSIONLESS";}
	 SCALAR(LSD_MAT_C2)						{DIMENSION="DIMENSIONLESS";}
	 SCALAR(LSD_GAMMA2)						{DIMENSION="DIMENSIONLESS";}
	 SCALAR(LSD_MAT_C3)						{DIMENSION="DIMENSIONLESS";}
	 SCALAR(LSD_GAMMA3)						{DIMENSION="DIMENSIONLESS";}
}

FORMAT(Keyword971_R9.0) 
{
    //
    COMMENT("$      MID       RHO         E        PR        RE         B         Q        C1");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,E,Nu,LSD_RE,LSD_MAT_B,LSDYNA_MAT_Q,LSD_MAT_C1);
    //
    COMMENT("$   GAMMA1        C2    GAMMA2        C3    GAMMA3");
    CARD("%10lg%10lg%10lg%10lg%10lg",LSD_GAMMA1,LSD_MAT_C2,LSD_GAMMA2,LSD_MAT_C3,LSD_GAMMA3);
    //

}