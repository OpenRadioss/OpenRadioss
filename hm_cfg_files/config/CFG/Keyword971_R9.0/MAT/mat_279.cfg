//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
ATTRIBUTES(COMMON)
{
    
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    EncTypeEnumField                        = VALUE(INT,  "Type");
    RegTypeEnumField                        = VALUE(INT,  "Type");
    Rho                                     = VALUE(FLOAT,  "Mass density");
    LSD_ROFLG                               = VALUE(FLOAT,  "Flag for density units");
    LSD_INTFAIL                             = VALUE(FLOAT,  "no. of integration points req.");
    LSD_EN0                                 = VALUE(FLOAT,  "initial tensile stiffness");
    LSD_ET0                                 = VALUE(FLOAT,  "initial stiffness");
    LSD_EN1                                 = VALUE(FLOAT,  "final tensile stiffness");
    LSD_ET1                                 = VALUE(FLOAT,  "final stiffness");
    LSD_T0N                                 = VALUE(FLOAT,  "Peak tensile traction");
    LSD_DN                                  = VALUE(FLOAT,  "Scale factor");
    LSD_T1N                                 = VALUE(FLOAT,  "Final tensile traction");
    T0Tcurve                                = VALUE(INT,  "flag for curve");
    DTcurve                                 = VALUE(INT,  "flag for curve");
    T1Tcurve                                = VALUE(INT,  "flag for curve");
    LSD_T0T                                 = VALUE(FLOAT,  "Peak tensile traction");
    LSDYNA_DT                               = VALUE(FLOAT,  "Scale factor");
    LSD_T1T                                 = VALUE(FLOAT,  "Final traction");
    LSD_LCID10                              = VALUE(FUNCT,  "curve w.r.t. normal traction");
    LSD_LCID11                              = VALUE(FUNCT,  "curve w.r.t. normal stress");
    LSD_LCID12                              = VALUE(FUNCT,  "curve w.r.t. normal traction");
    LSD_E3C                                 = VALUE(FLOAT,  "Elastic parameter");
    LSD_CC                                  = VALUE(FLOAT,  "Elastic parameter");
    LSD_ASIG                                = VALUE(FLOAT,  "Plasticity hardening parameter");
    LSD_BSIG                                = VALUE(FLOAT,  "Plasticity hardening parameter");
    LSD_CSIG                                = VALUE(FLOAT,  "Plasticity hardening parameter");
    LSD_FAILN                               = VALUE(FLOAT,  "Max separation dist. in normal direction");
    LSD_FAILT                               = VALUE(FLOAT,  "Max separation dist. in tangential direction");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    IO_FLAG                                 = VALUE(INT, "io flag");
    _HMCOMMENTSFLAG                         = VALUE(INT, "Write HM Comments");
    _HWCOLOR                                = VALUE(INT, "Entity Color");
    TITLE                                   = VALUE(STRING, "Title");
}

DEFAULTS(COMMON)
{
    LSD_ROFLG = 0.0;
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    EncTypeEnumField                        = 5828;
    Num_Comments                            = 3101;
    RegTypeEnumField                        = 5827;
    Rho                                     = 118;
    LSD_TitleOpt                            = 90;
    LSD_ROFLG                               = 4997;
    LSD_INTFAIL                             = 4998;
    LSD_EN0                                 = 8262;
    LSD_ET0                                 = 8263;
    LSD_EN1                                 = 8264;
    LSD_ET1                                 = 8265;
    LSD_T0N                                 = 8266;
    LSD_DN                                  = 8267;
    LSD_T1N                                 = 8268;
    T0Tcurve                                = 8277;
    DTcurve                                 = 8279;
    T1Tcurve                                = 8278;
    LSD_T0T                                 = 8269;
    LSDYNA_DT                               = 12;
    LSD_T1T                                 = 8270;
    LSD_LCID10                              = 1142;
    LSD_LCID11                              = 1175;
    LSD_LCID12                              = 1176;
    LSD_E3C                                 = 8271;
    LSD_CC                                  = 3189;
    LSD_ASIG                                = 8272;
    LSD_BSIG                                = 8273;
    LSD_CSIG                                = 8274;
    LSD_FAILN                               = 8275;
    LSD_FAILT                               = 8276;
    IO_FLAG                                 = -1;
}

DRAWABLES(COMMON) {
MASS_DENSITY = SCALAR(Rho);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_COHESIVE_PAPER");
     RADIO(CommentEnumField)
     {
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt,"Title")
     {
        TITLE = "xyz"; 
     }
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     }
mandatory:
     SCALAR(Rho)                                    {DIMENSION="density";}
optional:
     RADIO(LSD_ROFLG)
     {
        ADD( 0.0, "0.0: density is per unit volume");
        ADD( 1.0, "1.0: density is per unit area");
     }                                    
     RADIO(LSD_INTFAIL)
     {
        ADD(1.0, "1.0");
        ADD(2.0, "2.0");
        ADD(3.0, "3.0");
        ADD(4.0, "4.0");
     }
     SCALAR(LSD_EN0);
     SCALAR(LSD_ET0);
     SCALAR(LSD_EN1);
     SCALAR(LSD_ET1);
     SCALAR(LSD_T0N);
     SCALAR(LSD_DN)                            {DIMENSION="l";}
     SCALAR(LSD_T1N)                           {DIMENSION="force";}
     FLAG(T0Tcurve);
     if(T0Tcurve == FALSE)
     {
        SCALAR(LSD_T0T);
     }
     else
     {
        DATA(LSD_LCID10);
     }
     FLAG(DTcurve);
     if(DTcurve == FALSE)
     {
        SCALAR(LSDYNA_DT);
     }
     else
     {
        DATA(LSD_LCID11);
     }
     FLAG(T1Tcurve);
     if(T1Tcurve == FALSE)
     {
        SCALAR(LSD_T1T);
     }
     else
     {
        DATA(LSD_LCID12);
     }
     SCALAR(LSD_E3C);
     SCALAR(LSD_CC);
     SCALAR(LSD_ASIG);
     SCALAR(LSD_BSIG);
     SCALAR(LSD_CSIG);
     SCALAR(LSD_FAILN)                      {DIMENSION="l";}
     SCALAR(LSD_FAILT)                      {DIMENSION="l";}
}

FORMAT(Keyword971_R9.0) 
{
    
    //
    COMMENT("$      MID       RHO     ROFLG   INTFAIL       EN0       ET0       EN1       ET1");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_ROFLG,LSD_INTFAIL,LSD_EN0,LSD_ET0,LSD_EN1,LSD_ET1);
    //
    COMMENT("$      T0N        DN       T1N       T0T        DT       T1T       E3C        CC");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_T0N,LSD_DN,LSD_T1N,SCALAR_OR_OBJECT(T0Tcurve,LSD_T0T,LSD_LCID10),SCALAR_OR_OBJECT(DTcurve,LSDYNA_DT,LSD_LCID11),SCALAR_OR_OBJECT(T1Tcurve,LSD_T1T,LSD_LCID12),LSD_E3C,LSD_CC);
    //
    COMMENT("$     ASIG      BSIG      CSIG     FAILN     FAILT");
    CARD("%10lg%10lg%10lg%10lg%10lf",LSD_ASIG,LSD_BSIG,LSD_CSIG,LSD_FAILN,LSD_FAILT);
    //

}