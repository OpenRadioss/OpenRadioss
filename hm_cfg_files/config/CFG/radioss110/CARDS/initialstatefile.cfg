//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// INISTA - Initial State File (control cards)
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    ISRTY                                   = VALUE(STRING,  "Complete name of the initial state file");
    IBAL                                    = VALUE(INT,  "Initial balance flag");
    IOUTYY                                  = VALUE(INT,  "Ynnn file format");
    IOUTYNN                                 = VALUE(INT,  "Name Format");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 7004;
    ISRTY                                   = 7039;
    IBAL                                    = 8053;
    IOUTYY                                  = 4010;
    IOUTYNN                                 = 4011;

}

DEFAULTS(COMMON)
{

    IBAL    = 1;
    IOUTYY    = 3;
    IOUTYNN   = 3;

}

GUI(COMMON)
{

    ASSIGN(KEYWORD_STR, "/INISTA");
    FILE(ISRTY);

    RADIO(IBAL)
    {
       ADD(1, "1: Do not perform nodal initial balance");
       ADD(2, "2: Nodal initial balance performed");
       ADD(3, "3: Initial balance in shell local frame");
    }

    RADIO(IOUTYY)
    {
       ADD(2, "=2: Format 44");
       ADD(3, "≠ 2: Format 51 (default)");
    }
    
    RADIO(IOUTYNN)
    {
       ADD(2, "=2: Ynnn reading file format is RunnameYnnn (old format)");
       ADD(3, "≠ 2: Ynnn reading file format is Runname_run#.sty");
    }

}

// File format
FORMAT(radioss51) 
{
    HEADER("/INISTA");
    COMMENT("#Isrtynnn");
    CARD("%-100s",ISRTY);
    COMMENT("#     Ibal IoutyyFMT  Ioutynnn");
    CARD("%10d%10d%10d",IBAL,IOUTYY,IOUTYNN);
}

FORMAT(radioss41) 
{
    HEADER("/INISTA");
    COMMENT("# Isrtynnn      Ibal");
    CARD("%-16s%8d",ISRTY,IBAL);
}
