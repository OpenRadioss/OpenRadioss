//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
ATTRIBUTES(COMMON)
{
    deltaT_min              = VALUE(FLOAT,  "Scale factor for maximum stiffness.");
    MAT_GAMAi               = VALUE(FLOAT,  "Nonlinearity factor for edge spring stiffness.");
    DAMP4                   = VALUE(FLOAT,  "Damping coefficient");
    Nu_g                    = VALUE(FLOAT,  "Characteristic length");
    /* ================================ HM =================================*/
    IO_FLAG                 = VALUE(INT, "");
    KEYWORD_STR             = VALUE(STRING, "Solver Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR             = 9000;
    deltaT_min              = 4154;
    MAT_GAMAi               = 5336;
    DAMP4                   = 5195;
    Nu_g                    = 4265;
    IO_FLAG                 = -1;
}

DEFAULTS(COMMON)
{
    DAMP4                   = 0.5;
    Nu_g                    = 1.0;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/ALE/STANDARD");
    SEPARATOR("ALE_GRID_STANDARD");
    SCALAR(deltaT_min)  { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_GAMAi)   { DIMENSION="DIMENSIONLESS"; }
    SCALAR(DAMP4)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(Nu_g)        { DIMENSION="l"; }
    SEPARATOR("");
}

FORMAT(radioss51)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);
    
    /* Added separately for HEADER workaround*/
    if(IO_FLAG == 0)
    {
        HEADER ("/ALE/STANDARD");
        COMMENT("#              Alpha               Gamma                 Eta                 l_c");
        CARD ("%20lg%20lg%20lg%20lg",deltaT_min,MAT_GAMAi,DAMP4,Nu_g);
        COMMENT("#             BLANK");
        BLANK;
    }
    else
    {
        CARD ("%20lg%20lg%20lg%20lg",deltaT_min,MAT_GAMAi,DAMP4,Nu_g);
        BLANK;
    }
}