//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// DEF_SOLID - Solid Default Values Initialization (control cards)
//

ATTRIBUTES(COMMON)
{
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    ISOLID                                  = VALUE(INT,    "Solid elements formulation flag");
    Ismstr                                  = VALUE(INT,    "Small strain formulation flag");
    Istrain                                 = VALUE(INT,    "Compute strains for post-processing flag");
    Iframe                                  = VALUE(INT,    "Element coordinate system formulation flag");
    Iplas                                   = VALUE(INT,    "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 7000;
    ISOLID                                  = 8003;
    Iframe                                  = 4002;
    Ismstr                                  = 5152;
    Istrain                                 = 8009;
    Iplas                                   = 8008;
}

DEFAULTS(COMMON)
{
    ISOLID                                  = 1;
    Iframe                                  = 1;
    Ismstr                                  = 4;
    Istrain                                 = 1;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/DEF_SOLID");
    RADIO(ISOLID)
    {
        ADD( 1,"1: Standard 8-node solid element, one integration point. Viscous hourglass formulation with orthogonal and rigid deformation modes compensation (Belytschko)");
        ADD( 2,"2: Standard 8-node solid element, one integration point. Viscous hourglass formulation without orthogonality (Hallquist)");
        ADD(12,"12: Standard 8-node solid, full integration (no hourglass)");
        ADD(14,"14: HA8 locking-free 8-node solid or thick shell elements, co-rotational, full integration, variable number of Gauss points");
        ADD(15,"15: HSEPH/PA6 thick shell elements (8-node and 6-node respectively). Co-rotational, under integrated (one Gauss point in the plane) with physical stabilization");
        ADD(16,"16: Quadratic 16-node thick shell or Quadratic 20-node solid, full integration, variable number of Gauss points in all directions");
        ADD(17,"17: H8C compatible solid full integration formulation");
        ADD(24,"24: HEPH 8-node solid element. Co-rotational, under-integrated (one Gauss point) with physical stabilization");
    }
    
    RADIO(Ismstr)
    {
        ADD( 1,"1: Small strain from time = 0");
        ADD( 2,"2: Full geometric nonlinearities with possible small strain formulation in Altair Radioss Engine (/DT/Eltyp/Iflag)");
        ADD( 3,"3: Simplified small strain formulation from time =0 (non-objective formulation)");
        ADD( 4,"4: Full geometric nonlinearities (/DT/BRICK/CST has no effect)");
        ADD(10,"10: Lagrange type total strain");
    }
    
    RADIO(Istrain)
    {
        ADD(1,"1: Yes");
        ADD(2,"2: No");
    }

    if( ISOLID == 1 || ISOLID == 2 || ISOLID == 12 || ISOLID == 17)
    {
        RADIO(Iframe)
        {
            ADD(1,"1: Non co-rotational formulation");
            ADD(2,"2: Co-rotational formulation");
        }
    }
}

// File format
FORMAT(radioss100)
{
    HEADER("/DEF_SOLID");
    COMMENT("#   Isolid    Ismstr             Istrain                                  Iframe");
    CARD("%10d%10d          %10d                              %10d",ISOLID,Ismstr,Istrain,Iframe);
}

FORMAT(radioss90)
{
    HEADER("/DEF_SOLID");
    COMMENT("#   Isolid    Ismstr                                                      Iframe");
    CARD("%10d%10d                                                  %10d",ISOLID,Ismstr,Iframe);
}

FORMAT(radioss44)
{
    HEADER("/DEF_SOLID");
    COMMENT("#B_HOURG B_SSTRN  B_PLAS");
    CARD("%8d%8d%8d",ISOLID,Ismstr,Iplas);
}

FORMAT(radioss41)
{
    HEADER("/DEF_SOLID");
    COMMENT("#B_HOURG B_SSTRN");
    CARD("%8d%8d",ISOLID,Ismstr);
}