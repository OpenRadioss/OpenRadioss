//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Stamping 
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR             = VALUE(STRING, "/Stamping");
    HF_TIME_SCALE           = VALUE(INT, "Time Scale Flag");
    HF_Timescale_Value      = VALUE(FLOAT,  " Timescale Value", "value");
    Number_of_datalines     = SIZE("Tabular input is available for values greater than 1");
    arraydatalines          = ARRAY[Number_of_datalines](STRING,""," ");
    IO_FLAG                 = VALUE(INT, "IOFLAG");
    NAME                    = VALUE(STRING,"") ;
    FLAG1                   = VALUE(INT, "IOFLAG");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR         = 9000;
    HF_TIME_SCALE       = 4797;
    HF_Timescale_Value  = 4798;
    Number_of_datalines = 4670;
    arraydatalines      = 4671;
    IO_FLAG             = -1;
    NAME                = 8057;
    FLAG1               = -1;
}

DEFAULTS(COMMON)
{

    HF_Timescale_Value      = 1.0;
    Number_of_datalines     = 1;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/STAMPING");
    FLAG(HF_TIME_SCALE);
    if(HF_TIME_SCALE!=0)
    {
        SCALAR(HF_Timescale_Value);
    }
   SIZE(Number_of_datalines);
   ARRAY(Number_of_datalines,"")
   {
        SCALAR(arraydatalines);
   }
}

// File format
FORMAT(radioss110)
{
    HEADER("/STAMPING");
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG==0 && HF_TIME_SCALE==1)
    {
        CARD("#HF TIME SCALE%20lg",HF_Timescale_Value);
    }
    if(IO_FLAG==1)
    {
        COMMENT("#HF TIME SCALE%20lg",HF_Timescale_Value);
        ASSIGN(FLAG1,_GET_DISPLAY_STATUS(HF_Timescale_Value),IMPORT);
        if(FLAG1 != 0)
        {
            ASSIGN(HF_TIME_SCALE, 1, IMPORT);
        }
    }   
    FREE_CARD_LIST(Number_of_datalines)
    {
        CARD("%-.80s",arraydatalines);
    }   
}
