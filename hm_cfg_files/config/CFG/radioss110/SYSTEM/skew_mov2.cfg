//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//  /SKEW/MOV2/
// 

ATTRIBUTES(COMMON)
{
// INPUT ATTRIBUTES
    titlestr                                  = VALUE(STRING,"Skew title","TITLE");
    originnodeid                              = VALUE(NODE,"Node identifier N1");
    axisnodeid                                = VALUE(NODE,"Node identifier N2");
    planenodeid                               = VALUE(NODE,"Node identifier N3");

// HM INTERNAL
    KEYWORD_STR                               = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                              = SIZE("NUM_COMMENTS");
    CommentEnumField                          = VALUE(INT,"User Comments");
    COMMENTS                                  = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    displayaxis                               = VALUE(INT,"Axis");
    displayplane                              = VALUE(INT,"Plane");
    Frame_opt                                 = VALUE(INT,"type");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                               = 9000;
    COMMENTS                                  = 5109;
    CommentEnumField                          = 7951;
    NUM_COMMENTS                              = 5110;
    Frame_opt                                 = 5009;
    titlestr                                  = 2001;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{

}

GUI(COMMON) 
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }

    ASSIGN(KEYWORD_STR, "/SKEW/MOV2");

    RADIO(displayaxis)
    {
       ADD(0, "x-axis");
       ADD(1, "y-axis");
       ADD(2, "z-axis");
    }
    
    RADIO(displayplane)
    {
       ADD(0, "xy plane");
       ADD(1, "xz plane");
    }

    RADIO(Frame_opt)
    {
       ADD(0, "SKEW");
       ADD(1, "FRAME");
       ADD(2, "FRAME/NOD");
    }
    SCALAR(titlestr);
    DATA(originnodeid);
    DATA(axisnodeid);
    DATA(planenodeid);
}

// File format

FORMAT(radioss100) {
    HEADER("/SKEW/MOV2/%d",_ID_);
    CARD("%-100s", titlestr);
  
    COMMENT("# node_ID1  node_ID2  node_ID3");
    CARD("%10d%10d%10d",originnodeid,axisnodeid,planenodeid);
}
