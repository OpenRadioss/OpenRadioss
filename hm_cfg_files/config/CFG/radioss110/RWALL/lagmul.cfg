//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- lagmul.cfg ---
//		//rwall
//		 
ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    ThermalOption                                   = VALUE(BOOL, "ThermalOption");
    basenode                                        = VALUE(NODE, "X Y Z coordinate of M");
    x                                               = VALUE(FLOAT, "X coordinate of M");
    y                                               = VALUE(FLOAT, "Y coordinate of M");
    z                                               = VALUE(FLOAT, "Z coordinate of M");
    normal                                          = VALUE(NODE, "");
    Node1                                           = VALUE(NODE, "Node identifier (moving rigid wall)");
    slidingflag                                     = VALUE(INT,"Sliding flag");
    NodeSet_ID                                      = VALUE(SETS,"Node group defining secondary nodes to be added to the rigid wall")       { SUBTYPES = (/SETS/GRNOD); }
    excludeNodeSet_ID                               = VALUE(SETS,"Node group defining secondary nodes to be deleted from the rigid wall")   { SUBTYPES = (/SETS/GRNOD); }
    offset                                          = VALUE(FLOAT, "Distance for secondary search");
    fric                                            = VALUE(FLOAT,"Friction");
    Diameter                                        = VALUE(FLOAT, "Diameter of the sphere");
    Filteringfactor                                 = VALUE(FLOAT, "Filtering factor");
    Filteringflag                                   = VALUE(INT, "Filtering flag");
    Mass                                            = VALUE(FLOAT, "Mass of the rigid wal");
    XH                                              = VALUE(FLOAT,"X coordinate of M1");
    YH                                              = VALUE(FLOAT,"Y coordinate of M1");
    ZH                                              = VALUE(FLOAT,"Z coordinate of M1");
    Motiontype                                      = VALUE(INT,"Moving Option");
    motionx                                         = VALUE(FLOAT, "Initial velocity in X direction");
    motiony                                         = VALUE(FLOAT, "Initial velocity in Y direction");
    motionz                                         = VALUE(FLOAT, "Initial velocity in Z direction");
    cornernode1                                     = VALUE(NODE, "X Y Z coordinate of M1");
    cornernode2                                     = VALUE(NODE, "X Y Z coordinate of M2");
    cnode1_x                                        = VALUE(FLOAT,"X coordinate of M1");
    cnode1_y                                        = VALUE(FLOAT,"Y coordinate of M1");
    cnode1_z                                        = VALUE(FLOAT,"Z coordinate of M1");
    cnode2_x                                        = VALUE(FLOAT,"X coordinate of M2");
    cnode2_y                                        = VALUE(FLOAT,"Y coordinate of M2");
    cnode2_z                                        = VALUE(FLOAT,"Z coordinate of M2");
    fct_IDt                                         = VALUE(CURVE,"Wall temperature function");
    Fscale_T                                        = VALUE(FLOAT,"Scale factor for wall temperature");
    ThermalResistance                               = VALUE(FLOAT,"Thermal resistance R = d / K");
    // HM INTERNAL
    KEYWORD_STR                                     = VALUE(STRING, "Solver Keyword");
    TITLE                                           = VALUE(STRING,"Rigid wall title");
    geometrytype                                    = VALUE(INT, "Select a Geometry Type");
    catengineeringdata                              = VALUE(INT, "");
    catsupport                                      = VALUE(INT, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                                     = 9000;
}

DEFAULTS(COMMON)
{
    Filteringfactor                                 = 0.0;
    Filteringflag                                   = 0;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/RWALL/LAGMUL/PLANE");

    mandatory:
    RADIO(geometrytype, "geometrytype")
    {
        ADD(1, "Infinite Plane");
        ADD(5, "Cylinder");
        ADD(6, "Sphere");
        ADD(7, "Parallelogram");
    }
    optional:
    SEPARATOR("catengineeringdata");

    if (Motiontype == 0)
    {
        DATA(basenode, "basenode");
    }
    else if (Motiontype == 1)
    {
        DATA(Node1, "node_ID");
    }
    DATA(normal, "normal");

    SCALAR(XH,"XM1")                                    { DIMENSION="l"; }
    SCALAR(YH,"YM1")                                    { DIMENSION="l"; }
    SCALAR(ZH,"ZM1")                                    { DIMENSION="l"; }

    SEPARATOR();

    SEPARATOR("catsupport");

    RADIO(slidingflag, "Slide")
    {
        ADD(0, "0: Sliding");
        ADD(1, "1: Tied");
        ADD(2, "2: Sliding with friction");
    }
    DATA(NodeSet_ID, "grnd_ID1");
    DATA(excludeNodeSet_ID, "grnd_ID2");
    SCALAR(offset, "DSearch")                           { DIMENSION="l"; }    

    if (slidingflag == 2)
    {
        SCALAR(fric, "fric")                            { DIMENSION="DIMENSIONLESS"; }
    }
    
    SCALAR(Diameter, "Phi")                               { DIMENSION="l"; }  

    RADIO(Filteringflag, "ifq")
    {
        ADD(0, "0: No filtering");
        ADD(1, "1: Coeff. defined by user");
        ADD(2, "2: Coeff. of 3dB for user time step defined freq.");
        ADD(3, "3: Coeff. of 3dB for user defined freq.");
    }
    if(Filteringflag > 0 && slidingflag == 2)
    {
      SCALAR(Filteringfactor) { if(Filteringflag==3) { DIMENSION="f"; } else { DIMENSION="DIMENSIONLESS";} }
    }
    FLAG(Motiontype, "Motiontype");
    if (Motiontype == 0)
    {
        SCALAR(x,"XM")                                  { DIMENSION="l"; }
        SCALAR(y,"YM")                                  { DIMENSION="l"; }
        SCALAR(z,"ZM")                                  { DIMENSION="l"; }
    }
    if (Motiontype == 1)
    {
        SCALAR(Mass, "Mass")                            { DIMENSION="m"; }
        SCALAR(motionx, "VX0")                          { DIMENSION="velocity"; }
        SCALAR(motiony, "VY0")                          { DIMENSION="velocity"; }
        SCALAR(motionz, "VZ0")                          { DIMENSION="velocity"; }
    }
    SEPARATOR();
}

FORMAT(radioss51) 
{
    HEADER("/RWALL/LAGMUL/PLANE/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("#  node_ID     Slide  grnd_ID1  grnd_ID2");
    CARD("%10d%10d%10d%10d",Node1,slidingflag,NodeSet_ID,excludeNodeSet_ID);
    CARD_PREREAD("%80s%10lg", _BLANK_,Filteringflag);
    if(slidingflag == 2)
    {
        if (Filteringflag == 0)
        {
            COMMENT("#                  d                fric            Diameter                           ifq");
            CARD("%20lg%20lg%20lg%20s%10d",offset,fric,Diameter,_BLANK_,Filteringflag);
        }
        else
        {
            COMMENT("#                  d                fric            Diameter                ffac       ifq");
            CARD("%20lg%20lg%20lg%20lg%10d",offset,fric,Diameter,Filteringfactor,Filteringflag);
        }
    }
    else
    {
        COMMENT("#                  d                fric                 ifq");
        CARD("%20lg%20s%20lg",offset,_BLANK_,Diameter);
    }
    
    if(Node1 == NONE) 
    {
        COMMENT("#                 XM                  YM                  ZM");
        CARD("%20lg%20lg%20lg",x,y,z);
    } 
    else 
    {
        COMMENT("#               Mass                 VX0                 VY0                 VZ0");
        CARD("%20lg%20lg%20lg%20lg",Mass,motionx,motiony,motionz);
    }
    COMMENT("#                XM1                 YM1                 ZM1");
    CARD("%20lg%20lg%20lg",XH,YH,ZH);
}


FORMAT(radioss44) 
{
    HEADER("/RWALL/LAGMUL/PLANE/%d/%s",_ID_,TITLE);

    COMMENT("#node_ID   Slide grndID1 grndID2");
    CARD("%8d%8d%8d%8d",Node1,slidingflag,NodeSet_ID,excludeNodeSet_ID);
    CARD_PREREAD("%64s%8lg", _BLANK_,Filteringflag);
    if(slidingflag == 2)
    {
        if (Filteringflag == 0)
        {
            COMMENT("#              d            fric        Diameter                     ifq");
            CARD("%16lg%16lg%16lg%16s%8d",offset,fric,Diameter,_BLANK_,Filteringflag);
        }
        else
        {
            COMMENT("#              d            fric        Diameter            ffac     ifq");
            CARD("%16lg%16lg%16lg%16lg%8d",offset,fric,Diameter,Filteringfactor,Filteringflag);
        }
    }
    else
    {
        COMMENT("#              d            fric        Diameter");
        CARD("%16lg%16s%16lg",offset,_BLANK_,Diameter);
    }

    
    if(Node1 == NONE) 
    {
        COMMENT("#             XM              YM              ZM");
        CARD("%16lg%16lg%16lg",x,y,z);
    } 
    else 
    {
        COMMENT("#           Mass             VX0             VY0             VZ0");
        CARD("%16lg%16lg%16lg%16lg",Mass,motionx,motiony,motionz);
    }
    COMMENT("#            XM1             YM1             ZM1");
    CARD("%16lg%16lg%16lg",XH,YH,ZH);
}


FORMAT(radioss41) 
{
    HEADER("/RWALL/LAGMUL/PLANE/%d/%s",_ID_,TITLE);

    COMMENT("#node_ID   Slide grndID1 grndID2");
    CARD("%8d%8d%8d%8d",Node1,slidingflag,NodeSet_ID,excludeNodeSet_ID);
    COMMENT("#              d            fric        Diameter");
    CARD("%16lg%16lg%16lg",offset,fric,Diameter);

    
    if(Node1 == NONE) 
    {
        COMMENT("#             XM              YM              ZM");
        CARD("%16lg%16lg%16lg",x,y,z);
    } 
    else 
    {
        COMMENT("#           Mass             VX0             VY0             VZ0");
        CARD("%16lg%16lg%16lg%16lg",Mass,motionx,motiony,motionz);
    }
    COMMENT("#            XM1             YM1             ZM1");
    CARD("%16lg%16lg%16lg",XH,YH,ZH);
}

