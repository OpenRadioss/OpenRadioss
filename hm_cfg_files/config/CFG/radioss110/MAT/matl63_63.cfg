//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material law 63 (LAW63) Setup File

ATTRIBUTES(COMMON) {
    KEYWORD_STR                 = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                = SIZE("NUM_COMMENTS");
    CommentEnumField            = VALUE(INT,"User Comments");
    COMMENTS                    = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    MAT_RHO                     = VALUE(FLOAT,"Initial Density");
    Refer_Rho                   = VALUE(FLOAT,"Reference Density (for lower than 14.0 version)");
    DUMMY                       = VALUE(STRING,"Dummy variable for Ref_Rho flag");
    MAT_REFRHO_Option           = VALUE(INT, "RefRho_Option");
    MAT_E                       = VALUE(FLOAT,"Initial Young's Modulus");
    MAT_NU                      = VALUE(FLOAT,"Poisson's Ratio");
    CP                          = VALUE(FLOAT,"Specific Heat Capacity");
    MAT_A                       = VALUE(FLOAT,"Material Parameter 1");
    MAT_B                       = VALUE(FLOAT,"Material Parameter 2");
    Q                           = VALUE(FLOAT,"Material Parameter 3");
    MAT_C                       = VALUE(FLOAT,"Material Parameter 4");
    MAT_D                       = VALUE(FLOAT,"Material Parameter 5");
    MAT_P0                      = VALUE(FLOAT,"Material Parameter 6");
    A_HS                        = VALUE(FLOAT,"Material Parameter 7");
    B_HS                        = VALUE(FLOAT,"Material Parameter 8");
    MAT_M                       = VALUE(FLOAT,"Material Parameter 9");
    MAT_N                       = VALUE(FLOAT,"Material Parameter 10");
    K1                          = VALUE(FLOAT,"Material Parameter 11");
    K2                          = VALUE(FLOAT,"Material Parameter 12");
    delta_H                     = VALUE(FLOAT,"Material Parameter 13");
    Kvm                         = VALUE(FLOAT,"Initial Martensite Fraction");
    Epsilon_0                   = VALUE(FLOAT,"Initial Plastic Strain");
    MAT_T0                      = VALUE(FLOAT,"Initial Temperature");
    Heat_Inp_opt                = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT             = VALUE(SUBOBJECT, "");
    THERM_STRESS                = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS         = VALUE(SUBOBJECT, "");
    IO_FLAG                     = VALUE(INT, "");
    LAW_NO                      = VALUE(STRING, "");
    Mat_Name_OR_LawNo           = VALUE(INT,  "RADIOSS_COMMENT_FLAG");
    TITLE                       = VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                 = 9000;
    COMMENTS                    = 5109;
    CommentEnumField            = 7951;
    MAT_REFRHO_Option           = 4285;
    MAT_RHO                     = 118;
    Refer_Rho                   = 4229;
    MAT_E                       = 119;
    MAT_NU                      = 120;
    A_HS                        = 4488;
    B_HS                        = 4489;
    CP                          = 8160;
    Epsilon_0                   = 4198;
    K1                          = 4490;
    K2                          = 4491;
    Kvm                         = 5359;
    MAT_A                       = 6056;
    MAT_B                       = 995;
    MAT_C                       = 996;
    MAT_D                       = 997;
    MAT_M                       = 314;
    MAT_N                       = 5037;
    MAT_P0                      = 1122;
    MAT_T0                      = 6133;
    Q                           = 4487;
    delta_H                     = 4492;
    NUM_COMMENTS                = 5110;
    Heat_Inp_opt                = 4346;
    SUBGRP_HEAT_MAT             = -1;
    THERM_STRESS                = 4555;
    SUBGRP_THERM_STRESS         = -1;
    DUMMY                       = -1;
    LAW_NO                      = -1;
    Mat_Name_OR_LawNo           = 4538;
    IO_FLAG                     = -1;
    TITLE                       = -1;
}

DRAWABLES(COMMON) {
public:
    INITIAL_DENSITY                 = SCALAR(MAT_RHO);
    YOUNG_MODULUS                   = SCALAR(MAT_E);
    POISSON_RATIO                   = SCALAR(MAT_NU);
public:
    SOUND_SPEED                     = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
private:
    G                               = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
    C1                              = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
public:
    SOUND_SPEED_SOLID               = EVAL(((4*G/3+C1)/INITIAL_DENSITY)^0.5);
}

CHECK(COMMON)
{
    MAT_RHO                     >0.0;
}

DEFAULTS(COMMON) 
{
    Heat_Inp_opt                = 0;
    CP                          = 1.0e+30;
    Kvm                         = 1.0e-20;
    MAT_B                       = -1;
    Mat_Name_OR_LawNo           = 0;
}
PARAMETERS(PARAMETERS) 
{
    MAT_RHO                     = INPUT_SCALAR(MAT_RHO,"Initial Density");   
    MAT_E                       = INPUT_SCALAR(MAT_E,"Young modulus"); 
    MAT_NU                      = INPUT_SCALAR(MAT_NU,"Poisson ratio"); 
    CP                          = INPUT_SCALAR(CP,"Heat capacity coefficient");
    MAT_A                       = INPUT_SCALAR(MAT_A,"Parameter A");
    MAT_B                       = INPUT_SCALAR(MAT_B,"Parameter B");
    Q                           = INPUT_SCALAR(Q,"Parameter Q");
    MAT_C                       = INPUT_SCALAR(MAT_C,"Parameter C");
    MAT_D                       = INPUT_SCALAR(MAT_C,"Parameter D");
    MAT_P0                      = INPUT_SCALAR(MAT_P0,"Parameter P");
    A_HS                        = INPUT_SCALAR(A_HS,"Parameter AHS");
    B_HS                        = INPUT_SCALAR(B_HS,"Parameter BHS");
    MAT_M                       = INPUT_SCALAR(MAT_M,"Parameter M");
    MAT_N                       = INPUT_SCALAR(MAT_N,"Parameter N");
    K1                          = INPUT_SCALAR(K1,"Parameter K1");
    K2                          = INPUT_SCALAR(K2,"Parameter K2");
    delta_H                     = INPUT_SCALAR(delta_H,"Parameter DH");
    Kvm                         = INPUT_SCALAR(Kvm,"Initial martensite ratio");
    Epsilon_0                   = INPUT_SCALAR(Epsilon_0,"Initial plastic strain");
    MAT_T0                      = INPUT_SCALAR(MAT_T0,"Initial Temperature");
}

GUI(COMMON) 
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Mat_Name_OR_LawNo == 1)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/HANSEL/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW63/");
    }
    FLAG(MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)      { DIMENSION="density";       }
    }
mandatory:
    SCALAR(MAT_RHO)         { DIMENSION="density";            }
mandatory:
    SCALAR(MAT_E)           { DIMENSION="pressure";      }
    SCALAR(MAT_NU)          { DIMENSION="DIMENSIONLESS"; }
    SCALAR(CP)              { DIMENSION="thermal_massic_capacity"; }
mandatory:
    SCALAR(MAT_A)           { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_B)           { DIMENSION="DIMENSIONLESS"; }
    SCALAR(Q)               { DIMENSION="k"; }
    SCALAR(MAT_C)           { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_D)           { DIMENSION="coefficient_of_linear_inflation"; }
    SCALAR(MAT_P0)          { DIMENSION="DIMENSIONLESS"; }
    SCALAR(A_HS)            { DIMENSION="pressure"; }
    SCALAR(B_HS)            { DIMENSION="pressure"; }
    SCALAR(MAT_M)           { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_N)           { DIMENSION="DIMENSIONLESS"; }
    SCALAR(K1)              { DIMENSION="DIMENSIONLESS"; }
    SCALAR(K2)              { DIMENSION="coefficient_of_linear_inflation"; }
    SCALAR(delta_H)         { DIMENSION="pressure"; }
    SCALAR(Kvm)             { DIMENSION="DIMENSIONLESS"; }
    SCALAR(Epsilon_0)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_T0)          { DIMENSION="k"; }
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    }
    /*
    mandatory:
    graphical SUPPORT("Support") {
    OBJECTS=(/PART/SHELL);
    ADD(PART,"Parts");
    }
    */
}

FORMAT(radioss90) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "HAN" )
        {
            ASSIGN(Mat_Name_OR_LawNo,1);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 1)
    {
        HEADER("/MAT/HANSEL/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/LAW63/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                  E                  Nu                  Cp");
    CARD("%20lg%20lg%20lg",MAT_E,MAT_NU,CP);
    COMMENT("#                  A                   B                   Q                   C                   D");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_A,MAT_B,Q,MAT_C,MAT_D);
    COMMENT("#                  P                 AHS                 BHS                   m                   n");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_P0,A_HS,B_HS,MAT_M,MAT_N);
    COMMENT("#                 K1                  K2                  DH                VM_0                EPS0");
    CARD("%20lg%20lg%20lg%20lg%20lg",K1,K2,delta_H,Kvm,Epsilon_0);
    COMMENT("#                 T0");
    CARD("%20lg",MAT_T0);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}

FORMAT(radioss51) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "HAN" )
        {
            ASSIGN(Mat_Name_OR_LawNo,1);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 1)
    {
        HEADER("/MAT/HANSEL/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/LAW63/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#        Init. dens.          Ref. dens.");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#        Init. dens.");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                  E                  Nu                  Cp");
    CARD("%20lg%20lg%20lg",MAT_E,MAT_NU,CP);
    COMMENT("#                  A                   B                   Q                   C                   D");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_A,MAT_B,Q,MAT_C,MAT_D);
    COMMENT("#                  P                 AHS                 BHS                   M                   N");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_P0,A_HS,B_HS,MAT_M,MAT_N);
    COMMENT("#                 K1                  K2                  DH                 VM0                EPS0");
    CARD("%20lg%20lg%20lg%20lg%20lg",K1,K2,delta_H,Kvm,Epsilon_0);
    COMMENT("#              TEMP0");
    CARD("%20lg",MAT_T0);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}