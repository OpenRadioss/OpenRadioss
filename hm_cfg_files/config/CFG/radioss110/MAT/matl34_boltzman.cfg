//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 34 (BOLTZMAN) Setup File
// 

ATTRIBUTES(COMMON) {
    // Support
    // NB_PARTS                             = SIZE("Number of Connected Parts"); 
    //COMPONENT                             = ARRAY[NB_PARTS](COMPONENT,"Connected Parts");
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    CommentEnumField                        = VALUE(INT,"User Comments");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    // Initial and reference densities
    MAT_RHO                                 = VALUE(FLOAT,"Initial Density");
    Refer_Rho                               = VALUE(FLOAT,"Reference Density (for lower than 14.0 version)");
    DUMMY                                   = VALUE(STRING,"Dummy variable for Ref_Rho flag");
    MAT_REFRHO_Option                       = VALUE(INT, "RefRho_Option");
    // Other values
    MAT_BULK                                = VALUE(FLOAT, "Bulk Modulus");
    //
    MAT_G0                                  = VALUE(FLOAT, "Short Time Shear Modulus");
    MAT_GI                                  = VALUE(FLOAT, "Long Time Shear Modulus");
    MAT_DECAY                               = VALUE(FLOAT, "Decay Constant");
    //
    MAT_P0                                  = VALUE(FLOAT, "Initial Air Pressure");
    MAT_PHI                                 = VALUE(FLOAT, "Foam Vs. Polymer Density Ratio");
    MAT_GAMA0                               = VALUE(FLOAT, "Initial Volumetric Strain");
    // HEAT
    Heat_Inp_opt                            = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT                         = VALUE(SUBOBJECT, "");
    // THERM_STRESS
    THERM_STRESS                            = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS                     = VALUE(SUBOBJECT, "");
    //
    Mat_Name_OR_LawNo                       = VALUE(INT, "");
    TITLE                                   = VALUE(STRING,"");
    IO_FLAG                                 = VALUE(INT, "");
    LAW_NO                                  = VALUE(STRING, "");
}


SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    MAT_REFRHO_Option                       = 4285;
    MAT_RHO                                 = 118;
    Refer_Rho                               = 4229;
    MAT_BULK                                = 223;
    MAT_DECAY                               = 306;
    MAT_G0                                  = 304;
    MAT_GAMA0                               = 1124;
    MAT_GI                                  = 305;
    MAT_P0                                  = 1122;
    MAT_PHI                                 = 1123;
    NUM_COMMENTS                            = 5110;
    Mat_Name_OR_LawNo                       = 4538;
    LAW_NO                                  = -1;
    IO_FLAG                                 = -1;
    TITLE                                   = -1;
    DUMMY                                   = -1;
    //HEAT
    Heat_Inp_opt                            = 4346;
    SUBGRP_HEAT_MAT                         = -1;
    // THERM_STRESS
    THERM_STRESS                            = 4555;
    SUBGRP_THERM_STRESS                     = -1;
}

CHECK(COMMON)
{
    MAT_BULK                                >0.0;
    MAT_DECAY                               >0.0;
    MAT_G0                                  >0.0;
    MAT_GI                                  >0.0;
    MAT_RHO                                 >0.0;
}

DEFAULTS(COMMON)
{
}

DRAWABLES(COMMON) {
private:
    GI                = SCALAR(MAT_GI);
    //C1                = EVAL(GI*2);
    BULK_MODULUS      = SCALAR(MAT_BULK);
public:
    INITIAL_DENSITY   = SCALAR(MAT_RHO);
    //SOUND_SPEED_SOLID = EVAL((C1/INITIAL_DENSITY)^0.5);
    SOUND_SPEED_SOLID                       = EVAL(((4*GI/3+BULK_MODULUS)/INITIAL_DENSITY)^0.5);
    YOUNG_MODULUS = EVAL(2*1.463*GI);
    SOUND_SPEED       = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
}

GUI(COMMON) {
mandatory:
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Mat_Name_OR_LawNo ==2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW34/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/BOLTZMAN/");
    }

    FLAG(MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)      { DIMENSION="density";       }
    }
mandatory:
    SCALAR(MAT_RHO)     { DIMENSION="density";            }
    //
    SCALAR(MAT_BULK)    { DIMENSION="pressure"; }
    //
    SCALAR(MAT_G0)      { DIMENSION="pressure"; }
    SCALAR(MAT_GI)      { DIMENSION="pressure"; }
    SCALAR(MAT_DECAY)   { DIMENSION="f"; }
    //
optional:
    SCALAR(MAT_P0)      { DIMENSION="pressure"; }
    SCALAR(MAT_PHI)     { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_GAMA0)   { DIMENSION="DIMENSIONLESS"; }

    // HEAT data
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }
    // THERM_STRESS
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    } 
    /*
    mandatory:
    graphical SUPPORT("Support") {
    OBJECTS=(/PART/QUAD,/PART/BRICK,/PART/TETRA4,/PART/TETRA10,/PART/SHEL16,/PART/BRIC20,/PART/SPHCEL,
    /PART/LINEAR_3D,/PART/LINEAR_THICK,/PART/PENTA6);
    ADD(PART,"Parts");
    }
    */
}

FORMAT(radioss51) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW34/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/BOLTZMAN/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#        Init. dens.          Ref. dens.");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#        Init. dens.");
        CARD("%20lg",MAT_RHO);
    }
    //
    COMMENT("#                  K");
    CARD("%20lg",MAT_BULK);
    //
    COMMENT("#                 G0                  Gl                Beta");
    CARD("%20lg%20lg%20lg",MAT_G0,MAT_GI,MAT_DECAY);
    //
    COMMENT("#                 P0                 Phi              Gamma0");
    CARD("%20lg%20lg%20lg",MAT_P0,MAT_PHI,MAT_GAMA0);
    //
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}

FORMAT(radioss41) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    
    COMMENT("#        Init. dens.");
    CARD("%16lg",MAT_RHO);
    //
    COMMENT("#                  K");
    CARD("%16lg",MAT_BULK);
    //
    COMMENT("#                 G0                  Gl                Beta");
    CARD("%16lg%16lg%16lg",MAT_G0,MAT_GI,MAT_DECAY);
    //
    COMMENT("#                 P0                 Phi              Gamma0");
    CARD("%16lg%16lg%16lg",MAT_P0,MAT_PHI,MAT_GAMA0);
}
