//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 24 (CONC) Setup File
// 

ATTRIBUTES(COMMON) {
    KEYWORD_STR                 = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                = SIZE("NUM_COMMENTS");
    CommentEnumField            = VALUE(INT,"User Comments");
    COMMENTS                    = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    MAT_RHO                     = VALUE(FLOAT,"Initial Density");
    Refer_Rho                   = VALUE(FLOAT,"Reference Density (for lower than 14.0 version)");
    DUMMY                       = VALUE(STRING,"Dummy variable for Ref_Rho flag");
    MAT_REFRHO_Option           = VALUE(INT, "RefRho_Option");
    MAT_E                       = VALUE(FLOAT,"Concrete Elasticity Young's Modulus");
    MAT_NU                      = VALUE(FLOAT,"Poisson's Ratio");
    MAT_SIGY                    = VALUE(FLOAT,"Concrete Uniaxial Compression Strength");
    MAT_FtFc                    = VALUE(FLOAT,"Concrete Tensile Strength");
    MAT_FbFc                    = VALUE(FLOAT,"Concrete Biaxial Strength");
    MAT_F2Fc                    = VALUE(FLOAT,"Concrete Confined Strength");
    MAT_SoFc                    = VALUE(FLOAT,"Concrete Confining Stress");
    MAT_ETAN                    = VALUE(FLOAT,"Concrete Data Tensile Tangent Modulus");
    MAT_DAMAGE                  = VALUE(FLOAT,"Concrete Data Maximum Damage");
    MAT_EPS                     = VALUE(FLOAT,"Concrete Data Total Failure Strain");
    MAT_BETA                    = VALUE(FLOAT,"Concrete Plasticity Initial Value of Hardening Parameter (1st part)");
    MAT_PPRES                   = VALUE(FLOAT,"Concrete Plasticity Failure/Plastic Transition Pressure (1st part)");
    MAT_YPRES                   = VALUE(FLOAT,"Concrete Plasticity Proportional Yield Transition Pressure (1st part)");
    MAT_BPMOD                   = VALUE(FLOAT,"Concrete Plasticity Base Plastic Modulus (1st part)");
    MAT_DIL_Y                   = VALUE(FLOAT,"Concrete Plasticity Dilatancy Factor at Yield (2nd part)");
    MAT_DIL_F                   = VALUE(FLOAT,"Concrete Plasticity Dilatancy Factor at Failure (2nd part)");
    MAT_COMPAC                  = VALUE(FLOAT,"Concrete Plasticity Maximum Volumetric Compaction (<0, 2nd part)");
    MAT_CAP_BEG                 = VALUE(FLOAT,"Initial Beginning of Cap");
    MAT_CAP_END                 = VALUE(FLOAT,"Initial End of Cap");
    MAT_TPMOD                   = VALUE(FLOAT,"Initial Triaxial Plastic Modulus");
    MAT_E2                      = VALUE(FLOAT,"Steel Properties Young's Modulus");
    MAT_SSIG                    = VALUE(FLOAT,"Yield Strength");
    MAT_SETAN                   = VALUE(FLOAT,"Tangent Modulus");
    MAT_PDIR1                   = VALUE(FLOAT,"Steel Percentage Ratio of Reinforcement Dir. 1");
    MAT_PDIR2                   = VALUE(FLOAT,"Steel Percentage Ratio of Reinforcement Dir. 2");
    MAT_PDIR3                   = VALUE(FLOAT,"Steel Percentage Ratio of Reinforcement Dir. 3");
    // HEAT
    Heat_Inp_opt                = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT             = VALUE(SUBOBJECT, "");
    // THERM_STRESS
    THERM_STRESS                = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS         = VALUE(SUBOBJECT, "");
    //
    Mat_Name_OR_LawNo           = VALUE(INT, "");
    TITLE                       = VALUE(STRING,"");
    IO_FLAG                     = VALUE(INT, "");
    LAW_NO                      = VALUE(STRING, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                 = 9000;
    COMMENTS                    = 5109;
    CommentEnumField            = 7951;
    MAT_REFRHO_Option           = 4285;
    MAT_RHO                     = 118;
    Refer_Rho                   = 4229;
    MAT_BETA                    = 148;
    MAT_BPMOD                   = 5057;
    MAT_CAP_BEG                 = 5061;
    MAT_CAP_END                 = 5062;
    MAT_COMPAC                  = 5060;
    MAT_DAMAGE                  = 5045;
    MAT_DIL_F                   = 5059;
    MAT_DIL_Y                   = 5058;
    MAT_E                       = 119;
    MAT_E2                      = 1129;
    MAT_EPS                     = 195;
    MAT_ETAN                    = 153;
    MAT_F2Fc                    = 5053;
    MAT_FbFc                    = 5052;
    MAT_FtFc                    = 5051;
    MAT_NU                      = 120;
    MAT_PDIR1                   = 5066;
    MAT_PDIR2                   = 5067;
    MAT_PDIR3                   = 5068;
    MAT_PPRES                   = 5055;
    MAT_SETAN                   = 5065;
    MAT_SIGY                    = 152;
    MAT_SSIG                    = 5064;
    MAT_SoFc                    = 5054;
    MAT_TPMOD                   = 5063;
    MAT_YPRES                   = 5056;
    NUM_COMMENTS                = 5110;
    Mat_Name_OR_LawNo           = 4538;
    LAW_NO                      = -1;
    IO_FLAG                     = -1;
    TITLE                       = -1;
    DUMMY                       = -1;
    //HEAT
    Heat_Inp_opt                = 4346;
    SUBGRP_HEAT_MAT             = -1;
    // THERM_STRESS
    THERM_STRESS                = 4555;
    SUBGRP_THERM_STRESS         = -1;
}

PARAMETERS(PARAMETERS) {
    MAT_RHO                     = INPUT_SCALAR(MAT_RHO,"Initial Density");   
    MAT_E                       = INPUT_SCALAR(MAT_E2,"Young modulus"); 
    MAT_NU                      = INPUT_SCALAR(MAT_NU,"Poisson ratio"); 
    MAT_SIGY                    = INPUT_SCALAR(MAT_SIGY,"Uniaxial compres. strength");
    MAT_FtFc                    = INPUT_SCALAR(MAT_FtFc,"Tensile strength");
    MAT_FbFc                    = INPUT_SCALAR(MAT_FbFc,"Biaxial strength");
    MAT_F2Fc                    = INPUT_SCALAR(MAT_F2Fc,"Confined strength");
    MAT_SoFc                    = INPUT_SCALAR(MAT_SoFc,"Confining stress");
    MAT_EPS24                   = INPUT_SCALAR(MAT_EPS,"Total failure strain");
    MAT_COMPAC                  = INPUT_SCALAR(MAT_COMPAC,"Max volumic compaction");
    MAT_CAP_BEG                 = INPUT_SCALAR(MAT_CAP_BEG,"Init. beginning of cap");
    MAT_CAP_END                 = INPUT_SCALAR(MAT_CAP_END,"Init. end of cap");
    MAT_TPMOD                   = INPUT_SCALAR(MAT_TPMOD,"Init. triaxial plastic mod.");
    MAT_E224                    = INPUT_SCALAR(MAT_E2,"Steel Young Modulus");
    MAT_SSIG                    = INPUT_SCALAR(MAT_SSIG,"Steel Yield strength");
    MAT_SETAN24                 = INPUT_SCALAR(MAT_SETAN,"Steel Tangent modulus");
    MAT_PDIR1                   = INPUT_SCALAR(MAT_PDIR1,"% reinforcement dir. 1");
    MAT_PDIR2                   = INPUT_SCALAR(MAT_PDIR2,"% reinforcement dir. 2");
    MAT_PDIR3                   = INPUT_SCALAR(MAT_PDIR3,"% reinforcement dir. 3");
}

DRAWABLES(COMMON) {
public:
    INITIAL_DENSITY   = SCALAR(MAT_RHO);
    YOUNG_MODULUS     = SCALAR(MAT_E2);
    POISSON_RATIO     = SCALAR(MAT_NU);
    SOUND_SPEED       = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
private:
    G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
    C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
public:
    SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/INITIAL_DENSITY)^0.5);
}

CHECK(COMMON)
{
    MAT_COMPAC                  <0;
    MAT_E                       >0.0;
    MAT_NU                      >=0.0;
    MAT_NU                      <0.5;
    MAT_RHO                     >0.0;
    MAT_SIGY                    >0.0;
}

DEFAULTS(COMMON)
{
    MAT_BETA                    = 0.5;
    MAT_BPMOD                   = -0.002;
    MAT_COMPAC                  = -0.35;
    MAT_DAMAGE                  = 0.99999;
    MAT_DIL_F                   = -0.1;
    MAT_DIL_Y                   = -0.2;
    MAT_EPS                     = 1.0e30;
    MAT_F2Fc                    = 4.0;
    MAT_FbFc                    = 1.20;
    MAT_FtFc                    = 0.1;
    MAT_PPRES                   = 0.0;
    MAT_SoFc                    = 1.25;
}

GUI(COMMON) {
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Mat_Name_OR_LawNo ==2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW24/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/CONC/");
    }
    FLAG(MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)   { DIMENSION="density";       }
    }
mandatory:
    SCALAR(MAT_RHO)         { DIMENSION="density";            }
mandatory:
    SCALAR(MAT_E)           { DIMENSION="pressure";      }
optional:
    SCALAR(MAT_NU)          { DIMENSION="DIMENSIONLESS"; } 
mandatory:
    SCALAR(MAT_SIGY)        { DIMENSION="pressure";      }
optional:
    SCALAR(MAT_FtFc)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_FbFc)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_F2Fc)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_SoFc)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_ETAN)        { DIMENSION="pressure";      } 
    SCALAR(MAT_DAMAGE)      { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_EPS)         { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_BETA)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_PPRES)       { DIMENSION="pressure";      }
    SCALAR(MAT_YPRES)       { DIMENSION="pressure";         }
    SCALAR(MAT_BPMOD)       { DIMENSION="pressure";      }
    SCALAR(MAT_DIL_Y)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_DIL_F)       { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_COMPAC)      { DIMENSION="DIMENSIONLESS";        }
    SCALAR(MAT_CAP_BEG)     { DIMENSION="pressure";         }
    SCALAR(MAT_CAP_END)     { DIMENSION="pressure";         }
    SCALAR(MAT_TPMOD)       { DIMENSION="pressure";      }
    SCALAR(MAT_E2)          { DIMENSION="pressure";      }
    SCALAR(MAT_SSIG)        { DIMENSION="pressure";         }
    SCALAR(MAT_SETAN)       { DIMENSION="pressure";      } 
    SCALAR(MAT_PDIR1)   { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_PDIR2)   { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_PDIR3)   { DIMENSION="DIMENSIONLESS"; }
    // HEAT data
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }
    // THERM_STRESS
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    }
    /*
    mandatory:
    graphical SUPPORT("Support") {
    OBJECTS=(/PART/QUAD,/PART/BRICK);
    ADD(PART,"Parts");
    }
    */
}

// File format
FORMAT(radioss90) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW24/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/CONC/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    //
    COMMENT("#                E_c                  NU");
    CARD("%20lg%20lg",MAT_E,MAT_NU);
    COMMENT("#                 fc            ft_on_fc            fb_on_fc            f2_on_fc            s0_on_fc");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_SIGY,MAT_FtFc,MAT_FbFc,MAT_F2Fc,MAT_SoFc);
    COMMENT("#                H_t               D_sup             EPS_max");
    CARD("%20lg%20lg%20lg",MAT_ETAN,MAT_DAMAGE,MAT_EPS);
    COMMENT("#                k_y                 r_t                 r_c                H_bp");
    CARD("%20lg%20lg%20lg%20lg",MAT_BETA,MAT_PPRES,MAT_YPRES,MAT_BPMOD);
    COMMENT("#            ALPHA_y             ALPHA_F               V_max");
    CARD("%20lg%20lg%20lg",MAT_DIL_Y,MAT_DIL_F,MAT_COMPAC);
    COMMENT("#                f_k                 f_0                H_v0");
    CARD("%20lg%20lg%20lg",MAT_CAP_BEG,MAT_CAP_END,MAT_TPMOD);
    COMMENT("#                  E             sigma_y                 E_t");
    CARD("%20lg%20lg%20lg",MAT_E2,MAT_SSIG,MAT_SETAN);
    COMMENT("#             ALPHA1              ALPHA2              ALPHA3");
    CARD("%20lg%20lg%20lg",MAT_PDIR1,MAT_PDIR2,MAT_PDIR3);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
FORMAT(radioss51) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#        Init. dens.          Ref. dens.");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#        Init. dens.");
        CARD("%20lg",MAT_RHO);
    }
    //
    COMMENT("#               E_C                   NU");
    CARD("%20lg%20lg",MAT_E,MAT_NU);
    //
    COMMENT("#                F_C             FT_ON_FC            FB_ON_FC            F2_ON_FC            S0_ON_FC");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_SIGY,MAT_FtFc,MAT_FbFc,MAT_F2Fc,MAT_SoFc);
    //
    COMMENT("#               H_T                D_SUP             EPS_MAX");
    CARD("%20lg%20lg%20lg",MAT_ETAN,MAT_DAMAGE,MAT_EPS);
    //
    COMMENT("#               K_Y                  R_T                 R_C                H_BP");
    CARD("%20lg%20lg%20lg%20lg",MAT_BETA,MAT_PPRES,MAT_YPRES,MAT_BPMOD);
    //
    COMMENT("#           ALPHA_Y              ALPHA_F               V_MAX");
    CARD("%20lg%20lg%20lg",MAT_DIL_Y,MAT_DIL_F,MAT_COMPAC);
    //
    COMMENT("#               F_K                   F0                H_V0");
    CARD("%20lg%20lg%20lg",MAT_CAP_BEG,MAT_CAP_END,MAT_TPMOD);
    //
    COMMENT("#                 E              SIGMA_Y                 E_T");
    CARD("%20lg%20lg%20lg",MAT_E2,MAT_SSIG,MAT_SETAN);
    //
    COMMENT("#             ALPHA1              ALPHA2              ALPHA3");
    CARD("%20lg%20lg%20lg",MAT_PDIR1,MAT_PDIR2,MAT_PDIR3);  
    //
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
FORMAT(radioss41) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    
    COMMENT("#    Init. dens.");
    CARD("%16lg",MAT_RHO);
    //
    COMMENT("#            E_C              NU");
    CARD("%16lg%16lg",MAT_E,MAT_NU);
    //
    COMMENT("#            F_C        FT_ON_FC        FB_ON_FC        F2_ON_FC        S0_ON_FC");
    CARD("%16lg%16lg%16lg%16lg%16lg",MAT_SIGY,MAT_FtFc,MAT_FbFc,MAT_F2Fc,MAT_SoFc);
    //
    COMMENT("#            H_T           D_SUP         EPS_MAX");
    CARD("%16lg%16lg%16lg",MAT_ETAN,MAT_DAMAGE,MAT_EPS);
    //
    COMMENT("#            K_Y             R_T             R_C            H_BP");
    CARD("%16lg%16lg%16lg%16lg",MAT_BETA,MAT_PPRES,MAT_YPRES,MAT_BPMOD);
    //
    COMMENT("#        ALPHA_Y         ALPHA_F           V_MAX");
    CARD("%16lg%16lg%16lg",MAT_DIL_Y,MAT_DIL_F,MAT_COMPAC);
    //
    COMMENT("#            F_K              F0            H_V0");
    CARD("%16lg%16lg%16lg",MAT_CAP_BEG,MAT_CAP_END,MAT_TPMOD);
    //
    COMMENT("#              E         SIGMA_Y             E_T");
    CARD("%16lg%16lg%16lg",MAT_E2,MAT_SSIG,MAT_SETAN);
    //
    COMMENT("#         ALPHA1          ALPHA2          ALPHA3");
    CARD("%16lg%16lg%16lg",MAT_PDIR1,MAT_PDIR2,MAT_PDIR3);  
}