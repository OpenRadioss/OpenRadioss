//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material heat
// 

ATTRIBUTES(COMMON) {
    IO_FLAG             = VALUE(INT, "");
    HEAT_T0             = VALUE(FLOAT,"Initial Temperature"); 
    HEAT_RHocp          = VALUE(FLOAT,"Specific Heat");   
    HEAT_AS             = VALUE(FLOAT,"Therm.Conduct. Coeff. A for Solid");  
    HEAT_BS             = VALUE(FLOAT,"Therm.Conduct. Coeff. B for Solid");   
    HEAT_Iform          = VALUE(INT,"Flag for Heat Transfer Formulation");   
    HEAT_T1             = VALUE(FLOAT,"Therm.Conduct. of T");   
    HEAT_AL             = VALUE(FLOAT,"Therm.Conduct. Coeff. A for Liquid");  
    HEAT_BL             = VALUE(FLOAT,"Therm.Conduct. coeff. B for Liquid");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //KEYWORD_STR       = 9000;
    HEAT_T0             = 4339;
    HEAT_RHocp          = 4340;
    HEAT_AS             = 4341;
    HEAT_BS             = 4342;
    HEAT_Iform          = 4525;
    HEAT_AL             = 4344;
    HEAT_BL             = 4345;
    HEAT_T1             = 4343;
    IO_FLAG             = -1;
}

DEFAULTS(COMMON)
{
    HEAT_T1 = 1e30;
}


CHECK(COMMON) {
    HEAT_RHocp          >=0.0;
}

GUI(COMMON) {

mandatory:
        SCALAR(HEAT_T0)      { DIMENSION="k"; }
        SCALAR(HEAT_RHocp) { DIMENSION="specificheat";                     }
        SCALAR(HEAT_AS)      { DIMENSION="thermalconductivity";      }
        SCALAR(HEAT_BS)      { DIMENSION="thermalconductivity";      }
        RADIO(HEAT_Iform) 
        {
            ADD(0,"Finite Volume Method for Solid Elements Only") ;
            ADD(1,"Finite Elements Method for Shell and Solid Elements") ;
        } 
        SCALAR(HEAT_T1)      { DIMENSION="k"; }
        SCALAR(HEAT_AL)      { DIMENSION="thermalconductivity";      }
        SCALAR(HEAT_BL)      { DIMENSION="thermalconductivity";      }
}




FORMAT(radioss51) {
    //
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/HEAT/MAT/%d",_ID_);
    }
    COMMENT("#                 T0             RHO0_CP                  AS                  BS     IfORM");
    CARD("%20lg%20lg%20lg%20lg%10d",HEAT_T0,HEAT_RHocp,HEAT_AS,HEAT_BS,HEAT_Iform);
    COMMENT("#                 T1                  AL                   BL");
    CARD("%20lg%20lg%20lg",HEAT_T1,HEAT_AL,HEAT_BL);
    //
}