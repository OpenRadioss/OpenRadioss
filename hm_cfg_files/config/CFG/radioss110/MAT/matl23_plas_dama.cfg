//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material law 23 (LAW 23) Setup File
ATTRIBUTES(COMMON) {
    KEYWORD_STR                 = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                = SIZE("NUM_COMMENTS");
    CommentEnumField            = VALUE(INT,"User Comments");
    COMMENTS                    = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    MAT_RHO                     = VALUE(FLOAT,"Initial Density");
    Refer_Rho                   = VALUE(FLOAT,"Reference Density (for lower than 14.0 version)");
    DUMMY                       = VALUE(STRING,"Dummy variable for Ref_Rho flag");
    MAT_REFRHO_Option           = VALUE(INT, "RefRho_Option");
    MAT_E                       = VALUE(FLOAT,"Young's Modulus");
    MAT_NU                      = VALUE(FLOAT,"Poisson's Ratio");
    MAT_SIGY                    = VALUE(FLOAT,"Plasticity Yield Stress");
    MAT_BETA                    = VALUE(FLOAT,"Plasticity Hardening Parameter");
    MAT_HARD                    = VALUE(FLOAT,"Plasticity Hardening Exponent");
    MAT_EPS                     = VALUE(FLOAT,"Failure Plastic Strain");
    MAT_SIG                     = VALUE(FLOAT,"Plasticity Maximum Stress");
    MAT_SRC                     = VALUE(FLOAT,"Strain Rate Coefficient");
    MAT_SRP                     = VALUE(FLOAT,"Reference Strain Rate");
    STRFLAG                     = VALUE(INT,  "Strain Rate Computation Flag");
    MAT_DAMAGE                  = VALUE(FLOAT,"Damage Model Starts");
    MAT_ETAN                    = VALUE(FLOAT,"Softening Damage Slope");
    // HEAT
    Heat_Inp_opt                = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT             = VALUE(SUBOBJECT, "");
    // THERM_STRESS
    THERM_STRESS                = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS         = VALUE(SUBOBJECT, "");
    Mat_Name_OR_LawNo           = VALUE(INT, "");
    TITLE                       = VALUE(STRING,"");
    IO_FLAG                     = VALUE(INT, "");
    LAW_NO                      = VALUE(STRING, "");
}
SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                 = 9000;
    COMMENTS                    = 5109;
    CommentEnumField            = 7951;
    MAT_REFRHO_Option           = 4285;
    MAT_RHO                     = 118;
    Refer_Rho                   = 4229;
    MAT_E                       = 119;
    MAT_NU                      = 120;
    MAT_BETA                    = 148;
    MAT_DAMAGE                  = 5045;
    MAT_EPS                     = 195;
    MAT_ETAN                    = 153;
    MAT_HARD                    = 71;
    MAT_SIG                     = 5038;
    MAT_SIGY                    = 152;
    MAT_SRC                     = 155;
    MAT_SRP                     = 156;
    STRFLAG                     = 5039;
    NUM_COMMENTS                = 5110;
    Mat_Name_OR_LawNo           = 4538;
    LAW_NO                      = -1;
    IO_FLAG                     = -1;
    TITLE                       = -1;
    DUMMY                       = -1;
    //HEAT
    Heat_Inp_opt                = 4346;
    SUBGRP_HEAT_MAT             = -1;
    // THERM_STRESS
    THERM_STRESS                = 4555;
    SUBGRP_THERM_STRESS         = -1;
}

DEFAULTS(COMMON) {
    MAT_DAMAGE                  = 0.15;
    MAT_EPS                     = 1.0e30;
    MAT_ETAN                    = 0.0;
    MAT_SIG                     = 1.0e30;
    STRFLAG                     = 1;
}
CHECK(COMMON) {
    MAT_ETAN                    <= 0.0;
    MAT_SIGY                    > 0.0;
    MAT_E                       >0.0;
    MAT_EPS                     >=0.0;
    MAT_NU                      >=0.0;
    MAT_NU                      <0.5;
    MAT_RHO                     >0.0;
    MAT_SIG                     >=0.0;
    MAT_SRP                     >=0.0;
    MAT_HARD                    <1.0;
}

DRAWABLES(COMMON) {
public:
    INITIAL_DENSITY   = SCALAR(MAT_RHO);
    YOUNG_MODULUS     = SCALAR(MAT_E);
    POISSON_RATIO     = SCALAR(MAT_NU);
public:
    SOUND_SPEED       = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
private:
    G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
    C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
public:
    SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/INITIAL_DENSITY)^0.5);
}

GUI(COMMON) {
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Mat_Name_OR_LawNo ==1)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/PLAS_DAMA/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW23/");
    }
    FLAG(MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)   { DIMENSION="density";       }
    }
mandatory:
    SCALAR(MAT_RHO)         { DIMENSION="density";            }
    SCALAR(MAT_E)           { DIMENSION="pressure";      }
    SCALAR(MAT_NU)          { DIMENSION="DIMENSIONLESS"; }  
mandatory:
    SCALAR(MAT_SIGY)        { DIMENSION="pressure";      }
optional:
    SCALAR(MAT_BETA)        { DIMENSION="pressure";      }
    SCALAR(MAT_HARD)        { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_EPS)         { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_SIG)         { DIMENSION="pressure";      }
    SCALAR(MAT_SRC);          
    SCALAR(MAT_SRP)         { DIMENSION="strain_rate"; }
optional:
    RADIO(STRFLAG) {
        ORIENTATION=COLUMN;
        ADD(0,"0: Default, Set to 1");
        ADD(1,"1: Strain Rate Effect on SIG_max");
        ADD(2,"2: No Strain Rate Effect on SIG_max");
    }
    SCALAR(MAT_DAMAGE)      { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_ETAN)        { DIMENSION="pressure";      }
    // HEAT data
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }
    // THERM_STRESS
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    }
}
//file format
FORMAT(radioss90) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "PLA" )
        {
            ASSIGN(Mat_Name_OR_LawNo,1);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 1)
    {
        HEADER("/MAT/PLAS_DAMA/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/LAW23/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                  E                  nu");
    CARD("%20lg%20lg",MAT_E,MAT_NU);
    COMMENT("#                  a                   b                   n             Eps_max             sig_max");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_SIGY,MAT_BETA,MAT_HARD,MAT_EPS,MAT_SIG);
    COMMENT("#                  c               EPS_0       ICC");
    CARD("%20lg%20lg%10d",MAT_SRC,MAT_SRP,STRFLAG);
    COMMENT("#            EPS_dam                 E_t");
    CARD("%20lg%20lg",MAT_DAMAGE,MAT_ETAN);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
FORMAT(radioss51) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "PLA" )
        {
            ASSIGN(Mat_Name_OR_LawNo,1);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 1)
    {
        HEADER("/MAT/PLAS_DAMA/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/LAW23/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#        Init. dens.          Ref. dens.");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#        Init. dens.");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                  E                  nu");
    CARD("%20lg%20lg",MAT_E,MAT_NU);
    COMMENT("#                  A                   B                   n             Eps_max             sig_max");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_SIGY,MAT_BETA,MAT_HARD,MAT_EPS,MAT_SIG);
    COMMENT("#                  C                EPS0       ICC");
    CARD("%20lg%20lg%10d",MAT_SRC,MAT_SRP,STRFLAG);
    COMMENT("#            eps_dam                 ET");
    CARD("%20lg%20lg",MAT_DAMAGE,MAT_ETAN);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
FORMAT(radioss41) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    COMMENT("#    Init. dens.");
    CARD("%16lg",MAT_RHO);
    COMMENT("#                E              nu");
    CARD("%16lg%16lg",MAT_E,MAT_NU);
    COMMENT("#                A               B                   n             Eps_max             sig_max");
    CARD("%16lg%16lg%16lg%16lg%16lg",MAT_SIGY,MAT_BETA,MAT_HARD,MAT_EPS,MAT_SIG);
    COMMENT("#                C            EPS0    ICC");
    CARD("%16lg%16lg%8d",MAT_SRC,MAT_SRP,STRFLAG);
    COMMENT("#          eps_dam             ET");
    CARD("%16lg%16lg",MAT_DAMAGE,MAT_ETAN);
}
