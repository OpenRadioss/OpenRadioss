//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material law 59 (CONNECT) setup file

ATTRIBUTES(COMMON)
{
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING,  "Entity_Comments");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    MAT_REFRHO_Option                       = VALUE(INT,  "RefRho_Option");
    MAT_RHO                                 = VALUE(FLOAT,  "Initial Density");
    Refer_Rho                               = VALUE(FLOAT,  "Reference Density");
    DUMMY                                   = VALUE(STRING,"Dummy variable for Ref_Rho flag");
    MAT_E                                   = VALUE(FLOAT,  "Young's Modulus in the Normal Direction per Length");
    MAT_G0                                  = VALUE(FLOAT,  "Shear Modulus in the Tangential Direction per Length");
    NFUNC                                   = SIZE("Number of Input Yield Stress Functions Versus Strain Rate");
    Fsmooth                                 = VALUE(INT,  "Strain Rate Filtering Flag");
    Fcut                                    = VALUE(FLOAT,  "Cutoff Frequency for the Strain Rate Filtering");
    MAT_Iflag                               = VALUE(INT,  "Yield Formulation Flag");
    ABG_IPt                                 = ARRAY[NFUNC](FUNCT,"Normal Yield Stress Function, Defined for the Reference Strain Rate");
    ABG_IPdel                               = ARRAY[NFUNC](FUNCT,"Tangential Yield Stress Function, Defined for the Reference Strain Rate");
    Fp1                                     = ARRAY[NFUNC](FLOAT,  "Strain Rate Values for Which the Set of Functions are Defined");
    Fp2                                     = ARRAY[NFUNC](FLOAT,  "Scale Factor for the Plastic Stress");
    // HEAT
    Heat_Inp_opt                            = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT                         = VALUE(SUBOBJECT, "");
    // THERM_STRESS
    THERM_STRESS                            = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS                     = VALUE(SUBOBJECT, "");
    Mat_Name_OR_LawNo                       = VALUE(INT, "");
    IO_FLAG                                 = VALUE(INT, "");
    LAW_NO                                  = VALUE(STRING, "");
    TITLE                                   = VALUE(STRING,"");
}


SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    NUM_COMMENTS                            = 5110;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    MAT_REFRHO_Option                       = 4285;
    MAT_RHO                                 = 118;
    Refer_Rho                               = 4229;
    DUMMY                                   = -1;
    MAT_E                                   = 119;
    MAT_G0                                  = 304;
    NFUNC                                   = 5093;
    Fsmooth                                 = 5355;
    Fcut                                    = 5356;
    MAT_Iflag                               = 6002;
    ABG_IPdel                               = 927;
    ABG_IPt                                 = 925;
    Fp1                                     = 4114;
    Fp2                                     = 4115;
    Heat_Inp_opt                            = 4346;
    SUBGRP_HEAT_MAT                         = -1;
    THERM_STRESS                            = 4555;
    SUBGRP_THERM_STRESS                     = -1;
    Mat_Name_OR_LawNo                       = 4538;
    LAW_NO                                  = -1;
    IO_FLAG                                 = -1;
    TITLE                                   = -1;
}

DRAWABLES(COMMON) {
    public:
    INITIAL_DENSITY         = SCALAR(MAT_RHO);
    YOUNG_MODULUS           = SCALAR(MAT_E);
    SHEAR_MODULUS           = SCALAR(MAT_G0);
public:
    SOUND_SPEED             = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
private:
    C1                = EVAL(YOUNG_MODULUS/3);
public:
    SOUND_SPEED_SOLID = EVAL(((4*SHEAR_MODULUS/3+C1)/INITIAL_DENSITY)^0.5);
}

CHECK(COMMON)
{
    Fcut                                    >=0.0;
    MAT_E                                   >0.0;
    MAT_G0                                  >0.0;
    MAT_RHO                                 >0.0;
    MAT_RHO                                 >0.0;
    NFUNC                                   <=100;
}

DEFAULTS(COMMON)
{
    Fcut                = 1.0e30;
    Mat_Name_OR_LawNo   = 0;
}

GUI(COMMON)
{
    if( Mat_Name_OR_LawNo ==2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW59/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/CONNECT/");
    }

    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if( CommentEnumField == 2)
    {
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }
optional:
    graphical FLAG( MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)                                { DIMENSION="density";                  }
    }
mandatory:
    SCALAR(MAT_RHO)                                      { DIMENSION="density";                  }

    SCALAR(MAT_E)                                        { DIMENSION="pressure";                      }
    SCALAR(MAT_G0)                                       { DIMENSION="pressure";                 }

    SIZE(NFUNC);
    ARRAY(NFUNC,"")
    {
        //DATA(ABG_IPt);
        //DATA(ABG_IPdel);
        FUNCTION(ABG_IPt) {
            X_TITLE     = "EPSILON_P_MAX"; Y_TITLE     = "SIGMA"; 
            X_DIMENSION = "DIMENSIONLESS"; Y_DIMENSION="pressure";
        }
        FUNCTION(ABG_IPdel) {
            X_TITLE     = "EPSILON_P_MAX"; Y_TITLE     = "SIGMA"; 
            X_DIMENSION = "DIMENSIONLESS"; Y_DIMENSION="pressure";
        }
        SCALAR(Fp1)                                 { DIMENSION="f";     }
        SCALAR(Fp2)                                 { DIMENSION="pressure";     }
    }
optional:
    RADIO(Fsmooth)
    {
        ADD(0, "0: No Strain Rate Filtering");
        ADD(1, "1: Strain Rate Filtering");
    }
    SCALAR(Fcut)                                    { DIMENSION="f";                     }
    /*mandatory:
    graphical SUPPORT("Support") {
    OBJECTS=(/PART/BRICK);
    ADD(PART,"Parts");
    }
    */
optional:
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    } 
}
FORMAT(radioss110) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if (IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW59/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/CONNECT/%d", _ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option != FALSE)
    {
        COMMENT("#              RHO_I          Ref. dens.");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else
    {
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    } 
    COMMENT("#                  E                   G");
    CARD("%20lg%20lg",MAT_E,MAT_G0);
    COMMENT("# NB_funct   Fsmooth                Fcut");
    CARD("%10d%10d%20lg",NFUNC,Fsmooth,Fcut);
    if(NFUNC > 0){
        COMMENT("# YFun_IDN  YFun_IDT        SR_reference        Fscale_yield");
        CARD_LIST(NFUNC) {
            CARD("%10d%10d%20lg%20lg",ABG_IPt ,ABG_IPdel,Fp1,Fp2);
        }
    }
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}

FORMAT(radioss100) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if (IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW59/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/CONNECT/%d", _ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option != FALSE)
    {
        COMMENT("#              RHO_I          Ref. dens.");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else
    {
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    } 
    COMMENT("#                  E                   G");
    CARD("%20lg%20lg",MAT_E,MAT_G0);
    COMMENT("# NB_funct   Fsmooth                Fcut    Y_Flag");
    CARD("%10d%10d%20lg%10d",NFUNC,Fsmooth,Fcut,MAT_Iflag);
    if(NFUNC > 0){
        COMMENT("# YFun_IDN  YFun_IDT        SR_reference        Fscale_yield");
        CARD_LIST(NFUNC) {
            CARD("%10d%10d%20lg%20lg",ABG_IPt ,ABG_IPdel,Fp1,Fp2);
        }
    }
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
