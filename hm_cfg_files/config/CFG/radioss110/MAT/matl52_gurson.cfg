//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material law 52 (GURSON) Setup File

ATTRIBUTES(COMMON) 
{
    KEYWORD_STR                 = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                = SIZE("NUM_COMMENTS");
    CommentEnumField            = VALUE(INT,"User Comments");
    COMMENTS                    = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    MAT_RHO                     = VALUE(FLOAT,"Initial Density");
    Refer_Rho                   = VALUE(FLOAT,"Reference Density (for lower than 14.0 version)");
    DUMMY                       = VALUE(STRING,"Dummy variable for Ref_Rho flag");
    MAT_REFRHO_Option           = VALUE(INT, "RefRho_Option");
    MAT_E                       = VALUE(FLOAT,"Young's Modulus");
    MAT_NU                      = VALUE(FLOAT,"Poisson's Ratio");
    MAT_Iflag                   = VALUE(INT,  "Visco-Elastic Flow Flag");
    Fsmooth                     = VALUE(INT,   "Smooth Strain Rate are Computed");
    Fcut                        = VALUE(FLOAT, "Cutoff Frequency for Strain Rate Filtering"); 
    MAT_A                       = VALUE(FLOAT,"Yield Stress");
    MAT_B                       = VALUE(FLOAT,"Hardening Parameter");
    MAT_N                       = VALUE(FLOAT,"Hardening Exponent");
    MAT_C                       = VALUE(FLOAT,"Strain Rate Coefficient in Cowper-Symond's Law");
    MAT_PC                      = VALUE(FLOAT,"Strain Rate Exponent in Cowper-Symond's Law");
    MAT_q1                      = VALUE(FLOAT,"Damage Material Parameter 1");
    MAT_q2                      = VALUE(FLOAT,"Damage Material Parameter 2");
    MAT_q3                      = VALUE(FLOAT,"Damage Material Parameter 3");
    MAT_S_N                     = VALUE(FLOAT,"Gaussian Standard Deviation");
    MAT_EPS_N                   = VALUE(FLOAT,"Nucleated Effective Plastic Strain");
    MAT_f_I                     = VALUE(FLOAT,"Initial Void Volume Fraction");
    MAT_f_N                     = VALUE(FLOAT,"Nucleated Void Volume Fraction");
    MAT_f_C                     = VALUE(FLOAT,"Critical Void Volume Fraction at Coalescence");
    MAT_f_F                     = VALUE(FLOAT,"Critical Void Volume Fraction at Ductile Fracture");
    Heat_Inp_opt                = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT             = VALUE(SUBOBJECT, "");
    THERM_STRESS                = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS         = VALUE(SUBOBJECT, "");
    IO_FLAG                     = VALUE(INT, "");
    LAW_NO                      = VALUE(STRING, "");
    Mat_Name_OR_LawNo           = VALUE(INT,  "RADIOSS_COMMENT_FLAG");
    TITLE                       = VALUE(STRING,"");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                 = 9000;
    COMMENTS                    = 5109;
    CommentEnumField            = 7951;
    MAT_REFRHO_Option           = 4285;
    MAT_RHO                     = 118;
    Refer_Rho                   = 4229;
    Fcut                        = 5356;
    Fsmooth                     = 5355;
    MAT_A                       = 6056;
    MAT_B                       = 995;
    MAT_C                       = 996;
    MAT_E                       = 119;
    MAT_EPS_N                   = 6050;
    MAT_Iflag                   = 6002;
    MAT_N                       = 5037;
    MAT_NU                      = 120;
    MAT_PC                      = 282;
    MAT_S_N                     = 6049;
    MAT_f_C                     = 6053;
    MAT_f_F                     = 6054;
    MAT_f_I                     = 6051;
    MAT_f_N                     = 6052;
    MAT_q1                      = 6046;
    MAT_q2                      = 6047;
    MAT_q3                      = 6048;
    NUM_COMMENTS                = 5110;
    Heat_Inp_opt                = 4346;
    SUBGRP_HEAT_MAT             = -1;
    THERM_STRESS                = 4555;
    SUBGRP_THERM_STRESS         = -1;
    DUMMY                       = -1;
    LAW_NO                      = -1;
    Mat_Name_OR_LawNo           = 4538;
    IO_FLAG                     = -1;
    TITLE                       = -1;

}

DRAWABLES(COMMON) {
public:
    INITIAL_DENSITY                 = SCALAR(MAT_RHO);
    YOUNG_MODULUS                   = SCALAR(MAT_E);
    POISSON_RATIO                   = SCALAR(MAT_NU);
public:
    SOUND_SPEED                     = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
private:
    G                               = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
    C1                              = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
public:
    SOUND_SPEED_SOLID               = EVAL(((4*G/3+C1)/INITIAL_DENSITY)^0.5);
}

PARAMETERS(PARAMETERS) {
    MAT_RHO                     = INPUT_SCALAR(MAT_RHO,"Initial Density");   
    MAT_E                       = INPUT_SCALAR(MAT_E,"Young modulus");
    MAT_NU                      = INPUT_SCALAR(MAT_NU,"Poisson ratio");
    MAT_A                       = INPUT_SCALAR(MAT_A,"Yield stress");
    MAT_B                       = INPUT_SCALAR(MAT_B,"Hardening parameter");
    MAT_N                       = INPUT_SCALAR(MAT_N,"Hardening exponent");
    c                           = INPUT_SCALAR(MAT_C,"Iso-kinematic Hardening factor");
    p                           = INPUT_SCALAR(MAT_PC,"Visco-elastic exponent");
    q1                          = INPUT_SCALAR(MAT_q1,"Damage param. 1");
    q2                          = INPUT_SCALAR(MAT_q2,"Damage param. 2");
    q3                          = INPUT_SCALAR(MAT_q3,"Damage param. 3");
    SMAT_N                      = INPUT_SCALAR(MAT_S_N,"Gaussian standard deviation");
    MAT_EPS_N                   = INPUT_SCALAR(MAT_EPS_N,"Nucleated eff. plas. strain");
    F1                          = INPUT_SCALAR(MAT_f_I,"Initial void vol. fract.");
    fMAT_N                      = INPUT_SCALAR(MAT_f_N,"Nucleated void vol. fract.");
    fMAT_C                      = INPUT_SCALAR(MAT_f_C,"Critical void vol. fract.\nat coalescence");
    fF                          = INPUT_SCALAR(MAT_f_F,"Critical void vol. fract.\nat ductile fracture");
}

CHECK(COMMON)
{
    Fcut                        >=0.0;
    MAT_A                       >0.0;
    MAT_B                       >=0.0;
    MAT_E                       >0.0;
    MAT_N                       >=0.0;
    MAT_N                       <=1.0;
    MAT_NU                      >=0.0;
    MAT_NU                      <0.5;
    MAT_RHO                     >0.0;
}

DEFAULTS(COMMON)
{
    Fcut                        = 1.0e30;
    Fsmooth                     = 0;
    Mat_Name_OR_LawNo           = 0;
}

GUI(COMMON) {
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if(Mat_Name_OR_LawNo == 2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW52/");
    }
    else 
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/GURSON/");
    }
    FLAG(MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)      { DIMENSION="density";       }
    }
mandatory:
    SCALAR(MAT_RHO)         { DIMENSION="density";            } 
    SCALAR(MAT_E)           { DIMENSION="pressure";      }
optional:
    SCALAR(MAT_NU)          { DIMENSION = "DIMENSIONLESS"; }
    RADIO(MAT_Iflag) {
        ADD(0,"0: Von Mises Criterium 0");
        ADD(1,"1: Von Mises Criterium 1");
        ADD(2,"1 + Void Nucleation Set to Zero in Compression");
        ADD(3,"0 + Void Nucleation Set to Zero in Compression");
    }
    RADIO(Fsmooth) {
        ADD(0,"0: Strain Rate Smoothing is Inactive(Default)");
        ADD(1,"1: Starian Rate Smoothing is Active");
    }
    SCALAR(Fcut)            { DIMENSION="f";     }
mandatory:
    SCALAR(MAT_A)           { DIMENSION="pressure";      }
optional:
    SCALAR(MAT_B)           { DIMENSION="pressure";      }
    SCALAR(MAT_N)           { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_C)           { DIMENSION="f";     }
    SCALAR(MAT_PC)          { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_q1);
    SCALAR(MAT_q2)          { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_q3);
    SCALAR(MAT_S_N)         { DIMENSION="pressure"; }
    SCALAR(MAT_EPS_N)       { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_f_I)         { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_f_N)         { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_f_C)         { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_f_F)         { DIMENSION = "DIMENSIONLESS"; }
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    } 
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    }
    /*
    mandatory:
    graphical SUPPORT("Support") {
    OBJECTS=(/COMPONENT/QUAD,/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/LINEAR_3D,/COMPONENT/PENTA6,/COMPONENT/LINEAR_THICK,
    /COMPONENT/TETRA10,/COMPONENT/SHEL16,/COMPONENT/BRIC20,/COMPONENT/SHELL);
    ADD(COMPONENT,"Parts");
    }
    */
}

FORMAT(radioss90) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if (IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW52/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/GURSON/%d", _ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#              RHO_I");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                  E               NU_12     Iflag   Fsmooth                Fcut");
    CARD("%20lg%20lg%10d%10d%20lg",MAT_E,MAT_NU,MAT_Iflag,Fsmooth,Fcut);
    COMMENT("#                  A                   B                   N                   c                   p");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_A,MAT_B,MAT_N,MAT_C,MAT_PC);
    COMMENT("#            alpha_1             alpha_2             alpha_3                  SN                EpsN");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_q1,MAT_q2,MAT_q3,MAT_S_N,MAT_EPS_N);
    COMMENT("#                 Fi                  FN                  Fc                  FF");
    CARD("%20lg%20lg%20lg%20lg",MAT_f_I,MAT_f_N,MAT_f_C,MAT_f_F);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
FORMAT(radioss51) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if (IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW52/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/GURSON/%d", _ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#        Init. dens.          Ref. dens.");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#        Init. dens.");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                  E                  NU     Iflag   Fsmooth              ASRATE");
    CARD("%20lg%20lg%10d%10d%20lg",MAT_E,MAT_NU,MAT_Iflag,Fsmooth,Fcut);
    COMMENT("#                  a                   b                   n                   c                   p");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_A,MAT_B,MAT_N,MAT_C,MAT_PC);
    COMMENT("#                 q1                  q2                  q3                  Sn                EpsN");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_q1,MAT_q2,MAT_q3,MAT_S_N,MAT_EPS_N);
    COMMENT("#                 Fi                  Fn                  Fc                  Ff");
    CARD("%20lg%20lg%20lg%20lg",MAT_f_I,MAT_f_N,MAT_f_C,MAT_f_F);
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}
FORMAT(radioss44) {
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if (IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW52/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/GURSON/%d", _ID_);
        CARD("%-100s", TITLE);
    }
    COMMENT("#    Init. dens.");
    CARD("%16lg",MAT_RHO);
    COMMENT("#              E            Nu12   Iflag");
    CARD("%16lg%16lg%8d",MAT_E,MAT_NU,MAT_Iflag);
    COMMENT("#              a               b               n               c               p");
    CARD("%16lg%16lg%16lg%16lg%16lg",MAT_A,MAT_B,MAT_N,MAT_C,MAT_PC);
    COMMENT("#             q1              q2              q3              Sn            EpsN");
    CARD("%16lg%16lg%16lg%16lg%16lg",MAT_q1,MAT_q2,MAT_q3,MAT_S_N,MAT_EPS_N);
    COMMENT("#             Fi              Fn              Fc              Ff");
    CARD("%16lg%16lg%16lg%16lg",MAT_f_I,MAT_f_N,MAT_f_C,MAT_f_F);
}