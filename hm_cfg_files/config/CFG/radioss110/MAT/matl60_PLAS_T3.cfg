//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material law 60 (PLAS_T3) Setup File

ATTRIBUTES(COMMON)
{
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING,  "Entity_Comments");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    MAT_REFRHO_Option                       = VALUE(INT,  "RefRho_Option");
    MAT_RHO                                 = VALUE(FLOAT,  "Initial Density");
    Refer_Rho                               = VALUE(FLOAT,  "Reference Density");
    DUMMY                                   = VALUE(STRING,"Dummy variable for Ref_Rho flag");
    MAT_E                                   = VALUE(FLOAT,  "Young's Modulus");
    MAT_NU                                  = VALUE(FLOAT,  "Poisson Coeff.");
    MAT_EPS                                 = VALUE(FLOAT,  "Maximum Failure Plastic Strain");
    MAT_EPST1                               = VALUE(FLOAT,  "Tensile Failure Strain at Which Stress Starts to Reduce");
    MAT_EPST2                               = VALUE(FLOAT,  "Maximum Tensile Failure Strain at Which the Stress in Element is Set to Zero");
    //NFUNC                                 = VALUE(INT,  "N_funct");
    NFUNC                                   = SIZE("Number of Functions");
    Fsmooth                                 = VALUE(INT,  "Smooth Strain Rate Option Flag");
    MAT_HARD                                = VALUE(FLOAT,  "Hardening Coefficient");
    Fcut                                    = VALUE(FLOAT,  "Cutoff Frequency for Strain Rate Filtering");
    Xr_fun                                  = VALUE(FUNCT,  "Pressure vs. Yield Factor Function");
    MAT_FScale                              = VALUE(FLOAT,  "Scale Factor for Yield Factor in Fct_IDp");
    FUN_A1                                  = VALUE(FUNCT,  "Yield Stress Function Identifier 1 Corresponding to Strain Rate E21");
    FUN_B1                                  = VALUE(FUNCT,  "Yield Stress Function Identifier 2 Corresponding to Strain Rate E22");
    FUN_A2                                  = VALUE(FUNCT,  "Yield Stress Function Identifier 3 Corresponding to Strain Rate E23");
    FUN_B2                                  = VALUE(FUNCT,  "Yield Stress Function Identifier 4 Corresponding to Strain Rate E24");
    FUN_A3                                  = VALUE(FUNCT,  "Yield Stress Function Identifier 5 Corresponding to Strain Rate E25");
    FUN_B3                                  = VALUE(FUNCT,  "Yield Stress Function Identifier 6 Corresponding to Strain Rate E26");
    FUN_A4                                  = VALUE(FUNCT,  "Yield Stress Function Identifier 7 Corresponding to Strain Rate E27");
    FUN_B4                                  = VALUE(FUNCT,  "Yield Stress Function Identifier 8 Corresponding to Strain Rate E28");
    FUN_A5                                  = VALUE(FUNCT,  "Yield Stress Function Identifier 9 Corresponding to Strain Rate E29");
    FUN_B5                                  = VALUE(FUNCT,  "Yield Stress Function Identifier 10 Corresponding to Strain Rate E210");
    MAT_ALPHA1                              = VALUE(FLOAT,  "Scale Factor for Ordinate (Stress) in Fct_ID1");
    MAT_ALPHA2                              = VALUE(FLOAT,  "Scale Factor for Ordinate (Stress) in Fct_ID2");
    MAT_ALPHA3                              = VALUE(FLOAT,  "Scale Factor for Ordinate (Stress) in Fct_ID3");
    MAT_ALPHA4                              = VALUE(FLOAT,  "Scale Factor for Ordinate (Stress) in Fct_ID4");
    MAT_ALPHA5                              = VALUE(FLOAT,  "Scale Factor for Ordinate (Stress) in Fct_ID5");
    MAT_ALPHA6                              = VALUE(FLOAT,  "Scale Factor for Ordinate (Stress) in Fct_ID6");
    MAT_ALPHA7                              = VALUE(FLOAT,  "Scale Factor for Ordinate (Stress) in Fct_ID7");
    MAT_ALPHA8                              = VALUE(FLOAT,  "Scale Factor for Ordinate (Stress) in Fct_ID8");
    MAT_ALPHA9                              = VALUE(FLOAT,  "Scale Factor for Ordinate (Stress) in Fct_ID9");
    MAT_ALPHA0                              = VALUE(FLOAT,  "Scale Factor for Ordinate (Stress) in Fct_ID10");
    MAT_EPSR1                               = VALUE(FLOAT,  "Strain Rate 1");
    MAT_EPSR2                               = VALUE(FLOAT,  "Strain Rate 2");
    MAT_EPSR3                               = VALUE(FLOAT,  "Strain Rate 3");
    MAT_EPSR4                               = VALUE(FLOAT,  "Strain Rate 4");
    MAT_EPSR5                               = VALUE(FLOAT,  "Strain Rate 5");
    MAT_EPSR6                               = VALUE(FLOAT,  "Strain Rate 6");
    MAT_EPSR7                               = VALUE(FLOAT,  "Strain Rate 7");
    MAT_EPSR8                               = VALUE(FLOAT,  "Strain Rate 8");
    MAT_EPSR9                               = VALUE(FLOAT,  "Strain Rate 9");
    MAT_EPSR10                              = VALUE(FLOAT,  "Strain Rate 10");
    Heat_Inp_opt                            = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT                         = VALUE(SUBOBJECT, "");
    THERM_STRESS                            = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS                     = VALUE(SUBOBJECT, "");
    IO_FLAG                                 = VALUE(INT, "");
    LAW_NO                                  = VALUE(STRING, "");
    Mat_Name_OR_LawNo                       = VALUE(INT,  "RADIOSS_COMMENT_FLAG");
    TITLE                                   = VALUE(STRING,"");
    CHECK                                   = VALUE(INT, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    NUM_COMMENTS                            = 5110;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    MAT_REFRHO_Option                       = 4285;
    MAT_RHO                                 = 118;
    Refer_Rho                               = 4229;
    DUMMY                                   = -1;
    MAT_E                                   = 119;
    MAT_NU                                  = 120;
    MAT_EPS                                 = 195;
    MAT_EPST1                               = 5069;
    MAT_EPST2                               = 5071;
    NFUNC                                   = 5093;
    Fsmooth                                 = 5355;
    MAT_HARD                                = 71;
    Fcut                                    = 5356;
    Xr_fun                                  = 869;
    MAT_FScale                              = 4092;
    FUN_A1                                  = 45;
    FUN_B1                                  = 168;
    FUN_B2                                  = 171;
    FUN_A2                                  = 170;
    FUN_A3                                  = 172;
    FUN_B3                                  = 199;
    FUN_A4                                  = 200;
    FUN_B4                                  = 224;
    FUN_A5                                  = 1141;
    FUN_B5                                  = 1142;
    MAT_ALPHA1                              = 375;
    MAT_ALPHA2                              = 377;
    MAT_ALPHA3                              = 381;
    MAT_ALPHA4                              = 382;
    MAT_ALPHA5                              = 386;
    MAT_ALPHA6                              = 5084;
    MAT_ALPHA7                              = 5085;
    MAT_ALPHA8                              = 5086;
    MAT_ALPHA9                              = 5087;
    MAT_ALPHA0                              = 5088;
    MAT_EPSR1                               = 5089;
    MAT_EPSR2                               = 5090;
    MAT_EPSR3                               = 5091;
    MAT_EPSR4                               = 5092;
    MAT_EPSR5                               = 5339;
    MAT_EPSR6                               = 5340;
    MAT_EPSR7                               = 5341;
    MAT_EPSR8                               = 5342;
    MAT_EPSR9                               = 5343;
    MAT_EPSR10                              = 5344;
    //FUNCT_ID                                = 4556;
    Heat_Inp_opt                            = 4346;
    SUBGRP_HEAT_MAT                         = -1;
    THERM_STRESS                            = 4555;
    SUBGRP_THERM_STRESS                     = -1;
    LAW_NO                                  = -1;
    Mat_Name_OR_LawNo                       = 4538;
    IO_FLAG                                 = -1;
    TITLE                                   = -1;
    CHECK                                   = -1;
}

DRAWABLES(COMMON) {
public:
    INITIAL_DENSITY                 = SCALAR(MAT_RHO);
    YOUNG_MODULUS                   = SCALAR(MAT_E);
    POISSON_RATIO                   = SCALAR(MAT_NU);
public:
    SOUND_SPEED                     = EVAL((YOUNG_MODULUS/INITIAL_DENSITY)^0.5);
private:
    G                               = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
    C1                              = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
public:
    SOUND_SPEED_SOLID               = EVAL(((4*G/3+C1)/INITIAL_DENSITY)^0.5);
}


CHECK(COMMON)
{
    Fcut                                    >=0.0;
    MAT_E                                   >0.0;
    MAT_EPS                                 >=0.0;
    MAT_EPSR1                               >=0.0;
    MAT_EPSR10                              >=0.0;
    MAT_EPSR2                               >=0.0;
    MAT_EPSR3                               >=0.0;
    MAT_EPSR4                               >=0.0;
    MAT_EPSR5                               >=0.0;
    MAT_EPSR6                               >=0.0;
    MAT_EPSR7                               >=0.0;
    MAT_EPSR8                               >=0.0;
    MAT_EPSR9                               >=0.0;
    MAT_EPST1                               >=0.0;
    MAT_EPST2                               >=0.0;
    MAT_HARD                                >=0.0;
    MAT_HARD                                <=1.0;
    MAT_NU                                  >=0.0;
    MAT_NU                                  <0.5;
    MAT_RHO                                 >0.0;
    MAT_RHO                                 >0.0;
}

DEFAULTS(COMMON)
{
    //CLOAD_SCALE_Y        = 1.0;
    Fcut                                    = 1.0e30;
    Fsmooth                                 = 0;
    MAT_ALPHA0                              = 1.0;
    MAT_ALPHA1                              = 1.0;
    MAT_ALPHA2                              = 1.0;
    MAT_ALPHA3                              = 1.0;
    MAT_ALPHA4                              = 1.0;
    MAT_ALPHA5                              = 1.0;
    MAT_ALPHA6                              = 1.0;
    MAT_ALPHA7                              = 1.0;
    MAT_ALPHA8                              = 1.0;
    MAT_ALPHA9                              = 1.0;
    MAT_EPS                                 = 1.0e30;
    MAT_EPST1                               = 1.0e30;
    MAT_EPST2                               = 2.0e30;
    MAT_FScale                              = 1.0;
    NFUNC                                   = 5;
    CHECK                                   = 0;
    Mat_Name_OR_LawNo                       = 0;
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if( CommentEnumField == 2)
    {
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }
    if( Mat_Name_OR_LawNo ==2)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW60/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/PLAS_T3/");
    }
optional:
    FLAG( MAT_REFRHO_Option);
    if(MAT_REFRHO_Option!=FALSE)
    {
        SCALAR(Refer_Rho)       { DIMENSION="density";  }
    }
mandatory:
    SCALAR(MAT_RHO)             { DIMENSION="density";  }

    SCALAR(MAT_E)               { DIMENSION="pressure";      }
    SCALAR(MAT_NU)              { DIMENSION="DIMENSIONLESS"; }

optional:
    SCALAR(MAT_EPS)             { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_EPST1)           { DIMENSION="DIMENSIONLESS"; }
    SCALAR(MAT_EPST2)           { DIMENSION="DIMENSIONLESS"; }

mandatory:
    //SCALAR(NFUNC);
    RADIO(NFUNC){
        
        ADD(5, "5");
        ADD(6, "");
        ADD(7, "");
        ADD(8, "");
        ADD(9, "");
        ADD(10, "");
        
    }
    //SCALAR(Fsmooth);
    RADIO(Fsmooth)
    {
        ADD(0,"0:No Strain Rate Smoothing");
        ADD(1,"1:Strain Rate Smoothing Active");
    }
    SCALAR(MAT_HARD);
    SCALAR(Fcut)                { DIMENSION="f";     }
    DATA(Xr_fun);
    SCALAR(MAT_FScale)           { DIMENSION="pressure";     }

    DATA(FUN_A1);
    DATA(FUN_B1);
    DATA(FUN_A2);
    DATA(FUN_B2);
    DATA(FUN_A3);
    if( NFUNC > 5)
    {
        DATA(FUN_B3);
    }
    if( NFUNC > 6)
    {
        DATA(FUN_A4);
    }
    if( NFUNC > 7)
    {
        DATA(FUN_B4);
    }
    if( NFUNC > 8)
    {
        DATA(FUN_A5);
    }
    if( NFUNC > 9)
    {
        DATA(FUN_B5);
    }
    SCALAR(MAT_ALPHA1)           { DIMENSION="pressure";     }
    SCALAR(MAT_ALPHA2)           { DIMENSION="pressure";     }
    SCALAR(MAT_ALPHA3)           { DIMENSION="pressure";     }
    SCALAR(MAT_ALPHA4)           { DIMENSION="pressure";     }
    SCALAR(MAT_ALPHA5)           { DIMENSION="pressure";     }
    if( NFUNC > 5)
    {
        SCALAR(MAT_ALPHA6)           { DIMENSION="pressure";     }
    }
    if( NFUNC > 6)
    {
        SCALAR(MAT_ALPHA7)           { DIMENSION="pressure";     }
    }
    if( NFUNC > 7)
    {
        SCALAR(MAT_ALPHA8)           { DIMENSION="pressure";     }
    }
    if( NFUNC > 8)
    {
        SCALAR(MAT_ALPHA9)           { DIMENSION="pressure";     }
    }
    if( NFUNC > 9)
    {
        SCALAR(MAT_ALPHA0)           { DIMENSION="pressure";     }
    }
    SCALAR(MAT_EPSR1)           { DIMENSION="f";     }
    SCALAR(MAT_EPSR2)           { DIMENSION="f";     }
    SCALAR(MAT_EPSR3)           { DIMENSION="f";     }
    SCALAR(MAT_EPSR4)           { DIMENSION="f";     }
    SCALAR(MAT_EPSR5)           { DIMENSION="f";     }
    if( NFUNC > 5)
    {
        SCALAR(MAT_EPSR6)           { DIMENSION="f";     }
    }
    if( NFUNC > 6)
    {
        SCALAR(MAT_EPSR7)           { DIMENSION="f";     }
    }
    if( NFUNC > 7)
    {
        SCALAR(MAT_EPSR8)           { DIMENSION="f";     }
    }
    if( NFUNC > 8)
    {
        SCALAR(MAT_EPSR9)           { DIMENSION="f";     }
    }
    if( NFUNC > 9)
    {
        SCALAR(MAT_EPSR10)           { DIMENSION="f";     }
    }
    /*mandatory:
    graphical SUPPORT("Support") {
    OBJECTS=(/PART/QUAD,/PART/BRICK,/PART/TETRA4,/PART/LINEAR_3D,/PART/PENTA6,/PART/LINEAR_THICK,
    /PART/TETRA10,/PART/SHEL16,/PART/BRIC20,/PART/SHELL,/PART/SPHCEL);
    ADD(PART,"Parts");
    }*/
optional:
    // HEAT data
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }
    // THERM_STRESS
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    } 

}
FORMAT(radioss51) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if (IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW60/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/PLAS_T3/%d", _ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s",DUMMY);
    if(DUMMY!="")
    {
        ASSIGN(MAT_REFRHO_Option,1,IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option,0,IMPORT);
    }
    if(MAT_REFRHO_Option!=FALSE)
    {
        COMMENT("#        Init. dens.          Ref. dens.");
        CARD("%20lg%20lg",MAT_RHO,Refer_Rho);
    }
    else{
        COMMENT("#        Init. dens.");
        CARD("%20lg",MAT_RHO);
    }
    COMMENT("#                  E                  Nu           Eps_p_max              Eps_t1              Eps_t2");
    CARD("%20lg%20lg%20lg%20lg%20lg",MAT_E,MAT_NU,MAT_EPS,MAT_EPST1,MAT_EPST2);
    COMMENT("#  N_funct   Fsmooth               Chard                Fcut");
    CARD("%10d%10d%20lg%20lg",NFUNC,Fsmooth,MAT_HARD,Fcut);
    COMMENT("#    Ipfun             Fpscale");
    CARD("%10d%20lg",Xr_fun,MAT_FScale);
    if(IO_FLAG == 1 && NFUNC < 5)
    {
        ASSIGN(NFUNC,5);
    }
    //if(NFUNC >= 5){
        COMMENT("#    fun_1     fun_2     fun_3     fun_4     fun_5");
        CARD("%10d%10d%10d%10d%10d",FUN_A1,FUN_B1,FUN_A2,FUN_B2,FUN_A3);
        //ASSIGN(CHECK, 1);
    //}
    if(NFUNC == 6){
        COMMENT("#    fun_6");
        CARD("%10d",FUN_B3);
        ASSIGN(CHECK, 1);
    }
    else if(NFUNC == 7){
        COMMENT("#    fun_6     fun_7");
        CARD("%10d%10d",FUN_B3,FUN_A4);
        ASSIGN(CHECK, 1);
    }
    else if(NFUNC == 8){
        COMMENT("#    fun_6     fun_7     fun_8");
        CARD("%10d%10d%10d",FUN_B3,FUN_A4,FUN_B4);
        ASSIGN(CHECK, 1);
    }
    else if(NFUNC == 9){
        COMMENT("#    fun_6     fun_7     fun_8     fun_9");
        CARD("%10d%10d%10d%10d",FUN_B3,FUN_A4,FUN_B4,FUN_A5);
        ASSIGN(CHECK, 1);
    }
    else if(NFUNC >= 10){
        COMMENT("#    fun_6     fun_7     fun_8     fun_9    fun_10");
        CARD("%10d%10d%10d%10d%10d",FUN_B3,FUN_A4,FUN_B4,FUN_A5,FUN_B5);
        ASSIGN(CHECK, 1);
    }
    //if(NFUNC >= 5){
        COMMENT("#            Fsacle1             Fsacle2             Fsacle3             Fsacle4             Fsacle5");
        CARD("%20lg%20lg%20lg%20lg%20lg",MAT_ALPHA1,MAT_ALPHA2,MAT_ALPHA3,MAT_ALPHA4,MAT_ALPHA5);
        //ASSIGN(CHECK, 1);
    //}
    if(NFUNC == 6){
        COMMENT("#            Fscale6");
        CARD("%20lg",MAT_ALPHA6);
        ASSIGN(CHECK, 1);
    }
    else if(NFUNC == 7){    
        COMMENT("#            Fscale6             Fscale7");
        CARD("%20lg%20lg",MAT_ALPHA6,MAT_ALPHA7);
        ASSIGN(CHECK, 1);
    }
    else if(NFUNC == 8){
        COMMENT("#            Fscale6             Fscale7             Fscale8");
        CARD("%20lg%20lg%20lg",MAT_ALPHA6,MAT_ALPHA7,MAT_ALPHA8);
        ASSIGN(CHECK, 1);
    }
    else if(NFUNC == 9){
        COMMENT("#            Fscale6             Fscale7             Fscale8             Fscale9");
        CARD("%20lg%20lg%20lg%20lg",MAT_ALPHA6,MAT_ALPHA7,MAT_ALPHA8,MAT_ALPHA9);
        ASSIGN(CHECK, 1);
    }
    else if(NFUNC >= 10){
        COMMENT("#            Fscale6             Fscale7             Fscale8             Fscale9            Fscale10");
        CARD("%20lg%20lg%20lg%20lg%20lg",MAT_ALPHA6,MAT_ALPHA7,MAT_ALPHA8,MAT_ALPHA9,MAT_ALPHA0);
        ASSIGN(CHECK, 1);
    }
    //if(NFUNC >= 5){
        COMMENT("#              eps_1               eps_2               eps_3               eps_4               eps_5");
        CARD("%20lg%20lg%20lg%20lg%20lg",MAT_EPSR1,MAT_EPSR2,MAT_EPSR3,MAT_EPSR4,MAT_EPSR5);
        ASSIGN(CHECK, 1);
    //}
    if(NFUNC == 6){
        COMMENT("#              eps_6");
        CARD("%20lg",MAT_EPSR6);
        ASSIGN(CHECK, 1);
    }
    else if(NFUNC == 7){
        COMMENT("#              eps_6               eps_7");
        CARD("%20lg%20lg",MAT_EPSR6,MAT_EPSR7);
        ASSIGN(CHECK, 1);
    }
    else if(NFUNC == 8){
        COMMENT("#              eps_6               eps_7               eps_8");
        CARD("%20lg%20lg%20lg",MAT_EPSR6,MAT_EPSR7,MAT_EPSR8);
        ASSIGN(CHECK, 1);
    }
    else if(NFUNC == 9){
        COMMENT("#              eps_6               eps_7               eps_8               eps_9");
        CARD("%20lg%20lg%20lg%20lg",MAT_EPSR6,MAT_EPSR7,MAT_EPSR8,MAT_EPSR9);
        ASSIGN(CHECK, 1);
    }
    else if(NFUNC >= 10){
        COMMENT("#              eps_6               eps_7               eps_8               eps_9              eps_10");
        CARD("%20lg%20lg%20lg%20lg%20lg",MAT_EPSR6,MAT_EPSR7,MAT_EPSR8,MAT_EPSR9,MAT_EPSR10);
        ASSIGN(CHECK, 1);
    }
    /*if(CHECK != 1) {
        COMMENT("# Functions");
        BLANK;
        //
        COMMENT("# Scale factors");
        BLANK;
        //
        COMMENT("# Strain rates");
        BLANK;
    }*/
    // HEAT data
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    }
    // THERM_STRESS 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
}

FORMAT(radioss44) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if (IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "LAW" )
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 2)
    {
        HEADER("/MAT/LAW60/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/PLAS_T3/%d", _ID_);
        CARD("%-100s", TITLE);
    }
    COMMENT("#        Init. dens.");
    CARD("%16lg",MAT_RHO);
    COMMENT("#              E              Nu       Eps_p_max          Eps_t1          Eps_t2");
    CARD("%16lg%16lg%16lg%16lg%16lg",MAT_E,MAT_NU,MAT_EPS,MAT_EPST1,MAT_EPST2);
    COMMENT("#N_funct Fsmooth           Chard            Fcut   Ipfun");
    CARD("%8d%8d%16lg%16lg%8d",NFUNC,Fsmooth,MAT_HARD,Fcut,Xr_fun);
    if(IO_FLAG == 1 && NFUNC < 5)
    {
        ASSIGN(NFUNC,5);
    }
    COMMENT("#  fun_1   fun_2   fun_3   fun_4   fun_5");
    CARD("%8d%8d%8d%8d%8d",FUN_A1,FUN_B1,FUN_A2,FUN_B2,FUN_A3);

    if(NFUNC == 6){
        COMMENT("#  fun_6");
        CARD("%8d",FUN_B3);
    }
    else if(NFUNC == 7){
        COMMENT("#  fun_6   fun_7");
        CARD("%8d%8d",FUN_B3,FUN_A4);
    }
    else if(NFUNC == 8){
        COMMENT("#  fun_6   fun_7   fun_8");
        CARD("%8d%8d%8d",FUN_B3,FUN_A4,FUN_B4);
    }
    else if(NFUNC == 9){
        COMMENT("#  fun_6   fun_7   fun_8   fun_9");
        CARD("%8d%8d%8d%8d",FUN_B3,FUN_A4,FUN_B4,FUN_A5);
    }
    else if(NFUNC >= 10){
        COMMENT("#  fun_6   fun_7   fun_8   fun_9  fun_10");
        CARD("%8d%8d%8d%8d%8d",FUN_B3,FUN_A4,FUN_B4,FUN_A5,FUN_B5);
    }
    //if(NFUNC >= 5){
        COMMENT("#            Fsacle1             Fsacle2             Fsacle3             Fsacle4             Fsacle5");
        CARD("%16lg%16lg%16lg%16lg%16lg",MAT_ALPHA1,MAT_ALPHA2,MAT_ALPHA3,MAT_ALPHA4,MAT_ALPHA5);
    //}
    if(NFUNC == 6){
        COMMENT("#        Fscale6");
        CARD("%16lg",MAT_ALPHA6);
    }
    else if(NFUNC == 7){
        COMMENT("#        Fscale6         Fscale7");
        CARD("%16lg%16lg",MAT_ALPHA6,MAT_ALPHA7);
    }
    else if(NFUNC == 8){
        COMMENT("#        Fscale6         Fscale7         Fscale8");
        CARD("%16lg%16lg%16lg",MAT_ALPHA6,MAT_ALPHA7,MAT_ALPHA8);
    }
    else if(NFUNC == 9){
        COMMENT("#        Fscale6         Fscale7         Fscale8         Fscale9");
        CARD("%16lg%16lg%16lg%16lg",MAT_ALPHA6,MAT_ALPHA7,MAT_ALPHA8,MAT_ALPHA9);
    }
    else if(NFUNC >= 10){
        COMMENT("#        Fscale6         Fscale7         Fscale8         Fscale9        Fscale10");
        CARD("%16lg%16lg%16lg%16lg%16lg",MAT_ALPHA6,MAT_ALPHA7,MAT_ALPHA8,MAT_ALPHA9,MAT_ALPHA0);
    }
    //if(NFUNC >= 5){
        COMMENT("#          eps_1           eps_2           eps_3           eps_4           eps_5");
        CARD("%16lg%16lg%16lg%16lg%16lg",MAT_EPSR1,MAT_EPSR2,MAT_EPSR3,MAT_EPSR4,MAT_EPSR5);
    //}
    if(NFUNC == 6){
        COMMENT("#          eps_6");
        CARD("%16lg",MAT_EPSR6);
    }
    else if(NFUNC == 7){
        COMMENT("#          eps_6           eps_7");
        CARD("%16lg%16lg",MAT_EPSR6,MAT_EPSR7);
    }
    else if(NFUNC == 8){
        COMMENT("#          eps_6           eps_7           eps_8");
        CARD("%16lg%16lg%16lg",MAT_EPSR6,MAT_EPSR7,MAT_EPSR8);
    }
    else if(NFUNC == 9){
        COMMENT("#          eps_6           eps_7           eps_8           eps_9");
        CARD("%16lg%16lg%16lg%16lg",MAT_EPSR6,MAT_EPSR7,MAT_EPSR8,MAT_EPSR9);
    }
    else if(NFUNC >= 10){
        COMMENT("#          eps_6           eps_7           eps_8          eps_10");
        CARD("%16lg%16lg%16lg%16lg%16lg",MAT_EPSR6,MAT_EPSR7,MAT_EPSR8,MAT_EPSR9,MAT_EPSR10);
    }
}