//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material law 2 (PLAS_JOHNS/PLAS_ZERIL) Setup File
ATTRIBUTES(COMMON) {
    // Support
    //NB_PARTS                      = SIZE("Number of Connected Parts"); 
    //COMPONENT                     = ARRAY[NB_PARTS](COMPONENT,"Connected Parts");
    NUM_COMMENTS                    = SIZE("NUM_COMMENTS");
    CommentEnumField                = VALUE(INT,"User Comments");
    COMMENTS                        = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    IO_FLAG                         = VALUE(INT, "");
    SUBTYPE                         = VALUE(STRING, "");
    MAT_RHO                         = VALUE(FLOAT, "Initial Density");
    Refer_Rho                       = VALUE(FLOAT, "Reference Density");
    TITLE                           = VALUE(STRING,"");
    LAW2_ID                         = VALUE(INT, "Law type");
    SUBGRP_PLAS_JOHNS               = VALUE(SUBOBJECT, ""); 
    SUBGRP_PLAS_ZERIL               = VALUE(SUBOBJECT, "");
    // HEAT
    Heat_Inp_opt                    = VALUE(INT,   "Heat");  
    SUBGRP_HEAT_MAT                 = VALUE(SUBOBJECT, "");
    // THERM_STRESS
    THERM_STRESS                    = VALUE(INT,"Therm Stress");
    SUBGRP_THERM_STRESS             = VALUE(SUBOBJECT, "");
    ALE_Form                        = VALUE(INT, "Flag for Heat Transfer Formulation");
    SUBGRP_ALE_MAT                  = VALUE(SUBOBJECT, "");
    SUBGRP_EULER_MAT                = VALUE(SUBOBJECT, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    COMMENTS                        = 5109;
    CommentEnumField                = 7951;
    NUM_COMMENTS                    = 5110;
    LAW2_ID                         = 8055; 
    SUBGRP_PLAS_JOHNS               = -1;
    SUBGRP_PLAS_ZERIL               = -1;
    //HEAT
    Heat_Inp_opt                    = 4346;
    SUBGRP_HEAT_MAT                 = -1;
    // THERM_STRESS
    THERM_STRESS                    = 4555;
    SUBGRP_THERM_STRESS             = -1;
    ALE_Form                        = 4336;
    SUBGRP_ALE_MAT                  = -1;
    SUBGRP_EULER_MAT                = -1;
    IO_FLAG                         = -1;
    SUBTYPE                         = -1;
    TITLE                           = -1;
    MAT_RHO                         = 118;
    Refer_Rho                       = 4229;
}
GUI(COMMON) 
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }       
    }
    RADIO(LAW2_ID)
    {
        //ENUM_VALUE_FLAG=TRUE;
        ADD(1, "PLAS_JOHNS");
        ADD(2, "PLAS_ZERIL");
    }
    if(LAW2_ID == 1)
    {
        SUBOBJECT(SUBGRP_PLAS_JOHNS) {SUBTYPES = (/SUBOBJECT/MATL2_PLAS_JOHNS);}  
    }
    else if(LAW2_ID == 2)
    {
        SUBOBJECT(SUBGRP_PLAS_ZERIL) {SUBTYPES = (/SUBOBJECT/MATL2_PLAS_ZERIL);}  
    }
    // HEAT data
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt!= 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) {SUBTYPES = (/SUBOBJECT/HEAT);}  
    }
    // THERM_STRESS
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS!= 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) {SUBTYPES = (/SUBOBJECT/THERM_STRESS);}  
    }

    /*
    mandatory:
    graphical SUPPORT("Support") {
    OBJECTS=(/PART/QUAD,/PART/BRICK,/PART/TETRA4,/PART/LINEAR_3D,/PART/PENTA6,/PART/LINEAR_THICK,
    /PART/TETRA10,/PART/SHEL16,/PART/BRIC20,
    /PART/SHELL,/PART/TRUSS,/PART/BEAM,/PART/SPHCEL);
    ADD(PART,"Parts");
    }
    */
}
GUI(ALE) {
optional:
    graphical RADIO(ALE_Form) 
    {
        ADD(1,"NONE") ;
        ADD(2,"ALE") ;
        ADD(3,"EULER");
    }
    if(ALE_Form == 2)
    {
        SUBOBJECT(SUBGRP_ALE_MAT) {SUBTYPES = (/SUBOBJECT/ALE_MAT);}
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECT(SUBGRP_EULER_MAT) {SUBTYPES = (/SUBOBJECT/EULER);}
    }
}
FORMAT(radioss100) 
{
    ASSIGN(IO_FLAG, 1, EXPORT);
    ASSIGN(IO_FLAG, 0, IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/MAT/%10s",SUBTYPE);
        if(SUBTYPE == "PLAS_JOHNS" )
        {
            ASSIGN(LAW2_ID, 1);
        }
        else if(SUBTYPE == "PLAS_ZERIL")
        {
            ASSIGN(LAW2_ID, 2);
        }
        else
        {
            ASSIGN(LAW2_ID, 1);
        }
    }
    else if(IO_FLAG == 1 && LAW2_ID == 1)
    {
        HEADER("/MAT/PLAS_JOHNS/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else if(IO_FLAG == 1 && LAW2_ID == 2)
    {
        HEADER("/MAT/PLAS_ZERIL/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    if(LAW2_ID == 1)
    {
        SUBOBJECTS(SUBGRP_PLAS_JOHNS,/SUBOBJECT/MATL2_PLAS_JOHNS);
    }
    else if(LAW2_ID == 2)
    {
        SUBOBJECTS(SUBGRP_PLAS_ZERIL,/SUBOBJECT/MATL2_PLAS_ZERIL);
    }
    //
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(ALE_Form == 2)
    {
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
    }
}
FORMAT(radioss51) 
{
    ASSIGN(IO_FLAG, 1, EXPORT);
    ASSIGN(IO_FLAG, 0, IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/MAT/%10s",SUBTYPE);
        if(SUBTYPE == "PLAS_JOHNS" )
        {
            ASSIGN(LAW2_ID, 1);
        }
        else if(SUBTYPE == "PLAS_ZERIL")
        {
            ASSIGN(LAW2_ID, 2);
        }
        else
        {
            ASSIGN(LAW2_ID, 1);
        }
    }
    else if(IO_FLAG == 1 && LAW2_ID == 1)
    {
        HEADER("/MAT/PLAS_JOHNS/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else if(IO_FLAG == 1 && LAW2_ID == 2)
    {
        HEADER("/MAT/PLAS_ZERIL/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    if(LAW2_ID == 1)
    {
        SUBOBJECTS(SUBGRP_PLAS_JOHNS,/SUBOBJECT/MATL2_PLAS_JOHNS);
    }
    else if(LAW2_ID == 2)
    {
        SUBOBJECTS(SUBGRP_PLAS_ZERIL,/SUBOBJECT/MATL2_PLAS_ZERIL);
    }
    if(Heat_Inp_opt!=0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT,/SUBOBJECT/HEAT);
    } 
    if(Heat_Inp_opt!=0 && THERM_STRESS !=0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS,/SUBOBJECT/THERM_STRESS);
    }
    if(ALE_Form == 2)
    {
        SUBOBJECTS(SUBGRP_ALE_MAT,/SUBOBJECT/ALE_MAT);
    }
    else if(ALE_Form == 3)
    {
        SUBOBJECTS(SUBGRP_EULER_MAT,/SUBOBJECT/EULER);
    }
}
FORMAT(radioss42) 
{
    ASSIGN(IO_FLAG, 1, EXPORT);
    ASSIGN(IO_FLAG, 0, IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/MAT/%10s",SUBTYPE);
        if(SUBTYPE == "PLAS_JOHNS" )
        {
            ASSIGN(LAW2_ID, 1);
        }
        else if(SUBTYPE == "PLAS_ZERIL")
        {
            ASSIGN(LAW2_ID, 2);
        }
        else
        {
            ASSIGN(LAW2_ID, 1);
        }
    }
    if(LAW2_ID == 1)
    {
        SUBOBJECTS(SUBGRP_PLAS_JOHNS,/SUBOBJECT/MATL2_PLAS_JOHNS);
    }
    else if(LAW2_ID == 2)
    {
        SUBOBJECTS(SUBGRP_PLAS_ZERIL,/SUBOBJECT/MATL2_PLAS_ZERIL);
    }
}
FORMAT(radioss41) 
{
    ASSIGN(IO_FLAG, 1, EXPORT);
    ASSIGN(IO_FLAG, 0, IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/MAT/%10s",SUBTYPE);
        if(SUBTYPE == "PLAS_JOHNS" )
        {
            ASSIGN(LAW2_ID, 1);
        }
        else if(SUBTYPE == "PLAS_ZERIL")
        {
            ASSIGN(LAW2_ID, 2);
        }
        else
        {
            ASSIGN(LAW2_ID, 1);
        }
    }
    if(LAW2_ID == 1)
    {
        SUBOBJECTS(SUBGRP_PLAS_JOHNS,/SUBOBJECT/MATL2_PLAS_JOHNS);
    }
    else if(LAW2_ID == 2)
    {
        SUBOBJECTS(SUBGRP_PLAS_ZERIL,/SUBOBJECT/MATL2_PLAS_ZERIL);
    }
}
