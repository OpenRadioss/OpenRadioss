//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Time history (ACCEL) Setup File
// 

ATTRIBUTES(COMMON) 
{
    //INPUT ATTRIBUTES
    idsmax              = SIZE("Number of groups");
    ids                 = ARRAY[idsmax](GROUP, "Identifiers of the objects to be saved");
    Number_Of_Variables = SIZE("Number Variables saved for TH");
    VAR                 = ARRAY[Number_Of_Variables](STRING, "Variables saved for TH");
    // HM INTERNAL
    KEYWORD_STR         = VALUE(STRING, "Solver Keyword");
    TITLE               = VALUE(STRING, "TH group name");
    TH_OPTION           = VALUE(INT, "TH group name");
// ----- CFG Local attribute
    IO_FLAG             = VALUE(INT, "Import/Export flag");
    PREFIX_STR          = VALUE(STRING, "prefix Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR         = 9000;
    Number_Of_Variables = 7045;
    VAR                 = 7044;
    TH_OPTION           = 4674;
    IO_FLAG             =-1;
    PREFIX_STR          =-1;
}

DEFAULTS(COMMON) 
{

}

GUI(COMMON) 
{
    RADIO(TH_OPTION) 
    {
     /*   ADD(0,"Default TH");*/
        ADD(1,"/TH");
        ADD(2,"/ATH");
        ADD(3,"/BTH");
        ADD(4,"/CTH");
        ADD(5,"/DTH");
        ADD(6,"/ETH");
        ADD(7,"/FTH");
        ADD(8,"/GTH");
        ADD(9,"/HTH");
        ADD(10,"/ITH");
    }
    if(TH_OPTION==0 || TH_OPTION == 1)
    {
        ASSIGN(KEYWORD_STR, "/TH/INTER/"); 
    }
    else if( TH_OPTION == 2)
    {
        ASSIGN(KEYWORD_STR, "/ATH/INTER/"); 
    }
    else if( TH_OPTION == 3)
    {
        ASSIGN(KEYWORD_STR, "/BTH/INTER/"); 
    }
    else if( TH_OPTION == 4)
    {
        ASSIGN(KEYWORD_STR, "/CTH/INTER/"); 
    }
    else if( TH_OPTION == 5)
    {
        ASSIGN(KEYWORD_STR, "/DTH/INTER/"); 
    }
    else if( TH_OPTION == 6)
    {
        ASSIGN(KEYWORD_STR, "/ETH/INTER/"); 
    }
    else if( TH_OPTION == 7)
    {
        ASSIGN(KEYWORD_STR, "/FTH/INTER/"); 
    }
    else if( TH_OPTION == 8)
    {
        ASSIGN(KEYWORD_STR, "/GTH/INTER/"); 
    }
    else if( TH_OPTION == 9)
    {
        ASSIGN(KEYWORD_STR, "/HTH/INTER/"); 
    }
    else if( TH_OPTION == 10)
    {
        ASSIGN(KEYWORD_STR, "/ITH/INTER/"); 
    }
    SIZE(Number_Of_Variables);
    ARRAY(Number_Of_Variables,"Variables") 
    {
       RADIO(VAR) 
       {
        ADD("DEF","DEF: Default");
        ADD("FN","FN: Normal Force (FNX FNY FNZ))");
        ADD("FT","FT: Tangent force (FTX FTY FTZ");
        ADD("OFRIC","OFRIC: Heat which converted form friction energy");
        ADD("FNX","Normal force in direction X");
        ADD("FNY","Normal force in direction Y");
        ADD("FNZ","Normal force in direction Z");
        ADD("FTX","Tangent force in direction X");
        ADD("FTY","Tangent force in direction Y");
        ADD("FTZ","Tangent force in direction Z");
      }
    }
    SIZE(idsmax);
    ARRAY(idsmax,"")
    {
        DATA(ids);
    }
}

// File format
FORMAT(radioss51)
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
 
    
    if(IO_FLAG == 1 )
    {
        HEADER("/%-s/INTER/%d",PREFIX_STR, _ID_);
        if(PREFIX_STR=="TH")
        {
             ASSIGN(TH_OPTION,1, IMPORT);
        }
        else if(PREFIX_STR=="ATH")
        {
            ASSIGN(TH_OPTION, 2, IMPORT);
        }
        else if(PREFIX_STR=="BTH")
        {
            ASSIGN(TH_OPTION, 3, IMPORT);
        }
        else if(PREFIX_STR=="CTH")
        {
            ASSIGN(TH_OPTION, 4, IMPORT);
        }
        else if(PREFIX_STR=="DTH")
        {
            ASSIGN(TH_OPTION, 5, IMPORT);
        }
        else if(PREFIX_STR=="ETH")
        {
            ASSIGN(TH_OPTION, 6, IMPORT);
        }
         else if(PREFIX_STR=="FTH")
        {
            ASSIGN(TH_OPTION, 7, IMPORT);
        }
        else if(PREFIX_STR=="GTH")
        {
            ASSIGN(TH_OPTION, 8, IMPORT);
        }
        else if(PREFIX_STR=="HTH")
        {
            ASSIGN(TH_OPTION, 9, IMPORT);
        }                
        else if(PREFIX_STR=="ITH")
        {
            ASSIGN(TH_OPTION, 10, IMPORT);
        }
        
    }
    if(IO_FLAG == 2 )
    {
        if(TH_OPTION==0 || TH_OPTION == 1)
        {
            HEADER("/TH/INTER/%d", _ID_); 
        }
        else if( TH_OPTION == 2)
        {
            HEADER("/ATH/INTER/%d", _ID_); 
        }
        else if( TH_OPTION == 3)
        {
            HEADER("/BTH/INTER/%d", _ID_); 
        }
        else if( TH_OPTION == 4)
        {
            HEADER("/CTH/INTER/%d", _ID_); 
        }
        else if( TH_OPTION == 5)
        {
            HEADER("/DTH/INTER/%d", _ID_); 
        }
        else if( TH_OPTION == 6)
        {
            HEADER("/ETH/INTER/%d", _ID_); 
        }
        else if( TH_OPTION == 7)
        {
            HEADER("/FTH/INTER/%d", _ID_); 
        }
        else if( TH_OPTION == 8)
        {
            HEADER("/GTH/INTER/%d", _ID_); 
        }
        else if( TH_OPTION == 9)
        {
            HEADER("/HTH/INTER/%d", _ID_); 
        }
        else if( TH_OPTION == 10)
        {
            HEADER("/ITH/INTER/%d", _ID_); 
        }
    }
    CARD("%-100s", TITLE);
    // ASSIGN(Number_Of_Variables,5); // Dummy value, pending an improvement of the FREE_CELL_LIST
    COMMENT("#      var       var       var       var       var       var       var       var       var       var");
    FREE_CELL_LIST(Number_Of_Variables,"%-10s",VAR,100);
    COMMENT("#      Obj       Obj       Obj       Obj       Obj       Obj       Obj       Obj       Obj       Obj");
    FREE_CELL_LIST(idsmax,"%10d",ids,100);
}

FORMAT(radioss41) 
{
    HEADER("/TH/INTER/%d/%s",_ID_,TITLE);
    // ASSIGN(Number_Of_Variables,5); // Dummy value, pending an improvement of the FREE_CELL_LIST
    COMMENT("#    var     var     var     var     var     var     var     var     var     var");
    FREE_CELL_LIST(Number_Of_Variables,"%8s",VAR,80);
    COMMENT("#    Obj     Obj     Obj     Obj     Obj     Obj     Obj     Obj     Obj     Obj");
    FREE_CELL_LIST(idsmax,"%8d",ids,80);
}