//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /TH/SUBS/
//

ATTRIBUTES(COMMON) 
{
    //INPUT ATTRIBUTES
    Number_Of_Variables                     = SIZE("Number Variables saved for TH");
    VAR                                     = ARRAY[Number_Of_Variables](STRING, "Variables saved for TH");

    idsmax                                  = SIZE("Number of Assembly");
    ids                                     = ARRAY[idsmax](ASSEMBLY, "Identifiers of the objects to be saved");

    // HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");

    TITLE                                   = VALUE(STRING, "TH group name");
    TH_OPTION           = VALUE(INT, "TH group name");
// ----- CFG Local attribute
    IO_FLAG             = VALUE(INT, "Import/Export flag");
    PREFIX_STR          = VALUE(STRING, "prefix Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    VAR                                     = 7044;

    Number_Of_Variables                     = 7045;
    
    // HM INTERNAL
    KEYWORD_STR                             = 9000;

    TITLE                                   = -1;
    TH_OPTION           = 4674;
    IO_FLAG             =-1;
    PREFIX_STR          =-1;
}

DEFAULTS(COMMON) 
{
    VAR                                     = "DEF";
    Number_Of_Variables                     = 1;
}

GUI(COMMON) 
{
    RADIO(TH_OPTION) 
    {
     /*   ADD(0,"Default TH");*/
        ADD(1,"/TH");
        ADD(2,"/ATH");
        ADD(3,"/BTH");
        ADD(4,"/CTH");
        ADD(5,"/DTH");
        ADD(6,"/ETH");
        ADD(7,"/FTH");
        ADD(8,"/GTH");
        ADD(9,"/HTH");
        ADD(10,"/ITH");
    }
    if(TH_OPTION==0 || TH_OPTION == 1)
    {
        ASSIGN(KEYWORD_STR, "/TH/SUBS/"); 
    }
    else if( TH_OPTION == 2)
    {
        ASSIGN(KEYWORD_STR, "/ATH/SUBS/"); 
    }
    else if( TH_OPTION == 3)
    {
        ASSIGN(KEYWORD_STR, "/BTH/SUBS/"); 
    }
    else if( TH_OPTION == 4)
    {
        ASSIGN(KEYWORD_STR, "/CTH/SUBS/"); 
    }
    else if( TH_OPTION == 5)
    {
        ASSIGN(KEYWORD_STR, "/DTH/SUBS/"); 
    }
    else if( TH_OPTION == 6)
    {
        ASSIGN(KEYWORD_STR, "/ETH/SUBS/"); 
    }
    else if( TH_OPTION == 7)
    {
        ASSIGN(KEYWORD_STR, "/FTH/SUBS/"); 
    }
    else if( TH_OPTION == 8)
    {
        ASSIGN(KEYWORD_STR, "/GTH/SUBS/"); 
    }
    else if( TH_OPTION == 9)
    {
        ASSIGN(KEYWORD_STR, "/HTH/SUBS/"); 
    }
    else if( TH_OPTION == 10)
    {
        ASSIGN(KEYWORD_STR, "/ITH/SUBS/"); 
    }
    SIZE(Number_Of_Variables);
    ARRAY(Number_Of_Variables,"NUM_VARIABLES") 
    {
       RADIO(VAR) 
       {
         ADD("DEF",   "Default");
         ADD("IE",    "Internal Energy");
         ADD("KE",    "Kinetic Energy");
         ADD("XMOM",  "Translational X Momentum in the Global Reference Frame");
         ADD("YMOM",  "Translational Y Momentum in the Global Reference Frame"); 
         ADD("ZMOM",  "Translational Z Momentum in the Global Reference Frame");
         ADD("MASS",  "Mass");
         ADD("HE",    "Hourglass Energy");
         ADD("TURBKE","Turbulence Energy");
         ADD("XCG",   "Center of Gravity X Coordinate");
         ADD("YCG",   "Center of Gravity Y Coordinate");
         ADD("ZCG",   "Center of Gravity Z Coordinate"); 
         ADD("XXMOM", "Rotational X Momentum in the Global Reference Frame");
         ADD("YYMOM", "Rotational Y Momentum in the Global Reference Frame"); 
         ADD("ZZMOM", "Rotational Z Momentum in the Global Reference Frame");
         ADD("IXX",   "Inertia Matrix");
         ADD("IYY",   "Inertia Matrix");
         ADD("IZZ",   "Inertia Matrix");
         ADD("IXY",   "Inertia Matrix");
         ADD("IYZ",   "Inertia Matrix");
         ADD("IZX",   "Inertia Matrix");
         ADD("RIE",   "Shear Internal Energy");
         ADD("KERB",  "Translational Rigid Body Kinetic Energy");
         ADD("RKERB", "Rotational Rigid Body Kinetic Energy");
         ADD("RKE",   "Rotational Kinetic Energy");
      }
    }

    SIZE(idsmax);
    ARRAY(idsmax,"SUBS")
    {
        DATA(ids);
    }
}

// File format
FORMAT(radioss41) 
{
    HEADER("/TH/SUBS/%d/%s",_ID_,TITLE);

    // Card 1
    COMMENT("#   var1    var2    var3    var4    var5    var6    var7    var8    var9   var10");
    FREE_CELL_LIST(Number_Of_Variables,"%-8s",VAR,80);

    COMMENT("#   Obj1    Obj2    Obj3    Obj4    Obj5    Obj6    Obj7    Obj8    Obj9   Obj10");
    FREE_CELL_LIST(idsmax,"%8d",ids,80);
}

FORMAT(radioss51)
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
 
    
    if(IO_FLAG == 1 )
    {
        HEADER("/%-s/SUBS/%d",PREFIX_STR, _ID_);
        if(PREFIX_STR=="TH")
        {
             ASSIGN(TH_OPTION,1, IMPORT);
        }
        else if(PREFIX_STR=="ATH")
        {
            ASSIGN(TH_OPTION, 2, IMPORT);
        }
        else if(PREFIX_STR=="BTH")
        {
            ASSIGN(TH_OPTION, 3, IMPORT);
        }
        else if(PREFIX_STR=="CTH")
        {
            ASSIGN(TH_OPTION, 4, IMPORT);
        }
        else if(PREFIX_STR=="DTH")
        {
            ASSIGN(TH_OPTION, 5, IMPORT);
        }
        else if(PREFIX_STR=="ETH")
        {
            ASSIGN(TH_OPTION, 6, IMPORT);
        }
         else if(PREFIX_STR=="FTH")
        {
            ASSIGN(TH_OPTION, 7, IMPORT);
        }
        else if(PREFIX_STR=="GTH")
        {
            ASSIGN(TH_OPTION, 8, IMPORT);
        }
        else if(PREFIX_STR=="HTH")
        {
            ASSIGN(TH_OPTION, 9, IMPORT);
        }                
        else if(PREFIX_STR=="ITH")
        {
            ASSIGN(TH_OPTION, 10, IMPORT);
        }
        
    }
    if(IO_FLAG == 2 )
    {
        if(TH_OPTION==0 || TH_OPTION == 1)
        {
            HEADER("/TH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 2)
        {
            HEADER("/ATH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 3)
        {
            HEADER("/BTH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 4)
        {
            HEADER("/CTH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 5)
        {
            HEADER("/DTH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 6)
        {
            HEADER("/ETH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 7)
        {
            HEADER("/FTH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 8)
        {
            HEADER("/GTH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 9)
        {
            HEADER("/HTH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 10)
        {
            HEADER("/ITH/SUBS/%d", _ID_); 
        }
    }
    CARD("%-100s", TITLE);

    // Card 1
    COMMENT("#  var_ID1   var_ID2   var_ID3   var_ID4   var_ID5   var_ID6   var_ID7   var_ID8   var_ID9  var_ID10");
    FREE_CELL_LIST(Number_Of_Variables,"%-10s",VAR,100);

    COMMENT("#     Obj1      Obj2      Obj3      Obj4      Obj5      Obj6      Obj7      Obj8      Obj9     Obj10");
    FREE_CELL_LIST(idsmax,"%10d",ids,100);
}

FORMAT(radioss90)
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
 
    
    if(IO_FLAG == 1 )
    {
        HEADER("/%-s/SUBS/%d",PREFIX_STR, _ID_);
        if(PREFIX_STR=="TH")
        {
             ASSIGN(TH_OPTION,1, IMPORT);
        }
        else if(PREFIX_STR=="ATH")
        {
            ASSIGN(TH_OPTION, 2, IMPORT);
        }
        else if(PREFIX_STR=="BTH")
        {
            ASSIGN(TH_OPTION, 3, IMPORT);
        }
        else if(PREFIX_STR=="CTH")
        {
            ASSIGN(TH_OPTION, 4, IMPORT);
        }
        else if(PREFIX_STR=="DTH")
        {
            ASSIGN(TH_OPTION, 5, IMPORT);
        }
        else if(PREFIX_STR=="ETH")
        {
            ASSIGN(TH_OPTION, 6, IMPORT);
        }
         else if(PREFIX_STR=="FTH")
        {
            ASSIGN(TH_OPTION, 7, IMPORT);
        }
        else if(PREFIX_STR=="GTH")
        {
            ASSIGN(TH_OPTION, 8, IMPORT);
        }
        else if(PREFIX_STR=="HTH")
        {
            ASSIGN(TH_OPTION, 9, IMPORT);
        }                
        else if(PREFIX_STR=="ITH")
        {
            ASSIGN(TH_OPTION, 10, IMPORT);
        }
        
    }
    if(IO_FLAG == 2 )
    {
        if(TH_OPTION==0 || TH_OPTION == 1)
        {
            HEADER("/TH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 2)
        {
            HEADER("/ATH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 3)
        {
            HEADER("/BTH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 4)
        {
            HEADER("/CTH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 5)
        {
            HEADER("/DTH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 6)
        {
            HEADER("/ETH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 7)
        {
            HEADER("/FTH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 8)
        {
            HEADER("/GTH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 9)
        {
            HEADER("/HTH/SUBS/%d", _ID_); 
        }
        else if( TH_OPTION == 10)
        {
            HEADER("/ITH/SUBS/%d", _ID_); 
        }
    }

    CARD("%-100s", TITLE);

    // Card 1
    COMMENT("#  var_ID1   var_ID2   var_ID3   var_ID4   var_ID5   var_ID6   var_ID7   var_ID8   var_ID9  var_ID10");
    FREE_CELL_LIST(Number_Of_Variables,"%-10s",VAR,100);

    COMMENT("#  Obj_ID1   Obj_ID2   Obj_ID3   Obj_ID4   Obj_ID5   Obj_ID6   Obj_ID7   Obj_ID8   Obj_ID9  Obj_ID10");
    FREE_CELL_LIST(idsmax,"%10d",ids,100);
}
