//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /GJOINT
//

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    // Title Card
    TITLE                                   = VALUE(STRING, "Gear type joint title");

    // Card 1
    node_ID0                                = VALUE(NODE, "Primary node identifier (position node)");
    FscaleV                                 = VALUE(FLOAT, "Velocity scale factor");
    Mass                                    = VALUE(FLOAT, "Added mass to primary node");
    Inertia                                 = VALUE(FLOAT, "Added to primary node inertia");
    node_ID1                                = VALUE(NODE, "Node identifier N1");
    node_ID2                                = VALUE(NODE, "Node identifier N2");
    node_ID3                                = VALUE(NODE, "Node identifier N3 - only necessary for differential gear joint");

    // Card 2
    Mass1                                   = VALUE(FLOAT, "Added mass to node_ID1");
    Inertia1                                = VALUE(FLOAT, "Added to node_ID1 inertia");
    r1x                                     = VALUE(FLOAT, "Local axis X component");
    r1y                                     = VALUE(FLOAT, "Local axis Y component");
    r1z                                     = VALUE(FLOAT, "Local axis Z component");

    // Card 3
    Mass2                                   = VALUE(FLOAT, "Added mass to node_ID2");
    Inertia2                                = VALUE(FLOAT, "Added to node_ID2 inertia");
    r2x                                     = VALUE(FLOAT, "Local axis X component");
    r2y                                     = VALUE(FLOAT, "Local axis Y component");
    r2z                                     = VALUE(FLOAT, "Local axis Z component");

    // Card 4
    Mass3                                   = VALUE(FLOAT, "Added mass to node_ID3");
    Inertia3                                = VALUE(FLOAT, "Added to node_ID3 inertia");
    r3x                                     = VALUE(FLOAT, "Local axis X component");
    r3y                                     = VALUE(FLOAT, "Local axis Y component");
    r3z                                     = VALUE(FLOAT, "Local axis Z component");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    CommentEnumField                        = VALUE(INT, "User Comments");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING, "Entity Comments");

    _opt                                    = VALUE(STRING, "Option");
    type                                    = VALUE(INT, "Input type");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    //INPUT ATTRIBUTES

    // Title Card
    TITLE                                   = -1;

    // Card 1
    node_ID0                                = -1;
    FscaleV                                 = -1;
    Mass                                    = -1;
    Inertia                                 = -1;
    node_ID1                                = -1;
    node_ID2                                = -1;
    node_ID3                                = -1;

    // Card 2
    Mass1                                   = -1;
    Inertia1                                = -1;
    r1x                                     = -1;
    r1y                                     = -1;
    r1z                                     = -1;

    // Card 3
    Mass2                                   = -1;
    Inertia2                                = -1;
    r2x                                     = -1;
    r2y                                     = -1;
    r2z                                     = -1;

    // Card 4
    Mass3                                   = -1;
    Inertia3                                = -1;
    r3x                                     = -1;
    r3y                                     = -1;
    r3z                                     = -1;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    NUM_COMMENTS                            = 5110;

    TITLE                                   = -1;
    type                                    = -1;
    _opt                                    = -1;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    // Card 1
    FscaleV                                 = 1.0;
    Mass                                    = 0.0;
    Inertia                                 = 0.0;

    Mass1                                   = 0.0;
    Inertia1                                = 0.0;
    r1x                                     = 1.0;
    r1y                                     = 0.0;
    r1z                                     = 0.0;

    Mass2                                   = 0.0;
    Inertia2                                = 0.0;
    r2x                                     = 1.0;
    r2y                                     = 0.0;
    r2z                                     = 0.0;

    Mass3                                   = 0.0;
    Inertia3                                = 0.0;
    r3x                                     = 1.0;
    r3y                                     = 0.0;
    r3z                                     = 0.0;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/GJOINT/");

    RADIO(CommentEnumField)
    {
       ENUM_VALUE_FLAG=TRUE;
       ADD(1, "1:Hide in Menu/Export");
       ADD(2, "2:Show in Menu/Export");
       ADD(3, "3:Do Not Export");
    }
    if(CommentEnumField == 2)
    {
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }

mandatory:
    RADIO(type, "type")
    {
        ADD(1, "GEAR");
        ADD(2, "DIFF");
        ADD(3, "RACK");
    }

    if(type == 1) {
        ASSIGN(KEYWORD_STR, "GEAR/");
        ASSIGN(_opt, "GEAR");
    } else if(type == 2) {
        ASSIGN(KEYWORD_STR, "DIFF/");
        ASSIGN(_opt, "DIFF");
    } else if(type == 3) {
        ASSIGN(KEYWORD_STR, "RACK/");
        ASSIGN(_opt, "RACK");
    }
optional:

    // Title Card
    SCALAR(TITLE, "joint_title")             { DIMENSION = "DIMENSIONLESS"; }

    // Card 1
    DATA(node_ID0, "node_ID0");
    SCALAR(FscaleV, "FscaleV")              { DIMENSION = "velocity"; }
    SCALAR(Mass, "Mass")                    { DIMENSION = "m"; }
    SCALAR(Inertia, "Inertia")              { DIMENSION = "massmi"; }
    DATA(node_ID1, "node_ID1");
    DATA(node_ID2, "node_ID2");
    DATA(node_ID3, "node_ID3");

    // Card 2
    SCALAR(Mass1, "Mass1")                  { DIMENSION = "m"; }
    SCALAR(Inertia1, "Inertia1")            { DIMENSION = "massmi"; }
    SCALAR(r1x, "r1x")                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(r1y, "r1y")                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(r1z, "r1z")                      { DIMENSION = "DIMENSIONLESS"; }

    //Card 3
    SCALAR(Mass2,"Mass2")                   { DIMENSION = "m"; }
    SCALAR(Inertia2, "Inertia2")            { DIMENSION = "massmi"; }
    SCALAR(r2x, "r2x")                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(r2y, "r2y")                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(r2z, "r2z")                      { DIMENSION = "DIMENSIONLESS"; }

    // Card 4
    SCALAR(Mass3 , "Mass3")                 { DIMENSION = "m"; }
    SCALAR(Inertia3, "Inertia3")            { DIMENSION = "massmi"; }
    SCALAR(r3x, "r3x")                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(r3y, "r3y")                      { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(r3z, "r3z")                      { DIMENSION = "DIMENSIONLESS"; }
}

// File format
FORMAT(radioss44)
{
    HEADER("/GJOINT/%-s/%-8d/%-40s", _opt, _ID_, TITLE);

    if(_opt == "GEAR") {
        ASSIGN(type,1,IMPORT);
    } else if(_opt == "DIFF") {
        ASSIGN(type,2,IMPORT);
    } else if(_opt == "RACK") {
        ASSIGN(type,3,IMPORT);
    }

    // Card 1
    COMMENT("# Node_0           Alpha            Mass         Inertia  Node_1  Node_2  Node_3");
    CARD("%8d%16lg%16lg%16lg%8d%8d%8d", node_ID0, FscaleV, Mass, Inertia, node_ID1, node_ID2, node_ID3);

    // Card 2
    COMMENT("#         Mass_1       Inertia_1             r1x             r1y             r1z");
    CARD("%16lg%16lg%16lg%16lg%16lg", Mass1, Inertia1, r1x, r1y, r1z);

    // Card 3
    COMMENT("#         Mass_2       Inertia_2             r2x             r2y             r2z");
    CARD("%16lg%16lg%16lg%16lg%16lg", Mass2, Inertia2, r2x, r2y, r2z);

    // Card 4
    COMMENT("#         Mass_3       Inertia_3             r3x             r3y             r3z");
    CARD("%16lg%16lg%16lg%16lg%16lg", Mass3, Inertia3, r3x, r3y, r3z);
}

FORMAT(radioss51)
{
    HEADER("/GJOINT/%-s/%-d", _opt, _ID_);

    //Title Card
    COMMENT("#joint_title                                                                                        ");
    CARD("%-100s", TITLE);

    if(_opt == "GEAR") {
        ASSIGN(type,1,IMPORT);
    } else if(_opt == "DIFF") {
        ASSIGN(type,2,IMPORT);
    } else if(_opt == "RACK") {
        ASSIGN(type,3,IMPORT);
    }

    // Card 1
    COMMENT("#   Node_0               Alpha                Mass             Inertia        N1        N2        N3");
    CARD("%10d%20lg%20lg%20lg%10d%10d%10d", node_ID0, FscaleV, Mass, Inertia, node_ID1, node_ID2, node_ID3);

    // Card 2
    COMMENT("#              Mass1            Inertia1                 r1x                 r1y                 r1z");
    CARD("%20lg%20lg%20lg%20lg%20lg", Mass1, Inertia1, r1x, r1y, r1z);

    // Card 3
    COMMENT("#              Mass2            Inertia2                 r2x                 r2y                 r2z");
    CARD("%20lg%20lg%20lg%20lg%20lg", Mass2, Inertia2, r2x, r2y, r2z);

    // Card 4
    COMMENT("#              Mass3            Inertia3                 r3x                 r3y                 r3z");
    CARD("%20lg%20lg%20lg%20lg%20lg", Mass3, Inertia3, r3x, r3y, r3z);
}

FORMAT(radioss90)
{
    HEADER("/GJOINT/%-s/%-d", _opt, _ID_);

    // Title Card
    COMMENT("#joint_title                                                                                        ");
    CARD("%-100s", TITLE);

    if(_opt == "GEAR") {
        ASSIGN(type,1,IMPORT);
    } else if(_opt == "DIFF") {
        ASSIGN(type,2,IMPORT);
    } else if(_opt == "RACK") {
        ASSIGN(type,3,IMPORT);
    }

    // Card 1
    COMMENT("# node_ID0             FscaleV                Mass             Inertia  node_ID1  node_ID2  node_ID3");
    CARD("%10d%20lg%20lg%20lg%10d%10d%10d", node_ID0, FscaleV, Mass, Inertia, node_ID1, node_ID2, node_ID3);

    // Card 2
    COMMENT("#              Mass1            Inertia1                 r1x                 r1y                 r1z");
    CARD("%20lg%20lg%20lg%20lg%20lg", Mass1, Inertia1, r1x, r1y, r1z);

    // Card 3
    COMMENT("#              Mass2            Inertia2                 r2x                 r2y                 r2z");
    CARD("%20lg%20lg%20lg%20lg%20lg", Mass2, Inertia2, r2x, r2y, r2z);

    // Card 4
    COMMENT("#              Mass3            Inertia3                 r3x                 r3y                 r3z");
    CARD("%20lg%20lg%20lg%20lg%20lg", Mass3, Inertia3, r3x, r3y, r3z);
}
