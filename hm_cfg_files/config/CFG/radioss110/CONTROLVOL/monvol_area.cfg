//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- monvol_area.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    entityiddisplayed                       = VALUE(SETS,   "External surface identifier")  { SUBTYPES = (/SETS/SURF_IDPOOL); }
    Scal_T                                  = VALUE(FLOAT,  "Abscissa scale factor for time based functions");
    Scal_P                                  = VALUE(FLOAT,  "Abscissa scale factor for pressure based functions");
    Scal_S                                  = VALUE(FLOAT,  "Abscissa scale factor for area based functions");
    Scal_A                                  = VALUE(FLOAT,  "Abscissa scale factor for angle based functions");
    Scal_D                                  = VALUE(FLOAT,  "Abscissa scale factor for distance based functions");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");

    TITLE                                   = VALUE(STRING, "Monitored volume title");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    Scal_T                                  = 4103;
    Scal_P                                  = 4104;
    Scal_S                                  = 4105;
    Scal_A                                  = 4106;
    Scal_D                                  = 4107;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;

    TITLE                                   = -1;
}

DEFAULTS(COMMON)
{
    Scal_D                                  = 1.0;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/MONVOL/AREA/");

    DATA(entityiddisplayed, "surf_IDex") { SUBTYPES = (/SETS/SURF_IDPOOL); }
}

// File format
FORMAT(radioss44)
{
    HEADER("/MONVOL/AREA/%d", _ID_);
    CARD("%-80s", TITLE);

    COMMENT("#   Isur");
    CARD("%8d", entityiddisplayed);
}

FORMAT(radioss51)
{
    HEADER("/MONVOL/AREA/%d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("#     Isur");
    CARD("%10d", entityiddisplayed);

    COMMENT("#             Scal_T              Scal_P              Scal_S              Scal_A              Scal_D");
    CARD("%20lg%20lg%20lg%20lg%20lg", Scal_T, Scal_P, Scal_S, Scal_A, Scal_D);
}

FORMAT(radioss90)
{
    HEADER("/MONVOL/AREA/%d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("#surfIDext");
    CARD("%10d", entityiddisplayed);

    COMMENT("#            AscaleT             AscaleP             AscaleS             AscaleA             AscaleD");
    CARD("%20lg%20lg%20lg%20lg%20lg", Scal_T, Scal_P, Scal_S, Scal_A, Scal_D);
}

FORMAT(radioss100)
{
    HEADER("/MONVOL/AREA/%d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("#surf_IDex");
    CARD("%10d", entityiddisplayed);

    CARD("%100s", _BLANK_);
}
