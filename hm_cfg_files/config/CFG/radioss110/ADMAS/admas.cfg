//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// ADMAS
// 

ATTRIBUTES {
  // Single values
    IO_FLAG             = VALUE(INT, "Import/Export flag");
    _HMCOMMENTSFLAG     = VALUE(INT, "Write HM Comments");
    _HWCOLOR            = VALUE(INT, "Entity Color");
    TITLE               = VALUE(STRING, "TITLE");
    type                = VALUE(INT,   "Type");
    setid               = VALUE(SETS, "grnd_ID") { SUBTYPES = (/SETS/GRNOD,  /SETS/SURF, /SETS/GRPART  ) ; }
    setid_type          = VALUE(STRING, "Type of multi object");

    // Tables
    masses              = VALUE(FLOAT, "Mass");
    iflags              = VALUE(INT, "Flag to switch between area weighted distribution
                                       and volume weighted distribution");
    HMCOMP_TITLE              = VALUE(STRING, "HM Component name ");
    HMCOMP_ID              = VALUE(INT, "HM Component id ");
    SUBGRP_ADMAS_NON_UNIFORM     =   VALUE(SUBOBJECT, ""); 
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    IO_FLAG                     = -1;
    _HMCOMMENTSFLAG             = -1;
    _HWCOLOR                    = -1;
    setid_type                  = -1;
    HMCOMP_TITLE                = 5438;
    HMCOMP_ID                   = 5437;
    SUBGRP_ADMAS_NON_UNIFORM    = -1;
}

DEFAULTS(COMMON) 
{
  setid_type = "/SETS/GRNOD";
}

DEFINITIONS(COMMON) {
  IMPORT_PREDATA_TABULAR=(type, setid);
} 

//CHECK(COMMON) {
//    MASS >= 0;
//}
//
//PARAMETERS(PARAMETERS) {
//    MASS = INPUT_SCALAR(MASS, "MASS");
//}
//
GUI(COMMON) {
mandatory:
    graphical SCALAR(masses) { DIMENSION="m"; }
//    //
//optional:
//    graphical RADIO(TYPE, "Mass is") {
//        ADD(0, "For one node");
//        ADD(1, "Total for all node(s)");
//    }
//    //  
//mandatory:
//    graphical SUPPORT("Support") {
//        OBJECTS = (NODE, ELEMENTS, COMPONENT);
//        ADD(GR_NODE, "Node group");
//        ADD(NODE, "Additional nodes");
//    }

    if(type == 5 || type == 6 || type == 7)
    {
        SUBOBJECT(SUBGRP_ADMAS_NON_UNIFORM) {SUBTYPES = (/SUBOBJECT/ADMAS_NON_UNIFORM);}
    }
}

FORMAT(radioss41) {

    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);

    HEADER("/ADMAS/%d/%d/%-40s",type, _ID_, TITLE);

    if(IO_FLAG == 1 && (type == 0 || type ==1))
    {
        ASSIGN(setid_type, /SETS/GRNOD, IMPORT); 
        ASSIGN(setid, 0, IMPORT); 
    }

    if(type == 0 || type == 1)
    {
        COMMENT("#               MASS   grnd_ID");
        CARD("%16lf%8d",masses,setid);
    }
}

FORMAT(radioss51) {

    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);

    HEADER("/ADMAS/%d/%d",type, _ID_);

    if(IO_FLAG == 1 && (type == 0 || type ==1))
    {
        ASSIGN(setid_type, /SETS/GRNOD, IMPORT); 
        ASSIGN(setid, 0, IMPORT); 
    }

    CARD("%-100s", TITLE);

    if(type == 0 || type == 1)
    {
        COMMENT("#               MASS   grnd_ID");
        CARD("%20lf%10d",masses,setid);
    }
}

FORMAT(radioss110) {

    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);

    HEADER("/ADMAS/%d/%d",type, _ID_);

    if(IO_FLAG == 1 && (type == 0 || type ==1))
    {
        ASSIGN(setid_type, /SETS/GRNOD, IMPORT); 
        ASSIGN(setid, 0, IMPORT); 
    }
    else if(IO_FLAG == 1 && type == 2)
    {
        ASSIGN(setid_type, /SETS/SURF, IMPORT); 
        ASSIGN(setid, 0, IMPORT); 
    }
    else if(IO_FLAG == 1 && (type == 3 || type == 4))
    {
        ASSIGN(setid_type, /SETS/GRPART, IMPORT); 
        ASSIGN(setid, 0, IMPORT); 
    }

    CARD("%-100s", TITLE);

    if(type == 0 || type == 1)
    {
        COMMENT("#               MASS   grnd_ID");
        CARD("%20lf%10d",masses,setid);
    }
    else if(type == 2)
    {
        COMMENT("#               MASS   surf_ID");
        CARD("%20lf%10d",masses,setid);
    }
    else if(type == 3 || type == 4)
    {
        COMMENT("#               MASS grpart_ID     IFLAG");
        CARD("%20lf%10d%10d",masses,setid,iflags);
    }
    else if(type == 5 || type == 6 || type == 7)
    {
        SUBOBJECTS(SUBGRP_ADMAS_NON_UNIFORM,/SUBOBJECT/ADMAS_NON_UNIFORM);
    }
}
