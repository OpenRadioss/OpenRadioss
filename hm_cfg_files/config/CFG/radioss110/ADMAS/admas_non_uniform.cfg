//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// ADMAS
// 

ATTRIBUTES {
    IO_FLAG             = VALUE(INT, "Import/Export flag");
    type                = VALUE(INT,   "Type");
    entityidsmax        = SIZE("Number of entities");
    entityids           = ARRAY[entityidsmax](MULTIOBJECT, "entity to which the mass is added") { SUBTYPES = (/NODE, /COMPONENT ) ; }
    entityids_type      = VALUE(STRING, "Type of multi object");
    masses              = ARRAY[entityidsmax](FLOAT, "Added mass");
    iflags              = ARRAY[entityidsmax](INT, "Flag to switch between area weighted distribution
                                                     and volume weighted distribution");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    IO_FLAG=-1;
    entityids_type=-1;
}

DEFINITIONS(COMMON) {
  IMPORT_PREDATA_TABULAR=(type, entityids);
} 

FORMAT(radioss110) {

    ASSIGN(IO_FLAG,1,IMPORT);
    if(IO_FLAG==1)
    {
        HEADER("/ADMAS/%d/%d",type, _ID_);
    }

    if(IO_FLAG == 1 && type == 5)
    {
        ASSIGN(entityids_type, NODE, IMPORT); 
    }
    else if(IO_FLAG == 1 && (type == 6 || type == 7))
    {
        ASSIGN(entityids_type, COMPONENT, IMPORT); 
    }

    if(type == 5)
    {
        COMMENT("#               MASS   node_ID");
        FREE_CARD_LIST(entityidsmax)
        {
            CARD("%20lg%10d",masses, entityids);
        }
    }
    else if(type == 6 || type == 7)
    {
        COMMENT("#               MASS   part_ID     IFLAG");
        FREE_CARD_LIST(entityidsmax)
        {
            CARD("%20lg%10d%10d",masses, entityids,iflags);
        }
    }
}
