//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Subobject Laminate
//
ATTRIBUTES(COMMON)
{
    plyidlistmax                            = SIZE("Number of Layers");
    plyidlist                               = ARRAY[plyidlistmax](PLY, "Ply Property ID for Layer i");
    Prop_phi                                = ARRAY[plyidlistmax](FLOAT, "Angle for Layer i");
    Prop_Zi                                 = ARRAY[plyidlistmax](FLOAT, "Z Position for Layer i");
    Prop_mi                                 = ARRAY[plyidlistmax](MAT, "Material Identifier for Interface Between Ply i and i+1");
    TITLE                                   = VALUE(STRING, "Laminate Title");
    laminateconfig                          = VALUE(INT, "Laminate Configuration");
    
    //Attributes for HM usage 
    IO_FLAG                                 = VALUE(INT, "IO Flag");
    DUMMY                                   = VALUE(INT, "Temporary Variable to Increment Size of Plies while Exporting");
    updated_ply_id                          = VALUE(PLY, "Updated Id of Ply");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    Prop_phi                                = 4165;
    Prop_Zi                                 = 4167;
    Prop_mi                                 = 4168;
    IO_FLAG                                 =   -1;
    DUMMY                                   =   -1;
    TITLE                                   =   -1;
    updated_ply_id                          =   -1;
}
GUI(COMMON)
{
    //Is not working will have to look into it
    SIZE(plyidlistmax);
    ARRAY(plyidlistmax,"")
    {
        SCALAR(Prop_phi)  {DIMENSION="a";}
        SCALAR(Prop_Zi)    {DIMENSION="l";}
    }
}
//File format for Radioss 110
FORMAT(radioss100) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(DUMMY, 0, EXPORT);
    if(IO_FLAG==1)
    {
        ASSIGN (laminateconfig, 0, IMPORT);
        FREE_CARD_LIST(plyidlistmax)
        {
            ASSIGN(DUMMY, DUMMY+1, IMPORT);
            CARD("%10d%20lg%20lg", plyidlist, Prop_phi, Prop_Zi);
            if (plyidlistmax == 0 || DUMMY < plyidlistmax)
            {
                CARD("%10d", Prop_mi);
            }
        }
    }
    else
    {
        if(plyidlistmax > 0)
        {
            COMMENT("#Laminatename %-100s",TITLE);
        }
        CARD_LIST(plyidlistmax)
        {
            ASSIGN(updated_ply_id, _GET_NLOOKUP_VALUE(16,17,plyidlist),EXPORT);
            if(updated_ply_id == NONE)
            {
                ASSIGN(updated_ply_id, _ATTRIB(plyidlist, DUMMY), EXPORT);
            }
            COMMENT("#   Ply_id                 Phi                  Zi");
            CARD("%10d%20lg%20lg", updated_ply_id, Prop_phi, Prop_Zi);
            ASSIGN(DUMMY, DUMMY+1, EXPORT);
            if (plyidlistmax == 0 || DUMMY < plyidlistmax)
            {
                COMMENT("#   Mat_id");
                CARD("%10d", Prop_mi);
            }
        }
    }
}
