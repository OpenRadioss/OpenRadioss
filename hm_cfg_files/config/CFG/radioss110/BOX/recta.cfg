//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /BOX/RECTA
// 

ATTRIBUTES(COMMON) 
{
  // INPUT ATTRIBUTES
  catendineeringdata            = VALUE(INT, "");
  preservenodes                 = VALUE(INT, "");
  config                        = VALUE(INT, "");
  box_corner1                   = VALUE(NODE,"");
  box_corner1_x                 = VALUE(FLOAT, "X coordinate of point P1");
  box_corner1_y                 = VALUE(FLOAT, "Y coordinate of point P1");
  box_corner1_z                 = VALUE(FLOAT, "Z coordinate of point P1");
  box_corner2                   = VALUE(NODE,"");
  box_corner2_x                 = VALUE(FLOAT, "X coordinate of point P2");
  box_corner2_y                 = VALUE(FLOAT, "Y coordinate of point P2");
  box_corner2_z                 = VALUE(FLOAT, "Z coordinate of point P2");
  box_corner_node1              = VALUE(NODE, "Node identifier");
  box_corner_node2              = VALUE(NODE, "Node identifier");
  box_system                    = VALUE(SYSTEM, "Fixed skew identifier");

  // HM INTERNAL
  KEYWORD_STR                   = VALUE(STRING, "Solver Keyword");
  TITLE                         = VALUE(STRING, "Box title");
  IOFLAG                        = VALUE(INT, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
  KEYWORD_STR                   = 9000;
  IOFLAG                        = -1;
}


GUI(COMMON)
{
  ASSIGN(KEYWORD_STR, "/BOX/RECTA");
  optional:
  SEPARATOR("Engineering data");
  FLAG(preservenodes);
  if (preservenodes == 0)
  {
    DATA(box_corner1);
    DATA(box_corner2);
  }
  else if (preservenodes == 1)
  {
    DATA(box_corner_node1);
    DATA(box_corner_node2);
  }
  SCALAR(box_corner1_x) { DIMENSION="l"; }
  SCALAR(box_corner1_y) { DIMENSION="l"; }
  SCALAR(box_corner1_z) { DIMENSION="l"; }
  SCALAR(box_corner2_x) { DIMENSION="l"; }
  SCALAR(box_corner2_y) { DIMENSION="l"; }
  SCALAR(box_corner2_z) { DIMENSION="l"; }
  //
  DATA(box_system);

  SEPARATOR();
}

// File format
FORMAT(radioss110)
{
  HEADER("/BOX/RECTA/%d",_ID_);
  CARD("%-100s", TITLE);

  ASSIGN(IOFLAG,0,EXPORT);
  ASSIGN(IOFLAG,1,IMPORT);

  if (IOFLAG == 0 && preservenodes == 1)
  {
    COMMENT("#       N1        N2     Iskew");
    CARD("%10d%10d%10d", box_corner_node1,box_corner_node2,box_system);

    COMMENT("#                Xp1                 Yp1                 Zp1");
    CARD("%20lg%20lg%20lg",box_corner1_x,box_corner1_y,box_corner1_z);

    COMMENT("#                Xp2                 Yp2                 Zp2");
    CARD("%20lg%20lg%20lg",box_corner2_x,box_corner2_y,box_corner2_z);
  }
  else if ( IOFLAG == 0 && preservenodes == 0)
  {
    COMMENT("#       N1        N2     Iskew");
    CARD("%20s%10d", _BLANK_,box_system);

    COMMENT("#                Xp1                 Yp1                 Zp1");
    CARD("%20lg%20lg%20lg",box_corner1_x,box_corner1_y,box_corner1_z);

    COMMENT("#                Xp2                 Yp2                 Zp2");
    CARD("%20lg%20lg%20lg",box_corner2_x,box_corner2_y,box_corner2_z);
  }
  else if (IOFLAG == 1)
  {
    CARD("%10d%10d%10d", box_corner_node1,box_corner_node2,box_system);
    if(box_corner_node1 == NONE && box_corner_node2 == NONE) 
    {
      ASSIGN(preservenodes,0);
    } 
    else 
    {
      ASSIGN(preservenodes,1);
    }
    CARD("%20lg%20lg%20lg",box_corner1_x,box_corner1_y,box_corner1_z);
    CARD("%20lg%20lg%20lg",box_corner2_x,box_corner2_y,box_corner2_z);
  }
}