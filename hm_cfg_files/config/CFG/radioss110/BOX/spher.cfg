//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//BOX/SPHER

ATTRIBUTES(COMMON) 
{
  // INPUT ATTRIBUTES
  sphere_center_point           = VALUE(VECTOR, "Center point of sphere");
  sphere_center_x               = VALUE(FLOAT, "X coordinate of point P1");
  sphere_center_y               = VALUE(FLOAT, "Y coordinate of point P1");
  sphere_center_z               = VALUE(FLOAT, "Z coordinate of point P1");
  sphere_center_node            = VALUE(NODE, "Node Identifier");
  sphere_diameter               = VALUE(FLOAT, "Diameter of Sphere");
  // HM INTERNAL
  preservenodes                 = VALUE(INT,"The nodes will be used to define the box");
  KEYWORD_STR                   = VALUE(STRING, "Solver Keyword");
  TITLE                         = VALUE(STRING, "Box Title");
  IOFLAG                        = VALUE(INT, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
  KEYWORD_STR                   = 9000;
  IOFLAG                        = -1;
}


GUI(COMMON)
{
  ASSIGN(KEYWORD_STR, "/BOX/SPHER/");
  FLAG(preservenodes);
  if (preservenodes == 0)
  {
    DATA(sphere_center_point);

  }
  else
  {
    DATA(sphere_center_node,"N1");
  }
  
  SCALAR(sphere_diameter,"DIAMETER")       {DIMENSION="l";}              
  SCALAR(sphere_center_x)                  {DIMENSION="l";}         
  SCALAR(sphere_center_y)                  {DIMENSION="l";}         
  SCALAR(sphere_center_z)                  {DIMENSION="l";}         
}

// File format
FORMAT(radioss110)
{
  ASSIGN(IOFLAG,0,EXPORT);
  ASSIGN(IOFLAG,1,IMPORT);

  HEADER("/BOX/SPHER/%d",_ID_);
  CARD("%-100s", TITLE);

  COMMENT("#       N1                                Diameter");
  CARD("%10d%20s%20lg",sphere_center_node,_BLANK_,sphere_diameter);

  COMMENT("#                Xp1                 Yp1                 Zp1");
  CARD("%20lg%20lg%20lg",sphere_center_x,sphere_center_y,sphere_center_z);

  if(IOFLAG == 1 && sphere_center_node == NONE)
  {
    ASSIGN(preservenodes,0,IMPORT);
  }
  else
  {
    ASSIGN(preservenodes,1,IMPORT);
  }
}