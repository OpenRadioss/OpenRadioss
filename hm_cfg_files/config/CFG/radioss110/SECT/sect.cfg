//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Section Setup File
// 

ATTRIBUTES(COMMON) 
{
// INPUT ATTRIBUTES
    Axis_Origin_Node_N1 = VALUE(NODE,"Node identifier N1");
    Axis_Node_N2        = VALUE(NODE,"Node identifier N2");
    Axis_Node_N3        = VALUE(NODE,"Node identifier N3");
    Grnod_ID            = VALUE(SETS,"Node group identifier") { SUBTYPES = (/SETS/GRNOD) ; }
    System_Id           = VALUE(SYSTEM,"Moving frame identifier");
    ISAVE               = VALUE(INT,"Flag for saving data");
    detltaT             = VALUE(FLOAT,"Time step for saving the data");
    alpha               = VALUE(FLOAT,"Coefficient for filtering (lesser than 1)");
    file_name           = VALUE(STRING,"Root name of the file which contains the flag output. The extension for this file is nameSC01");

    grbrick_id          = VALUE(SETS,"Brick group identifier")     { SUBTYPES = (/SETS/GRBRIC) ; }
    grshel_id           = VALUE(SETS,"Shell group identifier")     { SUBTYPES = (/SETS/GRSHEL) ; }
    grtrus_id           = VALUE(SETS,"Truss group identifier")     { SUBTYPES = (/SETS/GRTRUSS) ; }
    grbeam_id           = VALUE(SETS,"Beam group identifier")      { SUBTYPES = (/SETS/GRBEAM) ; }
    grsprg_id           = VALUE(SETS,"Spring group identifier")    { SUBTYPES = (/SETS/GRSPRI) ; }
    grtria_id           = VALUE(SETS,"Triangle group identifier")  { SUBTYPES = (/SETS/GRSH3N) ; }
    Niter               = SIZE("Number of interfaces");
    Iframe              = VALUE(INT,"Computing the skew center local skew is the skew flag defined by node_ID1, node_ID2, and node_ID3");
    int_id              = ARRAY [Niter] ( GROUP, "Optional interface identifiers" );
// HM INTERNAL
    KEYWORD_STR         = VALUE(STRING, "Solver Keyword");
    TITLE               = VALUE(STRING, "TITLE");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR = 9000;
}

CHECK(COMMON)
{
    alpha < 1;
}

DEFAULTS(COMMON)
{

}

GUI(COMMON) 
{
    ASSIGN(KEYWORD_STR,"/SECT");
    DATA(Axis_Origin_Node_N1);
    DATA(Axis_Node_N2);
    DATA(Axis_Node_N3);
    DATA(Grnod_ID);
    RADIO(ISAVE)
    {
        ADD(0,"Do not save");
        ADD(1,"Displacements are saved in the section cut file file_name");
        ADD(2,"1 + forces are saved");
        ADD(100,"The data contained in the section cut file file_name is read as input for the calculation");
        ADD(200,"100 + forces are recomputed for the error calculation");
    }
    DATA(System_Id);
    SCALAR(detltaT) { DIMENSION="t"; }
    SCALAR(alpha);
    SCALAR(file_name);
    DATA(grbrick_id);
    DATA(grshel_id);
    DATA(grtrus_id);
    DATA(grbeam_id);
    DATA(grsprg_id);
    DATA(grtria_id);
    SIZE(Niter);
    RADIO(Iframe)
    {
        ADD(0, "Origin of the local skew (C0)");
        ADD(1, "Geometrical center of the section (C1)");
        ADD(2, "CoG of the section (C2)");
        ADD(3, "Point o(0,0,0) is the center of the local skew");
        ADD(10, "Origin of the global skew (C0)");
        ADD(11, "Geometrical center of the section (C1)");
        ADD(12, "CoG of the section (C2)");
        ADD(13, "Point o(0,0,0) is the center of the global skew");
    }
    if (Niter > 0)
    {
        ARRAY(Niter,"Optional interface identifiers")
        {
            DATA(int_id);
        }
    }
}

//File format
FORMAT(radioss100) 
{
    HEADER("/SECT/%d",_ID_);
    CARD("%-100s", TITLE);
    COMMENT("# node_ID1  node_ID2  node_ID3  grnod_ID     ISAVE  Frame_ID              deltaT               alpha");
    CARD("%10d%10d%10d%10d%10d%10d%20lg%20lg",Axis_Origin_Node_N1,Axis_Node_N2,Axis_Node_N3,Grnod_ID,ISAVE,System_Id,detltaT,alpha);
    COMMENT("#file_name");
    CARD("%-100s",file_name);
    COMMENT("#grbric_ID           grshel_ID grtrus_ID grbeam_ID grsprg_ID grtria_ID     Niter              Iframe");
    CARD("%10d%10s%10d%10d%10d%10d%10d%10d%10s%10d",grbrick_id,_BLANK_,grshel_id,grtrus_id,grbeam_id,grsprg_id,grtria_id,Niter,_BLANK_,Iframe);
    if (Niter > 0)
    {
        COMMENT("#     int1      int2      int3      int4      int5      int6      int7      int8      int9     int10");
        CELL_LIST(Niter,"%10d",int_id,100);
    }
}

FORMAT(radioss51) 
{
    HEADER("/SECT/%d",_ID_);
    CARD("%-100s", TITLE);
    COMMENT("# node_ID1  node_ID2  node_ID3  grnod_ID     ISAVE                        deltaT               alpha");
    CARD("%10d%10d%10d%10d%10d%10s%20lg%20lg",Axis_Origin_Node_N1,Axis_Node_N2,Axis_Node_N3,Grnod_ID,ISAVE,_BLANK_,detltaT,alpha);
    COMMENT("#file_name");
    CARD("%-100s",file_name);
    COMMENT("#grbric_ID           grshel_ID grtrus_ID grbeam_ID grsprg_ID grtria_ID     Niter              Iframe");
    CARD("%10d%10s%10d%10d%10d%10d%10d%10d%10s%10d",grbrick_id,_BLANK_,grshel_id,grtrus_id,grbeam_id,grsprg_id,grtria_id,Niter,_BLANK_,Iframe);
    
    if (Niter > 0)
    {
        COMMENT("#     int1      int2      int3      int4      int5      int6      int7      int8      int9     int10");
        CELL_LIST(Niter,"%10d",int_id,100);
    }
}

FORMAT(radioss42) {
    HEADER("/SECT/%d/%s",_ID_,TITLE);
    COMMENT("#     N1      N2      N3 grnodID   ISAVE fileNam          deltaT           alpha");
    CARD("%8d%8d%8d%8d%8d%8s%16lg%16lg",Axis_Origin_Node_N1,Axis_Node_N2,Axis_Node_N3,Grnod_ID,ISAVE,_BLANK_,detltaT,alpha);
    COMMENT("#grbrick         grshell grtruss  grbeam grsprng    grtg  nb_int          Iframe");
    CARD("%8d%8s%8d%8d%8d%8d%8d%8d%8s%8d",grbrick_id,_BLANK_,grshel_id,grtrus_id,grbeam_id,grsprg_id,grtria_id,Niter,_BLANK_,Iframe);
    if (Niter > 0)
    {
      CELL_LIST(Niter,"%8d",int_id,80);
    }
}

FORMAT(radioss41) {
    HEADER("/SECT/%d/%s",_ID_,TITLE);
    COMMENT("#     N1      N2      N3 grnodID");
    CARD("%8d%8d%8d%8d",Axis_Origin_Node_N1,Axis_Node_N2,Axis_Node_N3,Grnod_ID);
    COMMENT("#                grshell                            grtg");
    CARD("%16s%8d%24s%8d",_BLANK_,grshel_id,_BLANK_,grtria_id);
}

