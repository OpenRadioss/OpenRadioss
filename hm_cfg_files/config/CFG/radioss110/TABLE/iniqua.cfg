//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /INIQUA/{Keyword}  - Keyword = DENS, ENER, EPSP, STRESS -
//

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    no_blocks                                 = SIZE("No of blocks");
    // Card: DENS, ENER, EPSP 
    quad_ID                                   = ARRAY[no_blocks](INT, "Element identifier");
    value                                     = ARRAY[no_blocks](FLOAT, "Data value");

    // Card: STRESS 
    SIGMA_x                                   = ARRAY[no_blocks](FLOAT, "Stress");
    SIGMA_y                                   = ARRAY[no_blocks](FLOAT, "Stress");
    SIGMA_z                                   = ARRAY[no_blocks](FLOAT, "Stress");
    SIGMA_xy                                  = ARRAY[no_blocks](FLOAT, "Shear stress");

    //HM INTERNAL
    KEYWORD_STR                               = VALUE(STRING, "Solver Keyword");

    IO_FLAG                                   = VALUE(INT, "IOFLAG");
    _opt                                      = VALUE(STRING, "");
    type_opt                                  = VALUE(INT, "Type");
}

SKEYWORDS_IDENTIFIER(COMMON)
{

    //INPUT ATTRIBUTES

    no_blocks                                 = -1;
    // Card: DENS, ENER, EPSP
    quad_ID                                   = -1;
    value                                     = -1;

    // Card: STRESS
    SIGMA_x                                   = -1;
    SIGMA_y                                   = -1;
    SIGMA_z                                   = -1;
    SIGMA_xy                                  = -1;

    //HM INTERNAL
    KEYWORD_STR                               = 9000;

    IO_FLAG                                   = -1;
    _opt                                      = -1;
    type_opt                                  = -1;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{

}

GUI(COMMON)
{

mandatory:
    RADIO(type_opt, "Type")
    {
      ADD(1,"DENS");
      ADD(2,"ENER");
      ADD(3,"EPSP");
      ADD(4,"STRESS");
    }

    ASSIGN(KEYWORD_STR, "/INIQUA");

    // Card
    if(type_opt == 1)
    {
      ASSIGN(KEYWORD_STR, "/DENS");
      ASSIGN(_opt, "DENS");
    }
    else if(type_opt == 2)
    {
      ASSIGN(KEYWORD_STR, "/ENER");
      ASSIGN(_opt, "ENER");
    } 
    else if(type_opt == 3)
    {
      ASSIGN(KEYWORD_STR, "/EPSP");
      ASSIGN(_opt, "EPSP");
    }
    else if(type_opt == 4)
    {
      ASSIGN(KEYWORD_STR, "/STRESS");
      ASSIGN(_opt, "STRESS");
    }
    
    SCALAR(quad_ID, "quad_ID")            { DIMENSION = "DIMENSIONLESS"; }
    // Card: DENS, ENER, EPSP
    if(type_opt == 1 || type_opt == 2 || type_opt == 3)
    {
        SCALAR(value, "value")                { DIMENSION = "DIMENSIONLESS"; }
    }
    else if(type_opt == 4)  // Card: STRESS
    {
      SCALAR(SIGMA_y, "SIGMA_y")              { DIMENSION = "pressure"; }
      SCALAR(SIGMA_z, "SIGMA_z")              { DIMENSION = "pressure"; }
      SCALAR(SIGMA_x, "SIGMA_x")              { DIMENSION = "pressure"; }
      SCALAR(SIGMA_xy, "SIGMA_xy")            { DIMENSION = "pressure"; }
    }

}

// File format
FORMAT(radioss44)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);

    if(IO_FLAG == 0)
    {
      if(type_opt==1)
      {
          HEADER("/INIQUA/DENS");
      }
      else if(type_opt==2)
      {
          HEADER("/INIQUA/ENER");
      }
      else if(type_opt==3)
      {
          HEADER("/INIQUA/EPSP");
      }
      else if(type_opt==4)
      {
          HEADER("/INIQUA/STRESS");
      }
    }
    else  // IMPORT
    {
      HEADER("/INIQUA/%-s/", _opt);
      if(_opt == "DENS")
        ASSIGN(type_opt, 1, IMPORT);
      else if(_opt == "ENER")
        ASSIGN(type_opt, 2, IMPORT);
      else if(_opt == "EPSP")
        ASSIGN(type_opt, 3, IMPORT);
      else if(_opt == "STRESS")
        ASSIGN(type_opt, 4, IMPORT);
    }

    // Card: DENS, ENER, EPSP
    if(type_opt == 1 || type_opt == 2 || type_opt == 3)
    {
        // Card
        COMMENT("$quad_id                   value");
        FREE_CARD_LIST(no_blocks)
        {
            CARD("%8d%8s%16lg", quad_ID, _BLANK_, value);
        }
    }
    else if(type_opt == 4)      //  Card: STRESS
    {
        COMMENT("$quad_id                 SIGMA_y         SIGMA_z         SIGMA_x        SIGMA_xy");
        FREE_CARD_LIST(no_blocks)
        {
            CARD("%8d%8s%16lg%16lg%16lg%16lg", quad_ID, _BLANK_, SIGMA_x, SIGMA_y, SIGMA_z, SIGMA_xy);
        }
    }
}

FORMAT(radioss51)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);

    if(IO_FLAG == 0)
    {
      if(type_opt==1)
      {
          HEADER("/INIQUA/DENS");
      }
      else if(type_opt==2)
      {
          HEADER("/INIQUA/ENER");
      }
      else if(type_opt==3)
      {
          HEADER("/INIQUA/EPSP");
      }
      else if(type_opt==4)
      {
          HEADER("/INIQUA/STRESS");
      }
    }
    else  // IMPORT
    {
      HEADER("/INIQUA/%-s/", _opt);
      if(_opt == "DENS")
        ASSIGN(type_opt, 1, IMPORT);
      else if(_opt == "ENER")
        ASSIGN(type_opt, 2, IMPORT);
      else if(_opt == "EPSP")
        ASSIGN(type_opt, 3, IMPORT);
      else if(_opt == "STRESS")
        ASSIGN(type_opt, 4, IMPORT);
    }

    // Card: DENS, ENER, EPSP
    if(type_opt == 1 || type_opt == 2 || type_opt == 3)
    {
        // Card
        COMMENT("$  quad_ID                         value");
        FREE_CARD_LIST(no_blocks)
        {
            CARD("%10d%10s%20lg", quad_ID, _BLANK_, value);
        }
    }
    else if(type_opt == 4)      //  Card: STRESS
    {
        COMMENT("$quad_IDst                       SIGMA_y             SIGMA_z             SIGMA_x            SIGMA_xy");
        FREE_CARD_LIST(no_blocks)
        {
            CARD("%10d%10s%20lg%20lg%20lg%20lg", quad_ID, _BLANK_, SIGMA_x, SIGMA_y, SIGMA_z, SIGMA_xy);
        }
    }
}
