//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- inishe_epsp_f_sub.cfg ---

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    //Card 1
    shell_ID                           = VALUE(ELEMS,"Element identifier"){ SUBTYPES = ( /ELEMS/SHELL ) ; }
    nb_integr                          = SIZE("Integration point number through the thickness");
    npg                                = SIZE("Number of surface quadrature points");
    Thick                              = VALUE(FLOAT, "Shell thickness");

    //Cards
    nb_integr2                         = SIZE("Integration point number through the thickness");
    Ep                                 = ARRAY[nb_integr2](FLOAT,"Auxiliary variable value");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    shell_ID                           = -1;
    nb_integr                          = -1;
    npg                                = -1;
    Thick                              = -1;

    //Cards
    Ep                                 = -1;
    nb_integr2                         = -1;
}

GUI(COMMON)
{
    //Card 1
    DATA(shell_ID,  "shell_ID");
    SIZE(nb_integr, "nb_integr");
    RADIO(npg, "npg")
    {
      ADD(0,"0: Set to 1");
      ADD(1,"1: Must be used for shell formulations shell_ID =1, 2, 3, 4 or Ish3n =1, 2, 31");
      ADD(3,"3: Must be used for DKT18 shell formulation");
      ADD(4,"4: Must be used for BATOZ or QEPH formulation");
    }

    SCALAR(Thick, "Thick")            { DIMENSION="DIMENSIONLESS"; }

    SIZE(nb_integr2,"nb_integr2");
    ASSIGN(nb_integr2, 1);
    if(nb_integr > 0)
    {
        ASSIGN(nb_integr2, nb_integr2*nb_integr);
    }
    if(npg > 1)
    {
        ASSIGN(nb_integr2, nb_integr2*npg);
    }

    //Cards
    ARRAY(nb_integr2,"nb_integr2")
    {
        SCALAR(Ep, "Ep")              { DIMENSION="DIMENSIONLESS"; }
    }
}

// File format
FORMAT(radioss51)
{
    //Card 1
    COMMENT("# shell_ID nb_integr       npg               Thick");
    CARD("%10d%10d%10d%20lg", shell_ID, nb_integr, npg, Thick);

    //Cards
    ASSIGN(nb_integr2, 1, IMPORT);
    if(nb_integr > 0)
    {
        ASSIGN(nb_integr2, nb_integr2*nb_integr, IMPORT);
    }
    if(npg > 1)
    {
        ASSIGN(nb_integr2, nb_integr2*npg, IMPORT);
    }

    COMMENT("$                 Ep                  Ep                  Ep                  Ep                  Ep");
    CELL_LIST(nb_integr2,"%20lg", Ep,100);
}