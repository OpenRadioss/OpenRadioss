//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- inish3_epsp.cfg ---

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES
    no_blocks                         = SIZE("No of blocks");

    //Card 1
    shell_ID                           = ARRAY[no_blocks](ELEMS, "Element identifier"){ SUBTYPES = ( /ELEMS/SH3N ) ; }
    Ep                                 = ARRAY[no_blocks](FLOAT, "Plastic strain");

    //Card 3
    Sigma1                             = ARRAY[no_blocks](FLOAT, "First plane stress");
    Sigma2                             = ARRAY[no_blocks](FLOAT, "Second plane stress");
    Sigma12                            = ARRAY[no_blocks](FLOAT, "Shear stress");
    Sigma13                            = ARRAY[no_blocks](FLOAT, "Shear stress");
    Sigma23                            = ARRAY[no_blocks](FLOAT, "Shear stress");

    //Card 4
    SigmaX                             = ARRAY[no_blocks](FLOAT, "Bending stress");
    SigmaY                             = ARRAY[no_blocks](FLOAT, "Bending stress");
    SigmaZ                             = ARRAY[no_blocks](FLOAT, "Bending stress");
    SigmaYZ                            = ARRAY[no_blocks](FLOAT,"Bending stress");

    // HM INTERNAL
    KEYWORD_STR                        = VALUE(STRING, "List of keys/items");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    no_blocks                          = -1;

    //Card 1
    shell_ID                           = -1;
    Ep                                 = -1;

    //Card 3
    Sigma1                             = -1;
    Sigma2                             = -1;
    Sigma12                            = -1;
    Sigma13                            = -1;
    Sigma23                            = -1;

    //Card 4
    SigmaX                             = -1;
    SigmaY                             = -1;
    SigmaZ                             = -1;
    SigmaYZ                            = -1;

    //HM INTERNAL
    KEYWORD_STR                        = 9000;
}


GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/INISH3/EPSP/");

    //Card 1
    SIZE(no_blocks,  "no_blocks");
    ARRAY(no_blocks, "no_block")
    {
        DATA(shell_ID, "shell_ID");
        SCALAR(Ep,     "Ep")           { DIMENSION = "DIMENSIONLESS" ; }
    }
}

// File format
FORMAT(radioss44)
{
    HEADER("/INISH3/EPSP/");

    FREE_CARD_LIST(no_blocks)
    {
        //Card 1
        COMMENT("#shell_ID                      Ep");
        CARD("%8d%8s%16lg", shell_ID, _BLANK_, Ep);

        //Card 3
        COMMENT("# Sigma1  Sigma2 Sigma12 Sigma13 Sigma23");
        CARD("%16lg%16lg%16lg%16lg%16lg", Sigma1, Sigma2, Sigma12, Sigma13, Sigma23);

        //Card 4
        COMMENT("# SigmaX  SigmaY  SigmaZ SigmaYZ");
        CARD("%16lg%16lg%16lg%16lg", SigmaX, SigmaY, SigmaZ, SigmaYZ);
    }
}

FORMAT(radioss51)
{
    HEADER("/INISH3/EPSP/");

    FREE_CARD_LIST(no_blocks)//no_blocks = 1
    {
        //Card 1
        COMMENT("# shell_ID                            Ep");
        CARD("%10d%10s%20lg", shell_ID, _BLANK_, Ep);
    }
}