//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- inishe_stra_f_sub.cfg ---

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    //Card 1
    shell_ID                           = VALUE(ELEMS, "Element identifier"){ SUBTYPES = ( /ELEMS/SHELL ) ; }
    nb_integr                          = SIZE("Integration point number through the thickness");
    npg                                = VALUE(INT,   "Number of surface quadrature points");
    Thick                              = VALUE(FLOAT, "Shell thickness");

    //Cards
    nb_integr2                         = SIZE("Integration point number through the thickness");
    eps_1                              = ARRAY[nb_integr2](FLOAT,"Membrane strain in 1st direction");
    eps_2                              = ARRAY[nb_integr2](FLOAT,"Membrane strain in 2nd direction");
    eps_12                             = ARRAY[nb_integr2](FLOAT,"Membrane shear strain");
    eps_23                             = ARRAY[nb_integr2](FLOAT,"Shear strain in direction 23");
    eps_31                             = ARRAY[nb_integr2](FLOAT,"Shear strain in direction 31");
    k1                                 = ARRAY[nb_integr2](FLOAT,"Bending strain in direction 1");
    k2                                 = ARRAY[nb_integr2](FLOAT,"Bending strain in direction 2");
    k12                                = ARRAY[nb_integr2](FLOAT,"Bending strain in direction 12");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    shell_ID                           = -1;
    nb_integr                          = -1;
    npg                                = -1;
    Thick                              = -1;

    //Cards
    nb_integr2                         = -1;
    eps_1                              = -1;
    eps_2                              = -1;
    eps_12                             = -1;
    eps_23                             = -1;
    eps_31                             = -1;
    k1                                 = -1;
    k2                                 = -1;
    k12                                = -1;
}

GUI(COMMON)
{
    //Card 1
    DATA(shell_ID,  "shell_ID");
    SIZE(nb_integr, "nb_integr");
    RADIO(npg,      "npg")
    {
        ADD(0,"Set to 1");
        ADD(1,"Must be used for shell formulations Ishell=1,2,3,4,24");
        ADD(3,"Must be used for DKT18 shell formulation");
        ADD(4,"Must be used for BATOZ formulation");
    }
    SCALAR(Thick, "Thick")             { DIMENSION = "l" ; }
    SIZE(nb_integr2, "nb_integr2");
    ASSIGN(nb_integr2, 1);
    if(npg > 0)
    {
        ASSIGN(nb_integr2, nb_integr2 * npg);
    }
    //Cards
    ARRAY(nb_integr2,"nb_integr2")
    {
        SCALAR(eps_1,  "eps_1")        { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(eps_2,  "eps_2")        { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(eps_12, "eps_12")       { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(eps_23, "eps_23")       { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(eps_31, "eps_31")       { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(k1,  "k1")              { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(k2,  "k2")              { DIMENSION = "DIMENSIONLESS" ; }
        SCALAR(k12, "k12")             { DIMENSION = "DIMENSIONLESS" ; }
    }
}

// File format
FORMAT(radioss90)
{
    //Card 1
    COMMENT("# shell_ID nb_integr       npg               Thick");
    CARD("%10d%10d%10d%20lg", shell_ID, nb_integr, npg, Thick);
   
   ASSIGN(nb_integr2, 1);
   if(npg > 0)
   {
        ASSIGN(nb_integr2, nb_integr2 * npg);
   }
    //Cards
    CARD_LIST(nb_integr2)
    {
        COMMENT("#              eps_1               eps_2              eps_12              eps_23              eps_31");
        CARD("%20lg%20lg%20lg%20lg%20lg", eps_1, eps_2, eps_12, eps_23, eps_31);

        COMMENT("#                 k1                  k2                 k12");
        CARD("%20lg%20lg%20lg", k1, k2, k12);
    }

}