//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- inter_lagmul_type2.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    mainentityids                           = VALUE(SETS,        "Main surface identifier")         { SUBTYPES = (/SETS/SURF) ; }
    secondaryentityids                      = VALUE(SETS,        "Secondary node group identifier") { SUBTYPES = (/SETS/GRNOD) ; }

    Isearch                                 = VALUE(INT,         "Search formulation flag for the closest main segment");
    Dsearch                                 = VALUE(FLOAT,       "Distance for searching closest main segment");

    //for radioss v44
    Spotflag                                = VALUE(INT,         "Flag for spotweld formulation");
    Level                                   = VALUE(INT,         "Hierarchy level of the interface");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING,      "Solver Keyword");

    TITLE                                   = VALUE(STRING,      "Interface title");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    Isearch                                 = 8042;
    Dsearch                                 = 8043;

    //for radioss v44
    Spotflag                                = -1;
    Level                                   = -1;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;

    TITLE                                   = -1;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/INTER/LAGMUL/TYPE2/");

    DATA(mainentityids);
    DATA(secondaryentityids);

    RADIO(Isearch, "Isearch")
    {
        ADD(0, "0: Default");
        ADD(1, "1: Old formulation");
        ADD(2, "2: New improved formulation");
    }

    SCALAR(Dsearch)                            { DIMENSION="l"; }
}

// File format
FORMAT(radioss44)
{
    HEADER("/INTER/LAGMUL/TYPE2/%-d", _ID_);

    CARD("%-80s", TITLE);

    COMMENT("#grnodid surf_id        Spotflag   Level Isearch                         dsearch");
    CARD("%8d%8d%8s%8d%8d%8d%16s%16lg", secondaryentityids, mainentityids, _BLANK_, Spotflag, Level, Isearch, _BLANK_, Dsearch);
}

FORMAT(radioss51)
{
    HEADER("/INTER/LAGMUL/TYPE2/%-d", _ID_);

    CARD("%-100s", TITLE);

    COMMENT("# grnd_IDs   surf_ID                                 Isearch                                 dsearch");
    CARD("%10d%10d%30s%10d%20s%20lg", secondaryentityids, mainentityids, _BLANK_, Isearch, _BLANK_, Dsearch);
}

FORMAT(radioss90)
{
    HEADER("/INTER/LAGMUL/TYPE2/%-d", _ID_);

    CARD("%-100s", TITLE);

    COMMENT("#grnodIDslsurfIDmast                                 Isearch                                 dsearch");
    CARD("%10d%10d%30s%10d%20s%20lg", secondaryentityids, mainentityids, _BLANK_, Isearch, _BLANK_, Dsearch);
}

FORMAT(radioss110)
{
    HEADER("/INTER/LAGMUL/TYPE2/%-d", _ID_);

    CARD("%-100s", TITLE);

    COMMENT("# grnd_IDs  surf_IDm                                 Isearch                                 dsearch");
    CARD("%10d%10d%30s%10d%20s%20lg", secondaryentityids, mainentityids, _BLANK_, Isearch, _BLANK_, Dsearch);
}
