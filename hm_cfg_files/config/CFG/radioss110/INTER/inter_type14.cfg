//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- inter_type_14.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    secondaryentityids                      = VALUE(SETS,         "Secondary node group identifier") { SUBTYPES = (/SETS/GRNOD) ; }
    mainentityids                           = VALUE(SETS,         "Main surface identifier")         { SUBTYPES = (/SETS/SURF) ; }
    Iload                                   = VALUE(FUNCT,        "Elastic force vs penetration function identifier");
    IFRIC                                   = VALUE(FUNCT,        "Friction coefficient vs elastic force function identifier");
    FUN_A1                                  = VALUE(FUNCT,        "Damping coefficient vs normal velocity function identifier");
    FUN_A2                                  = VALUE(FUNCT,        "Damping coefficient vs elastic force function identifier");

    STIFF1                                  = VALUE(FLOAT,        "Interface stiffness");
    FRIC                                    = VALUE(FLOAT,        "Friction coefficient");
    VISC                                    = VALUE(FLOAT,        "Normal viscosity coefficient");
    GAP                                     = VALUE(FLOAT,        "Gap for impact activation");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING,       "Solver Keyword");

    TITLE                                   = VALUE(STRING,       "Interface title");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    Iload                                   = 7024;
    IFRIC                                   = 7025;
    FUN_A1                                  = 45;
    FUN_A2                                  = 170;

    STIFF1                                  = 1131;
    FRIC                                    = 5;
    VISC                                    = 7026;
    GAP                                     = 5153;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;

    TITLE                                   = -1;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/INTER/TYPE14/");

    DATA(secondaryentityids,  "grnd_IDs");
    DATA(mainentityids, "surf_IDm");
    DATA(Iload,           "fct_IDld");
    DATA(IFRIC,           "fct_IDf");
    DATA(FUN_A1,          "fct_IDd1");
    DATA(FUN_A2,          "fct_IDd2");

    SCALAR(STIFF1,        "Stif")                            { DIMENSION = "translation_stiffness" ; }
    SCALAR(FRIC,          "Fric")                            { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(VISC,          "Visc")                            { DIMENSION = "massFlux" ; }
    SCALAR(GAP,           "Gap")                             { DIMENSION = "l" ; }
}


// File format
FORMAT(radioss44)
{
    HEADER("/INTER/TYPE14/%-d", _ID_);
    CARD("%-80s", TITLE);

    COMMENT("# grnod_id   surf_id     Iload     Ifric       Id1       Id2");
    CARD("%8d%8d%8d%8d%8d%8d", secondaryentityids, mainentityids, Iload, IFRIC, FUN_A1, FUN_A2);

    COMMENT("#               STIF                Fric                Visc                 GAP");
    CARD("%16lg%16lg%16lg%16lg", STIFF1, FRIC, VISC, GAP);
}

FORMAT(radioss51)
{
    HEADER("/INTER/TYPE14/%-d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("# grnod_id   surf_id     Iload     Ifric       Id1       Id2");
    CARD("%10d%10d%10d%10d%10d%10d", secondaryentityids, mainentityids, Iload, IFRIC, FUN_A1, FUN_A2);

    COMMENT("#               STIF                Fric                Visc                 GAP");
    CARD("%20lg%20lg%20lg%20lg", STIFF1, FRIC, VISC, GAP);
}

FORMAT(radioss90)
{
    HEADER("/INTER/TYPE14/%-d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("# grnd_IDs  surf_IDm  fct_IDld   fct_IDf  fct_IDd1  fct_IDd2");
    CARD("%10d%10d%10d%10d%10d%10d", secondaryentityids, mainentityids, Iload, IFRIC, FUN_A1, FUN_A2);

    COMMENT("#               Stif                Fric                Visc                 Gap");
    CARD("%20lg%20lg%20lg%20lg", STIFF1, FRIC, VISC, GAP);
}
