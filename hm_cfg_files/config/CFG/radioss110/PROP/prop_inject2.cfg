//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Property INJECT2


ATTRIBUTES(COMMON)
{
    NIP                                     = SIZE(" Number of Gases");
    IFLOW                                   = VALUE(INT,  " Mass vs time function input type flag");
    FUN_A1                                  = VALUE(FUNCT,  " Mass of Injected Gas vs Time function identifier");
    FUN_B1                                  = VALUE(FUNCT,  " Temperature of Injected Gas vs Time function identifier ");
    F_SCALE_Y                               = VALUE(FLOAT,  " Mass Function Scale Factor");
    F_SHIFT_Y                               = VALUE(FLOAT,  " Temperature Function Scale Factor");
    A_SCALE_X                               = VALUE(FLOAT,  " Abscissa Scale Factor for Time Based Functions");
    materialIds                             = ARRAY[NIP](MAT,  " Material Identifier that Identifies the Gas");
    CM1                                     = ARRAY[NIP](FLOAT,  " Molar Fraction of Injected Gas");
    ABG_Imass                               = ARRAY[NIP](FUNCT,  " Molar Fraction of Injected Gas vs Time Function Identifier");
    
    //Attributes for HM usage
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING,  "Entity_Comments");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    IO_FLAG                                 = VALUE(INT, "");
    TITLE                                   = VALUE(STRING, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    ABG_Imass                               =  915;
    A_SCALE_X                               =  753;
    CM1                                     =  142;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    FUN_A1                                  =   45;
    FUN_B1                                  =  168;
    F_SCALE_Y                               =  754;
    F_SHIFT_Y                               =  756;
    IFLOW                                   = 8159;
    NIP                                     =  427;
    NUM_COMMENTS                            = 5110;
    materialIds                             = 4620;
    IO_FLAG                                 =   -1;
    TITLE                                   =   -1;
}

CHECK(COMMON)
{
    NIP                                     >    0;
    NIP                                     <= 100;
}

DEFAULTS(COMMON)
{
    A_SCALE_X                               = 1.0;
    F_SCALE_Y                               = 1.0;
    F_SHIFT_Y                               = 1.0;
    NIP                                     =   1;
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
       ENUM_VALUE_FLAG=TRUE;
       ADD(1, "1:Hide in Menu/Export");
       ADD(2, "2:Show in Menu/Export");
       ADD(3, "3:Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    ASSIGN(KEYWORD_STR, "/PROP");
    ASSIGN(KEYWORD_STR, "/INJECT2/");
    SIZE(NIP);
    RADIO(IFLOW)
    {
        ADD(0, "0:Mass is Input.");
        ADD(1, "1:Mass Flow is Input.");
    }
    DATA(FUN_A1) {/FILTER/groupEnumField/1/EQ;}
    DATA(FUN_B1) {/FILTER/groupEnumField/1/EQ;}
    SCALAR(F_SCALE_Y) { if(IFLOW==0)  {DIMENSION="m";} else  {DIMENSION="massFlux";}  }  
    SCALAR(F_SHIFT_Y) {DIMENSION="k"; }
    SCALAR(A_SCALE_X) {DIMENSION="t";} 
    ARRAY(NIP,"Number of Gases")
    {
        DATA(materialIds) {SUBTYPES=(/MAT/MGAS);}
        SCALAR(CM1);
        FUNCTION(ABG_Imass) {
          X_TITLE     = "Time"; Y_TITLE     = "Temp. of injected gas";
          X_DIMENSION="t"; Y_DIMENSION="k";
//        X_SCALING(A_SCALE_X);  Y_SCALING(F_SHIFT_Y);  
          /FILTER/groupEnumField/1/EQ;
       }
    }
}

// File format for Radioss 100
FORMAT(radioss100) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/PROP/INJECT2/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    COMMENT("#   Ngases     Iflow");
    CARD("%10d%10d",NIP,IFLOW);
    //
    COMMENT("# fun_ID_M  fun_ID_T            Fscale_M            Fscale_T            Ascale_T");  
    CARD("%10d%10d%20lg%20lg%20lg",FUN_A1,FUN_B1,F_SCALE_Y,F_SHIFT_Y,A_SCALE_X);
    //
    CARD_LIST(NIP)
    {
       COMMENT("#   mat_ID                Molar_Fraction fun_ID_mf");
       CARD("%10d          %20lg%10d",materialIds,CM1,ABG_Imass);
    }
}
