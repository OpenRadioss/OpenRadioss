//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Property TRUSS Type2
ATTRIBUTES(COMMON)
{
    AREA                                    = VALUE(FLOAT,  " Initial Cross Section");
    GAP                                     = VALUE(FLOAT,  " Initial Gap");

    
    //Attributes for HM usage
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING,  "Entity_Comments");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Prop_Name_OR_Type                       = VALUE(INT, "");
    Hyperbeam_section_entity                = VALUE(BEAMSECTION,  " Hyperbeam Identifier");
    IO_FLAG                                 = VALUE(INT, "");
    TYPE_NO                                 = VALUE(STRING, "");
    TITLE                                   = VALUE(STRING, "");
}

/*
PARAMETERS(PARAMETERS) {                                                          
  TAREA = INPUT_SCALAR(AREA,"Initial cross section"); 
} 
*/

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    NUM_COMMENTS                            = 5110;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    GAP                                     = 5153;
    AREA                                    = 718;
    Hyperbeam_section_entity                = 4545;  
    Prop_Name_OR_Type                       = 4537;
    TITLE                                   =   -1;
    TYPE_NO                                 =   -1;
    IO_FLAG                                 =   -1;
}

CHECK(COMMON)
{
    AREA                                    > 0.0;
    GAP                                     > 0.0;
}

DEFAULTS(COMMON)
{
    GAP                                     =  0;
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
       ENUM_VALUE_FLAG=TRUE;
       ADD(1, "1:Hide in Menu/Export");
       ADD(2, "2:Show in Menu/Export");
       ADD(3, "3:Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Prop_Name_OR_Type == 2)
    {
        ASSIGN(KEYWORD_STR, "/PROP");
        ASSIGN(KEYWORD_STR, "/TYPE2/");

    }
    else
    {
        ASSIGN(KEYWORD_STR, "/PROP");
        ASSIGN(KEYWORD_STR, "/TRUSS/");
    }
    DATA(Hyperbeam_section_entity);
 mandatory:
    if(Hyperbeam_section_entity != NONE)
    {
        ASSIGN(AREA,[@getentityvalue(beamsects,$Hyperbeam_section_entity,results_area)]);
    }
    else
    {
        SCALAR(AREA){ DIMENSION="area";   }
    }
 optional:
    SCALAR(GAP)  { DIMENSION="l"; }
 mandatory:
  /*
  graphical SUPPORT("Support") {
    OBJECTS=(/PART/TRUSS);
    ADD(PART,"Parts");
  }
  */
}

//File format for Radioss 51
FORMAT(radioss51)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 0 && Hyperbeam_section_entity != NONE)
    {
        COMMENT("##HMBEAMSECASSOC  PROPASSOC        %d",Hyperbeam_section_entity);
    }
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE2/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/TRUSS/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    if(Hyperbeam_section_entity!=NONE)
    {
        ASSIGN(AREA,[@getentityvalue(beamsects,$Hyperbeam_section_entity,results_area)],EXPORT);
    }
    COMMENT("#               AREA             GAP_ini");
    CARD("%20lg%20lg",AREA,GAP);
}
// File format for Radioss 41
FORMAT(radioss41) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s/%d/%s",TYPE_NO,_ID_,TITLE);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    if(Hyperbeam_section_entity!=NONE)
    {
        ASSIGN(AREA,[@getentityvalue(beamsects,$Hyperbeam_section_entity,results_area)],EXPORT);
    }
    COMMENT("#           AREA         GAP_ini");
    CARD("%16lg%16lg",AREA,GAP);
}
