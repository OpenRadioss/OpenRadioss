//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Property user
ATTRIBUTES(COMMON)
{    

    F_scale_stress                          = VALUE(FLOAT,  "");
    F_scale_strrate                         = VALUE(FLOAT,  "");
    F_scale_dist                            = VALUE(FLOAT,  "");
    Alpha                                   = VALUE(FLOAT,  " Mass damping coefficient"); 
    RUPT                                    = VALUE(INT,    " ");
    DEBUG                                   = VALUE(INT,    " ");
    LFILTR                                  = VALUE(INT,    " ");
    FUNCT_ID_sr                             = VALUE(FUNCT,  " ","FUNCT_ID_sr");
    FUNCT_ID_sn                             = VALUE(FUNCT,  " ","FUNCT_ID_sn");
    FUNCT_ID_st                             = VALUE(FUNCT,  " ","FUNCT_ID_st");
    MAX_N_DIST                              = VALUE(FLOAT,  " ");
    MAX_T_DIST                              = VALUE(FLOAT,  " ");
    
    //Attributes for HM usage
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING,  "Entity_Comments");
    CommentEnumField                        = VALUE(INT,  "User Comments");    
    Prop_Name_OR_Type                       = VALUE(INT, "");
    TITLE                                   = VALUE(STRING, "");
    IO_FLAG                                 = VALUE(INT, "");
    TYPE_NO                                 = VALUE(STRING, "");
    NBP                                     = VALUE(INT,   "Number of integration points");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    NUM_COMMENTS                            = 5110;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;   
    F_scale_stress                          = 2002;
    F_scale_strrate                         = 2003;
    F_scale_dist                            = 2004;
    Alpha                                   = 982;
    RUPT                                    = 2005;
    DEBUG                                   = 2006;
    LFILTR                                  = 2007;
    FUNCT_ID_sr                             = 2008;
    FUNCT_ID_sn                             = 2009;
    FUNCT_ID_st                             = 2010;
    MAX_N_DIST                              = 2011;
    MAX_T_DIST                              = 2012;
    Prop_Name_OR_Type                       = 4537;
    TITLE                                   =   -1;
    IO_FLAG                                 =   -1;
    TYPE_NO                                 =   -1;
}

CHECK(COMMON)
{
}

DEFAULTS(COMMON)
{
    F_scale_stress                          = 1;
    F_scale_strrate                         = 1;
    F_scale_dist                            = 1;
    Alpha                                   = 1.0e30;
    RUPT                                    = 0;
    DEBUG                                   = 0;
    LFILTR                                  = 0;
    MAX_N_DIST                              = 1.0e30;
    MAX_T_DIST                              = 1.0e30;
}

GUI(COMMON)
{
 optional:
    RADIO(CommentEnumField)
    {
       ENUM_VALUE_FLAG=TRUE;
       ADD(1, "1:Hide in Menu/Export");
       ADD(2, "2:Show in Menu/Export");
       ADD(3, "3:Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    ASSIGN(KEYWORD_STR, "/PROP");
    ASSIGN(KEYWORD_STR, "/USER4/");

    SCALAR(F_scale_stress);
    SCALAR(F_scale_strrate);
    SCALAR(F_scale_dist);
    SCALAR(Alpha);
    RADIO(RUPT)
    {
       ADD(0, "0");
       ADD(1, "1");
    }
    RADIO(DEBUG)
    {
       ADD(0, "0");
       ADD(1, "1");
    }
    RADIO(LFILTR)
    {
       ADD(0, "0");
       ADD(1, "1");
    }
    DATA(FUNCT_ID_sr);
    DATA(FUNCT_ID_sn);
    DATA(FUNCT_ID_st);
    SCALAR(MAX_N_DIST);
    SCALAR(MAX_T_DIST);
}
//File format for Radioss 2020
FORMAT(radioss51)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/PROP/USER4/%d",_ID_);
    }
    CARD("%-100s", TITLE); 
    COMMENT("#     F_scale_stress     F_scale_strrate        F_scale_dist               Alpha");
    CARD("%20lg%20lg%20lg%20lg",F_scale_stress,F_scale_strrate,F_scale_dist,Alpha);
    COMMENT("#     RUPT     DEBUG    LFILTR FCT_ID_sr FCT_ID_sn FCT_ID_st                    MAX_N_DIST          MAX_T_DIST");
    CARD("%10d%10d%10d%10d%10d%10d%20lg%20lg",RUPT,DEBUG,LFILTR,FUNCT_ID_sr,FUNCT_ID_sn,FUNCT_ID_st,MAX_N_DIST,MAX_T_DIST);
}

