//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Property SPR_TAB Type26

ATTRIBUTES(COMMON)
{
    m_coeff                                 = VALUE(FLOAT,  " Mass");
    ISENSOR                                 = VALUE(SENSOR,  " Sensor Identifier") {SUBTYPES=(/SENSOR/SENSOR_DEFINE);}
    ISFLAG                                  = VALUE(INT,  " Sensor Flag");
    Ileng                                   = VALUE(INT,  " Flag for Input Per Unit Length");
    NFUNC                                   = SIZE(" Number of Loading Curves");
    NRATEN                                  = SIZE(" Number of Unloading Curves");
    SCALE                                   = VALUE(FLOAT,  " Scale Factor for Abscissa of Loading and Unloading Functions");
    STIFF0                                  = VALUE(FLOAT,  " Maximum Stiffness");
    DMAX                                    = VALUE(FLOAT,  " Failure Displacement");
    ALPHA1                                  = VALUE(FLOAT,  " Strain Rate Filtering Factor");
    FUN_LOAD                                = ARRAY[NFUNC](FUNCT,  " Function identifier defining f(delta)");
    SCALE_LOAD                              = ARRAY[NFUNC](FLOAT,  " Scale Factor for Loading Function and unloading functions ");
    STRAINRATE_LOAD                         = ARRAY[NFUNC](FLOAT,  "  delta or epsilon Corresponding to a Loading Function or unloading function");
    FUN_UNLOAD                              = ARRAY[NRATEN](FUNCT,  " Function identifier defining f(delta)");
    SCALE_UNLOAD                            = ARRAY[NRATEN](FLOAT,  " Scale Factor for loading Function and unloading functions");
    STRAINRATE_UNLOAD                       = ARRAY[NRATEN](FLOAT,  " delta or epsilon Corresponding to a loading Function or unloading function ");
    
    //Attributes for HM usage
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING,  "Entity_Comments");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Prop_Name_OR_Type                       = VALUE(INT, "");
    IO_FLAG                                 = VALUE(INT, "");
    TYPE_NO                                 = VALUE(STRING, "");
    TITLE                                   = VALUE(STRING, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    NUM_COMMENTS                            = 5110;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    FUN_LOAD                                = 4234;
    FUN_UNLOAD                              = 4239;
    ISENSOR                                 = 5157;
    ISFLAG                                  = 5158;
    Ileng                                   =  999;
    ALPHA1                                  = 6145;
    NFUNC                                   = 5093;
    NRATEN                                  = 4233;
    SCALE                                   =   13;
    SCALE_LOAD                              = 4236;
    SCALE_UNLOAD                            = 4238;
    STIFF0                                  =  831;
    DMAX                                    = 9059;
    STRAINRATE_LOAD                         = 4235;
    STRAINRATE_UNLOAD                       = 4237;
    m_coeff                                 = 4203;
    Prop_Name_OR_Type                       = 4537;
    TITLE                                   =   -1;
    TYPE_NO                                 =   -1;
    IO_FLAG                                 =   -1;
}

CHECK(COMMON)
{
    ALPHA1                                   >=   0;
    ALPHA1                                   <= 1.0;
    NFUNC                                    >    0;
    NFUNC                                    <= 100;
    NRATEN                                   >    0;
    NRATEN                                   <= 100;
}

DEFAULTS(COMMON)
{
    ALPHA1                                   = 1.0;
    NFUNC                                    =   1;
    NRATEN                                   =   1;
    SCALE                                    = 1.0;
    STIFF0                                   = 1.0;
    Prop_Name_OR_Type                        = 0;

}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
       ENUM_VALUE_FLAG=TRUE;
       ADD(1, "1:Hide in Menu/Export");
       ADD(2, "2:Show in Menu/Export");
       ADD(3, "3:Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Prop_Name_OR_Type == 2)
    {
        ASSIGN(KEYWORD_STR, "/PROP");
        ASSIGN(KEYWORD_STR, "/TYPE26/");

    }
    else
    {
        ASSIGN(KEYWORD_STR, "/PROP");
        ASSIGN(KEYWORD_STR, "/SPR_TAB/");
    }
    SCALAR(m_coeff) { if (Ileng==0) { DIMENSION="m"; } else { DIMENSION="lineic_mass"; } }
    DATA(ISENSOR) {SUBTYPES=(/SENSOR/SENSOR_DEFINE);}
    RADIO(ISFLAG)
    {
        ADD(0, "0:Spring Element Activated.");
        ADD(1, "1:Spring Element Deactivated.");
        ADD(2, "2:Spring Element Activated or Deactivated.");
    }
    RADIO(Ileng)
    {
        ADD(0, "0:The Force in the Spring is Computed as Previously Detailed Formula.");
        ADD(1, "1:All Inputs are Per Unit Length.");
    }
    SIZE(NFUNC);
    SIZE(NRATEN);
    SCALAR(SCALE) { if(Ileng==0) { DIMENSION="l"; } else { DIMENSION="DIMENSIONLESS"; } }
    SCALAR(STIFF0) { if (Ileng==0) { DIMENSION="translation_stiffness"; } else { DIMENSION="force"; } }
/*   SCALAR(DMAX) { DIMENSION="l"; }*/
    SCALAR(ALPHA1);
    ARRAY(NFUNC, "Loading Functions")
    {
        FUNCTION(FUN_LOAD) {
        if (Ileng==0)
        {
          X_TITLE="dl";    X_DIMENSION="l";
          Y_TITLE="f";     Y_DIMENSION="force";    
        }
        if (Ileng==1)
        {
          X_TITLE="Strain";    X_DIMENSION="DIMENSIONLESS";
          Y_TITLE="f";         Y_DIMENSION="force";    
        }
        /FILTER/groupEnumField/1/EQ;
        }
        SCALAR(SCALE_LOAD)      { DIMENSION="force"; }
        SCALAR(STRAINRATE_LOAD) { DIMENSION="f"; }
    }
    ARRAY(NRATEN, "Unloading Functions")
    {
        FUNCTION(FUN_UNLOAD) {
        if (Ileng==0)
        {
          X_TITLE="dl";    X_DIMENSION="l";
          Y_TITLE="f";     Y_DIMENSION="force";    
        }
        if (Ileng==1)
        {
          X_TITLE="Strain";    X_DIMENSION="DIMENSIONLESS";
          Y_TITLE="f";     Y_DIMENSION="force";    
        }
        }
        SCALAR(SCALE_UNLOAD)        { DIMENSION="force"; }
        SCALAR(STRAINRATE_UNLOAD)   { DIMENSION="f"; }
    }
}

// File format for Radioss 110
FORMAT(radioss110) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE26/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/SPR_TAB/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    COMMENT("#                  M                                 sens_ID    Isflag     Ileng");
    CARD("%20lg                              %10d%10d%10d",m_coeff,ISENSOR,ISFLAG,Ileng);
    //
    COMMENT("#    Nfunc     Nfund              Lscale                Kmax                                   Alpha");
    CARD("%10d%10d%20lg%20lg%20s%20lg",NFUNC,NRATEN,SCALE,STIFF0,_BLANK_,ALPHA1);
    //
    if(NFUNC > 0)
    {
        COMMENT("#  fct_ID1              Fscale         Strain_rate");
        CARD_LIST(NFUNC)
        {
            CARD("%10d%20lg%20lg",FUN_LOAD,SCALE_LOAD,STRAINRATE_LOAD);
        }
    }
    //
    if(NRATEN > 0)
    {
        COMMENT("#  fct_ID1              Fscale         Strain_rate");
        CARD_LIST(NRATEN)
        {
            CARD("%10d%20lg%20lg",FUN_UNLOAD,SCALE_UNLOAD,STRAINRATE_UNLOAD);
        }
    }
}
