//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Property ADMESH_SET

ATTRIBUTES(COMMON)
{
    ANGLE2                                  = VALUE(FLOAT,  " Angle Criterion for Mesh Refinement");
    LEVEL                                   = VALUE(INT,  " Initial Level of Refinement");
    Thkerr                                  = VALUE(FLOAT,  " Criterion Based Upon Estimated Thickness Error");
    NIP                                     = SIZE("NPAR");
    PartIds1                                = ARRAY[NIP](COMPONENT,  "IDs of parts declared for adaptive meshing within this set", "PartIds");
    
    //Attributes for HM usage
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    TITLE                                   = VALUE(STRING, "");
    IO_FLAG                                 = VALUE(INT, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    ANGLE2                                  = 5218;
    LEVEL                                   = 8041;
    NIP                                     = 427;
    PartIds1                                = 4354;
    Thkerr                                  = 4564;
    TITLE                                   =   -1;
    IO_FLAG                                 =   -1;
}

CHECK(COMMON)
{
    NIP                                       >=  1;
    NIP                                       <= 15;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/ADMESH");
    ASSIGN(KEYWORD_STR, "/SET/");
    SCALAR(ANGLE2) {DIMENSION="a";}
    SCALAR(LEVEL);
    SCALAR(Thkerr) {DIMENSION="l";}
    SIZE(NIP);
    ARRAY(NIP, "NIPPAR")
    {
        DATA(PartIds1);
    }
}

//File format for Radioss 90
FORMAT(radioss90)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/ADMESH/SET/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    COMMENT("#     Angle_criteria    Inilev              Thkerr");
    CARD("%20lg%10d%20lg",ANGLE2,LEVEL,Thkerr);
    COMMENT("# ID_PARTS");
    FREE_CELL_LIST(NIP,"%10d",PartIds1,100);
}

// File format for Radioss 51
FORMAT(radioss51) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 0)
    {
        HEADER("/ADMESH/SET/%d",_ID_);
    } 
    CARD("%-100s", TITLE);  
    //
    COMMENT("#     Angle_criteria    Inilev");
    CARD("%20lg%10d",ANGLE2,LEVEL);
    //
    COMMENT("# ID_PARTS");
    FREE_CELL_LIST(NIP,"%10d",PartIds1,100);
    
}
