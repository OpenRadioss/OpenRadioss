//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Property PREDIT Type36
ATTRIBUTES(COMMON)
{
    P36_lutype                              = VALUE(INT,  " Property Type Flag");
    SKEW_CSID                               = VALUE(SYSTEM,  " Skew Identifier");
    PROP_ID1                                = VALUE(PROP,  " First Property Identifier") {SUBTYPES= (/PROP/SHELL);}
    PROP_ID2                                = VALUE(PROP,  " Second Property Identifier"){SUBTYPES= (/PROP/SHELL);}
    Xk                                      = VALUE(FLOAT,  " Stiffness for Interface");
    MAT_ID                                  = VALUE(MAT,  " Material Identifier");
    AREA                                    = VALUE(FLOAT,  " Area");
    IXX                                     = VALUE(FLOAT,  " Torsion Section Inertia IXX");
    IYY                                     = VALUE(FLOAT,  " Bending Section Inertia IYY");
    IZZ                                     = VALUE(FLOAT,  " Bending Section Inertia IZZ");
    RAY                                     = VALUE(FLOAT,  " Radius");
    
    //Attributes for HM usage
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM COMMENTS");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING,  "Entity_Comments");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Prop_Name_OR_Type                       = VALUE(INT, "");
    IO_FLAG                                 = VALUE(INT, "");
    TYPE_NO                                 = VALUE(STRING, "");
    TITLE                                   = VALUE(STRING, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    NUM_COMMENTS                            = 5110;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    P36_lutype                              = 4560;
    SKEW_CSID                               =  412;
    PROP_ID1                                = 4561;
    PROP_ID2                                = 4562;
    Xk                                      =  841;
    MAT_ID                                  = 4244;
    AREA                                    =  718;
    IXX                                     =  721;
    IYY                                     =  720;
    IZZ                                     =  719;
    RAY                                     = 4563;
    Prop_Name_OR_Type                       = 4537;
    TITLE                                   =   -1;
    TYPE_NO                                 =   -1;
    IO_FLAG                                 =   -1;
}

DEFAULTS(COMMON)
{
    P36_lutype                              =  1;
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
       ENUM_VALUE_FLAG=TRUE;
       ADD(1, "1:Hide in Menu/Export");
       ADD(2, "2:Show in Menu/Export");
       ADD(3, "3:Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Prop_Name_OR_Type == 2)
    {
        ASSIGN(KEYWORD_STR, "/PROP");
        ASSIGN(KEYWORD_STR, "/TYPE36/");

    }
    else
    {
        ASSIGN(KEYWORD_STR, "/PROP");
        ASSIGN(KEYWORD_STR, "/PREDIT/");
    }
    RADIO(P36_lutype)
    {
        ADD(1, "1:Property Type 1.");
        ADD(2, "2:Property Type 2.");
    }
    if(P36_lutype == 1)
    {
        DATA(SKEW_CSID) {/FILTER/Framefix/0/EQ;}
        DATA(PROP_ID1);
        DATA(PROP_ID2);
        SCALAR(Xk)   { DIMENSION="translation_stiffness"; }
    }
    else if(P36_lutype == 2)
    {
        DATA(MAT_ID);
        SCALAR(AREA) { DIMENSION="area"; }
        SCALAR(IXX) { DIMENSION="inertia"; }
        SCALAR(IYY) { DIMENSION="inertia"; }
        SCALAR(IZZ) { DIMENSION="inertia"; }
        SCALAR(RAY)  { DIMENSION="l"; }
    }
}
// File format for Radioss 51
FORMAT(radioss51) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE36/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/PREDIT/%d",_ID_);    
    }
    CARD("%-100s", TITLE);
    CARD_PREREAD("%10d",P36_lutype);
    COMMENT("#   Iutype");
    CARD("%10d",P36_lutype);
    if(P36_lutype==1)
    {
        COMMENT("#  skew_ID  prop_ID1  prop_ID2");
        CARD("%10d%10d%10d",SKEW_CSID,PROP_ID1,PROP_ID2);
        COMMENT("#                 Xk");
        CARD("%20lg",Xk);
    }
    else if(P36_lutype==2)
    {
        COMMENT("#   MAT_ID");
        CARD("%10d",MAT_ID);
        COMMENT("#               Area                 Ixx                 Iyy                 Izz                 Ray");
        CARD("%20lg%20lg%20lg%20lg%20lg",AREA,IXX,IYY,IZZ,RAY);
    }
}
