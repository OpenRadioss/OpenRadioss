//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// UNIT
//

ATTRIBUTES(COMMON) 
{   
    IS_M_STRING = VALUE(INT,"Use Mass Unit code instead of scale factor") ;
    MUNIT =VALUE(FLOAT,"Mass");
    MUNIT_S =VALUE(STRING,"Mass");
    IS_L_STRING = VALUE(INT,"Use Length Unit code instead of scale factor") ;
    LUNIT =VALUE(FLOAT,"Length");
    LUNIT_S =VALUE(STRING,"Length");  
    IS_T_STRING = VALUE(INT,"Use Time Unit code instead of scale factor") ;
    TUNIT =VALUE(FLOAT,"Time");
    TUNIT_S =VALUE(STRING,"Time");
// HM INTERNAL
    KEYWORD_STR         = VALUE(STRING, "Solver Keyword");
    TITLE               = VALUE(STRING, "TITLE");
    IO_FLAG                                 = VALUE(INT, "");
    TYPE_UNIT                                 = VALUE(STRING, "");
    UNIT_NAME                = VALUE(STRING, "");
    IS_U_STRING = VALUE(INT,"If local or global Unit") ;
    IS_ID = VALUE(INT,"Id local") ;
} 
SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR = 9000;
}

DEFAULTS(COMMON)
{
    MUNIT=1.0; LUNIT=1.0;TUNIT= 1.0;
    MUNIT_S="kg"; LUNIT_S="m";TUNIT_S="s";
}

GUI(COMMON)
{
   ASSIGN(KEYWORD_STR,"/UNIT");
   FLAG(IS_M_STRING);
   if (IS_M_STRING==FALSE)
   {
    SCALAR(MUNIT) {DIMENSION="DIMENSIONLESS";}     
   }
   else
   {      
    RADIO(MUNIT_S,"Mass",COLUMN)
    {
        ADD("yg","yg");
        ADD("zg","zg");
        ADD("ag","ag");
        ADD("fg","fg");
        ADD("pg","pg");
        ADD("ng","ng");
        ADD("mug","mug");
        ADD("mg","mg");
        ADD("cg","cg");
        ADD("dg","dg");
        ADD("g","g");
        ADD("dag","dag");
        ADD("hg","hg");
        ADD("kg","kg");
        ADD("Mg","Mg");
        ADD("Gg","Gg");
        ADD("Tg","Tg");
        ADD("Pg","Pg");
        ADD("Eg","Eg");
        ADD("Zg","Zg");
        ADD("Yg","Yg");
    }
   }
   
   FLAG(IS_L_STRING);
   if (IS_L_STRING==FALSE)
   {
    SCALAR(LUNIT) {DIMENSION="DIMENSIONLESS";}
   }
   else
   {
    RADIO(LUNIT_S,"Length",COLUMN)
    {
        ADD("ym","ym");
        ADD("zm","zm");
        ADD("am","am");
        ADD("fm","fm");
        ADD("pm","pm");
        ADD("nm","nm");
        ADD("mum","mum");
        ADD("mm","mm");
        ADD("cm","cm");
        ADD("dm","dm");
        ADD("m" ,"m");
        ADD("dam","dam");
        ADD("hm","hm");
        ADD("km","km");
        ADD("Mm","Mm");
        ADD("Gm","Gm");
        ADD("Tm","Tm");
        ADD("Pm","Pm");
        ADD("Em","Em");
        ADD("Zm","Zm");
        ADD("Ym","Ym");
    }
   }
   FLAG(IS_T_STRING);
   if (IS_T_STRING==FALSE)
   {
    SCALAR(TUNIT) {DIMENSION="DIMENSIONLESS";}
   }
   else
   {
        RADIO(TUNIT_S,"Time",COLUMN)
        {
            ADD("ys","ys");
            ADD("zs","zs");
            ADD("as","as");
            ADD("fs","fs");
            ADD("ps","ps");
            ADD("ns","ns");
            ADD("mus","mus");
            ADD("ms","ms");
            ADD("cs","cs");
            ADD("ds","ds");
            ADD("s" ,"s");
            ADD("das","das");
            ADD("hs","hs");
            ADD("ks","ks");
            ADD("Ms","Ms");
            ADD("Gs","Gs");
            ADD("Ts","Ts");
            ADD("Ps","Ps");
            ADD("Es","Es");
            ADD("Zs","Zs");
            ADD("Ys","Ys");
        }
   }
}
FORMAT(radioss51) 
{       
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/UNIT/%s/%s",SCALAR_OR_STRING(IS_U_STRING,IS_ID, UNIT_NAME),TYPE_UNIT);
    }
    if(IO_FLAG == 0 && IS_U_STRING == FALSE)
    {
        HEADER("/UNIT/%d",_ID_); 
    }
    if(IS_U_STRING == FALSE)
    {
        CARD("%-100s", TITLE);
        COMMENT("#              MUNIT               LUNIT               TUNIT");    
        CARD("%20s%20s%20s",SCALAR_OR_STRING(IS_M_STRING,MUNIT,MUNIT_S),SCALAR_OR_STRING(IS_L_STRING,LUNIT,LUNIT_S),SCALAR_OR_STRING(IS_T_STRING,TUNIT,TUNIT_S));   
    }
    else if (IO_FLAG == 0)
    {
        HEADER("/UNIT/%s/%s",UNIT_NAME,TYPE_UNIT);
    }

}
FORMAT(radioss90) 
{       
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/UNIT/%s/%s",SCALAR_OR_STRING(IS_U_STRING,IS_ID, UNIT_NAME),TYPE_UNIT);
    }
    if(IO_FLAG == 0 && IS_U_STRING == FALSE)
    {
        HEADER("/UNIT/%d",_ID_); 
    }
    if(IS_U_STRING == FALSE)
    {
        CARD("%-100s", TITLE);
        COMMENT("#              MUNIT               LUNIT               TUNIT");    
        CARD("%20s%20s%20s",SCALAR_OR_STRING(IS_M_STRING,MUNIT,MUNIT_S),SCALAR_OR_STRING(IS_L_STRING,LUNIT,LUNIT_S),SCALAR_OR_STRING(IS_T_STRING,TUNIT,TUNIT_S));   
    }
    else if (IO_FLAG == 0)
    {
        HEADER("/UNIT/%s/%s",UNIT_NAME,TYPE_UNIT);
    }

}
FORMAT(radioss110) 
{       
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/UNIT/%s/%s",SCALAR_OR_STRING(IS_U_STRING,IS_ID, UNIT_NAME),TYPE_UNIT);
    }
    if(IO_FLAG == 0 && IS_U_STRING == FALSE)
    {
        HEADER("/UNIT/%d",_ID_); 
    }
    if(IS_U_STRING == FALSE)
    {
        CARD("%-100s", TITLE);
        COMMENT("#              MUNIT               LUNIT               TUNIT");    
        CARD("%20s%20s%20s",SCALAR_OR_STRING(IS_M_STRING,MUNIT,MUNIT_S),SCALAR_OR_STRING(IS_L_STRING,LUNIT,LUNIT_S),SCALAR_OR_STRING(IS_T_STRING,TUNIT,TUNIT_S));   
    }
    /*do not export 90 /UNIT*/
}
