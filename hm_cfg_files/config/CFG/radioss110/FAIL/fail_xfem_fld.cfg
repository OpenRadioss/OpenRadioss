//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//FAIL : Failure model for XFEM crack initialization and propagation (Forming Limit Diagram based)  
//

ATTRIBUTES(COMMON){ 

    _HMCOMMENTSFLAG                 = VALUE(INT, "Write HM Comments");
    mat_id                          = VALUE(MAT,  "Material");

    fct_ID                          = VALUE( FUNCT, "Function identifier");
    Ifail_sh                        = VALUE( INT,   "Shell flag");
}
SKEYWORDS_IDENTIFIER(COMMON)
{
    _HMCOMMENTSFLAG=-1;
}
/*



DEFINITIONS(COMMON) {
  SUPPORTING=(MAT);
}

GUI(COMMON){

  DATA(MAT) {SUBTYPES=(/MAT/COMPSH,
               /MAT/COWPER,
               /MAT/DAMA,
               /MAT/ELASTOMER,
               /MAT/HANSEL,
               /MAT/HYD_JCOOK,
               /MAT/LAW66,
               /MAT/PLAS_BRIT,
               /MAT/PLAS_JOHNS,
               /MAT/PLAS_TAB,
               /MAT/PLAS_T3,
               /MAT/PLAS_ZERIL,
               /MAT/UGINE_ALZ,
               /MAT/ZHAO); }
  FUNCTION(FCT_ID) {
    X_TITLE     = "Eps min";
    Y_TITLE     = "Eps major";
    X_DIMENSION = "DIMENSIONLESS";
    Y_DIMENSION = "DIMENSIONLESS";
  }
  RADIO(ISHELL) {
    ADD(1, "1: Shell is deleted, if there is one layer in failure zone");
    ADD(2, "2: The layer tensor stress is set to zero if this layer is in failure zone, and shell is deleted if all layers are in the failure zone");
  }
  FLAG(ID_CARD_EXIST);
}
*/

FORMAT(radioss110) {
    HEADER("/FAIL/XFEM_FLD/%d",mat_id);

    COMMENT("#   FCT_ID  IFAIL_SH") ;
    CARD("%10d%10d",fct_ID,Ifail_sh);
}