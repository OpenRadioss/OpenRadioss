//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//FAIL : CHANG HC 9.0-SP1
//


ATTRIBUTES(COMMON){ 

    _HMCOMMENTSFLAG             = VALUE(INT, "Write HM Comments");
    mat_id                      = VALUE(MAT,  "Material");

    Sigma_1t                    = VALUE( FLOAT, "Longitudinal tensile strength") ;
    Sigma_2t                    = VALUE( FLOAT, "Transverse tensile strength") ;
    Sigma_12                    = VALUE( FLOAT, "Shear strength") ;
    Sigma_1c                    = VALUE( FLOAT, "Longitudinal compressive strength") ;
    Sigma_2c                    = VALUE( FLOAT, "Transverse compressive strength") ;

    Beta                        = VALUE( FLOAT, "Shear scaling factor") ;
    Tau_max                     = VALUE( FLOAT, "Time dynamic relaxation") ;
    Ifail_sh                    = VALUE( INT,   "Shell failure flag") ;

}

SKEYWORDS_IDENTIFIER(COMMON)
{
    _HMCOMMENTSFLAG=-1;
}
/*

DEFINITIONS(COMMON) {
  SUPPORTING=(MAT);
}

GUI(COMMON){ 
 DATA(MAT){SUBTYPES=(/MAT/CHANG,/MAT/LAW25);}
  SCALAR (SIGMA1_T ){DIMENSION="pressure"; }
  SCALAR (SIGMA2_T ){DIMENSION="pressure"; }
  SCALAR (SIGMA_12 ){DIMENSION="pressure"; }
  SCALAR (SIGMA1_C ){DIMENSION="pressure"; }
  SCALAR (SIGMA2_C ){DIMENSION="pressure"; }
  SCALAR (BETA ){DIMENSION="DIMENSIONLESS"; }
 mandatory:
  SCALAR (TAU_MAX ){DIMENSION="t"; }
 optional:
  RADIO(ifail_sh,"Flag for shell failure model") {
    ADD(1,"Shell is deleted if damage is reached for fiber or matrix for one layer");
    ADD(2,"Shell is deleted if damage is reached for fiber or matrix for all layers of shell");
    ADD(3,"Shell is deleted if damage is reached only for one fiber layer of shell");
    ADD(4,"Shell is deleted if damage is reached for all fiber layers of shell");
  }

  FLAG(ID_CARD_EXIST);
}

*/
FORMAT(radioss90) {
    HEADER("/FAIL/CHANG/%d",mat_id);

    COMMENT("#           SIGMA_1T            SIGMA_2T            SIGMA_12            SIGMA_1C            SIGMA_2C") ;
    CARD("%20lg%20lg%20lg%20lg%20lg",Sigma_1t, Sigma_2t, Sigma_12, Sigma_1c, Sigma_2c);
    COMMENT("#               BETA             TAU_MAX    ISHELL") ;
    CARD("%20lg%20lg%10d",Beta, Tau_max, Ifail_sh);
  
} 