//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// DATABASE_EXTENT_SSSTAT - DATABASE_EXTENT_SSSTAT_ID
//

ATTRIBUTES(COMMON)
{
// INPUT ATTRIBUTES
    IdOption                                = VALUE(INT,    "IdOption");
    ArrayCount                              = SIZE("ArrayCount");
    PartSetArray                            = ARRAY[ArrayCount](SETS,   "Part set ID for subsystem n") { SUBTYPES = (/SETS/SET_PART_IDPOOL); }
    LSD_Head_array                          = ARRAY[ArrayCount](STRING, "Heading for subsystem n");

// HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");

    IO_FLAG                                 = VALUE(INT,    "Import/Export flag");
    option                                  = VALUE(STRING, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
// INPUT ATTRIBUTES
    IdOption                                = 8113;
    ArrayCount                              = 2246;
    PartSetArray                            = 4131;
    LSD_Head_array                          = 8847;

// HM INTERNAL
    KEYWORD_STR                             = 9000;

    IO_FLAG                                 = -1;
    option                                  = -1;
}

DEFAULTS(COMMON)
{

}

GUI(COMMON)
{
    FLAG(IdOption);
    if (IdOption == 0) {
        ASSIGN(KEYWORD_STR, "*DATABASE_EXTENT_SSSTAT");
    } else {
        ASSIGN(KEYWORD_STR, "*DATABASE_EXTENT_SSSTAT_ID");
    }

    SIZE(ArrayCount);
    ARRAY(ArrayCount,"PSID")
    {
        DATA(PartSetArray);
    }
    if (IdOption == 1) {
        ARRAY(ArrayCount,"PSID")
        {
            SCALAR(LSD_Head_array);
        }
    }
}

// File format
FORMAT(Keyword971)
{
    HEADER("*DATABASE_EXTENT_SSSTAT");

    COMMENT("$     PSID      PSID      PSID      PSID      PSID      PSID      PSID      PSID");
    FREE_CELL_LIST(ArrayCount,"%10d",PartSetArray,80);
}

FORMAT(Keyword971_R10.1)
{
    ASSIGN(IO_FLAG,1,IMPORT);
    ASSIGN(IO_FLAG,0,EXPORT);

    if(IO_FLAG==0 && IdOption==0) {
      HEADER("*DATABASE_EXTENT_SSSTAT");
    } else if(IO_FLAG==0 && IdOption==1) {
      HEADER("*DATABASE_EXTENT_SSSTAT_ID");
    } else {
      // IO_FLAG == 1
      HEADER("*DATABASE_EXTENT_SSSTAT%s",option);

      if(option=="") {
          ASSIGN(IdOption,0,IMPORT);
      } else {
          ASSIGN(IdOption,1,IMPORT);
      }
    }

    if(IdOption==0) {
      COMMENT("$     PSID      PSID      PSID      PSID      PSID      PSID      PSID      PSID");
      FREE_CELL_LIST(ArrayCount,"%10d",PartSetArray,80);
    } else {
      COMMENT("$     PSID      HEADING                                                         ");
      FREE_CELL_LIST(ArrayCount,"%10d%-70s",PartSetArray,LSD_Head_array,80);
    }
}
