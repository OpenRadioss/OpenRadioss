//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//Material law 293 (MAT_COMPRF) Setup File
//


ATTRIBUTES(COMMON)
{
    KEYWORD_STR         = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt        = VALUE(INT, "Title");
    CommentEnumField    = VALUE(INT, "User Comments");
    Num_Comments        = SIZE("No. of comment lines");
    Comments            = ARRAY[Num_Comments](STRING, "Entity Comments");

    //Card1 of LS-Dyna manual
    Rho                 = VALUE(FLOAT, "Mass density");
    LSD_MAT100_ET       = VALUE(FLOAT,"Tensile modulus along the fiber yarns, corresponding to the slope ofthe curve");
    LSDYNA_EC           = VALUE(FLOAT,"Compression modulus along the fiber yarns, reversely calculated using bending tests");
    Nu                  = VALUE(FLOAT,"Poisson’s ratio");
    LSD_G121            = VALUE(FLOAT,"Coefficients for the bias-extension angle change-engineering stress curve");
    LSD_G122            = VALUE(FLOAT,"Coefficients for the bias-extension angle change-engineering stress curve");
    LSD_G123            = VALUE(FLOAT,"Coefficients for the bias-extension angle change-engineering stress curve");

    //Card2 of LS-Dyna manual
    LSD_G124            = VALUE(FLOAT,"Coefficients for the bias-extension angle change-engineering stress curve");
    LSD_G125            = VALUE(FLOAT,"Coefficients for the bias-extension angle change-engineering stress curve");
    LSD_G126            = VALUE(FLOAT,"Coefficients for the bias-extension angle change-engineering stress curve");
    LSD_GAMMAL          = VALUE(FLOAT,"Shear locking angle, in degrees");
    LSDYNA_VF           = VALUE(FLOAT,"Fiber volume fraction in the prepreg composite");
    LSD_EF3             = VALUE(FLOAT,"Transverse compression modulus of the dry fiber");
    LSD_VF23            = VALUE(FLOAT, "Transverse Poisson’s ratio of the dry fiber");
    E                   = VALUE(FLOAT, "Young’s modulus of the cured resin");

    //Card3 of LS-Dyna manual
    LSD_MAT103_VM       = VALUE(FLOAT, "Poisson’s ratio of the cured resin");
    LSD_EPSILON         = VALUE(FLOAT, "Stretch ratio at the end of undulation stage during the uniaxial tension test");
    LSD_THETA           = VALUE(FLOAT, "Initial angle offset between the fiber direction and the element direction");
    LSD_MAT_K           = VALUE(FLOAT, "Bulk modulus of the prepreg material");
    LSD_G               = VALUE(FLOAT, "Shear modulus of the prepreg material");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR         = 9000;
    CommentEnumField    = 3220;
    Num_Comments        = 3101;
    LSD_TitleOpt        = 90;
    Comments            = 3100;

    Rho                 = 118;
    LSD_MAT100_ET       = 2530;
    LSDYNA_EC           = 128;
    Nu                  = 120;
    LSD_G121            = 8835;
    LSD_G122            = 8836;
    LSD_G123            = 8793;
    LSD_G124            = 8837;
    LSD_G125            = 11001;
    LSD_G126            = 11002;
    LSD_GAMMAL          = 11003;
    LSDYNA_VF           = 221;
    LSD_EF3             = 8580;
    LSD_VF23            = 11004;
    E                   = 119;
    LSD_MAT103_VM       = 2663;
    LSD_EPSILON         = 11005;
    LSD_THETA           = 4793;
    LSD_MAT_K           = 1131;
    LSD_G               = 1560;
}

DRAWABLES(COMMON) {
public:
    MASS_DENSITY=SCALAR(Rho);
    YOUNG_MODULUS = SCALAR(E);
    POISSON_RATIO = SCALAR(Nu);
      //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2      = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON){
  mandatory:
    SCALAR(Rho){DIMENSION="density";}
  optional:
    SCALAR(LSD_MAT100_ET){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_EC){DIMENSION="k";}
    SCALAR(Nu){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_G121){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_G122){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_G123){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_G124){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_G125){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_G126){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_GAMMAL){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_VF){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_EF3){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_VF23){DIMENSION="DIMENSIONLESS";}
    SCALAR(E){DIMENSION="pressure";}
    SCALAR(LSD_MAT103_VM){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_EPSILON){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_THETA){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT_K){DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_G){DIMENSION="DIMENSIONLESS";}
}

FORMAT(Keyword971_R10.1)
{
    COMMENT("$      MID       RHO        ET        EC        PR      G121      G122      G123");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSD_MAT100_ET,LSDYNA_EC,Nu,LSD_G121,LSD_G122,LSD_G123);

    COMMENT("$     G124      G125      G126    GAMMAL        VF       EF3      VF23        EM");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_G124,LSD_G125,LSD_G126,LSD_GAMMAL,LSDYNA_VF,LSD_EF3,LSD_VF23,E);

    COMMENT("$       VM   EPSILON     THETA      BULK         G");
    CARD("%10lg%10lg%10lg%10lg%10lg",LSD_MAT103_VM,LSD_EPSILON,LSD_THETA,LSD_MAT_K,LSD_G);
}
