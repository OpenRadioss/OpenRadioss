//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Material law 054_55
// 


ATTRIBUTES(COMMON) 
{
    KEYWORD_STR                       = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt                      = VALUE(INT, "Title");
    CommentEnumField                  = VALUE(INT, "User Comments");
    Num_Comments                      = SIZE("No. of comment lines");
    Comments                          = ARRAY[Num_Comments](STRING, "Entity Comments");
    Rho                               = VALUE(FLOAT, "Mass density");
    LSDYNA_EA                         = VALUE(FLOAT, "EA Young’s modulus");
    LSDYNA_EB                         = VALUE(FLOAT, "EB Young’s modulus");
    LSDYNA_EC                         = VALUE(FLOAT, "EC Young’s modulus");
    LSDYNA_PRBA                       = VALUE(FLOAT, "Poisson’s ratio BA");
    LSDYNA_PRCA                       = VALUE(FLOAT, "Poisson’s ratio CA");
    LSDYNA_PRCB                       = VALUE(FLOAT, "Poisson’s ratio CB");
    LSDYNA_GAB                        = VALUE(FLOAT, "shear modulus AB");
    LSDYNA_GBC                        = VALUE(FLOAT, "shear modulus BC");
    LSDYNA_GCA                        = VALUE(FLOAT, "shear modulus CA");
    LSD_MAT_KFAIL                     = VALUE(FLOAT, "Bulk modulus of failed material");
    axisOptFlag                       = VALUE(INT, "Anisotropy axis definition");
    LSD_MANGLE                        = VALUE(FLOAT, "Material angle in degrees");
    LSD_SYSTEM                        = VALUE(SYSTEM, "Material axes option");
    LSD_NODE3                         = VALUE(NODE, "Node1");
    LSD_NODE4                         = VALUE(NODE, "Node2");
    LSDYNA_A1                         = VALUE(FLOAT, "Define components of vector a");
    LSDYNA_A2                         = VALUE(FLOAT, "Define components of vector a");
    LSDYNA_A3                         = VALUE(FLOAT, "Define components of vector a");
    LSD_NODE7                         = VALUE(NODE, "Node1");
    LSD_NODE8                         = VALUE(NODE, "Node2");
    LSDYNA_D1                         = VALUE(FLOAT, "Define components of vector d");
    LSDYNA_D2                         = VALUE(FLOAT, "Define components of vector d");
    LSDYNA_D3                         = VALUE(FLOAT, "Define components of vector d");
    LSD_NODE5                         = VALUE(NODE, "Node1");
    LSD_NODE6                         = VALUE(NODE, "Node2");
    LSDYNA_V1                         = VALUE(FLOAT, "Define components of vector v");
    LSDYNA_V2                         = VALUE(FLOAT, "Define components of vector v");
    LSDYNA_V3                         = VALUE(FLOAT, "Define components of vector v");
    LSD_DFAILM                        = VALUE(FLOAT, "Maximum strain for matrix straining in tension or compression");
    LSD_DFAILS                        = VALUE(FLOAT, "Maximum tensorial shear strain");
    LSDYNA_TFAIL                      = VALUE(FLOAT, "Time step size criteria for element deletion");  
    LSD_MAT_ALPH                      = VALUE(FLOAT, "Shear stress parameter for the nonlinear term");
    LSD_SOFT                          = VALUE(FLOAT, "Softening reduction factor for material strength in crashfront elements");
    LSD_FBRT                          = VALUE(FLOAT, "Softening for fiber tensile strength");
    LSD_YCFAC                         = VALUE(FLOAT, "Reduction factor for compressive fiber strength after matrix compressive failure");
    LSD_DFAILT                        = VALUE(FLOAT, "Maximum strain for fiber tension");
    LSD_DFAILC                        = VALUE(FLOAT, "Maximum strain for fiber compression");
    LSD_EFS                           = VALUE(FLOAT, "Effective failure strain");
    LSD_MAT_XC                        = VALUE(FLOAT, "Longitudinal compressive strength");
    LSD_MAT_XT                        = VALUE(FLOAT, "Longitudinal tensile strength");
    LSD_MAT_YC                        = VALUE(FLOAT, "Transverse compressive strength");
    LSD_MAT_YT                        = VALUE(FLOAT, "Transverse tensile strength");
    LSD_MAT_SC                        = VALUE(FLOAT, "Shear strength,");
    LSD_CRIT                          = VALUE(FLOAT, "Failure criterion");
    LSD_BETA                          = VALUE(FLOAT, "Weighting factor for shear term in tensile fiber mode");
    M54_55_OPT_CARD7                  = VALUE(INT,   "OptionalCard7");
    LSD_MAT_PFL                       = VALUE(FLOAT, "Percentage of layers which must fail until crashfront is initiated");
    LSD_MAT_EPSF                      = VALUE(FLOAT, "Damage initiation transverse shear strain");
    LSD_MAT_EPSR                      = VALUE(FLOAT, "Final rupture transverse shear strain");
    LSD_MAT_TSMD                      = VALUE(FLOAT, "Transverse shear maximum damage");
    LSD_MAT_SOFT2                     = VALUE(FLOAT, "Optional orthogonal softening reduction factor for material strength in crashfront elements");
    M54_55_OPT_CARD8                  = VALUE(INT,   "OptionalCard8");
    M54_55_OPT_CARD9                    = VALUE(INT,   "OptionalCard9");
    LSD_MAT_SLIMT1                    = VALUE(FLOAT, "Factor to determine the minimum stress limit after stress maximum");
    LSD_MAT_SLIMC1                    = VALUE(FLOAT, "Factor to determine the minimum stress limit after stress maximum");
    LSD_MAT_SLIMT2                    = VALUE(FLOAT, "Factor to determine the minimum stress limit after stress maximum");  
    LSD_MAT_SLIMC2                    = VALUE(FLOAT, "Factor to determine the minimum stress limit after stress maximum");
    LSD_MAT_SLIMS                     = VALUE(FLOAT, "Factor to determine the minimum stress limit after stress maximum");
    LSD_MAT_NCYRED                    = VALUE(FLOAT, "Number of cycles for stress reduction from maximum to minimum");
    LSD_MAT_SOFTG                     = VALUE(FLOAT, "Softening reduction factor for transverse shear moduli GBC and GCA in crashfront elements");
    AOPT_SKEW_FLAG                    = VALUE(INT,  "Flag for defining coordinate system ID number");
    LSD_2WAY                            = VALUE(FLOAT, "Flag to turn on 2-way fiber action");
    LSD_LCXC                            = VALUE(FUNCT, "Load curve ID for XC vs. strain rate");
    LSD_LCXT                            = VALUE(FUNCT, "Load curve ID for XT vs. strain rate");
    LSD_LCYC                            = VALUE(FUNCT, "Load curve ID for YC vs. strain rate");
    LSD_LCYT                            = VALUE(FUNCT, "Load curve ID for YT vs. strain rate");
    LSD_LCSC                            = VALUE(FUNCT, "Load curve ID for SC vs. strain rate");
    LSDYNA_DT                           = VALUE(FLOAT, "Strain rate averaging option");
    LSD_M54_55_TI                     = VALUE(FLOAT, "Flag to turn on transversal isotropic behavior");
    LOC_AOPT                          = VALUE(FLOAT, "");
    IO_FLAG                           = VALUE(INT, "io flag");
    //empty_string                 = VALUE(STRING, "Used as a local variable for free format case");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                       = 9000;
    CommentEnumField                  = 3220;
    Num_Comments                      = 3101;
    LSD_TitleOpt                      = 90;
    Comments                          = 3100;
    Rho                               = 118;
    LSDYNA_EA                         = 126;
    LSDYNA_EB                         = 127;
    LSDYNA_EC                         = 128;
    LSDYNA_PRBA                       = 129;
    LSDYNA_PRCA                       = 130;
    LSDYNA_PRCB                       = 131;
    LSDYNA_GAB                        = 132;
    LSDYNA_GBC                        = 133;
    LSDYNA_GCA                        = 134;
    LSD_MAT_KFAIL                     = 335;  
    axisOptFlag                       = 4946;
    LSD_MANGLE                        = 4716;
    LSD_SYSTEM                        = 184;
    LSD_NODE3                         = 2802;
    LSD_NODE4                         = 2803;
    LSDYNA_A1                         = 139;
    LSDYNA_A2                         = 140;
    LSDYNA_A3                         = 141;
    LSD_NODE5                         = 5078;
    LSD_NODE6                         = 5079;
    LSDYNA_V1                         = 142;
    LSDYNA_V2                         = 143;
    LSDYNA_V3                         = 144;
    LSD_NODE7                         = 5080;
    LSD_NODE8                         = 5081;
    LSDYNA_D1                         = 145;
    LSDYNA_D2                         = 146;
    LSDYNA_D3                         = 147; 
    LSD_DFAILM                        = 3110;
    LSD_DFAILS                        = 3111;
    LSDYNA_TFAIL                      = 67;
    LSD_MAT_ALPH                      = 349;
    LSD_SOFT                          = 362;
    LSD_FBRT                          = 363;
    LSD_YCFAC                         = 369;
    LSD_DFAILT                        = 370;
    LSD_DFAILC                        = 371;
    LSD_EFS                           = 372;
    LSD_MAT_XC                        = 466;
    LSD_MAT_XT                        = 346;
    LSD_MAT_YC                        = 348;
    LSD_MAT_YT                        = 347;
    LSD_MAT_SC                        = 345;
    LSD_CRIT                          = 1661;
    LSD_BETA                          = 1662;
    M54_55_OPT_CARD7                  = 5844;
    M54_55_OPT_CARD9                  = 8400;
    LSD_MAT_PFL                       = 5845;
    LSD_MAT_EPSF                      = 5846;
    LSD_MAT_EPSR                      = 5847;
    LSD_MAT_TSMD                      = 5848;
    LSD_MAT_SOFT2                     = 5849;
    M54_55_OPT_CARD8                  = 5850;
    LSD_MAT_SLIMT1                    = 5851;
    LSD_MAT_SLIMC1                    = 5852;
    LSD_MAT_SLIMT2                    = 5853;
    LSD_MAT_SLIMC2                    = 5854;
    LSD_MAT_SLIMS                     = 5855;
    LSD_MAT_NCYRED                    = 5856;
    LSD_MAT_SOFTG                     = 5857;
    AOPT_SKEW_FLAG                    = -1;
    LSD_2WAY                          = 8394;
    LSD_LCXC                          = 8395;
    LSD_LCXT                          = 8396;
    LSD_LCYC                          = 8397;
    LSD_LCYT                          = 8398;
    LSD_LCSC                          = 8399;
    LSD_M54_55_TI                     = 8845;
    LSDYNA_DT                         = 12;
    LOC_AOPT                          = -1;
    IO_FLAG                           = -1;
    //empty_string                 = -1;
}

DRAWABLES(COMMON) {
public:
    MASS_DENSITY=SCALAR(Rho);
    EA = SCALAR(LSDYNA_EA);
    EB = SCALAR(LSDYNA_EB);
    EC = SCALAR(LSDYNA_EC);
    PRBA = SCALAR(LSDYNA_PRBA);
    PRCA = SCALAR(LSDYNA_PRCA);
    PRCB = SCALAR(LSDYNA_PRCB);
    GAB = SCALAR(LSDYNA_GAB);
    GBC = SCALAR(LSDYNA_GBC);
    GCA = SCALAR(LSDYNA_GCA);
    SHEAR_MODULUS = MAX(GAB,GBC,GCA);
    BULK_MODULUS = SCALAR(LSD_MAT_KFAIL);
    YOUNG_MODULUS = MAX(EA,EB,EC);
    POISSON_RATIO = MAX(PRBA,PRCA,PRCB);
public:
    //SOUND_SPEED is speed for ISDO = 0 and 1
    SOUND_SPEED             = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
    SOUND_SPEED_ISDO_2      = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
public:
    SOUND_SPEED_SOLID       = EVAL(((4*SHEAR_MODULUS/3+BULK_MODULUS)/MASS_DENSITY)^0.5);
}

DEFAULTS(COMMON)
{
    LSD_SOFT        = 1.0;
    LSD_YCFAC       = 2.0;
}

GUI(COMMON) 
{
     ASSIGN(KEYWORD_STR, "*MAT_ENHANCED_COMPOSITE_DAMAGE");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
       {
             ASSIGN(KEYWORD_STR, "_TITLE");
       } 
     SCALAR(Rho)                     { DIMENSION="density";}
     SCALAR(LSDYNA_EA)               {DIMENSION="pressure";}
     SCALAR(LSDYNA_EB)               {DIMENSION="pressure";}
     SCALAR(LSDYNA_EC)               {DIMENSION="pressure";}
     SCALAR(LSDYNA_PRBA)             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_PRCA)             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_PRCB)             {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_GAB)              {DIMENSION="pressure";}
     SCALAR(LSDYNA_GBC)              {DIMENSION="pressure";}
     SCALAR(LSDYNA_GCA)              {DIMENSION="pressure";}
     RADIO(axisOptFlag)
     {
        ADD(1, "0.0: Locally orthotropic: axis given by nodes 1,2 and 4");
        ADD(2, "2.0: Globally orthotropic: axis given by vectors");
        ADD(3, "3.0: Locally orthotropic: axis given by rotating the material axes by an angle BETA");
        ADD(4, "4.0: locally orthotropic in cylindrical coordinate system with the material axes determined by a vector v, and an originating point p");
        ADD(5, "By System");
     }
     if(axisOptFlag == 5)
     {
        DATA(LSD_SYSTEM);
     }

    if(axisOptFlag == 1 || axisOptFlag == 3)
    {
        SCALAR(LSD_MANGLE)              {DIMENSION="a";}
    }
    if(axisOptFlag == 2)
    {
        DATA(LSD_NODE3);
        DATA(LSD_NODE4);
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],FALSE);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],FALSE);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],FALSE);
        DATA(LSD_NODE7);                
        DATA(LSD_NODE8);                
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],FALSE);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],FALSE);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],FALSE);
    }
    if(axisOptFlag == 3)
    {
        DATA(LSD_NODE5);
        DATA(LSD_NODE6);
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],FALSE);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],FALSE);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],FALSE);
    }
    SCALAR(LSD_DFAILM)                  {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_DFAILS)                  {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSDYNA_TFAIL)                {DIMENSION="t";}
    SCALAR(LSD_MAT_ALPH)                {DIMENSION="pressure";}
    SCALAR(LSD_SOFT)                    {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_FBRT)                    {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_YCFAC)                   {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_DFAILT)                  {DIMENSION="DIMENSIONLESS";}
    if(LSD_DFAILT > 0.0)
    {
        SCALAR(LSD_DFAILC)              {DIMENSION="DIMENSIONLESS";}
    }
    SCALAR(LSD_EFS)                     {DIMENSION="DIMENSIONLESS";}
    SCALAR(LSD_MAT_XC)                      {DIMENSION="pressure";}
    SCALAR(LSD_MAT_XT)                  {DIMENSION="pressure";}
    SCALAR(LSD_MAT_YC)                  {DIMENSION="pressure";}
    SCALAR(LSD_MAT_YT)                  {DIMENSION="pressure";}
    SCALAR(LSD_MAT_SC)                  {DIMENSION="pressure";}
    RADIO(LSD_CRIT)
    {
        ADD(54.0, "54.0");
        ADD(55.0, "55.0");
    }
    if(LSD_CRIT == 54)
    {
        SCALAR(LSD_BETA)                    {DIMENSION="DIMENSIONLESS";}
    }
    FLAG(M54_55_OPT_CARD7);
    if(M54_55_OPT_CARD7 == TRUE)
    {
        SCALAR(LSD_MAT_PFL)             {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT_EPSF)            {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT_EPSR)            {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT_TSMD)            {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT_SOFT2)           {DIMENSION="DIMENSIONLESS";}
        FLAG(M54_55_OPT_CARD8);
    }
    if(M54_55_OPT_CARD7 == TRUE && M54_55_OPT_CARD8 == TRUE)
    {
        SCALAR(LSD_MAT_SLIMT1)          {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT_SLIMC1)          {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT_SLIMT2)          {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT_SLIMC2)          {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT_SLIMS)           {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT_NCYRED)          {DIMENSION="DIMENSIONLESS";}
        SCALAR(LSD_MAT_SOFTG)           {DIMENSION="DIMENSIONLESS";}
    }
    RADIO(LSD_M54_55_TI)
    {
        ADD(0.0, "0.0: Standard unidirectional behavior");
        ADD(1.0, "1.0: Transversal isotropic behavior");
    }

}

// File format
FORMAT(Keyword971) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, IMPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, EXPORT);

    if(LSD_NODE4 != NONE && LSD_NODE3 != NONE)
    {
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],EXPORT);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],EXPORT);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],EXPORT);
    }
    if(LSD_NODE8 != NONE && LSD_NODE7 != NONE)
    {
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],EXPORT);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],EXPORT);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],EXPORT);
    }
    if(LSD_NODE6 != NONE && LSD_NODE5 != NONE)
    {
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],EXPORT);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],EXPORT);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],EXPORT);
    }

    if(axisOptFlag == 1 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,0.0,EXPORT);
    }
    else if(axisOptFlag == 2 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,2.0,EXPORT);
    }
    else if(axisOptFlag == 3 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,3.0,EXPORT);
    }
    else if(axisOptFlag == 4 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,4.0,EXPORT);
    }

    COMMENT("$      MID       RHO        EA        EB        EC      PRBA      PRCA      PRCB");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSDYNA_EA,LSDYNA_EB,LSDYNA_EC,LSDYNA_PRBA,LSDYNA_PRCA,LSDYNA_PRCB);

    COMMENT("$      GAB       GBC       GCA        KF      AOPT");
    if(IO_FLAG == 2)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 4)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,LOC_AOPT);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM)); 
        }
    }
    CARD_PREREAD("%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,LOC_AOPT);
    if(LOC_AOPT == 0.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,1,IMPORT);
    }
    else if(LOC_AOPT == 2.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,2,IMPORT);
    }
    else if(LOC_AOPT == 3.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,3,IMPORT);
    }

    if(IO_FLAG == 1)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 4)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,LOC_AOPT);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM)); 
            ASSIGN(axisOptFlag, 4, IMPORT);
        }
    }

    COMMENT("$                                     A1        A2        A3");
    if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
    }
    else
    {
        BLANK;
    }

    COMMENT("$       V1        V2        V3        D1        D2        D3    DFAILM    DFAILS");
    if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3,LSD_DFAILM,LSD_DFAILS);
    }
    else if(axisOptFlag == 3)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,LSD_DFAILM,LSD_DFAILS);
    }
    else
    {
        CARD("%10s%10s%10s%10s%10s%10s%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_DFAILM,LSD_DFAILS);
    }

    COMMENT("$    TFAIL      ALPH      SOFT      FBRT     YCFAC    DFAILT    DFAILC       EFS");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_TFAIL,LSD_MAT_ALPH,LSD_SOFT,LSD_FBRT,LSD_YCFAC,LSD_DFAILT,LSD_DFAILC,LSD_EFS);

    COMMENT("$       XC        XT        YC        YT        SC      CRIT      BETA");
    CARD_PREREAD("%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_CRIT);
    if(LSD_CRIT == 54)
    {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_XC,LSD_MAT_XT,LSD_MAT_YC,LSD_MAT_YT,LSD_MAT_SC,LSD_CRIT,LSD_BETA);
    }
    else
    {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_XC,LSD_MAT_XT,LSD_MAT_YC,LSD_MAT_YT,LSD_MAT_SC,LSD_CRIT);
    }

    //IO of optional cards 7 and 8
    if(M54_55_OPT_CARD7 == TRUE)
    {
        COMMENT("$      PFL      EPSF      EPSR      TSMD     SOFT2");
    }
    FREE_CARD(M54_55_OPT_CARD7,"%10lg%10lg%10lg%10lg%10lg",LSD_MAT_PFL,LSD_MAT_EPSF,LSD_MAT_EPSR,LSD_MAT_TSMD,LSD_MAT_SOFT2);

    if(M54_55_OPT_CARD7 == TRUE && M54_55_OPT_CARD8 == TRUE)
    {
        COMMENT("$   SLIMT1    SLIMC1    SLIMT2    SLIMC2     SLIMS    NCYRED     SOFTG");
    }
    if(M54_55_OPT_CARD7 == TRUE)
    {
        //Read/Export card 8 only if card 7 is present.
        FREE_CARD(M54_55_OPT_CARD8,"%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_SLIMT1,LSD_MAT_SLIMC1,LSD_MAT_SLIMT2,LSD_MAT_SLIMC2,LSD_MAT_SLIMS,LSD_MAT_NCYRED,LSD_MAT_SOFTG);
    }
}

FORMAT(Keyword971_R6.1) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, IMPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, EXPORT);

    //
    if(LSD_NODE4 != NONE && LSD_NODE3 != NONE)
    {
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],EXPORT);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],EXPORT);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],EXPORT);
    }
    if(LSD_NODE8 != NONE && LSD_NODE7 != NONE)
    {
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],EXPORT);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],EXPORT);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],EXPORT);
    }
    if(LSD_NODE6 != NONE && LSD_NODE5 != NONE)
    {
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],EXPORT);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],EXPORT);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],EXPORT);
    }

    if(axisOptFlag == 1 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,0.0,EXPORT);
    }
    else if(axisOptFlag == 2 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,2.0,EXPORT);
    }
    else if(axisOptFlag == 3 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,3.0,EXPORT);
    }
    else if(axisOptFlag == 4 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,4.0,EXPORT);
    }
    //
    COMMENT("$      MID       RHO        EA        EB        EC      PRBA      PRCA      PRCB");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSDYNA_EA,LSDYNA_EB,LSDYNA_EC,LSDYNA_PRBA,LSDYNA_PRCA,LSDYNA_PRCB);
    //
    COMMENT("$      GAB       GBC       GCA        KF      AOPT");
    if(IO_FLAG == 2)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 4)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,LOC_AOPT);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM)); 
        }
    }
    CARD_PREREAD("%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,LOC_AOPT);
    if(LOC_AOPT == 0.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,1,IMPORT);
    }
    else if(LOC_AOPT == 2.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,2,IMPORT);
    }
    else if(LOC_AOPT == 3.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,3,IMPORT);
    }

    if(IO_FLAG == 1)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 4)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,LOC_AOPT);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM)); 
            ASSIGN(axisOptFlag, 4, IMPORT);
        }
    }
    //
    COMMENT("$                                     A1        A2        A3    MANGLE");
    if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
    }
    else if(axisOptFlag == 1 || axisOptFlag == 3)
    {
        CARD("%10s%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_MANGLE);
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$       V1        V2        V3        D1        D2        D3    DFAILM    DFAILS");
    if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3,CELL_COND(if(IO_FLAG == 1) LSD_DFAILM; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILM;),CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
    }
    else if(axisOptFlag == 3)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,CELL_COND(if(IO_FLAG == 1) LSD_DFAILM; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILM;),CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
    }
    else
    {
        CARD("%10s%10s%10s%10s%10s%10s%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,CELL_COND(if(IO_FLAG == 1) LSD_DFAILM; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILM;),CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
    }
    //
    COMMENT("$    TFAIL      ALPH      SOFT      FBRT     YCFAC    DFAILT    DFAILC       EFS");
    CARD_PREREAD("%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_DFAILT);
    if(LSD_DFAILT > 0.0)
    {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_TFAIL,LSD_MAT_ALPH,LSD_SOFT,LSD_FBRT,LSD_YCFAC,LSD_DFAILT,LSD_DFAILC,LSD_EFS);
    }
    else
    {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10s%10lg",LSDYNA_TFAIL,LSD_MAT_ALPH,LSD_SOFT,LSD_FBRT,LSD_YCFAC,LSD_DFAILT,_BLANK_,LSD_EFS);
    }
    //
    COMMENT("$       XC        XT        YC        YT        SC      CRIT      BETA");
    CARD_PREREAD("%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_CRIT);
    if(LSD_CRIT == 54)
    {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_XC,LSD_MAT_XT,LSD_MAT_YC,LSD_MAT_YT,LSD_MAT_SC,LSD_CRIT,LSD_BETA);
    }
    else
    {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_XC,LSD_MAT_XT,LSD_MAT_YC,LSD_MAT_YT,LSD_MAT_SC,LSD_CRIT);
    }

    //IO of optional cards 7 and 8
    if(M54_55_OPT_CARD7 == TRUE)
    {
        COMMENT("$      PFL      EPSF      EPSR      TSMD     SOFT2");
    }
    FREE_CARD(M54_55_OPT_CARD7,"%10lg%10lg%10lg%10lg%10lg",LSD_MAT_PFL,LSD_MAT_EPSF,LSD_MAT_EPSR,LSD_MAT_TSMD,LSD_MAT_SOFT2);

    //card8
    if(M54_55_OPT_CARD7 == TRUE && M54_55_OPT_CARD8 == TRUE)
    {
        COMMENT("$   SLIMT1    SLIMC1    SLIMT2    SLIMC2     SLIMS    NCYRED     SOFTG");
    }
    if(M54_55_OPT_CARD7 == TRUE)
    {
        //Read/Export card 8 only if card 7 is present.
        FREE_CARD(M54_55_OPT_CARD8,"%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_SLIMT1,LSD_MAT_SLIMC1,LSD_MAT_SLIMT2,LSD_MAT_SLIMC2,LSD_MAT_SLIMS,LSD_MAT_NCYRED,LSD_MAT_SOFTG);
    }
}

FORMAT(Keyword971_R7.1) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, IMPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, EXPORT);

    //
    if(LSD_NODE4 != NONE && LSD_NODE3 != NONE)
    {
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],EXPORT);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],EXPORT);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],EXPORT);
    }
    if(LSD_NODE8 != NONE && LSD_NODE7 != NONE)
    {
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],EXPORT);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],EXPORT);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],EXPORT);
    }
    if(LSD_NODE6 != NONE && LSD_NODE5 != NONE)
    {
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],EXPORT);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],EXPORT);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],EXPORT);
    }

    if(axisOptFlag == 1 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,0.0,EXPORT);
    }
    else if(axisOptFlag == 2 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,2.0,EXPORT);
    }
    else if(axisOptFlag == 3 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,3.0,EXPORT);
    }
    else if(axisOptFlag == 4 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,4.0,EXPORT);
    }
    //
    COMMENT("$      MID       RHO        EA        EB        EC      PRBA      PRCA      PRCB");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSDYNA_EA,LSDYNA_EB,LSDYNA_EC,LSDYNA_PRBA,LSDYNA_PRCA,LSDYNA_PRCB);
    //
    COMMENT("$      GAB       GBC       GCA        KF      AOPT");
    if(IO_FLAG == 2)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 4)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,LOC_AOPT);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM)); 
        }
    }
    CARD_PREREAD("%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,LOC_AOPT);
    if(LOC_AOPT == 0.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,1,IMPORT);
    }
    else if(LOC_AOPT == 2.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,2,IMPORT);
    }
    else if(LOC_AOPT == 3.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,3,IMPORT);
    }

    if(IO_FLAG == 1)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 4)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,LOC_AOPT);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM)); 
            ASSIGN(axisOptFlag, 4, IMPORT);
        }
    }
    //
    COMMENT("$                                     A1        A2        A3    MANGLE");
    if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
    }
    else if(axisOptFlag == 1 || axisOptFlag == 3)
    {
        CARD("%10s%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_MANGLE);
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$       V1        V2        V3        D1        D2        D3    DFAILM    DFAILS");
    if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3,CELL_COND(if(IO_FLAG == 1) LSD_DFAILM; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILM;),CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
    }
    else if(axisOptFlag == 3)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,CELL_COND(if(IO_FLAG == 1) LSD_DFAILM; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILM;),CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
    }
    else
    {
        CARD("%10s%10s%10s%10s%10s%10s%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,CELL_COND(if(IO_FLAG == 1) LSD_DFAILM; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILM;),CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
    }
    //
    COMMENT("$    TFAIL      ALPH      SOFT      FBRT     YCFAC    DFAILT    DFAILC       EFS");
    CARD_PREREAD("%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_DFAILT);
    if(LSD_DFAILT > 0.0)
    {
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_TFAIL,LSD_MAT_ALPH,LSD_SOFT,LSD_FBRT,LSD_YCFAC,LSD_DFAILT,LSD_DFAILC,LSD_EFS);
    }
    else
    {
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10s%10lg",LSDYNA_TFAIL,LSD_MAT_ALPH,LSD_SOFT,LSD_FBRT,LSD_YCFAC,LSD_DFAILT,_BLANK_,LSD_EFS);
    }
    //
    COMMENT("$       XC        XT        YC        YT        SC      CRIT      BETA");
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_XC,LSD_MAT_XT,LSD_MAT_YC,LSD_MAT_YT,LSD_MAT_SC,LSD_CRIT,LSD_BETA);

    //card7
    if(M54_55_OPT_CARD7 == TRUE)
    {
        COMMENT("$      PFL      EPSF      EPSR      TSMD     SOFT2");
    }
    FREE_CARD(M54_55_OPT_CARD7,"%10lg%10lg%10lg%10lg%10lg",LSD_MAT_PFL,LSD_MAT_EPSF,LSD_MAT_EPSR,LSD_MAT_TSMD,LSD_MAT_SOFT2);

    //card8
    if(M54_55_OPT_CARD7 == TRUE && M54_55_OPT_CARD8 == TRUE)
    {
        COMMENT("$   SLIMT1    SLIMC1    SLIMT2    SLIMC2     SLIMS    NCYRED     SOFTG");
    }
    if(M54_55_OPT_CARD7 == TRUE)
    {
        //Read/Export card 8 only if card 7 is present.
        FREE_CARD(M54_55_OPT_CARD8,"%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_SLIMT1,LSD_MAT_SLIMC1,LSD_MAT_SLIMT2,LSD_MAT_SLIMC2,LSD_MAT_SLIMS,LSD_MAT_NCYRED,LSD_MAT_SOFTG);
    }

    //card9
    if(M54_55_OPT_CARD7 == TRUE && M54_55_OPT_CARD8 == TRUE && M54_55_OPT_CARD9 == TRUE && LSD_CRIT == 54)
    {
        COMMENT("$     LCXC      LCXT      LCYC      LCYT      LCSC        DT");
    }
    if(M54_55_OPT_CARD7 == TRUE && M54_55_OPT_CARD8 == TRUE && LSD_CRIT == 54)
    {
        //Read/Export card 9 only if card 7 and 8 is present.
        FREE_CARD(M54_55_OPT_CARD9,"%10d%10d%10d%10d%10d%10lg",LSD_LCXC,LSD_LCXT,LSD_LCYC,LSD_LCYT,LSD_LCSC,LSDYNA_DT);
    }
}

FORMAT(Keyword971_R8.0) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, IMPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, EXPORT);

    //
    if(LSD_NODE4 != NONE && LSD_NODE3 != NONE)
    {
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],EXPORT);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],EXPORT);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],EXPORT);
    }
    if(LSD_NODE8 != NONE && LSD_NODE7 != NONE)
    {
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],EXPORT);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],EXPORT);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],EXPORT);
    }
    if(LSD_NODE6 != NONE && LSD_NODE5 != NONE)
    {
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],EXPORT);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],EXPORT);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],EXPORT);
    }

    if(axisOptFlag == 1 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,0.0,EXPORT);
    }
    else if(axisOptFlag == 2 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,2.0,EXPORT);
    }
    else if(axisOptFlag == 3 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,3.0,EXPORT);
    }
    else if(axisOptFlag == 4 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,4.0,EXPORT);
    }
      //
      COMMENT("$      MID       RHO        EA        EB        EC      PRBA      PRCA      PRCB");
      CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSDYNA_EA,LSDYNA_EB,LSDYNA_EC,LSDYNA_PRBA,LSDYNA_PRCA,LSDYNA_PRCB);
      //
      COMMENT("$      GAB       GBC       GCA        KF      AOPT      2WAY");
      if(IO_FLAG == 2)
      {
            if(axisOptFlag >= 1 && axisOptFlag < 4)
            {
                CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,LOC_AOPT,LSD_2WAY);
            }
            else
            {
                CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM),LSD_2WAY);
            }
      }
      CARD_PREREAD("%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,LOC_AOPT);
      if(LOC_AOPT == 0.0 && IO_FLAG == 1)
      {
            ASSIGN(axisOptFlag,1,IMPORT);
      }
      else if(LOC_AOPT == 2.0 && IO_FLAG == 1)
      {
            ASSIGN(axisOptFlag,2,IMPORT);
      }
      else if(LOC_AOPT == 3.0 && IO_FLAG == 1)
      {
            ASSIGN(axisOptFlag,3,IMPORT);
      }

      if(IO_FLAG == 1)
      {
            if(axisOptFlag >= 1 && axisOptFlag < 4)
            {
                CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,LOC_AOPT,LSD_2WAY);
            }
            else
            {
                CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM),LSD_2WAY); 
                ASSIGN(axisOptFlag, 4, IMPORT);
            }
      }
      //
      COMMENT("$                                     A1        A2        A3    MANGLE");
      if(axisOptFlag == 2)
      {
         CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
      }
      else if(axisOptFlag == 1 || axisOptFlag == 3)
      {
         CARD("%10s%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_MANGLE);
      }
      else
      {
         BLANK;
      }
      //
      COMMENT("$       V1        V2        V3        D1        D2        D3    DFAILM    DFAILS");
      if(axisOptFlag == 2)
      {
            if(LSD_2WAY != 1.0)
            {
                CARD("%10s%10s%10s%10lg%10lg%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3,CELL_COND(if(IO_FLAG == 1) LSD_DFAILM; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILM;),
                                                                                                            CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
            }
            else
            {
                CARD("%10s%10s%10s%10lg%10lg%10lg%10s%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3,_BLANK_,CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
            }
      }
      else if(axisOptFlag == 3)
      {
            if(LSD_2WAY != 1.0)
            {
                CARD("%10lg%10lg%10lg%10s%10s%10s%10lg%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,CELL_COND(if(IO_FLAG == 1) LSD_DFAILM; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILM;),
                                                                                                            CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
            }
            else
            {
                CARD("%10lg%10lg%10lg%10s%10s%10s%10s%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,_BLANK_,CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
            }
      }
      else
      {
            if(LSD_2WAY != 1.0)
            {
                CARD("%10s%10s%10s%10s%10s%10s%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,CELL_COND(if(IO_FLAG == 1) LSD_DFAILM; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILM;),
                                                                                                            CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
            }
            else
            {
                CARD("%10s%10s%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
            }
      }
      //
      COMMENT("$    TFAIL      ALPH      SOFT      FBRT     YCFAC    DFAILT    DFAILC       EFS");
      CARD_PREREAD("%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_DFAILT);
      if(LSD_DFAILT > 0.0)
      {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_TFAIL,LSD_MAT_ALPH,LSD_SOFT,LSD_FBRT,LSD_YCFAC,LSD_DFAILT,LSD_DFAILC,LSD_EFS);
      }
      else
      {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10s%10lg",LSDYNA_TFAIL,LSD_MAT_ALPH,LSD_SOFT,LSD_FBRT,LSD_YCFAC,LSD_DFAILT,_BLANK_,LSD_EFS);
      }
      //
      COMMENT("$       XC        XT        YC        YT        SC      CRIT      BETA");
      CARD_PREREAD("%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_CRIT);
    if(LSD_CRIT == 54)
    {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_XC,LSD_MAT_XT,LSD_MAT_YC,LSD_MAT_YT,LSD_MAT_SC,LSD_CRIT,LSD_BETA);
    }
    else
    {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_XC,LSD_MAT_XT,LSD_MAT_YC,LSD_MAT_YT,LSD_MAT_SC,LSD_CRIT);
    }

    //Handling cards 7, 8, 9
    //card7
    if(LSD_CRIT == 54 && M54_55_OPT_CARD7 == TRUE)
    {
        COMMENT("$      PFL      EPSF      EPSR      TSMD     SOFT2");
    }
    if(LSD_CRIT == 54)
    {
        FREE_CARD(M54_55_OPT_CARD7,"%10lg%10lg%10lg%10lg%10lg",LSD_MAT_PFL,LSD_MAT_EPSF,LSD_MAT_EPSR,LSD_MAT_TSMD,LSD_MAT_SOFT2);
    }

    //card8
    if(LSD_CRIT == 54 && M54_55_OPT_CARD7 == TRUE && M54_55_OPT_CARD8 == TRUE)
    {
        COMMENT("$   SLIMT1    SLIMC1    SLIMT2    SLIMC2     SLIMS    NCYRED     SOFTG");
    }
    if(LSD_CRIT == 54 && M54_55_OPT_CARD7 == TRUE)
    {
        //Read/Export card 8 only if card 7 is present
        FREE_CARD(M54_55_OPT_CARD8,"%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_SLIMT1,LSD_MAT_SLIMC1,LSD_MAT_SLIMT2,LSD_MAT_SLIMC2,LSD_MAT_SLIMS,LSD_MAT_NCYRED,LSD_MAT_SOFTG);
    }

    //card9
    if(LSD_CRIT == 54 && M54_55_OPT_CARD7 == TRUE && M54_55_OPT_CARD8 == TRUE && M54_55_OPT_CARD9 == TRUE)
    {
        COMMENT("$     LCXC      LCXT      LCYC      LCYT      LCSC        DT");
    }
    if(LSD_CRIT == 54 && M54_55_OPT_CARD7 == TRUE && M54_55_OPT_CARD8 == TRUE)
    {
        //Read/Export card 9 only if card 7 and 8 are present
        FREE_CARD(M54_55_OPT_CARD9,"%10d%10d%10d%10d%10d%10lg",LSD_LCXC,LSD_LCXT,LSD_LCYC,LSD_LCYT,LSD_LCSC,LSDYNA_DT);
    }
}


FORMAT(Keyword971_R9.0) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, IMPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, EXPORT);

    //
    if(LSD_NODE4 != NONE && LSD_NODE3 != NONE)
    {
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],EXPORT);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],EXPORT);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],EXPORT);
    }
    if(LSD_NODE8 != NONE && LSD_NODE7 != NONE)
    {
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],EXPORT);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],EXPORT);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],EXPORT);
    }
    if(LSD_NODE6 != NONE && LSD_NODE5 != NONE)
    {
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],EXPORT);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],EXPORT);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],EXPORT);
    }

    if(axisOptFlag == 1 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,0.0,EXPORT);
    }
    else if(axisOptFlag == 2 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,2.0,EXPORT);
    }
    else if(axisOptFlag == 3 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,3.0,EXPORT);
    }
    else if(axisOptFlag == 4 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,4.0,EXPORT);
    }
    else if(axisOptFlag == 5 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,5.0,EXPORT);
    }
    //
    COMMENT("$      MID       RHO        EA        EB        EC      PRBA      PRCA      PRCB");
    CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSDYNA_EA,LSDYNA_EB,LSDYNA_EC,LSDYNA_PRBA,LSDYNA_PRCA,LSDYNA_PRCB);
    //
    COMMENT("$      GAB       GBC       GCA        KF      AOPT      2WAY");
    if(IO_FLAG == 2)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 5)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,LOC_AOPT,LSD_2WAY);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM),LSD_2WAY); 
        }
    }
    CARD_PREREAD("%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,LOC_AOPT);
    if(LOC_AOPT == 0.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,1,IMPORT);
    }
    else if(LOC_AOPT == 2.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,2,IMPORT);
    }
    else if(LOC_AOPT == 3.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,3,IMPORT);
    }
    else if(LOC_AOPT == 4.0 && IO_FLAG == 1)
    {
        ASSIGN(axisOptFlag,4,IMPORT);
    }      

    if(IO_FLAG == 1)
    {
        if(axisOptFlag >= 1 && axisOptFlag < 5)
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,LOC_AOPT,LSD_2WAY);
        }
        else
        {
            CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM),LSD_2WAY); 
            ASSIGN(axisOptFlag, 5, IMPORT);
        }
    }
    //
    COMMENT("$                                     A1        A2        A3    MANGLE");
    if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
    }
    else if(axisOptFlag == 1 || axisOptFlag == 3)
    {
        CARD("%10s%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_MANGLE);
    }
    else
    {
        BLANK;
    }
    //
    COMMENT("$       V1        V2        V3        D1        D2        D3    DFAILM    DFAILS");
    if(axisOptFlag == 2)
    {
        CARD("%10s%10s%10s%10lg%10lg%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3,CELL_COND(if(IO_FLAG == 1) LSD_DFAILM; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILM;),
                                                                                                    CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
    }
    else if(axisOptFlag == 3)
    {
        CARD("%10lg%10lg%10lg%10s%10s%10s%10lg%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,CELL_COND(if(IO_FLAG == 1) LSD_DFAILM; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILM;),
                                                                                                    CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
    }
    else
    {
        CARD("%10s%10s%10s%10s%10s%10s%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,CELL_COND(if(IO_FLAG == 1) LSD_DFAILM; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILM;),
                                                                                    CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
    }
    //
    COMMENT("$    TFAIL      ALPH      SOFT      FBRT     YCFAC    DFAILT    DFAILC       EFS");
    CARD_PREREAD("%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_DFAILT);
    if(LSD_DFAILT > 0.0)
    {
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_TFAIL,LSD_MAT_ALPH,LSD_SOFT,LSD_FBRT,LSD_YCFAC,LSD_DFAILT,LSD_DFAILC,LSD_EFS);
    }
    else
    {
    CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10s%10lg",LSDYNA_TFAIL,LSD_MAT_ALPH,LSD_SOFT,LSD_FBRT,LSD_YCFAC,LSD_DFAILT,_BLANK_,LSD_EFS);
    }
    //
    COMMENT("$       XC        XT        YC        YT        SC      CRIT      BETA");
    CARD_PREREAD("%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_CRIT);
    if(LSD_CRIT == 54)
    {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_XC,LSD_MAT_XT,LSD_MAT_YC,LSD_MAT_YT,LSD_MAT_SC,LSD_CRIT,LSD_BETA);
    }
    else
    {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_XC,LSD_MAT_XT,LSD_MAT_YC,LSD_MAT_YT,LSD_MAT_SC,LSD_CRIT);
    }

    //Handling of cards 7, 8, 9
    //card7
    if(LSD_CRIT == 54 && M54_55_OPT_CARD7 == TRUE)
    {
        COMMENT("$      PFL      EPSF      EPSR      TSMD     SOFT2");
    }
    if(LSD_CRIT == 54)
    {
        FREE_CARD(M54_55_OPT_CARD7,"%10lg%10lg%10lg%10lg%10lg",LSD_MAT_PFL,LSD_MAT_EPSF,LSD_MAT_EPSR,LSD_MAT_TSMD,LSD_MAT_SOFT2);
    }

    //card8
    if(LSD_CRIT == 54 && M54_55_OPT_CARD7 == TRUE && M54_55_OPT_CARD8 == TRUE)
    {
        COMMENT("$   SLIMT1    SLIMC1    SLIMT2    SLIMC2     SLIMS    NCYRED     SOFTG");
    }
    if(LSD_CRIT == 54 && M54_55_OPT_CARD7 == TRUE)
    {
        //Read/Export card 8 only if card 7 is present.
        FREE_CARD(M54_55_OPT_CARD8,"%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_SLIMT1,LSD_MAT_SLIMC1,LSD_MAT_SLIMT2,LSD_MAT_SLIMC2,LSD_MAT_SLIMS,LSD_MAT_NCYRED,LSD_MAT_SOFTG);
    }

    //card9
    if(LSD_CRIT == 54 && M54_55_OPT_CARD7 == TRUE && M54_55_OPT_CARD8 == TRUE && M54_55_OPT_CARD9 == TRUE)
    {
        COMMENT("$     LCXC      LCXT      LCYC      LCYT      LCSC        DT");
    }
    if(LSD_CRIT == 54 && M54_55_OPT_CARD7 == TRUE && M54_55_OPT_CARD8 == TRUE)
    {
        //Read/Export card 9 only if card 7 and 8 are present.
        FREE_CARD(M54_55_OPT_CARD9,"%10d%10d%10d%10d%10d%10lg",LSD_LCXC,LSD_LCXT,LSD_LCYC,LSD_LCYT,LSD_LCSC,LSDYNA_DT);
    }
}

FORMAT(Keyword971_R10.1) 
{
    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 2, EXPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, IMPORT);
    ASSIGN(AOPT_SKEW_FLAG, 1, EXPORT);

    //
    if(LSD_NODE4 != NONE && LSD_NODE3 != NONE)
    {
        ASSIGN(LSDYNA_A1,[@getentityvalue(nodes,$LSD_NODE4,x) - @getentityvalue(nodes,$LSD_NODE3,x)],EXPORT);
        ASSIGN(LSDYNA_A2,[@getentityvalue(nodes,$LSD_NODE4,y) - @getentityvalue(nodes,$LSD_NODE3,y)],EXPORT);
        ASSIGN(LSDYNA_A3,[@getentityvalue(nodes,$LSD_NODE4,z) - @getentityvalue(nodes,$LSD_NODE3,z)],EXPORT);
    }
    if(LSD_NODE8 != NONE && LSD_NODE7 != NONE)
    {
        ASSIGN(LSDYNA_D1,[@getentityvalue(nodes,$LSD_NODE8,x) - @getentityvalue(nodes,$LSD_NODE7,x)],EXPORT);
        ASSIGN(LSDYNA_D2,[@getentityvalue(nodes,$LSD_NODE8,y) - @getentityvalue(nodes,$LSD_NODE7,y)],EXPORT);
        ASSIGN(LSDYNA_D3,[@getentityvalue(nodes,$LSD_NODE8,z) - @getentityvalue(nodes,$LSD_NODE7,z)],EXPORT);
    }
    if(LSD_NODE6 != NONE && LSD_NODE5 != NONE)
    {
        ASSIGN(LSDYNA_V1,[@getentityvalue(nodes,$LSD_NODE6,x) - @getentityvalue(nodes,$LSD_NODE5,x)],EXPORT);
        ASSIGN(LSDYNA_V2,[@getentityvalue(nodes,$LSD_NODE6,y) - @getentityvalue(nodes,$LSD_NODE5,y)],EXPORT);
        ASSIGN(LSDYNA_V3,[@getentityvalue(nodes,$LSD_NODE6,z) - @getentityvalue(nodes,$LSD_NODE5,z)],EXPORT);
    }

    if(axisOptFlag == 1 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,0.0,EXPORT);
    }
    else if(axisOptFlag == 2 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,2.0,EXPORT);
    }
    else if(axisOptFlag == 3 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,3.0,EXPORT);
    }
    else if(axisOptFlag == 4 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,4.0,EXPORT);
    }
    else if(axisOptFlag == 5 && IO_FLAG == 2)
    {
        ASSIGN(LOC_AOPT,5.0,EXPORT);
    }
     //
      COMMENT("$      MID       RHO        EA        EB        EC      PRBA      PRCA      PRCB");
      CARD("%10d%10lg%10lg%10lg%10lg%10lg%10lg%10lg",_ID_,Rho,LSDYNA_EA,LSDYNA_EB,LSDYNA_EC,LSDYNA_PRBA,LSDYNA_PRCA,LSDYNA_PRCB);
      //
      COMMENT("$      GAB       GBC       GCA        KF      AOPT      2WAY        TI");
      if(IO_FLAG == 2)
      {
            if(axisOptFlag >= 1 && axisOptFlag < 5)
            {
                CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,LOC_AOPT,LSD_2WAY,LSD_M54_55_TI);
            }
            else
            {
                CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,LOC_AOPT,LSD_SYSTEM),LSD_2WAY,LSD_M54_55_TI); 
            }
      }
      CARD_PREREAD("%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,LOC_AOPT);
      if(LOC_AOPT == 0.0 && IO_FLAG == 1)
      {
            ASSIGN(axisOptFlag,1,IMPORT);
      }
      else if(LOC_AOPT == 2.0 && IO_FLAG == 1)
      {
            ASSIGN(axisOptFlag,2,IMPORT);
      }
      else if(LOC_AOPT == 3.0 && IO_FLAG == 1)
      {
            ASSIGN(axisOptFlag,3,IMPORT);
      }
      else if(LOC_AOPT == 4.0 && IO_FLAG == 1)
      {
            ASSIGN(axisOptFlag,4,IMPORT);
      }

      if(IO_FLAG == 1)
      {
            if(axisOptFlag >= 1 && axisOptFlag < 5)
            {
                CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,LOC_AOPT,LSD_2WAY,LSD_M54_55_TI);
            }
            else
            {
                CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_GAB,LSDYNA_GBC,LSDYNA_GCA,LSD_MAT_KFAIL,SCALAR_OR_OBJECT(AOPT_SKEW_FLAG,axisOptFlag,LSD_SYSTEM),LSD_2WAY,LSD_M54_55_TI); 
                ASSIGN(axisOptFlag, 5, IMPORT);
            }
      }
      //
      COMMENT("$                                     A1        A2        A3    MANGLE");
      if(axisOptFlag == 2)
      {
         CARD("%10s%10s%10s%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_A1,LSDYNA_A2,LSDYNA_A3);
      }
      else if(axisOptFlag == 1 || axisOptFlag == 3)
      {
         CARD("%10s%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_MANGLE);
      }
      else
      {
         BLANK;
      }
      //
      COMMENT("$       V1        V2        V3        D1        D2        D3    DFAILM    DFAILS");
      if(axisOptFlag == 2)
      {
          CARD("%10s%10s%10s%10lg%10lg%10lg%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,LSDYNA_D1,LSDYNA_D2,LSDYNA_D3,CELL_COND(if(IO_FLAG == 1) LSD_DFAILM; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILM;),CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
      }
      else if(axisOptFlag == 3)
      {
          CARD("%10lg%10lg%10lg%10s%10s%10s%10lg%10lg",LSDYNA_V1,LSDYNA_V2,LSDYNA_V3,_BLANK_,_BLANK_,_BLANK_,CELL_COND(if(IO_FLAG == 1) LSD_DFAILM; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILM;),CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
      }
      else
      {
          CARD("%10s%10s%10s%10s%10s%10s%10lg%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,CELL_COND(if(IO_FLAG == 1) LSD_DFAILM; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILM;),CELL_COND(if(IO_FLAG == 1) LSD_DFAILS; else if(IO_FLAG == 2 && LSD_DFAILT>0.0) LSD_DFAILS;));
      }
      //
      COMMENT("$    TFAIL      ALPH      SOFT      FBRT     YCFAC    DFAILT    DFAILC       EFS");
      CARD_PREREAD("%10s%10s%10s%10s%10s%10lg",_BLANK_,_BLANK_,_BLANK_,_BLANK_,_BLANK_,LSD_DFAILT);
      if(LSD_DFAILT > 0.0)
      {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSDYNA_TFAIL,LSD_MAT_ALPH,LSD_SOFT,LSD_FBRT,LSD_YCFAC,LSD_DFAILT,LSD_DFAILC,LSD_EFS);
      }
      else
      {
        CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10s%10lg",LSDYNA_TFAIL,LSD_MAT_ALPH,LSD_SOFT,LSD_FBRT,LSD_YCFAC,LSD_DFAILT,_BLANK_,LSD_EFS);
      }
      //
      COMMENT("$       XC        XT        YC        YT        SC      CRIT      BETA");
      CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_XC,LSD_MAT_XT,LSD_MAT_YC,LSD_MAT_YT,LSD_MAT_SC,LSD_CRIT,LSD_BETA);

    //Handling of cards 7, 8, 9
    //card7
    if(LSD_CRIT == 54 && M54_55_OPT_CARD7 == TRUE)
    {
        COMMENT("$      PFL      EPSF      EPSR      TSMD     SOFT2");
    }
    if(LSD_CRIT == 54)
    {
        FREE_CARD(M54_55_OPT_CARD7,"%10lg%10lg%10lg%10lg%10lg",LSD_MAT_PFL,LSD_MAT_EPSF,LSD_MAT_EPSR,LSD_MAT_TSMD,LSD_MAT_SOFT2);
    }

    //card8
    if(LSD_CRIT == 54 && M54_55_OPT_CARD7 == TRUE && M54_55_OPT_CARD8 == TRUE)
    {
        COMMENT("$   SLIMT1    SLIMC1    SLIMT2    SLIMC2     SLIMS    NCYRED     SOFTG");
    }
    if(LSD_CRIT == 54 && M54_55_OPT_CARD7 == TRUE)
    {
        //Read/Export card 8 only if card 7 is present.
        FREE_CARD(M54_55_OPT_CARD8,"%10lg%10lg%10lg%10lg%10lg%10lg%10lg",LSD_MAT_SLIMT1,LSD_MAT_SLIMC1,LSD_MAT_SLIMT2,LSD_MAT_SLIMC2,LSD_MAT_SLIMS,LSD_MAT_NCYRED,LSD_MAT_SOFTG);
    }

    //card9
    if(LSD_CRIT == 54 && M54_55_OPT_CARD7 == TRUE && M54_55_OPT_CARD8 == TRUE && M54_55_OPT_CARD9 == TRUE)
    {
        COMMENT("$     LCXC      LCXT      LCYC      LCYT      LCSC        DT");
    }
    if(LSD_CRIT == 54 && M54_55_OPT_CARD7 == TRUE && M54_55_OPT_CARD8 == TRUE)
    {
        //Read/Export card 9 only if card 7 and 8 are present.
        FREE_CARD(M54_55_OPT_CARD9,"%10d%10d%10d%10d%10d%10lg",LSD_LCXC,LSD_LCXT,LSD_LCYC,LSD_LCYT,LSD_LCSC,LSDYNA_DT);
    }
}
