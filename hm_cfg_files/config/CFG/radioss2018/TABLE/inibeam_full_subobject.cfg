//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- inibeam_full_subobject.cfg ---

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    //Card 1
    beam_ID                                   = VALUE(ELEMS,  "Element identifier"){ SUBTYPES = ( /ELEMS/BEAM ) ; }
    nb_integr                                 = SIZE(         "Integration point number through the section");
    prop_type                                 = VALUE(INT,   "Beam property set");

    //Card 2
    EImemb                                    = VALUE(FLOAT,  "Total membrane energy");
    EIbend                                    = VALUE(FLOAT,  "Total bending energy");

    //Card 3
    F1                                        = VALUE(FLOAT,  "Beam element normal force along X direction");
    F2                                        = VALUE(FLOAT,  "First beam element share force (XY)");
    F3                                        = VALUE(FLOAT,  "Second beam element share force (XZ)");

    //Card 4
    M1                                        = VALUE(FLOAT,  "Beam element moment around X direction");
    M2                                        = VALUE(FLOAT,  "Beam element moment around Y direction");
    M3                                        = VALUE(FLOAT,  "Beam element moment around Z direction");

    //Card 5

    //nb_integr = 0
    EpsilonP                                  = VALUE(FLOAT,  "Plastic strain");

    //nb_integr > 0
    Sigma1                                    = ARRAY[nb_integr](FLOAT,  "Beam normal stress");
    Sigma12                                   = ARRAY[nb_integr](FLOAT,  "First shear stress");
    Sigma13                                   = ARRAY[nb_integr](FLOAT,  "Second shear stress");
    EpsilonP_array                            = ARRAY[nb_integr](FLOAT,  "Plastic strain");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    beam_ID                                   = -1;
    nb_integr                                 = -1;
    prop_type                                 = -1;

    //Card 2
    EImemb                                    = -1;
    EIbend                                    = -1;

    //Card 3
    F1                                        = -1;
    F2                                        = -1;
    F3                                        = -1;

    //Card 4
    M1                                        = -1;
    M2                                        = -1;
    M3                                        = -1;

    //Card 5

    //nb_integr = 0
    EpsilonP                                  = -1;

    //nb_integr > 0
    Sigma1                                    = -1;
    Sigma12                                   = -1;
    Sigma13                                   = -1;
    EpsilonP_array                            = -1;
}
DEFAULTS(COMMON)
{
    prop_type = 3;
}



GUI(COMMON)
{
    //Card 1
    DATA(beam_ID, "beam_ID");
    SIZE(nb_integr, "nb_integr");
    RADIO(prop_type)
    {
        ADD(3, "Prop  TYPE3, BEAM");
        ADD(18, "Prop TYPE18,INT_BEAM");
    }

    //Card 2
    SCALAR(EImemb, "EImemb")              { DIMENSION = "energy"; }
    SCALAR(EIbend, "EIbend")              { DIMENSION = "energy"; }

    //Card 3
    SCALAR(F1, "F1")                      { DIMENSION = "force" ; }
    SCALAR(F2, "F2")                      { DIMENSION = "force" ; }
    SCALAR(F3, "F3")                      { DIMENSION = "force" ; }

    //Card 4
    SCALAR(M1, "M1")                      { DIMENSION = "energy" ; }
    SCALAR(M2, "M2")                      { DIMENSION = "energy" ; }
    SCALAR(M3, "M3")                      { DIMENSION = "energy" ; }

    //Card 5
    if(beam_ID == NONE)
    {
        SCALAR(EpsilonP, "EpsilonP")          { DIMENSION = "DIMENSIONLESS"; }
    }
    else
    {
        ARRAY(nb_integr, "nb_integr")
        {
            SCALAR(Sigma1,    "Sigma1")       { DIMENSION = "pressure"; }
            SCALAR(Sigma12,   "Sigma12")      { DIMENSION = "pressure"; }
            SCALAR(Sigma13,   "Sigma13")      { DIMENSION = "pressure"; }
            SCALAR(EpsilonP_array, "EpsilonP"){ DIMENSION = "DIMENSIONLESS"; }
        }
    }
}

// File format
FORMAT(radioss2018)
{
    //Card 1
    COMMENT("#  beam_ID nb_integr prop_type");
    CARD("%10d%10d%10d", beam_ID, nb_integr, prop_type);

    //Card 2
    COMMENT("#             EImemb              EIbend");
    CARD("%20lg%20lg", EImemb, EIbend);

    //Card 3
    COMMENT("#                 F1                  F2                  F3");
    CARD("%20lg%20lg%20lg", F1, F2, F3);

    //Card 4
    COMMENT("#                 M1                  M2                  M3");
    CARD("%20lg%20lg%20lg", M1, M2, M3);

    //Card 5
    if(nb_integr == 0)
    {
        COMMENT("#                                                                       EpsilonP");
        CARD("%60s%20lg", _BLANK_, EpsilonP);
    }
    else if(nb_integr > 0)
    {
        CARD_LIST(nb_integr)
        {
            COMMENT("#             Sigma1             Sigma12             Sigma13            EpsilonP");
            CARD("%20lg%20lg%20lg%20lg", Sigma1, Sigma12, Sigma13, EpsilonP_array);
        }
    }
}
