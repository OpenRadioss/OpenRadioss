//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//  /INISPRI/FULL SUBOBJECT if prop_type = 29, 30, 31, 32, 33, 35, 36, 44, 45, 46

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES
    spring_ID                              = VALUE(ELEMS, "Element identifier");
    prop_type                              = VALUE(INT, "Property set");
    nvars                                  = SIZE("Number of user element variables");
    F_X                                    = VALUE(FLOAT,"Spring element force along X direction");
    D_X                                    = VALUE(FLOAT,"Spring element elongation along X direction");
    F_Y                                    = VALUE(FLOAT,"Spring element force along Y direction");
    D_Y                                    = VALUE(FLOAT,"Spring element elongation along Y direction");
    F_Z                                    = VALUE(FLOAT,"Spring element force along Z direction");
    D_Z                                    = VALUE(FLOAT,"Spring element elongation along Z direction");
    M_X                                    = VALUE(FLOAT,"Spring element moment around X direction");
    R_X                                    = VALUE(FLOAT,"Spring element rotation around X direction");
    M_Y                                    = VALUE(FLOAT,"Spring element moment around Y direction");
    R_Y                                    = VALUE(FLOAT,"Spring element rotation around Y direction");
    M_Z                                    = VALUE(FLOAT,"Spring element moment around Z direction");
    R_Z                                    = VALUE(FLOAT,"Spring element rotation around Z direction");
    EI                                     = VALUE(FLOAT,"Total internal energy");
    VR                                     = ARRAY[nvars](FLOAT, "user variable value");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    spring_ID                              = -1;
    prop_type                              = -1;
    nvars                                  = -1;
    F_X                                    = -1;
    D_X                                    = -1;
    F_Y                                    = -1;
    D_Y                                    = -1;
    F_Z                                    = -1;
    D_Z                                    = -1;
    M_X                                    = -1;
    R_X                                    = -1;
    M_Y                                    = -1;
    R_Y                                    = -1;
    M_Z                                    = -1;
    R_Z                                    = -1;
    EI                                     = -1;
    VR                                     = -1;
}

GUI(COMMON)
{
    DATA(spring_ID, "spring_ID");
    SCALAR(prop_type, "prop_type") { DIMENSION = "DIMENSIONLESS"; }
    SIZE(nvars, "nvars");
    SCALAR(F_X,"F_X")              { DIMENSION = "force"; }
    SCALAR(D_X,"D_X")              { DIMENSION = "l"; }
    SCALAR(F_Y,"F_Y")              { DIMENSION = "force"; }
    SCALAR(D_Y,"D_Y")              { DIMENSION = "l"; }
    SCALAR(F_Z,"F_Z")              { DIMENSION = "force"; }
    SCALAR(D_Z,"D_Z")              { DIMENSION = "l"; }
    SCALAR(M_X,"M_X")              { DIMENSION = "moment"; }
    SCALAR(R_X,"R_X")              { DIMENSION = "a"; }
    SCALAR(M_Y,"M_Y")              { DIMENSION = "moment"; }
    SCALAR(R_Y,"R_Y")              { DIMENSION = "a"; }
    SCALAR(M_Z,"M_Z")              { DIMENSION = "moment"; }
    SCALAR(R_Z,"R_Z")              { DIMENSION = "a"; }
    SCALAR(EI,"EI")                { DIMENSION = "energy"; }
    ARRAY(nvars, "nvars")
    {
        SCALAR(VR)                 { DIMENSION = "DIMENSIONLESS"; }
    }
}

// File format
FORMAT(radioss2018)
{
    COMMENT("# springID prop_type     nvars");
    CARD("%10d%10d%10d",spring_ID,prop_type,nvars);
    COMMENT("#                F_X                 D_X");
    CARD("%20lg%20lg",F_X,D_X);
    COMMENT("#                F_Y                 D_Y");
    CARD("%20lg%20lg",F_Y,D_Y);
    COMMENT("#                F_Z                 D_Z");
    CARD("%20lg%20lg",F_Z,D_Z);
    COMMENT("#                M_X                 R_X");
    CARD("%20lg%20lg",M_X,R_X);
    COMMENT("#                M_Y                 R_Y");
    CARD("%20lg%20lg",M_Y,R_Y);
    COMMENT("#                M_Z                 R_Z");
    CARD("%20lg%20lg",M_Z,R_Z);
    COMMENT("#                 EI");
    CARD("%20lg",EI);
    if (nvars > 0)
    {
        COMMENT("#                 VR                  VR                  VR                  VR                  VR");
        CELL_LIST(nvars,"%20lg", VR, 100);
    }
}
