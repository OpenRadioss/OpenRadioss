//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//  /INISPRI/FULL SUBOBJECT if prop_type = 26

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES
    spring_ID                              = VALUE(ELEMS, "Element identifier");
    prop_type                              = VALUE(INT, "Property set");
    nvars                                  = SIZE("Number of user element variables");
    F_X                                    = VALUE(FLOAT,"Spring element force along X direction");
    D_X                                    = VALUE(FLOAT,"Spring element elongation along X direction");
    FEP_X                                  = VALUE(FLOAT,"Spring elastic-plastic force along X direction");
    L_X                                    = VALUE(FLOAT,"Spring length along X direction");
    EI                                     = VALUE(FLOAT,"Total internal energy");
    DV                                     = VALUE(FLOAT,"Spring velocity filtering");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    spring_ID                              = -1;
    prop_type                              = -1;
    nvars                                  = -1;
    F_X                                    = -1;
    D_X                                    = -1;
    FEP_X                                  = -1;
    L_X                                    = -1;
    EI                                     = -1;
    DV                                     = -1;
}

GUI(COMMON)
{
    DATA(spring_ID, "spring_ID");
    SCALAR(prop_type, "prop_type") { DIMENSION = "DIMENSIONLESS"; }
    SIZE(nvars, "nvars");
    SCALAR(F_X,"F_X")              { DIMENSION = "force"; }
    SCALAR(D_X,"D_X")              { DIMENSION = "l"; }
    SCALAR(FEP_X,"FEP_X")          { DIMENSION = "force"; }
    SCALAR(L_X,"L_X")              { DIMENSION = "l"; }
    SCALAR(EI,"EI")                { DIMENSION = "energy"; }
    SCALAR(DV,"DV")                { DIMENSION = "velocity"; }
}

// File format
FORMAT(radioss2018)
{
    COMMENT("# springID prop_type     nvars");
    CARD("%10d%10d%10d",spring_ID,prop_type,nvars);
    COMMENT("#                F_X                 D_X               FEP_X");
    CARD("%20lg%20lg%20lg",F_X,D_X,FEP_X);
    COMMENT("#                L_X                  EI                  DV");
    CARD("%20lg%20lg%20lg",L_X,EI,DV);
}
