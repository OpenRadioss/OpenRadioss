//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//  /INISPRI/FULL SUBOBJECT if prop_type = 8, 13, 25

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES
    spring_ID                              = VALUE(ELEMS, "Element identifier");
    prop_type                              = VALUE(INT, "Property set");
    nvars                                  = SIZE("Number of user element variables");
    F_X                                    = VALUE(FLOAT,"Spring element force along X direction");
    D_X                                    = VALUE(FLOAT,"Spring element elongation along X direction");
    FEP_X                                  = VALUE(FLOAT,"Spring elastic-plastic force along X direction");
    DPL_X+                                 = VALUE(FLOAT,"Max displacement in positive X direction");
    DPL_X-                                 = VALUE(FLOAT,"Max displacement in negative X direction");
    F_Y                                    = VALUE(FLOAT,"Spring element force along Y direction");
    D_Y                                    = VALUE(FLOAT,"Spring element elongation along Y direction");
    FEP_Y                                  = VALUE(FLOAT,"Spring elastic-plastic force along Y direction");
    DPL_Y+                                 = VALUE(FLOAT,"Max displacement in positive Y direction");
    DPL_Y-                                 = VALUE(FLOAT,"Max displacement in negative Y direction");
    F_Z                                    = VALUE(FLOAT,"Spring element force along Z direction");
    D_Z                                    = VALUE(FLOAT,"Spring element elongation along Z direction");
    FEP_Z                                  = VALUE(FLOAT,"Spring elastic-plastic force along Z direction");
    DPL_Z+                                 = VALUE(FLOAT,"Max displacement in positive Z direction");
    DPL_Z-                                 = VALUE(FLOAT,"Max displacement in negative Z direction");
    M_X                                    = VALUE(FLOAT,"Spring element moment around X direction");
    R_X                                    = VALUE(FLOAT,"Spring element rotation around X direction");
    MEP_X                                  = VALUE(FLOAT,"Spring elastic-plastic moment around X direction");
    RPL_X+                                 = VALUE(FLOAT,"Max rotation in positive X direction");
    RPL_X-                                 = VALUE(FLOAT,"Max rotation in negative X direction");
    M_Y                                    = VALUE(FLOAT,"Spring element moment around Y direction");
    R_Y                                    = VALUE(FLOAT,"Spring element rotation around Y direction");
    MEP_Y                                  = VALUE(FLOAT,"Spring elastic-plastic moment around Y direction");
    RPL_Y+                                 = VALUE(FLOAT,"Max rotation in positive Y direction");
    RPL_Y-                                 = VALUE(FLOAT,"Max rotation in negative Y direction");
    M_Z                                    = VALUE(FLOAT,"Spring element moment around Z direction");
    R_Z                                    = VALUE(FLOAT,"Spring element rotation around Z direction");
    MEP_Z                                  = VALUE(FLOAT,"Spring elastic-plastic moment around Z direction");
    RPL_Z+                                 = VALUE(FLOAT,"Max rotation in positive Z direction");
    RPL_Z-                                 = VALUE(FLOAT,"Max rotation in negative Z direction");
    L_X                                    = VALUE(FLOAT,"Spring length along X direction");
    L_Y                                    = VALUE(FLOAT,"Spring length along Y direction");
    L_Z                                    = VALUE(FLOAT,"Spring length along Z direction");
    EI                                     = VALUE(FLOAT,"Total internal energy");
    ED_X                                   = VALUE(FLOAT,"Deformation energy positive X direction");
    ED_Y                                   = VALUE(FLOAT,"Deformation energy positive Y direction");
    ED_Z                                   = VALUE(FLOAT,"Deformation energy positive Z direction");
    ER_X                                   = VALUE(FLOAT,"Rotation energy around X direction");
    ER_Y                                   = VALUE(FLOAT,"Rotation energy around Y direction");
    ER_Z                                   = VALUE(FLOAT,"Rotation energy around Z direction");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    spring_ID                              = -1;
    prop_type                              = -1;
    nvars                                  = -1;
    F_X                                    = -1;
    D_X                                    = -1;
    FEP_X                                  = -1;
    DPL_X+                                 = -1;
    DPL_X-                                 = -1;
    F_Y                                    = -1;
    D_Y                                    = -1;
    FEP_Y                                  = -1;
    DPL_Y+                                 = -1;
    DPL_Y-                                 = -1;
    F_Z                                    = -1;
    D_Z                                    = -1;
    FEP_Z                                  = -1;
    DPL_Z+                                 = -1;
    DPL_Z-                                 = -1;
    M_X                                    = -1;
    R_X                                    = -1;
    MEP_X                                  = -1;
    RPL_X+                                 = -1;
    RPL_X-                                 = -1;
    M_Y                                    = -1;
    R_Y                                    = -1;
    MEP_Y                                  = -1;
    RPL_Y+                                 = -1;
    RPL_Y-                                 = -1;
    M_Z                                    = -1;
    R_Z                                    = -1;
    MEP_Z                                  = -1;
    RPL_Z+                                 = -1;
    RPL_Z-                                 = -1;
    L_X                                    = -1;
    L_Y                                    = -1;
    L_Z                                    = -1;
    EI                                     = -1;
    ED_X                                   = -1;
    ED_Y                                   = -1;
    ED_Z                                   = -1;
    ER_X                                   = -1;
    ER_Y                                   = -1;
    ER_Z                                   = -1;
}

GUI(COMMON)
{
    DATA(spring_ID, "spring_ID");
    SCALAR(prop_type, "prop_type") { DIMENSION = "DIMENSIONLESS"; }
    SIZE(nvars, "nvars");
    SCALAR(F_X,"F_X")              { DIMENSION = "force"; }
    SCALAR(D_X,"D_X")              { DIMENSION = "l"; }
    SCALAR(FEP_X,"FEP_X")          { DIMENSION = "force"; }
    SCALAR(DPL_X+,"DPL_X+")        { DIMENSION = "l"; }
    SCALAR(DPL_X-,"DPL_X-")        { DIMENSION = "l"; }
    SCALAR(F_Y,"F_Y")              { DIMENSION = "force"; }
    SCALAR(D_Y,"D_Y")              { DIMENSION = "l"; }
    SCALAR(FEP_Y,"FEP_Y")          { DIMENSION = "force"; }
    SCALAR(DPL_Y+,"DPL_Y+")        { DIMENSION = "l"; }
    SCALAR(DPL_Y-,"DPL_Y-")        { DIMENSION = "l"; }
    SCALAR(F_Z,"F_Z")              { DIMENSION = "force"; }
    SCALAR(D_Z,"D_Z")              { DIMENSION = "l"; }
    SCALAR(FEP_Z,"FEP_Z")          { DIMENSION = "force"; }
    SCALAR(DPL_Z+,"DPL_Z+")        { DIMENSION = "l"; }
    SCALAR(DPL_Z-,"DPL_Z-")        { DIMENSION = "l"; }
    SCALAR(M_X,"M_X")              { DIMENSION = "moment"; }
    SCALAR(R_X,"R_X")              { DIMENSION = "a"; }
    SCALAR(MEP_X,"MEP_X")          { DIMENSION = "moment"; }
    SCALAR(RPL_X+,"RPL_X+")        { DIMENSION = "a"; }
    SCALAR(RPL_X-,"RPL_X-")        { DIMENSION = "a"; }
    SCALAR(M_Y,"M_Y")              { DIMENSION = "moment"; }
    SCALAR(R_Y,"R_Y")              { DIMENSION = "a"; }
    SCALAR(MEP_Y,"MEP_Y")          { DIMENSION = "moment"; }
    SCALAR(RPL_Y+,"RPL_Y+")        { DIMENSION = "a"; }
    SCALAR(RPL_Y-,"RPL_Y-")        { DIMENSION = "a"; }
    SCALAR(M_Z,"M_Z")              { DIMENSION = "moment"; }
    SCALAR(R_Z,"R_Z")              { DIMENSION = "a"; }
    SCALAR(MEP_Z,"MEP_Z")          { DIMENSION = "moment"; }
    SCALAR(RPL_Z+,"RPL_Z+")        { DIMENSION = "a"; }
    SCALAR(RPL_Z-,"RPL_Z-")        { DIMENSION = "a"; }
    SCALAR(L_X,"L_X")              { DIMENSION = "l"; }
    SCALAR(L_Y,"L_Y")              { DIMENSION = "l"; }
    SCALAR(L_Z,"L_Z")              { DIMENSION = "l"; }
    SCALAR(ED_X,"ED_X")            { DIMENSION = "energy"; }
    SCALAR(ED_Y,"ED_Y")            { DIMENSION = "energy"; }
    SCALAR(ED_Z,"ED_Z")            { DIMENSION = "energy"; }
    SCALAR(ER_X,"ER_X")            { DIMENSION = "energy"; }
    SCALAR(ER_Y,"ER_Y")            { DIMENSION = "energy"; }
    SCALAR(ER_Z,"ER_Z")            { DIMENSION = "energy"; }
}

// File format
FORMAT(radioss2018)
{
    COMMENT("# springID prop_type     nvars");
    CARD("%10d%10d%10d",spring_ID,prop_type,nvars);
    COMMENT("#                F_X                 D_X               FEP_X              DPL_X+              DPL_X-");
    CARD("%20lg%20lg%20lg%20lg%20lg",F_X,D_X,FEP_X,DPL_X+,DPL_X-);
    COMMENT("#                F_Y                 D_Y               FEP_Y              DPL_Y+              DPL_Y-");
    CARD("%20lg%20lg%20lg%20lg%20lg",F_Y,D_Y,FEP_Y,DPL_Y+,DPL_Y-);
    COMMENT("#                F_Z                 D_Z               FEP_Z              DPL_Z+              DPL_Z-");
    CARD("%20lg%20lg%20lg%20lg%20lg",F_Z,D_Z,FEP_Z,DPL_Z+,DPL_Z-);
    COMMENT("#                M_X                 R_X               MEP_X              RPL_X+              RPL_X-");
    CARD("%20lg%20lg%20lg%20lg%20lg",M_X,R_X,MEP_X,RPL_X+,RPL_X-);
    COMMENT("#                M_Y                 R_Y               MEP_Y              RPL_Y+              RPL_Y-");
    CARD("%20lg%20lg%20lg%20lg%20lg",M_Y,R_Y,MEP_Y,RPL_Y+,RPL_Y-);
    COMMENT("#                M_Z                 R_Z               MEP_Z              RPL_Z+              RPL_Z-");
    CARD("%20lg%20lg%20lg%20lg%20lg",M_Z,R_Z,MEP_Z,RPL_Z+,RPL_Z-);
    COMMENT("#                L_X                 L_Y                 L_Z                  EI                ED_X");
    CARD("%20lg%20lg%20lg%20lg%20lg",L_X,L_Y,L_Z,EI,ED_X);
    COMMENT("#               ED_Y                ED_Z                ER_X                ER_Y                ER_Z");
    CARD("%20lg%20lg%20lg%20lg%20lg",ED_Y,ED_Z,ER_X,ER_Y,ER_Z);
}
