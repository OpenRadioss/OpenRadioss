//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- inter_type5.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES

    secondaryentityids                      = VALUE(SETS,        "Secondary node group identifier") { SUBTYPES = (/SETS/GRNOD) ; }
    mainentityids                           = VALUE(SETS,        "Main surface identifier")         { SUBTYPES = (/SETS/SURF) ; }
    Ibag                                    = VALUE(INT,         "Airbag vent holes closure flag in case of contact");
    NodDel5                                 = VALUE(INT,         "Node and segment deletion flag");

    TYPE5_SCALE                             = VALUE(FLOAT,       "Interface stiffness scale factor");
    FRIC                                    = VALUE(FLOAT,       "Coulomb friction");
    GAP                                     = VALUE(FLOAT,       "Gap for impact activation");
    TSTART                                  = VALUE(FLOAT,       "Start time for contact impact computation");
    TSTOP                                   = VALUE(FLOAT,       "Time for temporary deactivation");

    Deactivate_X_BC                         = VALUE(INT,         "Deactivation flag of X boundary condition at impact");
    Deactivate_Y_BC                         = VALUE(INT,         "Deactivation flag of Y boundary condition at impact");
    Deactivate_Z_BC                         = VALUE(INT,         "Deactivation flag of Z boundary condition at impact");
    Vflag                                   = VALUE(INT,         "Renumbering flag for segments of the main surface");
    INACTIV                                 = VALUE(INT,         "Removing the initial penetrations flag");

    Ifric                                   = VALUE(INT,         "Friction formulation flag");
    Ifiltr                                  = VALUE(INT,         "Friction filtering flag");
    Xfreq                                   = VALUE(FLOAT,       "Filtering coefficient");
    ISENSOR                                 = VALUE(SENSOR,      "Sensor identifier to activate/deactivate the interface");
    Ptlim                                   = VALUE(FLOAT,       "Maximum tangential pressure");

    // ifric > 0
    C1                                      = VALUE(FLOAT,       "Friction law coefficient");
    C2                                      = VALUE(FLOAT,       "Friction law coefficient");
    C3                                      = VALUE(FLOAT,       "Friction law coefficient");
    C4                                      = VALUE(FLOAT,       "Friction law coefficient");
    C5                                      = VALUE(FLOAT,       "Friction law coefficient");

    //ifric > 1
    C6                                      = VALUE(FLOAT,       "Friction law coefficient");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING,      "Solver Keyword");

    TITLE                                   = VALUE(STRING,      "Interface title");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    Ibag                                    = 6300;
    NodDel5                                 = 4015;

    TYPE5_SCALE                             = 4016;
    FRIC                                    = 5;
    GAP                                     = 5153;
    TSTART                                  = 11;
    TSTOP                                   = 12;

    Deactivate_X_BC                         = 7020;
    Deactivate_Y_BC                         = 7021;
    Deactivate_Z_BC                         = 7022;
    Vflag                                   = 5113;
    INACTIV                                 = 94;

    Ifric                                   = 6303;
    Ifiltr                                  = 6304;
    Xfreq                                   = 6305;
    ISENSOR                                 = 5157;
    Ptlim                                   = 3020;

    // ifric > 0
    C1                                      = 6306;
    C2                                      = 6307;
    C3                                      = 6308;
    C4                                      = 6309;
    C5                                      = 6310;

    //ifric > 1
    C6                                      = 6311;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;

    TITLE                                   = -1;
}

DEFAULTS(COMMON)
{
    Ibag                                    = 0;
    TYPE5_SCALE                             = 0.2;
    Ifric                                   = 0;
    NodDel5                                 = 0;
    Ptlim                                   = 1E30;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/INTER/TYPE5/");

    DATA(secondaryentityids,  "grnd_IDs");
    DATA(mainentityids, "surf_IDm");

    RADIO(Ibag, "Ibag")
    {
        ADD(0, "0: (Default) No closure");
        ADD(1, "1: Closure");
    }

    RADIO(NodDel5, "Idel")
    {
        ADD(0,  "0: (Default) No deletion");
        ADD(1,  "1: When all the elements (4-node shells, 3-node shells, solids) associated to one segment are deleted, the segment is removed from the main side of the interface");
        ADD(2,  "2: When a 4-node shell, a 3-node shell or a solid element is deleted, the corresponding segment is removed from the main side of the interface");
        ADD(-1, "-1: Same as =1, except non-connected nodes are not removed from the secondary side of the interface");
        ADD(-2, "-2: Same as =2, except non-connected nodes are not removed from the secondary side of the interface");
    }

    SCALAR(TYPE5_SCALE, "Stfac")            { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(FRIC, "Fric")                    { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(GAP, "Gap")                      { DIMENSION = "l" ; }
    SCALAR(TSTART, "Tstart")                { DIMENSION = "t" ; }
    SCALAR(TSTOP)                           { DIMENSION = "t" ; }
    FLAG(Deactivate_X_BC, "IBCX");
    FLAG(Deactivate_Y_BC, "IBCY");
    FLAG(Deactivate_Z_BC, "IBCZ");

    RADIO(Vflag, "IRm")
    {
        ADD(0, "0: If segment is connected to a solid element its normal is reversed if entering the solid element (the segment is renumbered)");
        ADD(1, "1: Normal is always reversed (segment 1234 is read 2143)");
        ADD(2, "2: Normal is never reversed (segments connected to a solid element are not renumbered)");
    }
    RADIO(INACTIV, "Inacti")
    {
       ADD(0, "0: (Default) No action");
       ADD(3, "3: Change secondary node coordinates to avoid initial penetration");
       ADD(4, "4: Change main node coordinates to avoid initial penetration");
    }
    RADIO(Ifric, "Ifric")
    {
        ADD(0, "0: (Default) Static Coulomb friction law");
        ADD(1, "1: Generalized viscous friction law");
        ADD(2, "2: (Modified) Darmstad friction law");
        ADD(3, "3: Renard friction law");
    }

    SCALAR(Ifiltr, "Ifiltr")                { DIMENSION = "DIMENSIONLESS" ; }
    SCALAR(Xfreq, "Xfreq")                  { DIMENSION = "f" ; }
    DATA(ISENSOR, "sens_ID");
    SCALAR(Ptlim, "Ptlim")                  { DIMENSION = "pressure" ; }

    if(Ifric>0) 
    {
      SCALAR(C1) {
        if (Ifric==1)      { TITLE = "Friction C1 (Viscous law)"  ; DIMENSION = "inverse_of_pressure"; }
        else if (Ifric==2) { TITLE = "Friction C1 (Darmstad law)" ; DIMENSION = "inverse_of_square_of_pressure"; }
        else if (Ifric==3) { TITLE = "Friction C1 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
                 }  
      SCALAR(C2) {
        if (Ifric==1)      { TITLE = "Friction C2 (Viscous law)"  ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==2) { TITLE = "Friction C2 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==3) { TITLE = "Friction C2 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }      }  
      SCALAR(C3) {
        if (Ifric==1)      { TITLE = "Friction C3 (Viscous law)"  ; DIMENSION = "inverse_surfacic_power"; }
        else if (Ifric==2) { TITLE = "Friction C3 (Darmstad law)" ; DIMENSION = "inverse_of_pressure"; }
        else if (Ifric==3) { TITLE = "Friction C3 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
                 }  
      SCALAR(C4) {
        if (Ifric==1)      { TITLE = "Friction C4 (Viscous law)"  ; DIMENSION = "inverse_of_square_of_pressure"; }
        else if (Ifric==2) { TITLE = "Friction C4 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==3) { TITLE = "Friction C4 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
                 }  
      SCALAR(C5) {
        if (Ifric==1)      { TITLE = "Friction C5 (Viscous law)"  ; DIMENSION = "inverse_of_square_of_speed"; }
        else if (Ifric==2) { TITLE = "Friction C5 (Darmstad law)" ; DIMENSION = "DIMENSIONLESS"; }
        else if (Ifric==3) { TITLE = "Friction C5 (Renard law)"   ; DIMENSION = "velocity"; }
                 }
    }
    if(Ifric>1) {
      SCALAR(C6) {
       if (Ifric==2)      { TITLE = "Friction C6 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
       else if (Ifric==3) { TITLE = "Friction C6 (Renard law)"   ; DIMENSION = "velocity"; }
                } 
    }
}

// File format
FORMAT(radioss41)
{
    HEADER("/INTER/TYPE5/%-d", _ID_);
    CARD("%-80s", TITLE);

    COMMENT("#grnodid surf_id");
    CARD("%8d%8d", secondaryentityids, mainentityids);

    COMMENT("#          Stfac            Fric             Gap          Tstart           Tstop");
    CARD("%16lg%16lg%16lg%16lg%16lg", TYPE5_SCALE, FRIC, GAP, TSTART, TSTOP);

    COMMENT("#    IBC             IRm");
    CARD("%5s%1d%1d%1d%8s%8d", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, Vflag);
}

FORMAT(radioss42)
{
    HEADER("/INTER/TYPE5/%-d", _ID_);
    CARD("%-80s", TITLE);

    COMMENT("#grnodid surf_id                   Ifric");
    CARD("%8d%8d%16s%8d", secondaryentityids, mainentityids, _BLANK_, Ifric);

    COMMENT("#          STFAC            FRIC             GAP          Tstart           Tstop");
    CARD("%16lg%16lg%16lg%16lg%16lg", TYPE5_SCALE, FRIC, GAP, TSTART, TSTOP);

    COMMENT("#    IBC             IRM");
    CARD("%5s%1d%1d%1d%8s%8d", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, Vflag);

    COMMENT("#             C1              C2              C3              C4              C5");
    CARD("%16lg%16lg%16lg%16lg%16lg", C1, C2, C3, C4, C5);
}

FORMAT(radioss44)
{
    HEADER("/INTER/TYPE5/%-d", _ID_);
    CARD("%-80s", TITLE);

    COMMENT("#grnodid surf_id                                    Ibag");
    CARD("%8d%8d%32s%8d", secondaryentityids, mainentityids, _BLANK_, NodDel5);

    COMMENT("#          STFAC            FRIC             GAP          Tstart           Tstop");
    CARD("%16lg%16lg%16lg%16lg%16lg", TYPE5_SCALE, FRIC, GAP, TSTART, TSTOP);

    COMMENT("#    IBC             IRM");
    CARD("%5s%1d%1d%1d%8s%8d", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, Vflag);

    COMMENT("#  Ifric  Ifiltr           Xfreq");
    CARD("%8d%8d%16lg", Ifric, Ifiltr, Xfreq);

    if(Ifric > 0)
    {
        COMMENT("#             C1              C2              C3              C4              C5");
        CARD("%16lg%16lg%16lg%16lg%16lg", C1, C2, C3, C4, C5);
    }

    if(Ifric > 1)
    {
        COMMENT("#             C6");
        CARD("%16lg", C6);
    }
}

FORMAT(radioss51)
{
    HEADER("/INTER/TYPE5/%-d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("# grnod_id   surf_id                                              Ibag      Idel");
    CARD("%10d%10d%40s%10d%10d", secondaryentityids, mainentityids, _BLANK_, Ibag, NodDel5);

    COMMENT("#              STFAC                FRIC                 GAP              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", TYPE5_SCALE, FRIC, GAP, TSTART, TSTOP);

    COMMENT("#      IBC                 IRM");
    CARD("%7s%1d%1d%1d%10s%10d", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, Vflag);

    COMMENT("#    Ifric    Ifiltr               Xfreq");
    CARD("%10d%10d%20lg", Ifric, Ifiltr, Xfreq);

    if(Ifric > 0)
    {
        COMMENT("#                 C1                  C2                  C3                  C4                  C5");
        CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    if(Ifric > 1)
    {
        COMMENT("#                 C6");
        CARD("%20lg", C6);
    }
}

FORMAT(radioss110)
{
    HEADER("/INTER/TYPE5/%-d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("# grnd_IDs  surf_IDm                                              Ibag      Idel");
    CARD("%10d%10d%40s%10d%10d", secondaryentityids, mainentityids, _BLANK_, Ibag, NodDel5);

    COMMENT("#              Stfac                Fric                 Gap              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", TYPE5_SCALE, FRIC, GAP, TSTART, TSTOP);

    COMMENT("#      IBC                 IRM    Inacti");
    CARD("%7s%1d%1d%1d%10s%10d%10d", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, Vflag, INACTIV);

    COMMENT("#    Ifric    Ifiltr               Xfreq");
    CARD("%10d%10d%20lg", Ifric, Ifiltr, Xfreq);

    if(Ifric > 0)
    {
        COMMENT("#                 C1                  C2                  C3                  C4                  C5");
        CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    if(Ifric > 1)
    {
        COMMENT("#                 C6");
        CARD("%20lg", C6);
    }
}

FORMAT(radioss120)
{
    HEADER("/INTER/TYPE5/%-d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("# grnd_IDs  surf_IDm                                              Ibag      Idel");
    CARD("%10d%10d%40s%10d%10d", secondaryentityids, mainentityids, _BLANK_, Ibag, NodDel5);

    COMMENT("#              Stfac                Fric                 Gap              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", TYPE5_SCALE, FRIC, GAP, TSTART, TSTOP);

    COMMENT("#      IBC                 IRM    Inacti");
    CARD("%7s%1d%1d%1d%10s%10d%10d", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, Vflag, INACTIV);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID");
    CARD("%10d%10d%20lg%10s%10d", Ifric, Ifiltr, Xfreq, _BLANK_, ISENSOR);

    if(Ifric > 0)
    {
        COMMENT("#                 C1                  C2                  C3                  C4                  C5");
        CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    if(Ifric > 1)
    {
        COMMENT("#                 C6");
        CARD("%20lg", C6);
    }
}

FORMAT(radioss2018)
{
    HEADER("/INTER/TYPE5/%-d", _ID_);
    CARD("%-100s", TITLE);

    COMMENT("# grnd_IDs  surf_IDm                                              Ibag      Idel");
    CARD("%10d%10d%40s%10d%10d", secondaryentityids, mainentityids, _BLANK_, Ibag, NodDel5);

    COMMENT("#              Stfac                Fric                 Gap              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg", TYPE5_SCALE, FRIC, GAP, TSTART, TSTOP);

    COMMENT("#      IBC                 IRm    Inacti");
    CARD("%7s%1d%1d%1d%10s%10d%10d", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, Vflag, INACTIV);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID               Ptlim");
    CARD("%10d%10d%20lg%10s%10d%20lg", Ifric, Ifiltr, Xfreq, _BLANK_, ISENSOR, Ptlim);

    if(Ifric > 0)
    {
        COMMENT("#                 C1                  C2                  C3                  C4                  C5");
        CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    if(Ifric > 1)
    {
        COMMENT("#                 C6");
        CARD("%20lg", C6);
    }
}
