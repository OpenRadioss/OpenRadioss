//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /INTER/TYPE24
// 

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    // Card 1
    mainentityids                             = VALUE(SETS, "First surface identifier")   { SUBTYPES = (/SETS/SURF) ; }
    secondaryentityids                        = VALUE(SETS, "Second surface identifier")  { SUBTYPES = (/SETS/SURF) ; }
    Istf                                      = VALUE(INT, "Interface stiffness definition flag");
    Irem_i2                                   = VALUE(INT, "Deactivating flag for the secondary node, if the same contact pair (node/segment) has been defined in interface TYPE2");
    TYPE24_Idel                               = VALUE(INT, "Node and segment deletion flag");

    GRNOD_ID                                  = VALUE(SETS, "Nodes group identifier")  { SUBTYPES = (/SETS/GRNOD) ; }
    TYPE24_Iedge                              = VALUE(INT, "Edges to edge contact flag");
    TYPE24_Edge_Angle                         = VALUE(FLOAT, "Edge angle");
    GAP1                                      = VALUE(FLOAT, "Secondary maximum gaps");
    GAP2                                      = VALUE(FLOAT, "Main maximum gaps");

    STMIN                                     = VALUE(FLOAT, "Minimum stiffness (used only when Istf > 1 and Istf < 7)");
    STMAX                                     = VALUE(FLOAT, "Maximum stiffness (used only when Istf > 1 and Istf < 7)");
    Igap                                      = VALUE(INT, "Gap modification flag for secondary shell nodes on the free edges");
    Ipen                                      = VALUE(INT, "Initial penetration detection flag");
    Ipen_max                                  = VALUE(FLOAT, "Maximum initial penetration");
    Ipen_min                                  = VALUE(FLOAT, "Minimum initial penetration: Penetration smaller than this value will be taken into account");

    // Card 2
    STFAC                                     = VALUE(FLOAT, "Interface stiffness scale factor");
    FRIC                                      = VALUE(FLOAT, "Coulomb friction");
    TSTART                                    = VALUE(FLOAT, "Start time");
    TSTOP                                     = VALUE(FLOAT, "Temporary deactivation time");

    Deactivate_X_BC                           = VALUE(INT, "Deactivation flag of boundary conditions at impact");
    Deactivate_Y_BC                           = VALUE(INT, "Deactivation flag of boundary conditions at impact");
    Deactivate_Z_BC                           = VALUE(INT, "Deactivation flag of boundary conditions at impact");
    INACTIV                                   = VALUE(INT, "Initial penetration flag");
    STIFF_DC                                  = VALUE(FLOAT, "Critical damping coefficient on interface stiffness");

    Ifric                                     = VALUE(INT, "Friction formulation flag");
    Ifiltr                                    = VALUE(INT, "Friction filtering flag");
    Xfreq                                     = VALUE(FLOAT, "Filtering coefficient");
    ISENSOR                                   = VALUE(SENSOR, "Sensor identifier to activate/deactivate the interface")  {SUBTYPES=(/SENSOR/SENSOR_DEFINE);}
    Fric_ID                                   = VALUE(FRICTION, "Friction identifier for friction definition for selected pairs of parts");

    // Card 3 (if Ifric > 0)
    C1                                        = VALUE(FLOAT, "Friction law coefficient");
    C2                                        = VALUE(FLOAT, "Friction law coefficient");
    C3                                        = VALUE(FLOAT, "Friction law coefficient");
    C4                                        = VALUE(FLOAT, "Friction law coefficient");
    C5                                        = VALUE(FLOAT, "Friction law coefficient");

    // Card 4 (if Ifric > 1)
    C6                                        = VALUE(FLOAT, "Friction law coefficient");

    // HM INTERNAL
    KEYWORD_STR                               = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                              = SIZE("NUM_COMMENTS");
    CommentEnumField                          = VALUE(INT, "User Comments");
    COMMENTS                                  = ARRAY[NUM_COMMENTS](STRING, "Entity Comments");

    TITLE                                     = VALUE(STRING, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    // INPUT ATTRIBUTES

    // Card 1
    Istf                                      = 8044;
    Irem_i2                                   = 5408;
    TYPE24_Idel                               = 2598;

    GRNOD_ID                                  = 8056;
    TYPE24_Iedge                              = 2599;
    TYPE24_Edge_Angle                         = 2600;
    GAP1                                      = 805;
    GAP2                                      = 806;

    STMIN                                     = 4023;
    STMAX                                     = 4024;
    Igap                                      = 8045;
    Ipen                                      = 802;
    Ipen_max                                  = 803;
    Ipen_min                                  = 804;

    // Card 2
    STFAC                                     = 4253;
    FRIC                                      = 5;
    TSTART                                    = 11;
    TSTOP                                     = 12;

    Deactivate_X_BC                           = 7020;
    Deactivate_Y_BC                           = 7021;
    Deactivate_Z_BC                           = 7022;
    INACTIV                                   = 94;
    STIFF_DC                                  = 6;

    Ifric                                     = 6303;
    Ifiltr                                    = 6304;
    Xfreq                                     = 6305;
    ISENSOR                                   = 5157;
    Fric_ID                                   = 6550;

    // Card 3
    C1                                        = 6306;
    C2                                        = 6307;
    C3                                        = 6308;
    C4                                        = 6309;
    C5                                        = 6310;

    // Card 4
    C6                                        = 6311;

    // HM INTERNAL
    KEYWORD_STR                               = 9000;
    COMMENTS                                  = 5109;
    CommentEnumField                          = 7951;
    NUM_COMMENTS                              = 5110;

    TITLE                                     = -1;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    // INPUT ATTRIBUTES

    Istf                                      = 1000;
    Irem_i2                                   = 1;

    TYPE24_Iedge                              = 0;
    TYPE24_Edge_Angle                         = 135;
    GAP1                                      = 10e30;
    GAP2                                      = 10e30;
    STMAX                                     = 10e30;

    Igap                                      = 0;
    Ipen                                      = 0;
    Ipen_max                                  = 0.0;

    STFAC                                     = 1.0;
    TSTOP                                     = 10e30;

    INACTIV                                   = 0;
    STIFF_DC                                  = 0.05;

    Ifric                                     = 0;
    Ifiltr                                    = 0;
    Xfreq                                     = 1.0;
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS, "")
        {
            SCALAR(COMMENTS);
        }
    }

    ASSIGN(KEYWORD_STR, "/INTER/TYPE24");

    DATA(secondaryentityids, "surf_ID1");
    DATA(mainentityids, "surf_ID2");

    RADIO(Istf, "Istf")
    {
      ADD(0,"0: Set to the value defined in /DEFAULT/INTER/TYPE24");
      ADD(2,"2: Interface stiffness is the average of the main and secondary stiffness");
      ADD(3,"3: Interface stiffness is the maximum of the main and secondary stiffness");
      ADD(4,"4: Interface stiffness is the minimum of the main and secondary stiffness");
      ADD(5,"5: Interface stiffness is the main and secondary stiffness in series");
      ADD(6,"6: Interface stiffness is the minimum of the main and secondary stiffness with special adjustment to improve convergence for implicit solutions");
      ADD(1000,"1000 Default, if /DEFAULT/INTER/TYPE24 is not defined. Interface stiffness is only based on the main side stiffness");
    }

    RADIO(Irem_i2, "Irem_i2")
    {
      ADD(0,"0: Set to the value defined in /DEFAULT/INTER/TYPE24");
      ADD(1,"1: Default, if /DEFAULT/INTER/TYPE24 is not defined. Secondary nodes in /INTER/TYPE2 tied contacts are removed from this contact");
      ADD(2,"3: No change to secondary nodes");
    }

    RADIO(TYPE24_Idel, "Idel")
    {
      ADD(0,"0: Set to the value defined in /DEFAULT/INTER/TYPE24");
      ADD(1,"1: When all the elements (4-node shells, 3-node shells, solids) associated to one segment are deleted, the segment is removed from the main side of the interface");
      ADD(2,"2: When a 4-node shell, a 3-node shell or a solid element is deleted, the corresponding segment is removed from the main side of the interface");
      ADD(1000,"1000: Default, if /DEFAULT/INTER/TYPE24 is not defined. No deletion");
    }

    DATA(GRNOD_ID, "grnd_IDs");

    RADIO(TYPE24_Iedge, "Iedge")
    {
      ADD(0,"0: (Default) Set to the value defined in /DEFAULT/INTER/TYPE24");
      ADD(1,"1: Edge to edge contact is activated using the external border edges from surf_ID1 and surf_ID2 and sharp edges between contact segments");
      ADD(2,"1000: Default if /DEFAULT/INTER/TYPE24 is not defined. No edge to edge contact");
    }

    if (TYPE24_Iedge==1)
    {
        SCALAR(TYPE24_Edge_Angle, "Edge_angle")   { DIMENSION="a"; }
    }

    SCALAR(GAP1, "Gap_max_s")                 { DIMENSION="l"; }
    SCALAR(GAP2, "Gap_max_m")                 { DIMENSION="l"; }

    if (TYPE24_Iedge>1 && TYPE24_Iedge<7)
    {
        SCALAR(STMIN, "Stmin")                {DIMENSION="translation_stiffness";}
        SCALAR(STMAX, "Stmax")                {DIMENSION="translation_stiffness";}
    }

    RADIO(Igap, "Igap0")
    {
      ADD(0,"0: (Default) Set to the value defined in /DEFAULT/INTER/TYPE24");
      ADD(1,"1: Set gap to zero for the secondary shell nodes");
      ADD(2,"1000: Default if /DEFAULT/INTER/TYPE24 is not defined. No change");
    }

    RADIO(Ipen, "Ipen0")
    {
      ADD(0,"0: (Default) Set to the value defined in /DEFAULT/INTER/TYPE24");
      ADD(1,"1: Including self-impact in each part");
      ADD(2,"1000: Default if /DEFAULT/INTER/TYPE24 is not defined. Excluding self-impact in each part");
    }

    SCALAR(Ipen_max, "Ipen_max")              {DIMENSION="l";}
    SCALAR(STFAC, "Stfac")                    { DIMENSION="DIMENSIONLESS"; }

    SCALAR(FRIC, "Fric")                      { DIMENSION="DIMENSIONLESS"; }
    SCALAR(TSTART, "Tstart")                  { DIMENSION="t"; }
    SCALAR(TSTOP, "Tstop")                    { DIMENSION="t"; }

    FLAG(Deactivate_X_BC, "IBC_x");
    FLAG(Deactivate_Y_BC, "IBC_y");
    FLAG(Deactivate_Z_BC, "IBC_z");

    RADIO(INACTIV, "Inacti")
    {
      ADD(0,"0: (Default) Set to the value defined in /DEFAULT/INTER/TYPE24");
      ADD(-1,"-1: All initial penetrations are taken into account");
      ADD(5,"5: The main segment is shifted by the initial penetration value P0");
      ADD(1000,"1000: Default, if /DEFAULT/INTER/TYPE24 is not defined. Only tiny initial penetrations will be taken into account");
    }

    SCALAR(STIFF_DC, "VISs")                  { DIMENSION="DIMENSIONLESS"; }

    RADIO(Ifric, "Ifric")
    {
      ADD(0,"0: (Default) Static Coulomb friction law");
      ADD(1,"1: Generalized viscous friction law");
      ADD(2,"2: (Modified) Darmstad friction law");
      ADD(3,"3: Renard friction law");
    }

    RADIO(Ifiltr, "Ifiltr")
    {
      ADD(0,"0: (Default) No filter is used");
      ADD(1,"1: Simple numerical filter");
      ADD(2,"2: Standard -3dB filter with filtering period");
      ADD(3,"3: Standard -3dB filter with cutting frequency");
    }

    SCALAR(Xfreq, "Xfreq")                   { DIMENSION="f"; }

    DATA(ISENSOR, "sens_ID");
    DATA(Fric_ID, "fric_ID");

    if(Ifric>0)
    {
      SCALAR(C1, "C1")
      {
        if (Ifric==1)      { TITLE = "Friction C1 (Viscous law)"  ; DIMENSION = "inverse_of_pressure"; }
        else if (Ifric==2) { TITLE = "Friction C1 (Darmstad law)" ; DIMENSION = "inverse_of_square_of_pressure"; }
        else if (Ifric==3) { TITLE = "Friction C1 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
      }
      SCALAR(C2, "C2")
      {
        if (Ifric==1)      { TITLE = "Friction C2 (Viscous law)"  ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==2) { TITLE = "Friction C2 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==3) { TITLE = "Friction C2 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
      }
      SCALAR(C3, "C3")
      {
        if (Ifric==1)      { TITLE = "Friction C3 (Viscous law)"  ; DIMENSION = "inverse_surfacic_power"; }
        else if (Ifric==2) { TITLE = "Friction C3 (Darmstad law)" ; DIMENSION = "inverse_of_pressure"; }
        else if (Ifric==3) { TITLE = "Friction C3 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
      }
      SCALAR(C4, "C4") {
        if (Ifric==1)      { TITLE = "Friction C4 (Viscous law)"  ; DIMENSION = "inverse_of_square_of_pressure"; }
        else if (Ifric==2) { TITLE = "Friction C4 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==3) { TITLE = "Friction C4 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
      }
      SCALAR(C5, "C5") {
        if (Ifric==1)      { TITLE = "Friction C5 (Viscous law)"  ; DIMENSION = "inverse_of_square_of_speed"; }
        else if (Ifric==2) { TITLE = "Friction C5 (Darmstad law)" ; DIMENSION = "DIMENSIONLESS"; }
        else if (Ifric==3) { TITLE = "Friction C5 (Renard law)"   ; DIMENSION = "velocity"; }
      }
    }
    if(Ifric>1)
    {
      SCALAR(C6, "C6")
      {
       if (Ifric==1)      { TITLE = "Friction C6 (Viscous law)"  ; DIMENSION = "DIMENSIONLESS"; }
       else if (Ifric==2) { TITLE = "Friction C6 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
       else if (Ifric==3) { TITLE = "Friction C6 (Renard law)"   ; DIMENSION = "velocity"; }
      }
    }
}

// File format
FORMAT(radioss120)
{
    HEADER("/INTER/TYPE24/%d", _ID_);
    CARD("%-100s", TITLE);

    // Card 1
    COMMENT("# surf_ID1  surf_ID2     Istif");
    CARD("%10d%10d%10d", secondaryentityids, mainentityids, Istf);

    COMMENT("# grnd_IDs                                                             Gap_max_s           Gap_max_m");
    CARD("%10d%50s%20lg%20lg", GRNOD_ID, _BLANK_, GAP1, GAP2);

    COMMENT("#              Stmin               Stmax     Igap0                      Ipen_max            Ipen_min");
    CARD("%20lg%20lg%10d%10s%20lg%20lg", STMIN, STMAX, Igap, _BLANK_, Ipen_max, Ipen_min);

    // Card 2
    COMMENT("#              Stfac                Fric                                  Tstart               Tstop");
    CARD("%20lg%20lg%20s%20lg%20lg", STFAC, FRIC, _BLANK_, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti               ViscS");
    CARD("%7s%1d%1d%1d%20s%10d%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, INACTIV, STIFF_DC);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID");
    CARD("%10d%10d%20lg%10s%10d", Ifric, Ifiltr, Xfreq, _BLANK_, ISENSOR);

    // Card 3
    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    // Card 4
    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);
    }
}

FORMAT(radioss130)
{
    HEADER("/INTER/TYPE24/%d", _ID_);
    CARD("%-100s", TITLE);

    // Card 1
    COMMENT("# surf_ID1  surf_ID2      Istf");
    CARD("%10d%10d%10d", secondaryentityids, mainentityids, Istf);

    COMMENT("# grnd_IDs                                                             Gap_max_s           Gap_max_m");
    CARD("%10d%50s%20lg%20lg", GRNOD_ID, _BLANK_, GAP1, GAP2);

    COMMENT("#              Stmin               Stmax     Igap0     Ipen0            Ipen_max            Ipen_min");
    CARD("%20lg%20lg%10d%10d%20lg%20lg", STMIN, STMAX, Igap, Ipen, Ipen_max, Ipen_min) ;

    // Card 2
    COMMENT("#              Stfac                Fric                                  Tstart               Tstop");
    CARD("%20lg%20lg%20s%20lg%20lg", STFAC, FRIC, _BLANK_, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti               ViscS");
    CARD("%7s%1d%1d%1d%20s%10d%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, INACTIV, STIFF_DC);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID");
    CARD("%10d%10d%20lg%10s%10d", Ifric, Ifiltr, Xfreq, _BLANK_, ISENSOR);

    // Card 3
    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    // Card 4
    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);
    }
}

FORMAT(radioss140)
{
    HEADER("/INTER/TYPE24/%d", _ID_);
    CARD("%-100s", TITLE);

    // Card 1
    COMMENT("# surf_ID1  surf_ID2      Istf");
    CARD("%10d%10d%10d", secondaryentityids, mainentityids, Istf);

    COMMENT("# grnd_IDs                                                             Gap_max_s           Gap_max_m");
    CARD("%10d%50s%20lg%20lg", GRNOD_ID, _BLANK_, GAP1, GAP2);

    COMMENT("#              Stmin               Stmax     Igap0     Ipen0           Ipen_max");
    CARD("%20lg%20lg%10d%10d%20lg", STMIN, STMAX, Igap, Ipen, Ipen_max);

    // Card 2
    COMMENT("#              Stfac                Fric                                  Tstart               Tstop");
    CARD("%20lg%20lg%20s%20lg%20lg", STFAC, FRIC, _BLANK_, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti               ViscS");
    CARD("%7s%1d%1d%1d%20s%10d%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, INACTIV, STIFF_DC);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID");
    CARD("%10d%10d%20lg%10s%10d", Ifric, Ifiltr, Xfreq, _BLANK_, ISENSOR);

    // Card 3
    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    // Card 4
    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);
    }
}

FORMAT(radioss2017)
{
    HEADER("/INTER/TYPE24/%d", _ID_);
    CARD("%-100s", TITLE);

    // Card 1
    COMMENT("# surf_ID1  surf_ID2      Istf                                              Idel");
    CARD("%10d%10d%10d%40s%10d", secondaryentityids, mainentityids, Istf, _BLANK_, TYPE24_Idel);

    COMMENT("# grnd_IDS                         Iedge          Edge_angle           Gap_max_s           Gap_max_m");
    CARD("%10d%20s%10d%20lg%20lg%20lg", GRNOD_ID, _BLANK_, TYPE24_Iedge, TYPE24_Edge_Angle, GAP1, GAP2);

    COMMENT("#              Stmin               Stmax     Igap0     Ipen0           Ipen_max");
    CARD("%20lg%20lg%10d%10d%20lg", STMIN, STMAX, Igap, Ipen, Ipen_max);

    // Card 2
    COMMENT("#              Stfac                Fric                                  Tstart               Tstop");
    CARD("%20lg%20lg%20s%20lg%20lg", STFAC, FRIC, _BLANK_, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs");
    CARD("%7s%1d%1d%1d%20s%10d%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, INACTIV, STIFF_DC);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID");
    CARD("%10d%10d%20lg%10s%10d", Ifric, Ifiltr, Xfreq, _BLANK_, ISENSOR);

    // Card 3
    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    // Card 4
    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);
    }
}

FORMAT(radioss2018)
{
    HEADER("/INTER/TYPE24/%d", _ID_);
    CARD("%-100s", TITLE);

    // Card 1
    COMMENT("# surf_ID1  surf_ID2      Istf                       Irem_i2                Idel");
    CARD("%10d%10d%10d%20s%10d%10s%10d", secondaryentityids, mainentityids, Istf, _BLANK_, Irem_i2, _BLANK_, TYPE24_Idel);

    COMMENT("# grnd_IDs                         Iedge          Edge_angle           Gap_max_s           Gap_max_m");
    CARD("%10d%20s%10d%20lg%20lg%20lg", GRNOD_ID, _BLANK_, TYPE24_Iedge, TYPE24_Edge_Angle, GAP1, GAP2);

    COMMENT("#              Stmin               Stmax     Igap0     Ipen0           Ipen_max");
    CARD("%20lg%20lg%10d%10d%20lg", STMIN, STMAX, Igap, Ipen, Ipen_max);

    // Card 2
    COMMENT("#              Stfac                Fric                                  Tstart               Tstop");
    CARD("%20lg%20lg%20s%20lg%20lg", STFAC, FRIC, _BLANK_, TSTART, TSTOP);

    COMMENT("#      IBC                        Inacti                VISs");
    CARD("%7s%1d%1d%1d%20s%10d%20lg", _BLANK_, Deactivate_X_BC, Deactivate_Y_BC, Deactivate_Z_BC, _BLANK_, INACTIV, STIFF_DC);

    COMMENT("#    Ifric    Ifiltr               Xfreq             sens_ID                                 fric_ID");
    CARD("%10d%10d%20lg%10s%10d%30s%10d", Ifric, Ifiltr, Xfreq, _BLANK_, ISENSOR, _BLANK_, Fric_ID);

    // Card 3
    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg", C1, C2, C3, C4, C5);
    }

    // Card 4
    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg", C6);
    }
}
