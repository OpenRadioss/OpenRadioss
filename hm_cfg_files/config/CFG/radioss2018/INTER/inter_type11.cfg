//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /INTER/TYPE11
// 

ATTRIBUTES(COMMON)
{
// INPUT ATTRIBUTES
    secondaryentityids                        = VALUE(SETS,"Secondary line identifier")  { SUBTYPES = ( /SETS/LINE ) ; }
    mainentityids                             = VALUE(SETS,"Main line identifier") { SUBTYPES = ( /SETS/LINE ) ; }
    Istf                                      = VALUE(INT,"Stiffness definition flag");
    Ithe                                      = VALUE(INT,"Heat transfer flag");
    Igap                                      = VALUE(INT,"Gap/element option flag");
    STMIN                                     = VALUE(FLOAT,"Minimum stiffness");
    STMAX                                     = VALUE(FLOAT,"Maximum stiffness");
    Multimp                                   = VALUE(INT,"Maximum average number of impacted main segments per secondary node");
    PrMesh_Size                               = VALUE(FLOAT,"Percentage of mesh size","%mesh_size");
    Tmin                                      = VALUE(FLOAT,"Minimum interface time step");
    IFORM                                     = VALUE(INT,"Friction penalty formulation type");
    ISENSOR                                   = VALUE(SENSOR,"Sensor identifier to activate/deactivate the interface") {SUBTYPES=(/SENSOR/SENSOR_DEFINE);}
    NodDel11                                  = VALUE(INT,"Node and segment deletion flag");
    TYPE11_SCALE                              = VALUE(FLOAT,"Stiffness scale factor applied to main side of the interface (if Istf != 1) or Interface stiffness (if Istf = 1)");
    FRIC                                      = VALUE(FLOAT,"Coulomb friction");
    GAP                                       = VALUE(FLOAT,"Minimum gap for impact activation");
    TSTART                                    = VALUE(FLOAT,"Start time");
    TSTOP                                     = VALUE(FLOAT,"Temporary deactivation time");
    Deactivate_X_BC                           = VALUE(INT,"Deactivation flag of boundary conditions at impact");
    Deactivate_Y_BC                           = VALUE(INT,"Deactivation flag of boundary conditions at impact");
    Deactivate_Z_BC                           = VALUE(INT,"Deactivation flag of boundary conditions at impact");
    INACTIV                                   = VALUE(INT,"Deactivation flag of stiffness in case of initial penetrations");
    STIFF_DC                                  = VALUE(FLOAT,"Critical damping coefficient on interface stiffness");
    FRIC_DC                                   = VALUE(FLOAT,"Critical damping coefficient on interface friction");
    SORT_FACT                                 = VALUE(FLOAT,"Sorting factor");
    Fric_ID                                   = VALUE(FRICTION,"Friction identifier for friction definition for selected pairs of parts");
    Kthe                                      = VALUE(FLOAT,"Heat exchange coefficient  (if fct_IDK = 0) or Heat exchange scale factor (if fct_IDK != 0)");
    fct_ID_k                                  = VALUE(FUNCT,"Heat exchange definition with contact pressure identifier");
    A_scale_k                                 = VALUE(FLOAT,"Abscissa scale factor on fct_IDK");
    Tint                                      = VALUE(FLOAT,"Interface temperature");
    IFORM1                                    = VALUE(INT,"Heat contact formulation flag");
    F_RAD                                     = VALUE(FLOAT,"Radiation factor");
    D_RAD                                     = VALUE(FLOAT,"Maximum distance for radiation computation");

    empty_string                              = VALUE(STRING, "");

// HM INTERNAL
    KEYWORD_STR                               = VALUE(STRING,"Solver Keyword");
    NUM_COMMENTS                              = SIZE("NUM_COMMENTS");
    CommentEnumField                          = VALUE(INT,"User Comments");
    COMMENTS                                  = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    TITLE                                     = VALUE(STRING,"");

// RADIOSS INTERNAL
    ID_TYPE19                                 = VALUE(INT,"/INTER/TYPE19 that is creating this interface","ID_TYPE19");
    IEDGE_TYPE19                              = VALUE(INT,"ASSOCIATED /INTER/TYPE19 Iedge Value","IEDGE_TYPE19");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                               = 9000;
    COMMENTS                                  = 5109;
    CommentEnumField                          = 7951;
    NUM_COMMENTS                              = 5110;
    Istf                                      = 8044;
    Ithe                                      = 4735;
    Igap                                      = 8045;
    NodDel11                                  = 4037;
    STMIN                                     = 4023;
    STMAX                                     = 4024;
    Multimp                                   = 8046;
    PrMesh_Size                               = 4828;
    Tmin                                      = 4831;
    IFORM                                     = 4028;
    ISENSOR                                   = 5157;
    TYPE11_SCALE                              = 4038;
    FRIC                                      = 5;
    GAP                                       = 5153;
    TSTART                                    = 11;
    TSTOP                                     = 12;
    Deactivate_X_BC                           = 7020;
    Deactivate_Y_BC                           = 7021;
    Deactivate_Z_BC                           = 7022;
    INACTIV                                   = 94;
    STIFF_DC                                  = 6;
    FRIC_DC                                   = 8;
    SORT_FACT                                 = 5321;
    Fric_ID                                   = 6550;
    Kthe                                      = 4736;
    fct_ID_k                                  = 695;
    A_scale_k                                 = 696;
    Tint                                      = 4737;
    IFORM1                                    = 4796;
    F_RAD                                     = 697;
    D_RAD                                     = 698;

    ID_TYPE19                                 = -1; /*not needed to be exposed in HM*/
    IEDGE_TYPE19                              = -1;
    empty_string                              = -1;
    TITLE                                     = -1;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    Istf                                      = 0;
    Ithe                                      = 0;
    Igap                                      = 0;
    Multimp                                   = 4;
    STMAX                                     = 1e31;
    PrMesh_Size                               = 0.4;
    IFORM                                     = 0;
    NodDel11                                  = 0;
    TYPE11_SCALE                              = 1.0;
    INACTIV                                   = 0;
    STIFF_DC                                  = 0.05;
    FRIC_DC                                   = 1.0;
    SORT_FACT                                 = 0.20;
    Kthe                                      = 0.0;
    A_scale_k                                 = 1.0;
    IFORM1                                    = 0;

    empty_string                              = "";
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }

    ASSIGN(KEYWORD_STR, "/INTER/TYPE11");

    DATA(secondaryentityids);
    DATA(mainentityids);
    RADIO(Istf) {
      ADD(0,"0: Set to value defined in /DEFAULT/INTER/TYPE11");
      ADD(1,"1: Interface stiffness is entered as Stfac");
      ADD(2,"2: Interface stiffness is the average of the main and secondary stiffness");
      ADD(3,"3: Interface stiffness is the maximum of the main and secondary stiffness");
      ADD(4,"4: Interface stiffness is the minimum of the main and secondary stiffness");
      ADD(5,"5: Interface stiffness is the main and secondary stiffness in series");
    }
    RADIO(Ithe) {
      ADD(0,"0: (Default) No heat transfer") ;
      ADD(1,"1: Heat transfer is activated and the temperature of the main side is considered as constant (Tmain = Tint)");
      ADD(2,"2: Heat transfer is activated and the temperature can be variable over the main surface and time");
    }
    RADIO(Igap) {
      ADD(0,"0: Set to value defined in /DEFAULT/INTER/TYPE11");
      ADD(1,"1: Gap varies accordingly to the characteristics of the impacted main line and the impacting secondary node");
      ADD(3,"3 Gap varies according to the characteristics of the impacted main line and the impacting secondary node + gap is taken into account the size of the elements");
      ADD(1000,"1000: Gap is constant equal to Gapmin");
    }
    RADIO(NodDel11) {
      ADD(0,"0: Set to value defined in /DEFAULT/INTER/TYPE11");
      ADD(1,"1: When all the elements (4-node shells, 3-node shells, solids, beams, trusses, and springs) associated to one segment are deleted, the segment is removed from the interface");
      ADD(2,"2: When an element (4-node shell, 3-node shell, solid, beam, truss, and springs) is deleted, the corresponding segment is removed from the interface");
      ADD(-1,"-1: Same as = 1, except non-connected nodes are not removed from the secondary side of the interface");
      ADD(-2,"-2: Same as = 2, except non-connected nodes are not removed from the secondary side of the interface");
      ADD(1000,"1000: No deletion");
    }

    SCALAR(STMIN)               { DIMENSION="translation_stiffness"; }
    SCALAR(STMAX)               { DIMENSION="translation_stiffness"; }
    if (Igap==3)
    {
      SCALAR(PrMesh_Size)       { DIMENSION="DIMENSIONLESS"; }
    }
    SCALAR(Tmin)                { DIMENSION="t"; }
    RADIO(IFORM) {
      ADD(0,"0: Set to the value defined in /DEFAULT/INTER/TYPE11");
      ADD(1,"1: Viscous (total) formulation");
      ADD(2,"2: Stiffness (incremental) formulation");
    }
    DATA(ISENSOR);


    SCALAR(TYPE11_SCALE)
    {
      if (Istf==1)      { DIMENSION="translation_stiffness"; }
      else              { DIMENSION="DIMENSIONLESS"; }
    }

    SCALAR(FRIC)                { DIMENSION="DIMENSIONLESS"; }
    SCALAR(GAP)                 { DIMENSION="l"; }
    SCALAR(TSTART)              { DIMENSION="t"; }
    SCALAR(TSTOP)               { DIMENSION="t"; }

    FLAG(Deactivate_X_BC);
    FLAG(Deactivate_Y_BC);
    FLAG(Deactivate_Z_BC);

    RADIO(INACTIV) {
      ADD(0,"0: Set to value defined in /DEFAULT/INTER/TYPE11");
      ADD(1,"1: Deactivation of stiffness on nodes");
      ADD(2,"2: Deactivation of stiffness on elements");
      ADD(3,"3: Change node coordinates to avoid initial penetrations");
      ADD(5,"5: Gap is variable with time and initial gap is computed as gap0 = Gap - P0, with P0 the initial penetration");
      ADD(6,"6: Gap is variable with time, but initial penetration is computed as (the node is slightly depenetrated): gap0 = Gap-P0-5% * (Gap-P0)");
      ADD(1000,"1000: No action");
    }
    SCALAR(STIFF_DC)            { DIMENSION="DIMENSIONLESS"; }
    SCALAR(FRIC_DC)             { DIMENSION="DIMENSIONLESS"; }
    SCALAR(SORT_FACT)           { DIMENSION="DIMENSIONLESS"; }
    
    DATA(Fric_ID);

    if (Ithe > 0)
    {
      SCALAR(Kthe)
      {
              if (fct_ID_k==NONE)      { TITLE = "Heat exchange coefficient"  ; DIMENSION = "thermal_convectivity"; }
              else                     { TITLE = "Heat exchange scale factor" ; DIMENSION = "DIMENSIONLESS"; }
      }
      DATA(fct_ID_k);
      SCALAR(A_scale_k)         { DIMENSION="pressure"; }
      SCALAR(Tint)              { DIMENSION="k"; }
      RADIO(IFORM1) {
        ADD(0,"0: Exchange only between interface (constant temperature) and shells (secondary side)");
        ADD(1,"1: Heat exchange between all pieces in contact");
      }

      SCALAR(F_RAD)                                 { DIMENSION="stefan_lorentz_constant"; }
      SCALAR(D_RAD)                                 { DIMENSION="l"; }
    }
}

// File format
FORMAT(radioss41) {
    HEADER("/INTER/TYPE11/%d/%-40s",_ID_,TITLE);

    COMMENT("#  sec_id   main_id    Istf            Igap");
    CARD("%8d%8d%8d%8s%8d",secondaryentityids,mainentityids,Istf,empty_string,Igap);

    COMMENT("#          STFAC            FRIC          GAPmin          Tstart           Tstop");
    CARD("%16lg%16lg%16lg%16lg%16lg",TYPE11_SCALE,FRIC,GAP,TSTART,TSTOP);

    COMMENT("#    IBC                  INACTI           VIS_S           VIS_F          BUMULT");
    CARD("%5s%1d%1d%1d%16s%8d%16lg%16lg%16lg",empty_string,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,empty_string,INACTIV,STIFF_DC,FRIC_DC,SORT_FACT);
}

FORMAT(radioss42) {
    HEADER("/INTER/TYPE11/%d/%-40s",_ID_,TITLE);

    COMMENT("#  sec_id   main_id    Istf            Igap Multimp");
    CARD("%8d%8d%8d%8s%8d%8d",secondaryentityids,mainentityids,Istf,empty_string,Igap,Multimp);

    COMMENT("#          STFAC            FRIC          GAPmin          Tstart           Tstop");
    CARD("%16lg%16lg%16lg%16lg%16lg",TYPE11_SCALE,FRIC,GAP,TSTART,TSTOP);

    COMMENT("#    IBC                  INACTI           VIS_S           VIS_F          BUMULT");
    CARD("%5s%1d%1d%1d%16s%8d%16lg%16lg%16lg",empty_string,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,empty_string,INACTIV,STIFF_DC,FRIC_DC,SORT_FACT);
}

FORMAT(radioss51) {
    HEADER("/INTER/TYPE11/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("#   sec_id   main_id      Istf                Igap   Multimp                Idel");
    CARD("%10d%10d%10d%10s%10d%10d%10s%10d",secondaryentityids,mainentityids,Istf,empty_string,Igap,Multimp,empty_string,NodDel11);

    COMMENT("#              STFAC                FRIC              GAPmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg",TYPE11_SCALE,FRIC,GAP,TSTART,TSTOP);

    COMMENT("#      IBC                        INACTI               VIS_S               VIS_F              BUMULT");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20lg%20lg",empty_string,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,empty_string,INACTIV,STIFF_DC,FRIC_DC,SORT_FACT);
}

FORMAT(radioss110) {
    HEADER("/INTER/TYPE11/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# line_IDs  line_IDm      Istf                Igap   Multimp                Idel");
    CARD("%10d%10d%10d%10s%10d%10d%10s%10d",secondaryentityids,mainentityids,Istf,empty_string,Igap,Multimp,empty_string,NodDel11);

    COMMENT("#              Stmin               Stmax   Percent_mesh_size");
    CARD("%20lg%20lg%20lg",STMIN,STMAX,PrMesh_Size);

    COMMENT("#              Stfac                Fric              GAPmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg",TYPE11_SCALE,FRIC,GAP,TSTART,TSTOP);

    COMMENT("#      IBC                        Inacti               VIS_S               VIS_F              Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20lg%20lg",empty_string,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,empty_string,INACTIV,STIFF_DC,FRIC_DC,SORT_FACT);
}

FORMAT(radioss120) {
    HEADER("/INTER/TYPE11/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# line_IDs  line_IDm      Istf                Igap                          Idel");
    CARD("%10d%10d%10d%10s%10d%10s%10s%10d",secondaryentityids,mainentityids,Istf,empty_string,Igap,empty_string,empty_string,NodDel11);

    COMMENT("#              Stmin               Stmax   Percent_mesh_size               dtmin     Iform   sens_ID");
    CARD("%20lg%20lg%20lg%20lg%10d%10d",STMIN,STMAX,PrMesh_Size,Tmin,IFORM,ISENSOR);

    COMMENT("#              Stfac                Fric              GAPmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg",TYPE11_SCALE,FRIC,GAP,TSTART,TSTOP);

    COMMENT("#      IBC                        Inacti               VIS_S               VIS_F              Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20lg%20lg",empty_string,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,empty_string,INACTIV,STIFF_DC,FRIC_DC,SORT_FACT);
}

FORMAT(radioss140) {
    HEADER("/INTER/TYPE11/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# line_IDs  line_IDm      Istf      Ithe      Igap                          Idel");
    CARD("%10d%10d%10d%10d%10d%10s%10s%10d",secondaryentityids,mainentityids,Istf,Ithe,Igap,empty_string,empty_string,NodDel11);

    COMMENT("#              Stmin               Stmax   Percent_mesh_size               dtmin     Iform   sens_ID");
    CARD("%20lg%20lg%20lg%20lg%10d%10d",STMIN,STMAX,PrMesh_Size,Tmin,IFORM,ISENSOR);

    COMMENT("#              Stfac                Fric              GAPmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg",TYPE11_SCALE,FRIC,GAP,TSTART,TSTOP);

    COMMENT("#      IBC                        Inacti               VIS_S               VIS_F              Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20lg%20lg",empty_string,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,empty_string,INACTIV,STIFF_DC,FRIC_DC,SORT_FACT);

    if (Ithe > 0)
    {
        COMMENT("#               Kthe   fct_IDK             AscaleK                Tint Ithe_form");
        CARD("%20lg%10d%20lg%20lg%10d",Kthe,fct_ID_k,A_scale_k,Tint,IFORM1);
        COMMENT("#               Frad                Drad");
        CARD("%20lg%20lg",F_RAD,D_RAD);
    }
}

FORMAT(radioss2018) {
    HEADER("/INTER/TYPE11/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# line_IDs  line_IDm      Istf      Ithe      Igap                          Idel");
    CARD("%10d%10d%10d%10d%10d%10s%10s%10d",secondaryentityids,mainentityids,Istf,Ithe,Igap,empty_string,empty_string,NodDel11);

    COMMENT("#              Stmin               Stmax   Percent_mesh_size               dtmin     Iform   sens_ID");
    CARD("%20lg%20lg%20lg%20lg%10d%10d",STMIN,STMAX,PrMesh_Size,Tmin,IFORM,ISENSOR);

    COMMENT("#              Stfac                Fric              GAPmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg",TYPE11_SCALE,FRIC,GAP,TSTART,TSTOP);

    COMMENT("#      IBC                        Inacti               VIS_S               VIS_F              Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20lg%20lg",empty_string,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,empty_string,INACTIV,STIFF_DC,FRIC_DC,SORT_FACT);

    COMMENT("#                                                                                            fric_ID");
    CARD("%10s%10s%10s%10s%20s%20s%10s%10d",empty_string,empty_string,empty_string,empty_string,empty_string,empty_string,empty_string,Fric_ID);

    if (Ithe > 0)
    {
        COMMENT("#               Kthe   fct_IDK             AscaleK                Tint Ithe_form");
        CARD("%20lg%10d%20lg%20lg%10d",Kthe,fct_ID_k,A_scale_k,Tint,IFORM1);
        COMMENT("#               Frad                Drad");
        CARD("%20lg%20lg",F_RAD,D_RAD);
    }
}
