//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /INTER/TYPE7
// 

ATTRIBUTES(COMMON)
{
// INPUT ATTRIBUTES
    secondaryentityids                        = VALUE(SETS,"Secondary node group identifier") { SUBTYPES = (/SETS/GRNOD) ; }
    mainentityids                             = VALUE(SETS,"Main surface identifier")    { SUBTYPES = (/SETS/SURF) ; }
    type7_Istf                                = VALUE(INT,"Interface stiffness definition flag");
    I_TH                                      = VALUE(INT,"Heat contact flag");
    Igap                                      = VALUE(INT,"Gap/element option flag");
    Multimp                                   = VALUE(INT,"Maximum average number of impacted main segments per secondary node");
    Ibag                                      = VALUE(INT,"Airbag vent holes closure flag in case of contact");
    Idel7                                     = VALUE(INT,"Node and segment deletion flag");
    Icurv                                     = VALUE(INT,"Gap envelope with curvature");
    Iadm                                      = VALUE(INT,"Computing local curvature flag for adaptive meshing");
    GAPSCALE                                  = VALUE(FLOAT,"Gap scale factor");
    GAPMAX                                    = VALUE(FLOAT,"Maximum gap");
    FpenMax                                   = VALUE(FLOAT,"Maximum fraction of initial penetration");
    STMIN                                     = VALUE(FLOAT,"Minimum stiffness");
    STMAX                                     = VALUE(FLOAT,"Maximum stiffness");
    PrMesh_Size                               = VALUE(FLOAT,"Percentage of mesh size","%mesh_size");
    Tmin                                      = VALUE(FLOAT,"Minimum interface time step");
    IKREM                                     = VALUE(INT,"Flag for deactivating secondary nodes if element size < gap value, in case of self-impact contact");
    ICOG                                      = VALUE(INT,"Flag for deactivating the secondary node, if the same contact pair (nodes) has been defined in interface TYPE2");
    TYPE7_N1                                  = VALUE(NODE,"First node identifier");
    TYPE7_N2                                  = VALUE(NODE,"Second node identifier");
    TYPE7_SCALE                               = VALUE(FLOAT,"Stiffness scale factor applied to main side of the interface (if Istf ? 1) or Interface stiffness (if Istf = 1)");
    FRIC                                      = VALUE(FLOAT,"Coulomb friction");
    GAP                                       = VALUE(FLOAT,"Minimum gap for impact activation");
    TSTART                                    = VALUE(FLOAT,"Start time");
    TSTOP                                     = VALUE(FLOAT,"Time for temporary deactivation");
    Deactivate_X_BC                           = VALUE(INT,"Deactivation flag of boundary conditions at impact");
    Deactivate_Y_BC                           = VALUE(INT,"Deactivation flag of boundary conditions at impact");
    Deactivate_Z_BC                           = VALUE(INT,"Deactivation flag of boundary conditions at impact");
    INACTIV                                   = VALUE(INT,"Deactivation flag of stiffness in case of initial penetrations");
    STIFF_DC                                  = VALUE(FLOAT,"Critical damping coefficient on interface stiffness");
    FRIC_DC                                   = VALUE(FLOAT,"Critical damping coefficient on interface friction");
    SORT_FACT                                 = VALUE(FLOAT,"Sorting factor is used to speed up the sorting algorithm and is machine dependent");
    Ifric                                     = VALUE(INT,"Friction formulation flag");
    Ifiltr                                    = VALUE(INT,"Friction filtering flag");
    Xfreq                                     = VALUE(FLOAT,"Filtering coefficient");
    IFORM                                     = VALUE(INT,"Friction penalty formulation type");
    ISENSOR                                   = VALUE(SENSOR,"Sensor identifier to activate/deactivate the interface") {SUBTYPES=(/SENSOR/SENSOR_DEFINE);}
    Crx_Fun                                   = VALUE(FUNCT,"Friction coefficient with temperature function identifier");
    scale1                                    = VALUE(FLOAT,"Abscissa scale factor on fct_IDF");
    Fric_ID                                   = VALUE(FRICTION,"Friction coefficient with temperature function identifier");
    C1                                        = VALUE(FLOAT,"Friction law coefficient");
    C2                                        = VALUE(FLOAT,"Friction law coefficient");
    C3                                        = VALUE(FLOAT,"Friction law coefficient");
    C4                                        = VALUE(FLOAT,"Friction law coefficient");
    C5                                        = VALUE(FLOAT,"Friction law coefficient");
    C6                                        = VALUE(FLOAT,"Friction law coefficient");
    NRadm                                     = VALUE(INT,"Number of elements through a 90 degrees radius");
    Padm                                      = VALUE(FLOAT,"Criteria on the percentage of penetration");
    Angladm                                   = VALUE(FLOAT,"Angle criteria");
    R_TH                                      = VALUE(FLOAT,"Heat exchange coefficient");
    fct_ID_k                                  = VALUE(FUNCT,"Function identifier for thermal heat exchange definition with contact pressure");
    T_Initial                                 = VALUE(FLOAT,"Interface temperature");
    IFORM1                                    = VALUE(INT,"Heat contact formulation flag");
    Crx                                       = VALUE(FLOAT,"Abscissa scale factor on fct_IDK");
    F_RAD                                     = VALUE(FLOAT,"Radiation factor");
    D_RAD                                     = VALUE(FLOAT,"Maximum distance for radiation computation");
    Fmax                                      = VALUE(FLOAT,"Frictional heating factor of secondary");
    HEAT_AL                                   = VALUE(FLOAT,"Frictional heating factor of main");

    empty_string                              = VALUE(STRING, "");

// HM INTERNAL
    KEYWORD_STR                               = VALUE(STRING,"Solver Keyword");
    NUM_COMMENTS                              = SIZE("NUM_COMMENTS");
    CommentEnumField                          = VALUE(INT,"User Comments");
    COMMENTS                                  = ARRAY[NUM_COMMENTS](STRING,"Entity Comments");
    TITLE                                     = VALUE(STRING,"");

// RADIOSS INTERNAL
    ID_TYPE19                                 = VALUE(INT,"/INTER/TYPE19 that is creating this interface","ID_TYPE19");
    IEDGE_TYPE19                              = VALUE(INT,"ASSOCIATED /INTER/TYPE19 Iedge Value","IEDGE_TYPE19");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                               = 9000;
    COMMENTS                                  = 5109;
    CommentEnumField                          = 7951;
    NUM_COMMENTS                              = 5110;
    type7_Istf                                = 4019;
    I_TH                                      = 4248;
    Igap                                      = 8045;
    Multimp                                   = 8046;
    Ibag                                      = 6300;
    Idel7                                     = 6301;
    Icurv                                     = 4020;
    Iadm                                      = 4356;
    GAPSCALE                                  = 4021;
    GAPMAX                                    = 4022;
    FpenMax                                   = 4795;
    STMIN                                     = 4023;
    STMAX                                     = 4024;
    PrMesh_Size                               = 4828;
    Tmin                                      = 4831;
    IKREM                                     = 8047;
    ICOG                                      = 8048;
    TYPE7_N1                                  = 4025;
    TYPE7_N2                                  = 4026;
    TYPE7_SCALE                               = 4027;
    FRIC                                      = 5;
    GAP                                       = 5153;
    TSTART                                    = 11;
    TSTOP                                     = 12;
    Deactivate_X_BC                           = 7020;
    Deactivate_Y_BC                           = 7021;
    Deactivate_Z_BC                           = 7022;
    INACTIV                                   = 94;
    STIFF_DC                                  = 6;
    FRIC_DC                                   = 8;
    SORT_FACT                                 = 5321;
    Ifric                                     = 6303;
    Ifiltr                                    = 6304;
    Xfreq                                     = 6305;
    IFORM                                     = 4028;
    ISENSOR                                   = 5157;
    Crx_Fun                                   = 4125;
    scale1                                    = 4528;
    Fric_ID                                   = 6550;
    C1                                        = 6306;
    C2                                        = 6307;
    C3                                        = 6308;
    C4                                        = 6309;
    C5                                        = 6310;
    C6                                        = 6311;
    NRadm                                     = 4475;
    Padm                                      = 4476;
    Angladm                                   = 4477;
    R_TH                                      = 4247;
    fct_ID_k                                  = 695;
    T_Initial                                 = 4113;
    IFORM1                                    = 4796;
    Crx                                       = 4122;
    F_RAD                                     = 697;
    D_RAD                                     = 698;
    Fmax                                      = 4830;
    HEAT_AL                                   = 4344;
    Itied                                     = 5322;
    ID_TYPE19                                 = -1; /*not needed to be exposed in HM*/
    IEDGE_TYPE19                                 = -1; /*not needed to be exposed in HM*/
    empty_string                              = -1;
    TITLE                                     = -1;
}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    type7_Istf                                = 0;
    Igap                                      = 0;
    Multimp                                   = 4;
    Ibag                                      = 0;
    Idel7                                     = 0;
    Icurv                                     = 0;
    Iadm                                      = 0;
    GAPSCALE                                  = 1.0;
    STMAX                                     = 1e31;
    PrMesh_Size                               = 0.4;
    IKREM                                     = 0;
    ICOG                                      = 0;
    TYPE7_SCALE                               = 0.0;
    FRIC                                      = 0.0;
    INACTIV                                   = 0;
    STIFF_DC                                  = 0.05;
    FRIC_DC                                   = 1.0;
    SORT_FACT                                 = 0.20;
    Ifric                                     = 0;
    Ifiltr                                    = 0;
    Xfreq                                     = 1.0;
    IFORM                                     = 0;
    scale1                                    = 1.0;
    Padm                                      = 0;
    R_TH                                      = 0.0;
    IFORM1                                    = 0;
    Crx                                       = 1.0;

    empty_string                              = "";
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }

    ASSIGN(KEYWORD_STR, "/INTER/TYPE7");

    DATA(secondaryentityids);
    DATA(mainentityids);
    RADIO(type7_Istf) {
      ADD(0,"0: Set to value defined in /DEFAULT/INTER/TYPE7");
      ADD(1,"1: Interface stiffness is entered as Stfac");
      ADD(2,"2: Interface stiffness is the average of the main and secondary stiffness");
      ADD(3,"3: Interface stiffness is the maximum of the main and secondary stiffness");
      ADD(4,"4: Interface stiffness is the minimum of the main and secondary stiffness");
      ADD(5,"5: Interface stiffness is the main and secondary stiffness in series");
      ADD(1000,"1000: Interface stiffness is the main and secondary stiffness in series");
    }
    RADIO(I_TH) {
      ADD(0,"0: No heat transfer or heat friction");
      ADD(1,"1: Heat transfer or heat friction activated");
    }
    RADIO(Igap) {
      ADD(0,"0: Set to value defined in /DEFAULT/INTER/TYPE7");
      ADD(1,"1: Variable gap varies according to the characteristics of the impacted main surface and the impacting secondary node");
      ADD(2,"2: Variable gap + gap scale correction of the computed gap");
      ADD(3,"3: Variable gap + gap scale correction of the computed gap + size of the mesh is taken into account to avoid initial penetrations during self-contact");
      ADD(1000,"1000: Constant gap; equal to the minimum gap Gapmin");
    }
    RADIO(Ibag) {
      ADD(0,"0: Set to value defined in /DEFAULT/INTER/TYPE7");
      ADD(1,"1: Closure");
      ADD(2,"2: No closure (default if /DEFAULT/INTER/TYPE7 is not defined");
    }
    RADIO(Idel7) {
      ADD(0,"0: Set to value defined in /DEFAULT/INTER/TYPE7");
      ADD(1,"1: When all the elements (4-node shells, 3-node shells, solids) associated to one segment are deleted, the segment is removed from the main side of the interface");
      ADD(2,"2: When a 4-node shell, a 3-node shell or a solid element is deleted, the corresponding segment is removed from the main side of the interface");
      ADD(1000,"1000: No deletion");
      ADD(-1,"-1: Same as = 1, except non-connected nodes are not removed from the secondary side of the interface");
      ADD(-2,"-2: Same as = 2, except non-connected nodes are not removed from the secondary side of the interface");
    }
    RADIO(Icurv) {
      ADD(0,"0: No curvature");
      ADD(1,"1: Spherical curvature");
      ADD(2,"2: Cylindrical curvature");
      ADD(3,"3: Automatic bicubic surface");
    }
    RADIO(Iadm) {
      ADD(0,"0: Not activated");
      ADD(1,"1: Interface update according mesh size");
      ADD(2,"2: Interface update according mesh size, penetration and angle");
    }

    if (Igap==2 ||Igap==3)
    {
      SCALAR(GAPSCALE)          { DIMENSION="DIMENSIONLESS"; }
      SCALAR(GAPMAX)            { DIMENSION="l"; }
    }
    SCALAR(FpenMax)             { DIMENSION="DIMENSIONLESS"; }
    
    SCALAR(STMIN)               {DIMENSION="translation_stiffness";}
    SCALAR(STMAX)               {DIMENSION="translation_stiffness";}
    if (Igap==3)
    {
      SCALAR(PrMesh_Size)       { DIMENSION="DIMENSIONLESS"; }
    }
    SCALAR(Tmin)                { DIMENSION="t"; }
    RADIO(IKREM)
    {
      ADD(0,"0: Set to value defined in /DEFAULT/INTER/TYPE7");
      ADD(1,"1: No deactivation of secondary nodes");
      ADD(2,"2: Deactivation of secondary nodes");
    }
    RADIO(ICOG)
    {
      ADD(0,"0: Set to the value defined in /DEFAULT/INTER/TYPE7");
      ADD(1,"1: Secondary nodes in /INTER/TYPE2 tied contacts are removed from this contact");
      ADD(3,"3: No change to secondary nodes");
    }

    if (Icurv==1 ||Icurv==2)
    {
      DATA(TYPE7_N1);
      DATA(TYPE7_N2);
    }

    SCALAR(TYPE7_SCALE)
    {
      if (type7_Istf==1)      { DIMENSION="translation_stiffness"; }
      else              { DIMENSION="DIMENSIONLESS"; }
    }

    SCALAR(FRIC)                { DIMENSION="DIMENSIONLESS"; }
    SCALAR(GAP)                 { DIMENSION="l"; }
    SCALAR(TSTART)              { DIMENSION="t"; }
    SCALAR(TSTOP)               { DIMENSION="t"; }

    FLAG(Deactivate_X_BC);
    FLAG(Deactivate_Y_BC);
    FLAG(Deactivate_Z_BC);

    RADIO(INACTIV) {
      ADD(0,"0: Set to value defined in /DEFAULT/INTER/TYPE7");
      ADD(1,"1: Deactivation of stiffness on nodes");
      ADD(2,"2: Deactivation of stiffness on elements");
      ADD(3,"3: Change node coordinates to avoid initial penetrations");
      ADD(5,"5: Gap is variable with time and initial gap is adjusted as: gap0 = Gap - P0, where  P0 is the initial penetration");
      ADD(6,"6: Gap is variable with time, but initial gap is adjusted as (the node is slightly depenetrated): gap0 = Gap-P0-5% * (Gap-P0)");
      ADD(1000,"1000: No action");
    }
    SCALAR(STIFF_DC)            { DIMENSION="DIMENSIONLESS"; }
    SCALAR(FRIC_DC)             { DIMENSION="DIMENSIONLESS"; }
    SCALAR(SORT_FACT)           { DIMENSION="DIMENSIONLESS"; }
    RADIO(Ifric) {
      ADD(0,"0: (Default) Static Coulomb friction law");
      ADD(1,"1: Generalized viscous friction law");
      ADD(2,"2: (Modified) Darmstad friction law");
      ADD(3,"3: Renard friction lawe");
    }
    RADIO(Ifiltr) {
      ADD(0,"0: (Default) No filter is used");
      ADD(1,"1: Simple numerical filter");
      ADD(2,"2: Standard -3dB filter with filtering period");
      ADD(3,"3: Standard -3dB filter with cutting frequency");
    }
    SCALAR(Xfreq)               { DIMENSION="f"; }
    RADIO(IFORM) {
      ADD(0,"0: Set to the value defined in /DEFAULT/INTER/TYPE7");
      ADD(1,"1: Viscous (total) formulation");
      ADD(2,"2: Stiffness (incremental) formulation");
    }
    DATA(ISENSOR);
    DATA(Crx_Fun);
    SCALAR(scale1)              { DIMENSION="DIMENSIONLESS"; }
    DATA(Fric_ID);

    if(Ifric>0) 
    {
      SCALAR(C1) {
        if (Ifric==1)      { TITLE = "Friction C1 (Viscous law)"  ; DIMENSION = "inverse_of_pressure"; }
        else if (Ifric==2) { TITLE = "Friction C1 (Darmstad law)" ; DIMENSION = "inverse_of_square_of_pressure"; }
        else if (Ifric==3) { TITLE = "Friction C1 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
                 }  
      SCALAR(C2) {
        if (Ifric==1)      { TITLE = "Friction C2 (Viscous law)"  ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==2) { TITLE = "Friction C2 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==3) { TITLE = "Friction C2 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }      }  
      SCALAR(C3) {
        if (Ifric==1)      { TITLE = "Friction C3 (Viscous law)"  ; DIMENSION = "inverse_surfacic_power"; }
        else if (Ifric==2) { TITLE = "Friction C3 (Darmstad law)" ; DIMENSION = "inverse_of_pressure"; }
        else if (Ifric==3) { TITLE = "Friction C3 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
                 }  
      SCALAR(C4) {
        if (Ifric==1)      { TITLE = "Friction C4 (Viscous law)"  ; DIMENSION = "inverse_of_square_of_pressure"; }
        else if (Ifric==2) { TITLE = "Friction C4 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
        else if (Ifric==3) { TITLE = "Friction C4 (Renard law)"   ; DIMENSION = "DIMENSIONLESS"; }
                 }  
      SCALAR(C5) {
        if (Ifric==1)      { TITLE = "Friction C5 (Viscous law)"  ; DIMENSION = "inverse_of_square_of_speed"; }
        else if (Ifric==2) { TITLE = "Friction C5 (Darmstad law)" ; DIMENSION = "DIMENSIONLESS"; }
        else if (Ifric==3) { TITLE = "Friction C5 (Renard law)"   ; DIMENSION = "velocity"; }
                 }
    }
    if(Ifric>1) {
      SCALAR(C6) {
       if (Ifric==2)      { TITLE = "Friction C6 (Darmstad law)" ; DIMENSION = "inverse_of_speed"; }
       else if (Ifric==3) { TITLE = "Friction C6 (Renard law)"   ; DIMENSION = "velocity"; }
                } 
    }


    if (Iadm == 2)
    {
      SCALAR(NRadm)               { DIMENSION="DIMENSIONLESS"; }
      SCALAR(Padm)                { DIMENSION="DIMENSIONLESS"; }
      SCALAR(Angladm)             { DIMENSION="a"; }
    }

    if (I_TH == 1)
    {
      DATA(fct_ID_k);
      SCALAR(R_TH)
      {
              if (fct_ID_k==NONE)      { TITLE = "Heat exchange coefficient"  ; DIMENSION = "thermal_convectivity"; }
              else                     { TITLE = "Heat exchange scale factor" ; DIMENSION = "DIMENSIONLESS"; }
      }
      
      SCALAR(T_Initial)                             { DIMENSION="k"; }
      RADIO(IFORM1) {
        ADD(0,"0: Exchange only between interface (constant temperature) and shells (secondary side)");
        ADD(1,"1: Heat exchange between all pieces in contact");
      }
      SCALAR(Crx)                                   { DIMENSION="pressure"; }

      SCALAR(F_RAD)                                 { DIMENSION="stefan_lorentz_constant"; }
      SCALAR(D_RAD)                                 { DIMENSION="l"; }
      SCALAR(Fmax)                                  { DIMENSION="DIMENSIONLESS"; }
      SCALAR(HEAT_AL)                               { DIMENSION="DIMENSIONLESS"; }
    }
}

// File format
FORMAT(radioss41) {
    HEADER("/INTER/TYPE7/%d/%-40s",_ID_,TITLE);

    COMMENT("#grnod_id surf_id    Istf            Igap Multimp");
    CARD("%8d%8d%8d%8s%8d%8d",secondaryentityids,mainentityids,type7_Istf,empty_string,Igap,Multimp);

    COMMENT("#          STFAC            FRIC          GAPmin          Tstart           Tstop");
    CARD("%16lg%16lg%16lg%16lg%16lg",TYPE7_SCALE,FRIC,GAP,TSTART,TSTOP);

    COMMENT("#    IBC                  INACTI           VIS_S           VIS_F          BUMULT");
    CARD("%5s%1d%1d%1d%16s%8d%16lg%16lg%16lg",empty_string,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,empty_string,INACTIV,STIFF_DC,FRIC_DC,SORT_FACT);

}

FORMAT(radioss44) {
    HEADER("/INTER/TYPE7/%d/%-40s",_ID_,TITLE);

    COMMENT("#grnod_id surf_id    Istf            Igap   Multimp    Ibag   Idel7");
    CARD("%8d%8d%8d%8s%8d%8d%8d%8d",secondaryentityids,mainentityids,type7_Istf,empty_string,Igap,Multimp,Ibag,Idel7);

    COMMENT("#          STFAC            FRIC          GAPmin          Tstart           Tstop");
    CARD("%16lg%16lg%16lg%16lg%16lg",TYPE7_SCALE,FRIC,GAP,TSTART,TSTOP);

    COMMENT("#    IBC                  INACTI           VIS_S           VIS_F          BUMULT");
    CARD("%5s%1d%1d%1d%16s%8d%16lg%16lg%16lg",empty_string,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,empty_string,INACTIV,STIFF_DC,FRIC_DC,SORT_FACT);

    COMMENT("#  Ifric  Ifiltr           Xfreq   Iform");
    CARD("%8d%8d%16lg%8d",Ifric,Ifiltr,Xfreq,IFORM);
}

FORMAT(radioss51) {
    HEADER("/INTER/TYPE7/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# grnod_id   surf_id      Istf                Igap   Multimp      Ibag      Idel     Icurv");
    CARD("%10d%10d%10d%10s%10d%10d%10d%10d%10d",secondaryentityids,mainentityids,type7_Istf,empty_string,Igap,Multimp,Ibag,Idel7,Icurv);

    COMMENT("#          Gap_scale             Gap_max");
    CARD("%20lg%20lg",GAPSCALE,GAPMAX);
    COMMENT("#              STMIN               STMAX");
    CARD("%20lg%20lg",STMIN,STMAX);

    if (Icurv==1 ||Icurv==2)
    {
      COMMENT("#       N1        N2");
      CARD("%10d%10d",TYPE7_N1,TYPE7_N2);
    }

    COMMENT("#              STFAC                FRIC              GAPmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg",TYPE7_SCALE,FRIC,GAP,TSTART,TSTOP);

    COMMENT("#      IBC                        INACTI               VIS_S               VIS_F              BUMULT");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20lg%20lg",empty_string,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,empty_string,INACTIV,STIFF_DC,FRIC_DC,SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform");
    CARD("%10d%10d%20lg%10d",Ifric,Ifiltr,Xfreq,IFORM);

    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg",C1,C2,C3,C4,C5);
    }

    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg",C6);
    }
}

FORMAT(radioss90) {
    HEADER("/INTER/TYPE7/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# grnod_id   surf_id      Istf      Ithe      Igap   Multimp      Ibag      Idel     Icurv      Iadm");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10d%10d%10d",secondaryentityids,mainentityids,type7_Istf,I_TH,Igap,Multimp,Ibag,Idel7,Icurv,Iadm);

    COMMENT("#          Fscalegap             Gap_max");
    CARD("%20lg%20lg",GAPSCALE,GAPMAX);
    COMMENT("#              Stmin               Stmax");
    CARD("%20lg%20lg",STMIN,STMAX);

    if (Icurv==0 || Icurv==1)
    {
      COMMENT("# node_ID1  node_ID2");
      CARD("%10d%10d",TYPE7_N1,TYPE7_N2);
    }

    COMMENT("#              Stfac                Fric              GAPmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg",TYPE7_SCALE,FRIC,GAP,TSTART,TSTOP);

    COMMENT("#      IBC                        Inacti               VIS_S               VIS_F              BUMULT");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20lg%20lg",empty_string,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,empty_string,INACTIV,STIFF_DC,FRIC_DC,SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform");
    CARD("%10d%10d%20lg%10d",Ifric,Ifiltr,Xfreq,IFORM);

    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg",C1,C2,C3,C4,C5);
    }

    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg",C6);
    }
    
    if (I_TH > 1)
    {
        COMMENT("#               Rthe                                    Tint");
        CARD("%20lg%20s%20lg",R_TH,empty_string,T_Initial);
    }
    
    if (Iadm == 2)
    {
        COMMENT("#    NRadm                Padm             Angladm");
        CARD("%10d%20lg%20lg",NRadm,Padm,Angladm);
    }
}

FORMAT(radioss100) {
    HEADER("/INTER/TYPE7/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# grnod_id   surf_id      Istf      Ithe      Igap   Multimp      Ibag      Idel     Icurv      Iadm");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10d%10d%10d",secondaryentityids,mainentityids,type7_Istf,I_TH,Igap,Multimp,Ibag,Idel7,Icurv,Iadm);

    COMMENT("#          Fscalegap             Gap_max");
    CARD("%20lg%20lg",GAPSCALE,GAPMAX);
    COMMENT("#              Stmin               Stmax");
    CARD("%20lg%20lg",STMIN,STMAX);

    if (Icurv==1 || Icurv==2)
    {
      COMMENT("# node_ID1  node_ID2");
      CARD("%10d%10d",TYPE7_N1,TYPE7_N2);
    }

    COMMENT("#              Stfac                Fric              GAPmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg",TYPE7_SCALE,FRIC,GAP,TSTART,TSTOP);

    COMMENT("#      IBC                        Inacti               VIS_S               VIS_F              Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20lg%20lg",empty_string,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,empty_string,INACTIV,STIFF_DC,FRIC_DC,SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform");
    CARD("%10d%10d%20lg%10d",Ifric,Ifiltr,Xfreq,IFORM);

    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg",C1,C2,C3,C4,C5);
    }

    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg",C6);
    }

    if (I_TH == 1)
    {
        COMMENT("#               Rthe                                    Tint Ithe_form");
        CARD("%20lg%20s%20lg%10d",R_TH,empty_string,T_Initial,IFORM1);
    }
    
    if (Iadm == 2)
    {
        COMMENT("#    NRadm                Padm             Angladm");
        CARD("%10d%20lg%20lg",NRadm,Padm,Angladm);
    }
}

FORMAT(radioss110) {
    HEADER("/INTER/TYPE7/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# grnod_id   surf_id      Istf      Ithe      Igap   Multimp      Ibag      Idel     Icurv      Iadm");
    CARD("%10d%10d%10d%10d%10d%10d%10d%10d%10d%10d",secondaryentityids,mainentityids,type7_Istf,I_TH,Igap,Multimp,Ibag,Idel7,Icurv,Iadm);

    COMMENT("#          Fscalegap             Gap_max");
    CARD("%20lg%20lg",GAPSCALE,GAPMAX);
    COMMENT("#              Stmin               Stmax   Percent_mesh_size");
    CARD("%20lg%20lg%20lg",STMIN,STMAX,PrMesh_Size);

    if (Icurv==1 || Icurv==2)
    {
      COMMENT("# node_ID1  node_ID2");
      CARD("%10d%10d",TYPE7_N1,TYPE7_N2);
    }

    COMMENT("#              Stfac                Fric              GAPmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg",TYPE7_SCALE,FRIC,GAP,TSTART,TSTOP);

    COMMENT("#      IBC                        Inacti               VIS_S               VIS_F              Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20lg%20lg",empty_string,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,empty_string,INACTIV,STIFF_DC,FRIC_DC,SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform");
    CARD("%10d%10d%20lg%10d",Ifric,Ifiltr,Xfreq,IFORM);

    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg",C1,C2,C3,C4,C5);
    }

    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg",C6);
    }
    
    if (Iadm == 2)
    {
        COMMENT("#    NRadm                Padm             Angladm");
        CARD("%10d%20lg%20lg",NRadm,Padm,Angladm);
    }
    
    if (I_TH == 1)
    {
        COMMENT("#               Rthe                                    Tint Ithe_form");
        CARD("%20lg%20s%20lg%10d",R_TH,empty_string,T_Initial,IFORM1);
    }
}

FORMAT(radioss120) {
    HEADER("/INTER/TYPE7/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# grnod_id   surf_id      Istf      Ithe      Igap                Ibag      Idel     Icurv      Iadm");
    CARD("%10d%10d%10d%10d%10d%10s%10d%10d%10d%10d",secondaryentityids,mainentityids,type7_Istf,I_TH,Igap,empty_string,Ibag,Idel7,Icurv,Iadm);

    COMMENT("#          Fscalegap             Gap_max             Fpenmax");
    CARD("%20lg%20lg%20lg",GAPSCALE,GAPMAX,FpenMax);
    COMMENT("#              Stmin               Stmax   Percent_mesh_size               dtmin             Irem_gap");
    CARD("%20lg%20lg%20lg%20lg%10d",STMIN,STMAX,PrMesh_Size,Tmin,IKREM);

    if (Icurv==1 || Icurv==2)
    {
      COMMENT("# node_ID1  node_ID2");
      CARD("%10d%10d",TYPE7_N1,TYPE7_N2);
    }

    COMMENT("#              Stfac                Fric              GAPmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg",TYPE7_SCALE,FRIC,GAP,TSTART,TSTOP);

    COMMENT("#      IBC                        Inacti               VIS_S               VIS_F              Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20lg%20lg",empty_string,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,empty_string,INACTIV,STIFF_DC,FRIC_DC,SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform   sens_ID");
    CARD("%10d%10d%20lg%10d%10d",Ifric,Ifiltr,Xfreq,IFORM,ISENSOR);

    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg",C1,C2,C3,C4,C5);
    }

    if (Ifric > 1)
    {    
      COMMENT("#                 C6");
      CARD("%20lg",C6);
    }
    
    if (Iadm == 2)
    {
        COMMENT("#    NRadm                Padm             Angladm");
        CARD("%10d%20lg%20lg",NRadm,Padm,Angladm);
    }
    
    if (I_TH == 1)
    {
        COMMENT("#               Rthe                                    Tint Ithe_form");
        CARD("%20lg%20s%20lg%10d",R_TH,empty_string,T_Initial,IFORM1);
    }
}

FORMAT(radioss130) {
    HEADER("/INTER/TYPE7/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# grnod_id   surf_id      Istf      Ithe      Igap                Ibag      Idel     Icurv      Iadm");
    CARD("%10d%10d%10d%10d%10d%10s%10d%10d%10d%10d",secondaryentityids,mainentityids,type7_Istf,I_TH,Igap,empty_string,Ibag,Idel7,Icurv,Iadm);

    COMMENT("#          Fscalegap             Gap_max             Fpenmax");
    CARD("%20lg%20lg%20lg",GAPSCALE,GAPMAX,FpenMax);
    COMMENT("#              Stmin               Stmax   Percent_mesh_size               dtmin               Irem_gap   Irem_i2");
    CARD("%20lg%20lg%20lg%20lg%10d%10d",STMIN,STMAX,PrMesh_Size,Tmin,IKREM,ICOG);

    if (Icurv==1 || Icurv==2)
    {
      COMMENT("# node_ID1  node_ID2");
      CARD("%10d%10d",TYPE7_N1,TYPE7_N2);
    }

    COMMENT("#              Stfac                Fric              GAPmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg",TYPE7_SCALE,FRIC,GAP,TSTART,TSTOP);

    COMMENT("#      IBC                        Inacti               VIS_S               VIS_F              Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20lg%20lg",empty_string,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,empty_string,INACTIV,STIFF_DC,FRIC_DC,SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform   sens_ID");
    CARD("%10d%10d%20lg%10d%10d",Ifric,Ifiltr,Xfreq,IFORM,ISENSOR);

    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg",C1,C2,C3,C4,C5);
    }

    if (Ifric > 1)
    {    
      COMMENT("#                 C6");
      CARD("%20lg",C6);
    }

    if (Iadm == 2)
    {
        COMMENT("#    NRadm                Padm             Angladm");
        CARD("%10d%20lg%20lg",NRadm,Padm,Angladm);
    }
    
    if (I_TH == 1)
    {
        COMMENT("#               Rthe   fct_IDK                          Tint Ithe_form             AscaleK");
        CARD("%20lg%10d%10s%20lg%10d%20lg",R_TH,fct_ID_k,empty_string,T_Initial,IFORM1,Crx);
        COMMENT("#               Frad                Drad              Fheats              Fheatm");
        CARD("%20lg%20lg%20lg%20lg",F_RAD,D_RAD,Fmax,HEAT_AL);
    }
}

FORMAT(radioss140) {
    HEADER("/INTER/TYPE7/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# grnod_id   surf_id      Istf      Ithe      Igap                Ibag      Idel     Icurv      Iadm");
    CARD("%10d%10d%10d%10d%10d%10s%10d%10d%10d%10d",secondaryentityids,mainentityids,type7_Istf,I_TH,Igap,empty_string,Ibag,Idel7,Icurv,Iadm);

    COMMENT("#          Fscalegap             Gap_max             Fpenmax");
    CARD("%20lg%20lg%20lg",GAPSCALE,GAPMAX,FpenMax);
    COMMENT("#              Stmin               Stmax   Percent_mesh_size               dtmin  Irem_gap   Irem_i2");
    CARD("%20lg%20lg%20lg%20lg%10d%10d",STMIN,STMAX,PrMesh_Size,Tmin,IKREM,ICOG);

    if (Icurv==1 || Icurv==2)
    {
      COMMENT("# node_ID1  node_ID2");
      CARD("%10d%10d",TYPE7_N1,TYPE7_N2);
    }

    COMMENT("#              Stfac                Fric              GAPmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg",TYPE7_SCALE,FRIC,GAP,TSTART,TSTOP);

    COMMENT("#      IBC                        Inacti               VIS_S               VIS_F              Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20lg%20lg",empty_string,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,empty_string,INACTIV,STIFF_DC,FRIC_DC,SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform   sens_ID   fct_IDF             AscaleF");
    CARD("%10d%10d%20lg%10d%10d%10d%20lg",Ifric,Ifiltr,Xfreq,IFORM,ISENSOR,Crx_Fun,scale1);

    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg",C1,C2,C3,C4,C5);
    }

    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg",C6);
    }
    
    if (Iadm == 2)
    {
        COMMENT("#    NRadm                Padm             Angladm");
        CARD("%10d%20lg%20lg",NRadm,Padm,Angladm);
    }
    
    if (I_TH == 1)
    {
        COMMENT("#               Kthe   fct_IDK                          Tint Ithe_form             AscaleK");
        CARD("%20lg%10d%10s%20lg%10d%20lg",R_TH,fct_ID_k,empty_string,T_Initial,IFORM1,Crx);
        COMMENT("#               Frad                Drad              Fheats              Fheatm");
        CARD("%20lg%20lg%20lg%20lg",F_RAD,D_RAD,Fmax,HEAT_AL);
    }
}

FORMAT(radioss2018) {
    HEADER("/INTER/TYPE7/%d",_ID_);
    CARD("%-100s", TITLE);

    COMMENT("# grnod_id   surf_id      Istf      Ithe      Igap                Ibag      Idel     Icurv      Iadm");
    CARD("%10d%10d%10d%10d%10d%10s%10d%10d%10d%10d",secondaryentityids,mainentityids,type7_Istf,I_TH,Igap,empty_string,Ibag,Idel7,Icurv,Iadm);

    COMMENT("#          Fscalegap             Gap_max             Fpenmax");
    CARD("%20lg%20lg%20lg",GAPSCALE,GAPMAX,FpenMax);
    COMMENT("#              Stmin               Stmax   Percent_mesh_size               dtmin  Irem_gap   Irem_i2");
    CARD("%20lg%20lg%20lg%20lg%10d%10d",STMIN,STMAX,PrMesh_Size,Tmin,IKREM,ICOG);

    if (Icurv==1 || Icurv==2)
    {
      COMMENT("# node_ID1  node_ID2");
      CARD("%10d%10d",TYPE7_N1,TYPE7_N2);
    }

    COMMENT("#              Stfac                Fric              GAPmin              Tstart               Tstop");
    CARD("%20lg%20lg%20lg%20lg%20lg",TYPE7_SCALE,FRIC,GAP,TSTART,TSTOP);

    COMMENT("#      IBC                        Inacti               VIS_S               VIS_F              Bumult");
    CARD("%7s%1d%1d%1d%20s%10d%20lg%20lg%20lg",empty_string,Deactivate_X_BC,Deactivate_Y_BC,Deactivate_Z_BC,empty_string,INACTIV,STIFF_DC,FRIC_DC,SORT_FACT);

    COMMENT("#    Ifric    Ifiltr               Xfreq     Iform   sens_ID   fct_IDF             AscaleF   fric_ID");
    CARD("%10d%10d%20lg%10d%10d%10d%20lg%10d",Ifric,Ifiltr,Xfreq,IFORM,ISENSOR,Crx_Fun,scale1,Fric_ID);

    if (Ifric > 0)
    {
      COMMENT("#                 C1                  C2                  C3                  C4                  C5");
      CARD("%20lg%20lg%20lg%20lg%20lg",C1,C2,C3,C4,C5);
    }

    if (Ifric > 1)
    {
      COMMENT("#                 C6");
      CARD("%20lg",C6);
    }
    
    if (Iadm == 2)
    {
        COMMENT("#    NRadm                Padm             Angladm");
        CARD("%10d%20lg%20lg",NRadm,Padm,Angladm);
    }

    if (I_TH == 1)
    {
        COMMENT("#               Kthe   fct_IDK                          Tint Ithe_form             AscaleK");
        CARD("%20lg%10d%10s%20lg%10d%20lg",R_TH,fct_ID_k,empty_string,T_Initial,IFORM1,Crx);
        COMMENT("#               Frad                Drad              Fheats              Fheatm");
        CARD("%20lg%20lg%20lg%20lg",F_RAD,D_RAD,Fmax,HEAT_AL);
    }
}
