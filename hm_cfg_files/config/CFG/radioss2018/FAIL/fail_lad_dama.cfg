//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//FAIL : LADEVEZE HC 9.0-SP1
//

ATTRIBUTES(COMMON){ 

	_HMCOMMENTSFLAG  				= VALUE(INT, "Write HM Comments");
	mat_id           				= VALUE(MAT,  "Material");

	K1							= VALUE( FLOAT, "Stiffness in direction 1") ;
	K2							= VALUE( FLOAT, "Stiffness in direction 2") ;
	K3							= VALUE( FLOAT, "Stiffness in direction 3") ;
	Gamma_1							= VALUE( FLOAT, "Coupling factor 1") ;
	Gamma_2							= VALUE( FLOAT, "Coupling factor 2") ;
	Y0						        = VALUE( FLOAT, "Yield energy damage") ;
	Yc 						        = VALUE( FLOAT, "Critical energy damage") ;
	
	k_LAD_DAMA						= VALUE( FLOAT, "Crack propagation velocity time constant") ;
	a_DAMA							= VALUE( FLOAT, "Crack propagation velocity parameter") ;
	Tau_max							= VALUE( FLOAT, "Dynamic time relaxation") ;
	
	Ifail_sh						= VALUE( INT,   "Shell failure flag") ;
	Ifail_so						= VALUE( INT,   "Flag for solid failure model") ;

	ID_CARD_EXIST					= VALUE(BOOL, "Give an Id");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
	_HMCOMMENTSFLAG=-1;
}


/*
DEFINITIONS(COMMON) {
  SUPPORTING=(MAT);
}
*/
GUI(COMMON){ 
  DATA(mat_id) {SUBTYPES=(/MAT/3D_COMP,/MAT/COMPSH,/MAT/COMPSO);}
  SCALAR (K1){DIMENSION="pressure"; }
  SCALAR (K2){DIMENSION="pressure"; }
  SCALAR (K3){DIMENSION="pressure"; }
  SCALAR (Gamma_1){DIMENSION="DIMENSIONLESS"; }
  SCALAR (Gamma_2){DIMENSION="DIMENSIONLESS"; }
  SCALAR (Y0){DIMENSION="energy"; }
  SCALAR (Yc){DIMENSION="energy"; }
  SCALAR (k_LAD_DAMA){DIMENSION="t"; }
  SCALAR (a_DAMA){DIMENSION="DIMENSIONLESS"; }
 mandatory:
  SCALAR (Tau_max){DIMENSION="t"; }
 optional:
 RADIO(Ifail_sh)
 {
    ADD(1,"1: Shell is deleted, if damage is reached for one layer") ;
    ADD(2,"2: Shell is deleted, if damage is reached for all layers") ;
 }
 RADIO(Ifail_so)
 {
    ADD(1,"1: Shell is deleted, if damage is reached for one integration point of solid") ;
    ADD(3,"3: Out of plane stress are set to 0 if damage is reached for 1 integration point of solid") ;
 }
/*   FLAG(ID_CARD_EXIST);*/
}



FORMAT(radioss130) {
	HEADER("/FAIL/LAD_DAMA/%d",mat_id);

	COMMENT("#                 K1                  K2                  K3             GAMMA_1             GAMMA_2") ;
	CARD("%20lg%20lg%20lg%20lg%20lg",K1, K2, K3, Gamma_1, Gamma_2);
	COMMENT("#                 Y0                  YC                   K                   A             TAU_MAX") ;
	CARD("%20lg%20lg%20lg%20lg%20lg",Y0, Yc, k_LAD_DAMA, a_DAMA, Tau_max);
	COMMENT("# IFAIL_SH  IFAIL_SO                                                                               ") ;
	CARD("%10d%10d",Ifail_sh, Ifail_so);

	
	if (ID_CARD_EXIST==TRUE)
	{
	 COMMENT("#  FAIL_ID") ;
	}
	FREE_CARD(ID_CARD_EXIST,"%10d", _ID_);
} 

FORMAT(radioss120) {
	HEADER("/FAIL/LAD_DAMA/%d",mat_id);

	COMMENT("#                 K1                  K2                  K3             GAMMA_1             GAMMA_2") ;
	CARD("%20lg%20lg%20lg%20lg%20lg",K1, K2, K3, Gamma_1, Gamma_2);
	COMMENT("#                 Y0                  YC                   K                   A             TAU_MAX") ;
	CARD("%20lg%20lg%20lg%20lg%20lg",Y0, Yc, k_LAD_DAMA, a_DAMA, Tau_max);
	COMMENT("# IFAIL_SH  IFAIL_SO                                                                               ") ;
	CARD("%10d%10d",Ifail_sh, Ifail_so);  
} 

FORMAT(radioss90) { 

	HEADER("/FAIL/LAD_DAMA/%d",mat_id);

	COMMENT("#                 K1                  K2                  K3             GAMMA_1             GAMMA_2") ;
	CARD("%20lg%20lg%20lg%20lg%20lg",K1, K2, K3, Gamma_1, Gamma_2);
	COMMENT("#                 Y0                  YC                   K                   A             TAU_MAX") ;
	CARD("%20lg%20lg%20lg%20lg%20lg",Y0, Yc, k_LAD_DAMA, a_DAMA, Tau_max);
	COMMENT("# IFAIL_SH  IFAIL_SO                                                                               ") ;
	CARD("%10d%10d",Ifail_sh, Ifail_so);  
} 