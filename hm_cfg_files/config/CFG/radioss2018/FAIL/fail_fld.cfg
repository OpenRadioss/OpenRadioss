//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// Failure model, forming limit diagram (FLD) Setup File
// 
ATTRIBUTES(COMMON){ 

	_HMCOMMENTSFLAG  			= VALUE(INT, "Write HM Comments");
	mat_id           			= VALUE(MAT,  "Material");

	fct_ID		  				= VALUE(FUNCT,"Function identifier (Forming limit diagram)");
	Ifail_sh					= VALUE(INT,  "Shell failure flag");
	fct_IDadv   				= VALUE(FUNCT,"Failure advancement diagram");
	Rani  						= VALUE(FLOAT,  "Average anisotropy factor");
  	Dadv      					= VALUE(FLOAT,  "Criterion for the crack advancement");
	Istrain						= VALUE(INT,  "Engineering or True input strain flag");
	Ixfem 						= VALUE(INT,  "XFEM flag ");
	
	ID_CARD_EXIST				= VALUE(BOOL, "Give an Id");
}


SKEYWORDS_IDENTIFIER(COMMON)
{
	_HMCOMMENTSFLAG=-1;

}
/*


DEFINITIONS(COMMON) {
  SUPPORTING=(MAT);
}

CHECK(COMMON) {
  FUNC != NONE;
  DADV >= 0.0;
  DADV <= 1.0;
}

GUI(COMMON) {
  DATA(MAT) {SUBTYPES=(/MAT/CHANG,
                       /MAT/COMPSH,
                       /MAT/COWPER,
                       /MAT/DAMA,
                       /MAT/ELAST,
                       /MAT/FABRI,
                       /MAT/FOAM_VISC,
                       /MAT/GURSON,
                       /MAT/HILL,
                       /MAT/HILL_TAB,
                       /MAT/PLAS_BRIT,
                       /MAT/PLAS_JOHNS,
                       /MAT/PLAS_TAB,
                       /MAT/PLAS_T3,
                       /MAT/PLAS_ZERIL,
                       /MAT/VOID,
                       /MAT/ZHAO,
                       /MAT/BARLAT2000); 
  }
  //
  FUNCTION(FUNC) {
    X_TITLE     = "Eps min";       Y_TITLE     = "Eps major";
    X_DIMENSION = "DIMENSIONLESS"; Y_DIMENSION = "DIMENSIONLESS";
  }  
  RADIO(ISHELL) {
    ADD(0,"Default");
    ADD(1,"Shell is deleted or cracked, if there is one layer in the failure zone");
    ADD(2,"Layer tensor stress set to 0 if layer in failure zone, and deletion if all layers in failure zone");
    ADD(3,"Shell is deleted only when membrane strain reaches criterion");
    ADD(4,"Criterion is calculated but element is not deleted");
	}
  
  SCALAR(RANI);
  
  RADIO(ISTRAIN) {
    ADD(0,"FLD curve defined in terms of true strain (default)");
    ADD(1,"FLD curve defined in terms of engineering strain");
  }
  
  RADIO(IXFEM) {
    ADD(0,"0: Without XFEM");
    ADD(1,"1: XFEM formulation ");
  }
  if (IXFEM==1) {
  FUNCTION(FCT_ADV) {
    X_TITLE     = "Eps min";       Y_TITLE     = "Eps major";
    X_DIMENSION = "DIMENSIONLESS"; Y_DIMENSION = "DIMENSIONLESS";
   }
 SCALAR(DADV);
  }
  FLAG(ID_CARD_EXIST);
}

*/
FORMAT(radioss2017) {
	HEADER("/FAIL/FLD/%d",mat_id);  

	COMMENT("#   FCT_ID  IFAIL_SH           FCT_IDADV                RANI                DADV   ISTRAIN     IXFEM");
	CARD("%10d%10d          %10d%20lg%20lg%10d%10d",fct_ID,Ifail_sh,fct_IDadv,Rani,Dadv,Istrain,Ixfem);   
 
	if (ID_CARD_EXIST==TRUE)
	{
		COMMENT("#  FAIL_ID") ;
	}
	FREE_CARD(ID_CARD_EXIST,"%10d", _ID_);
}

FORMAT(radioss140) {
	HEADER("/FAIL/FLD/%d",mat_id); 

	COMMENT("#   FCT_ID  IFAIL_SH           FCT_IDADV                                    DADV               IXFEM");
	CARD("%10d%10d          %10d                    %20lg          %10d",fct_ID,Ifail_sh,fct_IDadv,Dadv,Ixfem);   

	if (ID_CARD_EXIST==TRUE)
	{
	 COMMENT("#  FAIL_ID") ;
	}
	FREE_CARD(ID_CARD_EXIST,"%10d", _ID_);
}

FORMAT(radioss130) {
	HEADER("/FAIL/FLD/%d",mat_id);
	COMMENT("#   FCT_ID  IFAIL_SH                                                                           IXFEM");
	CARD("%10d%10d                                                                      %10d",fct_ID,Ifail_sh,Ixfem);   
	
	
	if (ID_CARD_EXIST==TRUE)
	{
		COMMENT("#  FAIL_ID") ;
	}
	FREE_CARD(ID_CARD_EXIST,"%10d", _ID_);
}

FORMAT(radioss120) {
	HEADER("/FAIL/FLD/%d",mat_id);
	COMMENT("#   FCT_ID  IFAIL_SH                                                                           IXFEM");
	CARD("%10d%10d                                                                      %10d",fct_ID,Ifail_sh,Ixfem);
	
}
  

FORMAT(radioss51) {
	HEADER("/FAIL/FLD/%d",mat_id);
		
	COMMENT("#   FCT_ID  IFAIL_SH");
	CARD("%10d%10d",fct_ID,Ifail_sh); 
}
