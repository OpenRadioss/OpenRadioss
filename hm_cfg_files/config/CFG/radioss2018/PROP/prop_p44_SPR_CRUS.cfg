//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Property SPR_CRUS Type44

ATTRIBUTES(COMMON)
{
    MASS                                    = VALUE(FLOAT,  "Frame mass per unit length");
    INERTIA                                 = VALUE(FLOAT,  "Frame inertia per unit length");
    STIFF1                                  = VALUE(FLOAT,  "Contact interface stiffness Kinter = A*E/L");
    SKEW_CSID                               = VALUE(SYSTEM,  "Skew System identifier");
    Icoupling                               = VALUE(INT,  "Coupling Flag");
    Ifiltr                                  = VALUE(INT, "Strain Rate Filtering Flag");
    K11                                     = VALUE(FLOAT,  "Tensile / Compression stiffness, multiplied by L");
    K44                                     = VALUE(FLOAT,  "Torsional stiffness around X axis, multiplied by L");
    K55                                     = VALUE(FLOAT,  "Bending Y stiffness around Y axis, multiplied by L");
    K66                                     = VALUE(FLOAT,  "Bending Z stiffness around Z axis, multiplied by L");
    IDAMP                                   = VALUE(INT, "Damping Flag");
    K5b                                     = VALUE(FLOAT,  "Shear Bending XY stiffness axis, multiplied by L");
    K6c                                     = VALUE(FLOAT,  "Shear Bending XZ stiffness axis, multiplied by ");
    FUN_A1                                  = VALUE(FUNCT,  "Tensile force FUNC versus strain in X Dir");
    FUN_B1                                  = VALUE(FUNCT,  "Initial compression force FUNC versus strain in X-Dir");
    FUN_A2                                  = VALUE(FUNCT,  "Residual compression force FUNC versus strain in X Dir.");
    FScale11                                = VALUE(FLOAT,  "Ordinate Scale Factor for Tensile Functions");
    FUN_B2                                  = VALUE(FUNCT,  "Initial Torsion Moment FUNC Versus Torsion Angle in the + Dir");
    FUN_A3                                  = VALUE(FUNCT,  "Initial Torsion Moment FUNC Versus Torsion Angle in the - Dir");
    FUN_B3                                  = VALUE(FUNCT,  "Residual Torsion Moment FUNC Versus Torsion Angle in the + Dir");
    FUN_A4                                  = VALUE(FUNCT,  "Residual Torsion Moment FUNC Versus Torsion Angle in the - Dir");
    FScale22                                = VALUE(FLOAT,  "Ordinate Scale Factor for Torsion Moment Functions");
    FUN_B4                                  = VALUE(FUNCT,  "Initial Bending Y Moment FUNC Versus Bending Angle in the + Dir for Node 1");
    FUN_A5                                  = VALUE(FUNCT,  "Initial Bending Y Moment FUNC Versus Bending Angle in the - Dir for Node 1");
    FUN_B5                                  = VALUE(FUNCT,  "Residual Bending Y Moment FUNC Versus Bending Angle in the + Dir for Node 1");
    FUN_A6                                  = VALUE(FUNCT,  "Residual Bending Y Moment FUNC Versus Bending Angle in the - Dir");
    FScale33                                = VALUE(FLOAT,  "Ordinate Scale Factor for Bending Y Moment Functions for the Node 1");
    FUN_B6                                  = VALUE(FUNCT,  "Initial Bending Z Moment FUNC Versus Bending Angle in the + Dir for Node 1");
    FUN_C1                                  = VALUE(FUNCT,  "Initial Bending Z Moment FUNC Versus Bending Angle in the - Dir for Node 1");
    FUN_C2                                  = VALUE(FUNCT,  "Residual Bending Z Moment FUNC Versus Bending Angle in the + Dir for Node 1");
    FUN_C3                                  = VALUE(FUNCT,  "Residual Bending Z Moment FUNC Versus Bending Angle in the - Dir");
    FScale12                                = VALUE(FLOAT,  "Ordinate Scale Factor for Bending Z Moment Functions for the Node 1");
    FUN_C4                                  = VALUE(FUNCT,  "Initial Bending Y Moment FUNC Versus Bending Angle in the + Dir for Node 2");
    FUN_C5                                  = VALUE(FUNCT,  "Initial Bending Y Moment FUNC Versus Bending Angle in the - Dir for Node 2");
    FUN_C6                                  = VALUE(FUNCT,  "Residual Bending Y Moment FUNC Versus Bending Angle in the + Dir for Node 2");
    FUN_D1                                  = VALUE(FUNCT,  "Residual Bending Y Moment FUNC Versus Bending Angle in the - Dir");
    FScale23                                = VALUE(FLOAT,  "Ordinate Scale Factor for Bending Y Moment Functions for the Node 2");
    FUN_D2                                  = VALUE(FUNCT,  "Initial Bending Z Moment FUNC Versus Bending Angle in the + Dir for Node 2");
    FUN_D3                                  = VALUE(FUNCT,  "Initial Bending Z Moment FUNC Versus Bending Angle in the - Dir for Node 2");
    FUN_D4                                  = VALUE(FUNCT,  "Residual Bending Z Moment FUNC Versus Bending Angle in the + Dir for Node 2");
    FUN_D5                                  = VALUE(FUNCT,  "Residual Bending Z Moment FUNC Versus Bending Angle in the - Dir");
    FScale13                                = VALUE(FLOAT,  "Ordinate Scale Factor for Bending Z Moment Functions for the Node 2");
    STRAIN1                                 = VALUE(FLOAT,  "Global strain limit in X Dir to switch the elements and neighboring frame elements");
    STRAIN2                                 = VALUE(FLOAT,  "strains in the X-Dir exceed the limit");
    STRAIN3                                 = VALUE(FLOAT,  "shear strains in the XX-Dir (torsion) exceeds the limit");
    STRAIN4                                 = VALUE(FLOAT,  "shear strains in the YY-Dir on node 1 exceeds the limit");
    STRAIN5                                 = VALUE(FLOAT,  "shear strains in the ZZ-Dir on node 1 exceeds the limit");
    STRAIN6                                 = VALUE(FLOAT,  "shear strains in the YY-Dir on node 2 exceeds the limit");
    STRAIN7                                 = VALUE(FLOAT,  "shear strains in the ZZ-Dir on node 2 exceeds the limit");

    FCT_D_X                                 = VALUE(FUNCT, "Damping Force-Elongation Rate Curve for X - DOF");
    FCT_D_Y                                 = VALUE(FUNCT, "Damping Force-Elongation Rate Curve for Y - DOF");
    FCT_D_Z                                 = VALUE(FUNCT, "Damping Force-Elongation Rate Curve for Z - DOF");
    FCT_D_XX                                = VALUE(FUNCT, "Damping Force-Elongation Rate Curve for XX - DOF");
    FCT_D_YY                                = VALUE(FUNCT, "Damping Force-Elongation Rate Curve for YY - DOF");
    FCT_D_ZZ                                = VALUE(FUNCT, "Damping Force-Elongation Rate Curve for ZZ - DOF");
    DSCALE_X                                = VALUE(FLOAT, "Linear Damping or Function Damping Scale Factor for X – DOF");
    DSCALE_Y                                = VALUE(FLOAT, "Linear Damping or Function Damping Scale Factor for Y – DOF");
    DSCALE_Z                                = VALUE(FLOAT, "Linear Damping or Function Damping Scale Factor for Z – DOF");
    DSCALE_XX                               = VALUE(FLOAT, "Linear Damping or Function Damping Scale Factor for XX – DOF");
    DSCALE_YY                               = VALUE(FLOAT, "Linear Damping or Function Damping Scale Factor for YY – DOF");
    DSCALE_ZZ                               = VALUE(FLOAT, "Linear Damping or Function Damping Scale Factor for ZZ – DOF");
    F_X                                     = VALUE(FLOAT, "Abscissa Scale Factor on Force-Elongation Rate Curve X - DOF");
    F_Y                                     = VALUE(FLOAT, "Abscissa Scale Factor on Force-Elongation Rate Curve Y - DOF");
    F_Z                                     = VALUE(FLOAT, "Abscissa Scale Factor on Force-Elongation Rate Curve Z - DOF");
    F_XX                                    = VALUE(FLOAT, "Abscissa Scale Factor on Force-Elongation Rate Curve XX - DOF");
    F_YY                                    = VALUE(FLOAT, "Abscissa Scale Factor on Force-Elongation Rate Curve YY - DOF");
    F_ZZ                                    = VALUE(FLOAT, "Abscissa Scale Factor on Force-Elongation Rate Curve ZZ - DOF");
    
    //Attributes for HM usage
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING,  "Entity_Comments");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Prop_Name_OR_Type                       = VALUE(INT, "");
    IO_FLAG                                 = VALUE(INT, "");
    TYPE_NO                                 = VALUE(STRING, "");
    TITLE                                   = VALUE(STRING, "");
    //
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                             = 9000;
    NUM_COMMENTS                            = 5110;
    COMMENTS                                = 5109;
    CommentEnumField                        = 7951;
    //
    MASS                                    =  167;
    INERTIA                                 = 5156;
    STIFF1                                  = 1131;
    SKEW_CSID                               =  412;
    Icoupling                               = 4906;
    Ifiltr                                  = 6304;
    //
    K11                                     = 4907;
    K44                                     = 4908;
    K55                                     = 4909;
    K66                                     = 4910;
    IDAMP                                   = 2984;
    //
    K5b                                     = 4911;
    K6c                                     = 4912;
    ///
    FUN_A1                                  =   45;
    FUN_B1                                  =  168;
    FUN_A2                                  =  170;
    FScale11                                = 4050;
    //
    FUN_B2                                  =  171;
    FUN_A3                                  =  172;
    FUN_B3                                  =  199;
    FUN_A4                                  =  200;
    FScale22                                = 4051;
    //
    FUN_B4                                  =  224;
    FUN_A5                                  = 1141;
    FUN_B5                                  = 1142;
    FUN_A6                                  = 1175;
    FScale33                                = 4052;
    //
    FUN_B6                                  = 1176;
    FUN_C1                                  = 1189;
    FUN_C2                                  = 1167;
    FUN_C3                                  = 5347;
    FScale12                                = 4053;
    //
    FUN_C4                                  = 5348;
    FUN_C5                                  = 5349;
    FUN_C6                                  = 5350;
    FUN_D1                                  = 8035;
    FScale23                                = 4054;
    //
    FUN_D2                                  = 8036;
    FUN_D3                                  = 8037;
    FUN_D4                                  = 8038;
    FUN_D5                                  = 8039;    
    FScale13                                = 4055;
    //
    STRAIN1                                 = 4914;
    STRAIN2                                 = 4915;
    STRAIN3                                 = 4916;
    STRAIN4                                 = 4917;
    STRAIN5                                 = 4918;
    STRAIN6                                 = 4919;
    STRAIN7                                 = 4920;
    //
    FCT_D_X                                 = 2966;
    FCT_D_Y                                 = 2967;
    FCT_D_Z                                 = 2968;
    FCT_D_XX                                = 2969;
    FCT_D_YY                                = 2970;
    FCT_D_ZZ                                = 2971;
    DSCALE_X                                = 2972;
    DSCALE_Y                                = 2973;
    DSCALE_Z                                = 2974;
    DSCALE_XX                               = 2975;
    DSCALE_YY                               = 2976;
    DSCALE_ZZ                               = 2977;
    F_X                                     = 2978;
    F_Y                                     = 2979;
    F_Z                                     = 2980;
    F_XX                                    = 2981;
    F_YY                                    = 2982;
    F_ZZ                                    = 2983;
    //
    Prop_Name_OR_Type                       = 4537;
    TITLE                                   =   -1;
    TYPE_NO                                 =   -1;
    IO_FLAG                                 =   -1;
}

CHECK(COMMON)
{
    MASS                                    > 0;
}

DEFAULTS(COMMON)
{
    FScale11                                = 1.0;
    FScale12                                = 1.0;
    FScale13                                = 1.0;
    FScale22                                = 1.0;
    FScale23                                = 1.0;
    FScale33                                = 1.0;
    DSCALE_X                                = 1.0;
    DSCALE_Y                                = 1.0;
    DSCALE_Z                                = 1.0;
    DSCALE_XX                               = 1.0;
    DSCALE_YY                               = 1.0;
    DSCALE_ZZ                               = 1.0;
    F_X                                     = 1.0;
    F_Y                                     = 1.0;
    F_Z                                     = 1.0;
    F_XX                                    = 1.0;
    F_YY                                    = 1.0;
    F_ZZ                                    = 1.0;
    Prop_Name_OR_Type                       =   0;
}

GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "1:Hide in Menu/Export");
        ADD(2, "2:Show in Menu/Export");
        ADD(3, "3:Do Not Export");
    }
    if(CommentEnumField == 2)
    {  
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }   
    }
    if( Prop_Name_OR_Type ==2)
    {
        ASSIGN(KEYWORD_STR, "/PROP");
        ASSIGN(KEYWORD_STR, "/TYPE44/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/PROP");
        ASSIGN(KEYWORD_STR, "/SPR_CRUS/");
    }
    //
    SCALAR(MASS)    {DIMENSION="lineic_mass";}
    SCALAR(INERTIA) {DIMENSION="moment_of_inertia_per_unit_length";}
    SCALAR(STIFF1)  {DIMENSION="translation_stiffness";}
    DATA(SKEW_CSID) {/FILTER/Framefix/0/EQ;}
    RADIO(Icoupling)
    {
        ADD(0, "0: Each Element is Computed Independently");
        ADD(1, "1: Coupling of Force and Moment in Any Direction");
    }
    SCALAR(Ifiltr);
    //
    SCALAR(K11)     {DIMENSION="force";}
    SCALAR(K44)     {DIMENSION="ROTATION STIFFNESS PER UNIT LENGTH";}
    SCALAR(K55)     {DIMENSION="ROTATION STIFFNESS PER UNIT LENGTH";}
    SCALAR(K66)     {DIMENSION="ROTATION STIFFNESS PER UNIT LENGTH";}
    RADIO(IDAMP)
    {
        ADD(0, "0:No Damping.");
        ADD(1, "1:With Damping.");
    }
    //
    SCALAR(K5b)     {DIMENSION="ROTATION STIFFNESS PER UNIT LENGTH";}
    SCALAR(K6c)     {DIMENSION="ROTATION STIFFNESS PER UNIT LENGTH";}
    //
  FUNCTION(FUN_A1)
  {
     X_TITLE="Strain";X_DIMENSION="DIMENSIONLESS";
     Y_TITLE="Tensile Force"; Y_DIMENSION="force";
  }
  FUNCTION(FUN_B1)
  {
     X_TITLE="Strain";X_DIMENSION="DIMENSIONLESS";
     Y_TITLE="Initial compression Force"; Y_DIMENSION="force";
  }
  FUNCTION(FUN_A2)
  {
     X_TITLE="Strain";X_DIMENSION="DIMENSIONLESS";
     Y_TITLE="Residual compression Force"; Y_DIMENSION="force";
  }
    SCALAR(FScale11)    {DIMENSION="force";}
    //
  FUNCTION(FUN_B2)
  {
     X_TITLE="Torsion angle";X_DIMENSION="a";
     Y_TITLE="Torsion Moment"; Y_DIMENSION="moment";
  }
  FUNCTION(FUN_A3)
  {
     X_TITLE="Torsion angle";X_DIMENSION="a";
     Y_TITLE="Torsion Moment"; Y_DIMENSION="moment";
  }
  FUNCTION(FUN_B3)
  {
     X_TITLE="Torsion angle";X_DIMENSION="a";
     Y_TITLE="Torsion Moment"; Y_DIMENSION="moment";
  }
  FUNCTION(FUN_A4)
  {
     X_TITLE="Torsion angle";X_DIMENSION="a";
     Y_TITLE="Torsion Moment"; Y_DIMENSION="moment";
  }
    SCALAR(FScale22)    {DIMENSION="moment";}
    //
  FUNCTION(FUN_B4)
  {
     X_TITLE="Bending angle";X_DIMENSION="a";
     Y_TITLE="Bending Y Moment"; Y_DIMENSION="moment";
  }
  FUNCTION(FUN_A5)
  {
     X_TITLE="Bending angle";X_DIMENSION="a";
     Y_TITLE="Bending Y Moment"; Y_DIMENSION="moment";
  }
  FUNCTION(FUN_B5)
  {
     X_TITLE="Bending angle";X_DIMENSION="a";
     Y_TITLE="Bending Y Moment"; Y_DIMENSION="moment";
  }
  FUNCTION(FUN_A6)
  {
     X_TITLE="Bending angle";X_DIMENSION="a";
     Y_TITLE="Bending Y Moment"; Y_DIMENSION="moment";
  }
    SCALAR(FScale33)    {DIMENSION="moment";}
    //
  FUNCTION(FUN_B6)
  {
     X_TITLE="Bending angle";X_DIMENSION="a";
     Y_TITLE="Bending Z Moment"; Y_DIMENSION="moment";
  }
  FUNCTION(FUN_C1)
  {
     X_TITLE="Bending angle";X_DIMENSION="a";
     Y_TITLE="Bending Z Moment"; Y_DIMENSION="moment";
  }
  FUNCTION(FUN_C2)
  {
     X_TITLE="Bending angle";X_DIMENSION="a";
     Y_TITLE="Bending Z Moment"; Y_DIMENSION="moment";
  }
  FUNCTION(FUN_C3)
  {
     X_TITLE="Bending angle";X_DIMENSION="a";
     Y_TITLE="Bending Z Moment"; Y_DIMENSION="moment"; 
  }
    SCALAR(FScale12)    {DIMENSION="moment";}
    //
  FUNCTION(FUN_C4)
  {
     X_TITLE="Bending angle";X_DIMENSION="a";
     Y_TITLE="Bending Y Moment"; Y_DIMENSION="moment";
  }
  FUNCTION(FUN_C5)
  {
     X_TITLE="Bending angle";X_DIMENSION="a";
     Y_TITLE="Bending Y Moment"; Y_DIMENSION="moment";
  }
  FUNCTION(FUN_C6)
  {
     X_TITLE="Bending angle";X_DIMENSION="a";
     Y_TITLE="Bending Y Moment"; Y_DIMENSION="moment";
  }
  FUNCTION(FUN_D1)
  {
     X_TITLE="Bending angle";X_DIMENSION="a";
     Y_TITLE="Bending Y Moment"; Y_DIMENSION="moment";
  }
    SCALAR(FScale23)    {DIMENSION="moment";}
    //
  FUNCTION(FUN_D2)
  {
     X_TITLE="Bending angle";X_DIMENSION="a";
     Y_TITLE="Bending Z Moment"; Y_DIMENSION="moment";
  }
  FUNCTION(FUN_D3)
  {
     X_TITLE="Bending angle";X_DIMENSION="a";
     Y_TITLE="Bending Z Moment"; Y_DIMENSION="moment";
  }
  FUNCTION(FUN_D4)
  {
     X_TITLE="Bending angle";X_DIMENSION="a";
     Y_TITLE="Bending Z Moment"; Y_DIMENSION="moment";
  }
  FUNCTION(FUN_D5)
  {
     X_TITLE="Bending angle";X_DIMENSION="a";
     Y_TITLE="Bending Z Moment"; Y_DIMENSION="moment";
  }
    SCALAR(FScale13)    {DIMENSION="moment";}
    //
    SCALAR(STRAIN1);
    SCALAR(STRAIN2);
    SCALAR(STRAIN3)     {DIMENSION="a";}
    //
    SCALAR(STRAIN4)     {DIMENSION="a";}
    SCALAR(STRAIN5)     {DIMENSION="a";}
    SCALAR(STRAIN6)     {DIMENSION="a";}
    SCALAR(STRAIN7)     {DIMENSION="a";}
    //
    /*mandatory:
    graphical SUPPORT("Support") {
    OBJECTS=(/PART/SPRING);
    ADD(PART,"Parts");
    }
    */
    //
    if(IDAMP==1)
    {
      FUNCTION(FCT_D_X) 
      {
         X_TITLE="Elongation Rate";X_DIMENSION="velocity";
         Y_TITLE="Damping Force"; Y_DIMENSION="force";
         /FILTER/groupEnumField/1/EQ;
      }
        SCALAR(DSCALE_X) {DIMENSION="massFlux";}
        SCALAR(F_X)      {DIMENSION="velocity";}
      FUNCTION(FCT_D_Y) 
      {
         X_TITLE="Elongation Rate";X_DIMENSION="velocity";
         Y_TITLE="Damping Force"; Y_DIMENSION="force";
         /FILTER/groupEnumField/1/EQ;
      }
        SCALAR(DSCALE_Y) {DIMENSION="massFlux";}
        SCALAR(F_Y)      {DIMENSION="velocity";}
      FUNCTION(FCT_D_Z) 
      {
         X_TITLE="Elongation Rate";X_DIMENSION="velocity";
         Y_TITLE="Damping Force"; Y_DIMENSION="force";
         /FILTER/groupEnumField/1/EQ;
      }
        SCALAR(DSCALE_Z) {DIMENSION="massFlux";}
        SCALAR(F_Z)      {DIMENSION="velocity";}
      FUNCTION(FCT_D_XX) 
      {
         X_TITLE="Elongation Rate";X_DIMENSION="f";
         Y_TITLE="Damping Force"; Y_DIMENSION="moment";
         /FILTER/groupEnumField/1/EQ;
      }
        SCALAR(DSCALE_XX) {DIMENSION="QUANTITY OF MOVEMENT";}
        SCALAR(F_XX)      {DIMENSION="f";}
      FUNCTION(FCT_D_YY) 
      {
         X_TITLE="Elongation Rate";X_DIMENSION="f";
         Y_TITLE="Damping Force"; Y_DIMENSION="moment";
         /FILTER/groupEnumField/1/EQ;
      }
        SCALAR(DSCALE_YY) {DIMENSION="QUANTITY OF MOVEMENT";}
        SCALAR(F_YY)      {DIMENSION="f";}
      FUNCTION(FCT_D_ZZ) 
      {
         X_TITLE="Elongation Rate";X_DIMENSION="f";
         Y_TITLE="Damping Force"; Y_DIMENSION="moment";
         /FILTER/groupEnumField/1/EQ;
      }
        SCALAR(DSCALE_ZZ) {DIMENSION="QUANTITY OF MOVEMENT";}
        SCALAR(F_ZZ)      {DIMENSION="f";}
    }
}

// File format for Radioss 2018
FORMAT(radioss2018) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE44/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/SPR_CRUS/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    COMMENT("#             MASS/L           INERTIA/L              Kinter   Skew_Id Icoupling    Ifiltr");
    CARD("%20lg%20lg%20lg%10d%10d%10d",MASS,INERTIA,STIFF1,SKEW_CSID,Icoupling,Ifiltr);
    //
    COMMENT("#               K11L                K44L                K55L                K66L     Idamp");
    CARD("%20lg%20lg%20lg%20lg%10d",K11,K44,K55,K66,IDAMP);
    //
    COMMENT("#               K5bL                K6cL");
    CARD("%20lg%20lg",K5b,K6c);
    //
    COMMENT("#  Fct_X+i   Fct_X-i   Fct_X-r                     F_scaleXY");
    CARD("%10d%10d%10d          %20lg",FUN_A1,FUN_B1,FUN_A2,FScale11);
    //
    COMMENT("# fct_XX+i  fct_XX-i  fct_XX+r  fct_XX-r          Fscale_XXY");
    CARD("%10d%10d%10d%10d%20lg",FUN_B2,FUN_A3,FUN_B3, FUN_A4,FScale22);
    //
    COMMENT("#fct_YY+i fct_YY1-i fct_YY1+r fct_YY1-r         Fscale_YY1Y");
    CARD("%10d%10d%10d%10d%20lg",FUN_B4,FUN_A5,FUN_B5, FUN_A6,FScale33);
    //
    COMMENT("#fct_ZZ1+i fct_ZZ1-i fct_ZZ1+r fct_ZZ1-r         Fscale_ZZ1Y");
    CARD("%10d%10d%10d%10d%20lg",FUN_B6,FUN_C1,FUN_C2, FUN_C3,FScale12);
    //
    COMMENT("#fct_YY2+i fct_YY2-i fct_YY2+r fct_YY2-r         Fscale_YY2Y");
    CARD("%10d%10d%10d%10d%20lg",FUN_C4,FUN_C5,FUN_C6, FUN_D1,FScale23);
    //
    COMMENT("#fct_ZZ2+i fct_ZZ2-i fct_ZZ2+r fct_ZZ2-r         Fscale_ZZ2Y");
    CARD("%10d%10d%10d%10d%20lg",FUN_D2,FUN_D3,FUN_D4, FUN_D5,FScale13);
    //
    COMMENT("#            X_lim_g               X_lim              XX_lim");
    CARD("%20lg%20lg%20lg",STRAIN1,STRAIN2,STRAIN3) ;
    //
    COMMENT("#            YY1_lim             ZZ1_lim             YY2_lim             ZZ2_lim");
    CARD("%20lg%20lg%20lg%20lg",STRAIN4,STRAIN5,STRAIN6,STRAIN7) ;
    //
    if(IDAMP==1)
    {
        //
        COMMENT("#  fct_D_x            Dscale_x                 F_x");
        CARD("%10d%20lg%20lg",FCT_D_X,DSCALE_X,F_X);
        //
        COMMENT("#  fct_D_y            Dscale_y                 F_y");
        CARD("%10d%20lg%20lg",FCT_D_Y,DSCALE_Y,F_Y);
        //
        COMMENT("#  fct_D_z            Dscale_z                 F_z");
        CARD("%10d%20lg%20lg",FCT_D_Z,DSCALE_Z,F_Z);
        //
        COMMENT("# fct_D_xx           Dscale_xx                F_xx");
        CARD("%10d%20lg%20lg",FCT_D_XX,DSCALE_XX,F_XX);
        //
        COMMENT("# fct_D_yy           Dscale_yy                F_yy");
        CARD("%10d%20lg%20lg",FCT_D_YY,DSCALE_YY,F_YY);
        //
        COMMENT("# fct_D_zz           Dscale_zz                F_zz");
        CARD("%10d%20lg%20lg",FCT_D_ZZ,DSCALE_ZZ,F_ZZ);
    }
}

// File format for Radioss 120
FORMAT(radioss120) 
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/PROP/%4s",TYPE_NO);
        if(TYPE_NO == "TYPE" )
        {
            ASSIGN(Prop_Name_OR_Type,2);
        }
    }
    else if(IO_FLAG == 0 && Prop_Name_OR_Type == 2)
    {
        HEADER("/PROP/TYPE44/%d",_ID_);
    }
    else
    {
        HEADER("/PROP/SPR_CRUS/%d",_ID_);
    }
    CARD("%-100s", TITLE);
    COMMENT("#             MASS/L           INERTIA/L              Kinter   Skew_Id Icoupling");
    CARD("%20lg%20lg%20lg%10d%10d",MASS,INERTIA,STIFF1,SKEW_CSID,Icoupling);
    //
    COMMENT("#              K11*L               K44*L               K55*L               K66*L");
    CARD("%20lg%20lg%20lg%20lg",K11,K44,K55,K66);
    //
    COMMENT("#              K5b*L               K6c*L");
    CARD("%20lg%20lg",K5b,K6c);
    //
    COMMENT("#  Fct_X_i   Fct_X-i   Fct_X-r                     F_scaleXY");
    CARD("%10d%10d%10d          %20lg",FUN_A1,FUN_B1,FUN_A2,FScale11);
    //
    COMMENT("# fct_XX+i  fct_XX-i  fct_XX+r  fct_XX-r          Fscale_XXY");
    CARD("%10d%10d%10d%10d%20lg",FUN_B2,FUN_A3,FUN_B3, FUN_A4,FScale22);
    //
    COMMENT("#fct_YY+i fct_YY1-i fct_YY1+r fct_YY1-r         Fscale_YY1Y");
    CARD("%10d%10d%10d%10d%20lg",FUN_B4,FUN_A5,FUN_B5, FUN_A6,FScale33);
    //
    COMMENT("#fct_ZZ1+i fct_ZZ1-i fct_ZZ1+r fct_ZZ1-r         Fscale_ZZ1Y");
    CARD("%10d%10d%10d%10d%20lg",FUN_B6,FUN_C1,FUN_C2, FUN_C3,FScale12);
    //
    COMMENT("#fct_YY2+i fct_YY2-i fct_YY2+r fct_YY2-r         Fscale_YY2Y");
    CARD("%10d%10d%10d%10d%20lg",FUN_C4,FUN_C5,FUN_C6, FUN_D1,FScale23);
    //
    COMMENT("#fct_ZZ2+i fct_ZZ2-i fct_ZZ2+r fct_ZZ2-r         Fscale_ZZ2Y");
    CARD("%10d%10d%10d%10d%20lg",FUN_D2,FUN_D3,FUN_D4, FUN_D5,FScale13);
    //
    COMMENT("#            X_lim_g               X_lim              XX_lim");
    CARD("%20lg%20lg%20lg",STRAIN1,STRAIN2,STRAIN3) ;
    //
    COMMENT("#            YY1_lim             ZZ1_lim             YY2_lim             ZZ2_lim");
    CARD("%20lg%20lg%20lg%20lg",STRAIN4,STRAIN5,STRAIN6,STRAIN7) ;
    //
}
