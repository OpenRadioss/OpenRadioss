//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material law 97 setup file

ATTRIBUTES(COMMON)
{
    KEYWORD_STR                 = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                = SIZE("No. of Comment Lines");
    COMMENTS                    = ARRAY[NUM_COMMENTS](STRING, "Entity_Comments");
    CommentEnumField            = VALUE(INT, "User Comments");
    Refer_Rho                   = VALUE(FLOAT, "Reference Density Used in E.O.S (equation of state)");
    MAT_REFRHO_Option           = VALUE(INT, "RefRho_Option");
    MAT_RHO                     = VALUE(FLOAT, "Initial Density");
    MAT_P0                      = VALUE(FLOAT, "Initial Pressure");
    MAT_PSH                     = VALUE(FLOAT, "Pressure Shift");
    MAT_IBFRAC                  = VALUE(INT, "Burn Fraction Calculation Flag");
    MLAW97_D                    = VALUE(FLOAT, "Detonation Velocity");
    MLAW97_PCJ                  = VALUE(FLOAT, "Chapman Jouguet Pressure");
    MLAW97_E0                   = VALUE(FLOAT, "Detonation Energy per Unit Volume");
    Omega                       = VALUE(FLOAT, "Parameter of Equation of State");
    MLAW97_C                    = VALUE(FLOAT, "Parameter of Equation of State");
    MLAW97_A1                   = VALUE(FLOAT, "A1 Parameter of Equation of State");
    MLAW97_A2                   = VALUE(FLOAT, "A2  Parameter of Equation of State");
    MLAW97_A3                   = VALUE(FLOAT, "A3  Parameter of Equation of State");
    MLAW97_A4                   = VALUE(FLOAT, "A4  Parameter of Equation of State");
    MLAW97_A5                   = VALUE(FLOAT, "A5  Parameter of Equation of State");
    MLAW97_R1                   = VALUE(FLOAT, "R1 Parameter of Equation of State");
    MLAW97_R2                   = VALUE(FLOAT, "R2 Parameter of Equation of State");
    MLAW97_R3                   = VALUE(FLOAT, "R3 Parameter of Equation of State");
    MLAW97_R4                   = VALUE(FLOAT, "R4 Parameter of Equation of State");
    MLAW97_R5                   = VALUE(FLOAT, "R5 Parameter of Equation of State");
    MLAW97_AL1                  = VALUE(FLOAT, "AL1 Parameter of Equation of State");
    MLAW97_AL2                  = VALUE(FLOAT, "AL2 Parameter of Equation of State");
    MLAW97_AL3                  = VALUE(FLOAT, "AL3 Parameter of Equation of State");
    MLAW97_AL4                  = VALUE(FLOAT, "AL4 Parameter of Equation of State");
    MLAW97_AL5                  = VALUE(FLOAT, "AL5 Parameter of Equation of State");
    MLAW97_BL1                  = VALUE(FLOAT, "BL1 Parameter of Equation of State");
    MLAW97_BL2                  = VALUE(FLOAT, "BL2 Parameter of Equation of State");
    MLAW97_BL3                  = VALUE(FLOAT, "BL3 Parameter of Equation of State");
    MLAW97_BL4                  = VALUE(FLOAT, "BL4 Parameter of Equation of State");
    MLAW97_BL5                  = VALUE(FLOAT, "BL5 Parameter of Equation of State");
    MLAW97_RL1                  = VALUE(FLOAT, "RL1 Parameter of Equation of State");
    MLAW97_RL2                  = VALUE(FLOAT, "RL2 Parameter of Equation of State");
    MLAW97_RL3                  = VALUE(FLOAT, "RL3 Parameter of Equation of State");
    MLAW97_RL4                  = VALUE(FLOAT, "RL4 Parameter of Equation of State");
    MLAW97_RL5                  = VALUE(FLOAT, "RL5 Parameter of Equation of State");
    Heat_Inp_opt                = VALUE(INT, "Heat");
    SUBGRP_HEAT_MAT             = VALUE(SUBOBJECT, "");
    THERM_STRESS                = VALUE(INT, "Therm Stress");
    SUBGRP_THERM_STRESS         = VALUE(SUBOBJECT, "");
    ALE_Form                    = VALUE(INT, "Flag for heat transfer formulation");
    SUBGRP_ALE_MAT              = VALUE(SUBOBJECT, "");
    SUBGRP_EULER_MAT            = VALUE(SUBOBJECT, "");
    SUBGRP_EOS                  = VALUE(SUBOBJECT, "");
    EOS_Options                 = VALUE(INT, "Eos Options");
    DUMMY                       = VALUE(STRING, "Dummy variable for Ref_Rho flag");
    IO_FLAG                     = VALUE(INT, "");
    LAW_NO                      = VALUE(STRING, "");
    Mat_Name_OR_LawNo           = VALUE(INT, "");
    TITLE                       = VALUE(STRING, "");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR                 = 9000;
    NUM_COMMENTS                = 5110;
    COMMENTS                    = 5109;
    CommentEnumField            = 7951;
    MAT_REFRHO_Option           = 4285;
    MAT_RHO                     = 118;
    Refer_Rho                   = 4229;
    MAT_P0                      = 1122;
    MAT_PSH                     = 5040;
    MAT_IBFRAC                  = 1415;
    MLAW97_D                    = 3053;
    MLAW97_PCJ                  = 3054;
    MLAW97_E0                   = 3055;
    Omega                       = 4382;
    MLAW97_C                    = 3056;
    MLAW97_A1                   = 3057;
    MLAW97_A2                   = 3058;
    MLAW97_A3                   = 3059;
    MLAW97_A4                   = 3060;
    MLAW97_A5                   = 3061;
    MLAW97_R1                   = 3062;
    MLAW97_R2                   = 3063;
    MLAW97_R3                   = 3064;
    MLAW97_R4                   = 3065;
    MLAW97_R5                   = 3066;
    MLAW97_AL1                  = 3067;
    MLAW97_AL2                  = 3068;
    MLAW97_AL3                  = 3069;
    MLAW97_AL4                  = 3070;
    MLAW97_AL5                  = 3071;
    MLAW97_BL1                  = 3072;
    MLAW97_BL2                  = 3073;
    MLAW97_BL3                  = 3074;
    MLAW97_BL4                  = 3075;
    MLAW97_BL5                  = 3076;
    MLAW97_RL1                  = 3077;
    MLAW97_RL2                  = 3078;
    MLAW97_RL3                  = 3079;
    MLAW97_RL4                  = 3080;
    MLAW97_RL5                  = 3081;
    Heat_Inp_opt                = 4346;
    SUBGRP_HEAT_MAT             = -1;
    THERM_STRESS                = 4555;
    SUBGRP_THERM_STRESS         = -1;
    ALE_Form                    = 4336;
    SUBGRP_ALE_MAT              = -1;
    SUBGRP_EULER_MAT            = -1;
    EOS_Options                 = 2901;
    SUBGRP_EOS                  = -1;
    DUMMY                       = -1;
    Mat_Name_OR_LawNo           = 4538;
    LAW_NO                      = -1;
    IO_FLAG                     = -1;
    TITLE                       = -1;

}
DRAWABLES(COMMON) {
public:
    INITIAL_DENSITY                 = SCALAR(MAT_RHO);
}
CHECK(COMMON)
{
    MAT_RHO > 0.0;
}

DEFAULTS(COMMON)
{
    MAT_P0              = 0.0;
    MAT_PSH             = 0.0;
    MLAW97_A1           = 0.0;
    MLAW97_A2           = 0.0;
    MLAW97_A3           = 0.0;
    MLAW97_A4           = 0.0;
    MLAW97_A5           = 0.0;
    MLAW97_AL1          = 0.0;
    MLAW97_AL2          = 0.0;
    MLAW97_AL3          = 0.0;
    MLAW97_AL4          = 0.0;
    MLAW97_AL5          = 0.0;
    MLAW97_BL1          = 0.0;
    MLAW97_BL2          = 0.0;
    MLAW97_BL3          = 0.0;
    MLAW97_BL4          = 0.0;
    MLAW97_BL5          = 0.0;
    MLAW97_C            = 0.0;
    MLAW97_D            = 0.0;
    MLAW97_E0           = 0.0;
    MLAW97_PCJ          = 0.0;
    MLAW97_R1           = 0.0;
    MLAW97_R2           = 0.0;
    MLAW97_R3           = 0.0;
    MLAW97_R4           = 0.0;
    MLAW97_R5           = 0.0;
    MLAW97_RL1          = 0.0;
    MLAW97_RL2          = 0.0;
    MLAW97_RL3          = 0.0;
    MLAW97_RL4          = 0.0;
    MLAW97_RL5          = 0.0;
    Omega               = 0.0;
    Mat_Name_OR_LawNo   = 0;
}

GUI(COMMON)
{

    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG = TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if (CommentEnumField == 2)
    {
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS, "")
        {
            SCALAR(COMMENTS);
        }
    }
    if( Mat_Name_OR_LawNo == 1)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/JWLB/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW97/");
    }
    FLAG(MAT_REFRHO_Option);
    if (MAT_REFRHO_Option != FALSE)
    {
        SCALAR(Refer_Rho) { DIMENSION="density"; }
    }
mandatory:
    SCALAR(MAT_RHO) { DIMENSION="density"; }
optional:
    SCALAR(MAT_P0);
    SCALAR(MAT_PSH);
    RADIO(MAT_IBFRAC)
    {
        ADD(0, "0: Volumetric Compression + Burning Time");
        ADD(1, "1: Volumetric Compression Only");
        ADD(2, "2: Burning Time Only");
    }
    SCALAR(MLAW97_D)   { DIMENSION = "velocity"; }
    SCALAR(MLAW97_PCJ) { DIMENSION = "pressure"; }
    SCALAR(MLAW97_E0)  { DIMENSION = "pressure"; }
    SCALAR(Omega);
    SCALAR(MLAW97_C)   { DIMENSION = "pressure"; }
    SCALAR(MLAW97_A1)  { DIMENSION = "pressure"; }
    SCALAR(MLAW97_A2)  { DIMENSION = "pressure"; }
    SCALAR(MLAW97_A3)  { DIMENSION = "pressure"; }
    SCALAR(MLAW97_A4)  { DIMENSION = "pressure"; }
    SCALAR(MLAW97_A5)  { DIMENSION = "pressure"; }
    SCALAR(MLAW97_R1);
    SCALAR(MLAW97_R2);
    SCALAR(MLAW97_R3);
    SCALAR(MLAW97_R4);
    SCALAR(MLAW97_R5);
    SCALAR(MLAW97_AL1);
    SCALAR(MLAW97_AL2);
    SCALAR(MLAW97_AL3);
    SCALAR(MLAW97_AL4);
    SCALAR(MLAW97_AL5);
    SCALAR(MLAW97_BL1);
    SCALAR(MLAW97_BL2);
    SCALAR(MLAW97_BL3);
    SCALAR(MLAW97_BL4);
    SCALAR(MLAW97_BL5);
    SCALAR(MLAW97_RL1);
    SCALAR(MLAW97_RL2);
    SCALAR(MLAW97_RL3);
    SCALAR(MLAW97_RL4);
    SCALAR(MLAW97_RL5);

    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt != 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) { SUBTYPES = (/SUBOBJECT/HEAT); }
    }
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS != 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) { SUBTYPES = (/SUBOBJECT/THERM_STRESS); }
    }
    RADIO(EOS_Options)
    {
        ENUM_VALUE_FLAG = TRUE;
        ADD(1, "NONE");
        ADD(2, "1: GRUNEISEN");
        ADD(3, "2: POLYNOMIAL");
        ADD(4, "3: PUFF");
        ADD(5, "4: SESAME");
        ADD(6, "5: TILLOTSON");
        ADD(7, "6: MURNAGHAN");
        ADD(8, "7: OSBORNE");
        ADD(9, "8: LSZK");
        ADD(10, "9: NOBLE-ABEL");
        ADD(11, "10: STIFF-GAS");
        ADD(12, "11: IDEAL-GAS");
    }
    if (EOS_Options > 1)
    {
        SUBOBJECT(SUBGRP_EOS) { SUBTYPES = (/SUBOBJECT/EOS); }
    }
}

GUI(ALE) 
{
optional:
    graphical RADIO(ALE_Form)
    {
        ADD(1, "NONE");
        ADD(2, "ALE");
        ADD(3, "EULER");
    }
    if (ALE_Form == 2)
    {
        SUBOBJECT(SUBGRP_ALE_MAT) { SUBTYPES = (/SUBOBJECT/ALE_MAT); }
    }
    else if (ALE_Form == 3)
    {
        SUBOBJECT(SUBGRP_EULER_MAT) { SUBTYPES = (/SUBOBJECT/EULER); }
    }
}


FORMAT(radioss2018)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1,IMPORT);
    if(IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "JWL" )
        {
            ASSIGN(Mat_Name_OR_LawNo,1);
        }
        else
        {
            ASSIGN(Mat_Name_OR_LawNo,2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 1)
    {
        HEADER("/MAT/JWLB/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/LAW97/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    CARD_PREREAD("                    %20s", DUMMY);
    if (DUMMY != "")
    {
        ASSIGN(MAT_REFRHO_Option, 1, IMPORT);
    }
    else
    {
        ASSIGN(MAT_REFRHO_Option, 0, IMPORT);
    }
    if (MAT_REFRHO_Option != FALSE)
    {
        COMMENT("#              RHO_I               RHO_O");
        CARD("%20lg%20lg", MAT_RHO, Refer_Rho);
    }
    else {
        COMMENT("#              RHO_I");
        CARD("%20lg", MAT_RHO);
    }

    COMMENT("#                 p0                 psH                                                      Ibfrac");
    CARD("%20lg%20lg                                                  %10d", MAT_P0, MAT_PSH, MAT_IBFRAC);

    COMMENT("#                  D                 PCJ                  E0               Omega                   C");
    CARD("%20lg%20lg%20lg%20lg%20lg", MLAW97_D, MLAW97_PCJ, MLAW97_E0, Omega, MLAW97_C);

    COMMENT("#                 A1                  A2                  A3                  A4                  A5");
    CARD("%20lg%20lg%20lg%20lg%20lg", MLAW97_A1, MLAW97_A2, MLAW97_A3, MLAW97_A4, MLAW97_A5);

    COMMENT("#                 R1                  R2                  R3                  R4                  R5");
    CARD("%20lg%20lg%20lg%20lg%20lg", MLAW97_R1, MLAW97_R2, MLAW97_R3, MLAW97_R4, MLAW97_R5);

    COMMENT("#                AL1                 AL2                 AL3                 AL4                 AL5");
    CARD("%20lg%20lg%20lg%20lg%20lg", MLAW97_AL1, MLAW97_AL2, MLAW97_AL3, MLAW97_AL4, MLAW97_AL5);

    COMMENT("#                BL1                 BL2                 BL3                 BL4                 BL5");
    CARD("%20lg%20lg%20lg%20lg%20lg", MLAW97_BL1, MLAW97_BL2, MLAW97_BL3, MLAW97_BL4, MLAW97_BL5);

    COMMENT("#                RL1                 RL2                 RL3                 RL4                 RL5");
    CARD("%20lg%20lg%20lg%20lg%20lg", MLAW97_RL1, MLAW97_RL2, MLAW97_RL3, MLAW97_RL4, MLAW97_RL5);

    if (Heat_Inp_opt != 0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT, /SUBOBJECT/HEAT);
    }
    if (Heat_Inp_opt != 0 && THERM_STRESS != 0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS, /SUBOBJECT/THERM_STRESS);
    }
    if (ALE_Form == 2)
    {
        SUBOBJECTS(SUBGRP_ALE_MAT, /SUBOBJECT/ALE_MAT);
    }
    else if (ALE_Form == 3)
    {
        SUBOBJECTS(SUBGRP_EULER_MAT, /SUBOBJECT/EULER);
    }
    if (EOS_Options > 1)
    {
        SUBOBJECTS(SUBGRP_EOS, /SUBOBJECT/EOS);
    }
}
