//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// Material law 95

ATTRIBUTES(COMMON) 
{
    IO_FLAG                 = VALUE(INT, "");
    NUM_COMMENTS            = SIZE("No. of Comment Lines");
    COMMENTS                = ARRAY[NUM_COMMENTS](STRING, "Entity_Comments");
    CommentEnumField        = VALUE(INT, "User Comments");
    KEYWORD_STR             = VALUE(STRING, "Solver Keyword");
    MAT_RHO                 = VALUE(FLOAT, "[MAT_RHO] Initial Density");
    MAT_C_10                = VALUE(FLOAT, "[MAT_C_10] Material Parameter for Hyperelastic Model");
    MAT_C_01                = VALUE(FLOAT, "[MAT_C_01] Material Parameter for Hyperelastic Model");
    MAT_C_20                = VALUE(FLOAT, "[MAT_C_20] Material Parameter for Hyperelastic Model");
    MAT_C_11                = VALUE(FLOAT, "[MAT_C_11] Material Parameter for Hyperelastic Model");
    MAT_C_02                = VALUE(FLOAT, "[MAT_C_02] Material Parameter for Hyperelastic Model");
    MAT_C_30                = VALUE(FLOAT, "[MAT_C_30] Material Parameter for Hyperelastic Model");
    MAT_C_21                = VALUE(FLOAT, "[MAT_C_21] Material Parameter for Hyperelastic Model");
    MAT_C_12                = VALUE(FLOAT, "[MAT_C_12] Material Parameter for Hyperelastic Model");
    MAT_C_03                = VALUE(FLOAT, "[MAT_C_03] Material Parameter for Hyperelastic Model");
    MAT_Sb                  = VALUE(FLOAT, "[MAT_Sb] Stress Scaling Factor for Network B");
    MAT_D_1                 = VALUE(FLOAT, "[MAT_D_1] Material Parameter 1, for Bulk Modulus Computation");
    MAT_D_2                 = VALUE(FLOAT, "[MAT_D_2] Material Parameter 2, for Bulk Modulus Computation");
    MAT_D_3                 = VALUE(FLOAT, "[MAT_D_3] Material Parameter 3, for Bulk Modulus Computation");
    MLAW95_A                = VALUE(FLOAT, "[MLAW95_A] Effective Creep Strain Rate");
    MLAW95_C                = VALUE(FLOAT, "[MLAW95_C] Exponent Characterizing the Creep Strain Dependence \n of the Effective Creep Strain Rate in Network B, (-1 < MLAW95_C <0)");
    MLAW95_M                = VALUE(FLOAT, "[MLAW95_M] Positive Exponent >1 Characterizing the Effective Stress Dependence of the Effective Creep Strain Rate in Network B");
    MLAW95_KSI              = VALUE(FLOAT, "[MLAW95_KSI] Constant for Regularization of the Creep Strain Rate Near Undeformed State");
    TAU_ref                 = VALUE(FLOAT, "[TAU_ref] Reference stress for the Effective Creep Strain Rate in Network B");    
    Heat_Inp_opt            = VALUE(INT, "Heat");
    SUBGRP_HEAT_MAT         = VALUE(SUBOBJECT, "");
    THERM_STRESS            = VALUE(INT, "Therm Stress");
    SUBGRP_THERM_STRESS     = VALUE(SUBOBJECT, "");
    Mat_Name_OR_LawNo       = VALUE(INT, "");
    TITLE                   = VALUE(STRING, "Enter the title");
    LAW_NO                  = VALUE(STRING, "");
}

SKEYWORDS_IDENTIFIER(COMMON) 
{
    COMMENTS                = 5109;
    CommentEnumField        = 7951;
    NUM_COMMENTS            = 5110;
    KEYWORD_STR             = 9000;
    MAT_RHO                 = 118;
    Heat_Inp_opt            = 4346;
    IO_FLAG                 = -1;
    MAT_C_10                = 3001;
    MAT_C_20                = 3003;
    MAT_C_11                = 3004;
    MAT_C_02                = 3005;
    MAT_C_30                = 3006;         
    MAT_C_21                = 3007;
    MAT_C_12                = 3008;
    MAT_C_03                = 3009;
    MAT_Sb                  = 3010;
    MAT_D_1                 = 3011;
    MAT_D_2                 = 3012;
    MAT_D_3                 = 3013;
    MLAW95_A                = 3014;
    MLAW95_C                = 3015;
    MLAW95_M                = 3016;
    MLAW95_KSI              = 3017;
    MAT_C_01                = 3018;
    SUBGRP_HEAT_MAT         = -1;
    THERM_STRESS            = 4555;
    SUBGRP_THERM_STRESS     = -1;
    Mat_Name_OR_LawNo       = 4538;
    TITLE                   = -1;
    LAW_NO                  = -1;
}
DRAWABLES(COMMON) {
public:
    INITIAL_DENSITY                 = SCALAR(MAT_RHO);
}

DEFAULTS(COMMON)
{

    MAT_C_10             = 0.0;
    MAT_C_01             = 0.0;
    MAT_C_20             = 0.0;
    MAT_C_11             = 0.0;
    MAT_C_02             = 0.0;
    MAT_C_30             = 0.0;
    MAT_C_21             = 0.0;
    MAT_C_12             = 0.0;
    MAT_C_03             = 0.0;
    MAT_Sb               = 0.0;
    MAT_D_1              = 0.0;
    MAT_D_2              = 0.0;
    MAT_D_3              = 0.0;
    MLAW95_A             = 0.0;
    MLAW95_C             = -0.7;
    MLAW95_M             = 1.0;
    MLAW95_KSI           = 0.01;
    CommentEnumField     = 1;
    Heat_Inp_opt         = 0;
    Mat_Name_OR_LawNo    = 0;
    TAU_ref              = 0;
}

CHECK(COMMON)
{
    MLAW95_A >= 0.0;
    MLAW95_C > -1;
    MLAW95_C < 0;
    MLAW95_M >= 1.0;

}


GUI(COMMON)
{
    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG = TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if (CommentEnumField == 2)
    {
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS, "")
        {
            SCALAR(COMMENTS);
        }
    }
    if( Mat_Name_OR_LawNo == 1)
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/BERGSTROM_BOYCE/");
    }
    else
    {
        ASSIGN(KEYWORD_STR, "/MAT");
        ASSIGN(KEYWORD_STR, "/LAW95/");
    }
mandatory:

    SCALAR(MAT_RHO) { DIMENSION="density"; }

optional:
    SCALAR(MAT_C_10) { DIMENSION = "pressure"; }
    SCALAR(MAT_C_01) { DIMENSION = "pressure"; }
    SCALAR(MAT_C_20) { DIMENSION = "pressure"; }
    SCALAR(MAT_C_11) { DIMENSION = "pressure"; }
    SCALAR(MAT_C_02) { DIMENSION = "pressure"; }
    SCALAR(MAT_C_30) { DIMENSION = "pressure"; }
    SCALAR(MAT_C_21) { DIMENSION = "pressure"; }
    SCALAR(MAT_C_12) { DIMENSION = "pressure"; }
    SCALAR(MAT_C_03) { DIMENSION = "pressure"; }
    SCALAR(MAT_Sb)   { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MAT_D_1)  { DIMENSION = "inverse_of_pressure"; }
    SCALAR(MAT_D_2)  { DIMENSION = "inverse_of_pressure"; }
    SCALAR(MAT_D_3)  { DIMENSION = "inverse_of_pressure"; }
    SCALAR(MLAW95_A) { DIMENSION="strain_rate"; }
    SCALAR(MLAW95_C) { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MLAW95_M) { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(MLAW95_KSI) { DIMENSION = "DIMENSIONLESS"; }
    SCALAR(TAU_ref)  { DIMENSION = "PRESSURE"; }


optional:
    graphical FLAG(Heat_Inp_opt);
    if (Heat_Inp_opt != 0) {
        SUBOBJECT(SUBGRP_HEAT_MAT) { SUBTYPES = (/SUBOBJECT/HEAT); }
    }
    graphical FLAG(THERM_STRESS);
    if (THERM_STRESS != 0) {
        SUBOBJECT(SUBGRP_THERM_STRESS) { SUBTYPES = (/SUBOBJECT/THERM_STRESS); }
    }
}

FORMAT(radioss2018)
{
    ASSIGN(IO_FLAG, 0, EXPORT);
    ASSIGN(IO_FLAG, 1, IMPORT);
    if (IO_FLAG == 1)
    {
        HEADER("/MAT/%3s",LAW_NO);
        if(LAW_NO == "BER" )
        {
            ASSIGN(Mat_Name_OR_LawNo,1);
        }
        else
        {
            ASSIGN(Mat_Name_OR_LawNo, 2);
        }
    }
    else if(IO_FLAG == 0 && Mat_Name_OR_LawNo == 1)
    {
        HEADER("/MAT/BERGSTROM_BOYCE/%d",_ID_);
        CARD("%-100s", TITLE);
    }
    else
    {
        HEADER("/MAT/LAW95/%d", _ID_);
        CARD("%-100s", TITLE);
    }
    COMMENT("#              Rho_I");
    CARD("%20lg", MAT_RHO);
    COMMENT("#                C10                 C01                 C20                 C11                 C02");
    CARD("%20lg%20lg%20lg%20lg%20lg", MAT_C_10, MAT_C_01, MAT_C_20, MAT_C_11, MAT_C_02);
    COMMENT("#                C30                 C21                 C12                 C03                  Sb");
    CARD("%20lg%20lg%20lg%20lg%20lg", MAT_C_30, MAT_C_21, MAT_C_12, MAT_C_03, MAT_Sb);
    COMMENT("#                 D1                  D2                  D3");
    CARD("%20lg%20lg%20lg", MAT_D_1, MAT_D_2, MAT_D_3);
    COMMENT("#                  A                   C                   M                 KSI             Tau_ref");
    CARD("%20lg%20lg%20lg%20lg%20lg", MLAW95_A, MLAW95_C, MLAW95_M, MLAW95_KSI,TAU_ref);
    if (Heat_Inp_opt != 0)
    {
        SUBOBJECTS(SUBGRP_HEAT_MAT, /SUBOBJECT/HEAT);
    }
    if (Heat_Inp_opt != 0 && THERM_STRESS != 0)
    {
        SUBOBJECTS(SUBGRP_THERM_STRESS, /SUBOBJECT/THERM_STRESS);
    }
}
