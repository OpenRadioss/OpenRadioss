//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
// --- nbcs.cfg ---

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    //Title Card
    displayname                                 = VALUE(STRING, "Boundary conditions block title", "TITLE");

    //Card 1
    number_of_nodes                             = SIZE("Number of nodes");

    //Trarot
    Tx                                          = ARRAY[number_of_nodes](INT,    "Code for translation TX");
    Ty                                          = ARRAY[number_of_nodes](INT,    "Code for translation TY");
    Tz                                          = ARRAY[number_of_nodes](INT,    "Code for translation TZ");
    OmegaX                                      = ARRAY[number_of_nodes](INT,    "Code for rotation wX");
    OmegaY                                      = ARRAY[number_of_nodes](INT,    "Code for rotation wY");
    OmegaZ                                      = ARRAY[number_of_nodes](INT,    "Code for rotation wZ");

    Skew_ID                                     = ARRAY[number_of_nodes](SYSTEM, "Skew identifier");
    node_ID                                     = ARRAY[number_of_nodes](NODE,   "Node identifier group to which boundary conditions are applied");

    // HM INTERNAL
    KEYWORD_STR                                 = VALUE(STRING, "Solver Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    number_of_nodes                             = -1;

    //Trarot
    Tx                                          = -1;
    Ty                                          = -1;
    Tz                                          = -1;
    OmegaX                                      = -1;
    OmegaY                                      = -1;
    OmegaZ                                      = -1;

    Skew_ID                                     = -1;
    node_ID                                     = -1;

    // HM INTERNAL
    KEYWORD_STR                                 = 9000;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/NBCS/");

    SCALAR(displayname, "nbcs_title")           { DIMENSION = "DIMENSIONLESS" ; }

    SIZE(number_of_nodes,  "number_of_nodes");
    ARRAY(number_of_nodes, "number_of_nodes")
    {
        FLAG(Tx,     "Tx");
        FLAG(Ty,     "Ty");
        FLAG(Tz,     "Tz");
        FLAG(OmegaX, "OmegaX");
        FLAG(OmegaY, "OmegaY");
        FLAG(OmegaZ, "OmegaZ");
        DATA(Skew_ID,"Skew_ID");
        DATA(node_ID,"node_ID");
    }
}

FORMAT(radioss2018)
{
    HEADER("/NBCS/%-d", _ID_);

    //Card 1
    COMMENT("#nbcs_title                                                                                         ");
    CARD("%-100s", displayname);

    //Card 2
    FREE_CARD_LIST(number_of_nodes)
    {
        COMMENT("#   Trarot   Skew_ID   node_ID");
        CARD("   %1d%1d%1d %1d%1d%1d%10d%10d", Tx, Ty, Tz, OmegaX, OmegaY, OmegaZ, Skew_ID, node_ID);
    }
}
