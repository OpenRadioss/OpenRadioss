//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//
//  IMPFLUX

ATTRIBUTES(COMMON) {
        
    entityid        = VALUE(SETS, "Surface identifier")  { SUBTYPES = (/SETS/SURF_IDPOOL); }
    curveid         = VALUE(FUNCT,"Time function identifier for definition of Thermal flux density");
    rad_sensor_id   = VALUE(SENSOR, "Sensor identifier") {SUBTYPES=(/SENSOR/SENSOR_DEFINE);}
    grbrick_id      = VALUE(SETS, "brick group identifier") { SUBTYPES = (/SETS/GRBRIC) ; }

    xscale          = VALUE(FLOAT, "Abscissa scale factor for funct_ID");
    magnitude       = VALUE(FLOAT, "Ordinate scale factor for funct_ID");
    
    rad_tstart      = VALUE(FLOAT, "Start time");
    rad_tstop       = VALUE(FLOAT, "Stop time");
    displayname  = VALUE(STRING, "Title");
}
SKEYWORDS_IDENTIFIER(COMMON)
{
    grbrick_id = -1;
}

GUI(COMMON) {
/*
    graphical SUPPORT("Surface identifier") {
      OBJECTS=(SEGMENT,COMPONENT);
      ADD(entityid,"Surface identifier");
    }
*/
    graphical FUNCTION(curveid) {
    X_TITLE     = "Time"; Y_TITLE     = "Thermal Flux Density";
      if(entityid != NONE) 
      {
         X_DIMENSION = "t"; Y_DIMENSION = "surfacic_power";
      }
      else if(grbrick_id != NONE) 
      {
         X_DIMENSION = "t"; Y_DIMENSION = "volumic_power";
      }
    X_SCALING(xscale);    Y_SCALING(magnitude);
    X_CAN_BE_NEGATIVE = FALSE;
  }
    TOOL(rad_sensor_id);
    
    SCALAR(rad_tstart) { DIMENSION="t";         }
    SCALAR(rad_tstop) { DIMENSION="t";         }
   
}

//File format
FORMAT(radioss2018)
{   
    HEADER("/IMPFLUX/%d",_ID_);
    CARD("%-100s", displayname);
  
    COMMENT("#  SURF_ID  FUNCT_ID SENSOR_ID GRBRIC_ID");    
    CARD("%10d%10d%10d%10d",entityid, curveid, rad_sensor_id, grbrick_id);
    
    COMMENT("#             ASCALE              FSCALE              TSTART               TSTOP");    
    CARD("%20lf%20lf%20lf%20lf",xscale,magnitude,rad_tstart,rad_tstop);
    
}
