//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
//ELEMENT_SEATBELT_RETRACTOR
//
// --- element_seatbelt_retractor.cfg --



ATTRIBUTES(COMMON) {


  //SBPRID Pretensioner ID
    SBRNID	= VALUE(NODE,"Retractor node");
    SBID 	= VALUE(ELEMS, "Seatbelt element 1");
    SID1	= VALUE(SENSOR,"Sensor ID 1");
    SID2	= VALUE(SENSOR,"Sensor ID 2");
    SID3	= VALUE(SENSOR,"Sensor ID 3");
    SID4	= VALUE(SENSOR,"Sensor ID 4");
    //card2
    TDEL	= VALUE(FLOAT,"Time delay after sensor triggers");
    PULL	= VALUE(FLOAT,"Length value");
    LLCID	= VALUE(FUNCT,"Load curve for loading pull out force");
    ULCID	= VALUE(FUNCT,"Load curve for unloading pull out force");
    LFED	= VALUE(FLOAT,"Fed length");

    //HM INTERNAL
    KEYWORD_STR   = VALUE(STRING, "Solver Keyword");
    LSD_TitleOpt  = VALUE(INT,    "Title flag");

    IOFLAG        = VALUE(INT,    "IOFLAG");
    _opt          = VALUE(STRING, "Keyword Option");
    TITLE         = VALUE(STRING, "TITLE");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    SBRNID                                  = -1;
    //HM INTERNAL
    KEYWORD_STR                             = 9000;
    LSD_TitleOpt                            = 90;

    IOFLAG                                  = -1;
    _opt                                    = -1;
    TITLE                                   = -1;
}


GUI(COMMON) {
    ASSIGN(KEYWORD_STR, "*ELEMENT_SEATBELT_RETRACTOR");

    FLAG(LSD_TitleOpt, "Title flag");

    if(LSD_TitleOpt == 1)
    {
        ASSIGN(KEYWORD_STR, "_TITLE");
    }

    DATA(SBRNID);
    DATA(SBID);

    DATA(SID1);
    DATA(SID2);
    DATA(SID3);
    DATA(SID4);
    //card 2
    SCALAR(TDEL){DIMENSION="t";}
    SCALAR(PULL){DIMENSION="l";}
    FUNCTION(LLCID){X_TITLE="Pull out";Y_TITLE="Force";}
    FUNCTION(ULCID){X_TITLE="Pull out";Y_TITLE="Force";}
    SCALAR(LFED){DIMENSION="l";}
}
	

FORMAT(Keyword971_R13.0) {

    ASSIGN(IOFLAG, 0, EXPORT);
    ASSIGN(IOFLAG, 1, IMPORT);

    if(IOFLAG == 0)
    {
        if(LSD_TitleOpt == 0)
        {
            HEADER("*ELEMENT_SEATBELT_RETRACTOR");
        }
        else
        {
            HEADER("*ELEMENT_SEATBELT_RETRACTOR_TITLE");
        }
    }
    else //IMPORT
    {
        HEADER("*ELEMENT_SEATBELT_RETRACTOR%s", _opt);

        if(_opt == "")
        {
            ASSIGN(LSD_TitleOpt, 0, IMPORT);
        }
        else
        {
            ASSIGN(LSD_TitleOpt, 1, IMPORT);
        }
    }

    if(IOFLAG == 0 && LSD_TitleOpt == 1)
    {
        CARD("%-80s", TITLE);
    }
  
    COMMENT("$    SBRID    SBRNID      SBID      SID1      SID2      SID3      SID4");
    CARD("%10d%10d%10d%10d%10d%10d%10d",_ID_,SBRNID,SBID,SID1,SID2,SID3,SID4);

    COMMENT("$     TDEL      PULL     LLCID     ULCID      LFED");
    CARD("%10lg%10lg%10d%10d%10lg",TDEL,PULL,LLCID,ULCID,LFED);
  }
