//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2024 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// LS-Dyna element Setup File
//
// Element Seatbelt Slipring

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    //card 1
    SBID1       = VALUE(ELEMS, "Seatbelt element 1");
    SBID1_SHELL = VALUE(SETS, "Seatbelt element 1");
    SBID2       = VALUE(ELEMS, "Seatbelt element 2");
    SBID2_SHELL = VALUE(SETS, "Seatbelt element 1");
    FC_FLAG     = VALUE(INT, "Dynamic friction coefficent depending on time") ;
    FC          = VALUE(FLOAT,"Coulomb dynamic friction coefficient");	
    FC_FUNC     = VALUE(FUNCT,"Dynamic friction coefficient vs time") ;
    SBRNID_FLAG = VALUE(INT, "Way to define SBRNID, SBID1 and SBID2");
    SBRNID_TEMP = VALUE(INT, "SBRNID is one node or a set node");
    SBRNID      = VALUE(NODE,"Slipring node");
    SBRNID_NODES= VALUE(SETS,"Slipring node set");
    LTIME       = VALUE(FLOAT,"Slipring lock up time");
    FCS_FLAG    = VALUE(INT, "Static friction coefficent depending on time") ;
    FCS         = VALUE(FLOAT,"Static coulomb dynamic friction coefficient");
    FCS_FUNC    = VALUE(FUNCT,"Static friction coefficient vs time") ;
    ONID        = VALUE(NODE, "Orientation Node") ;

    //card 2 
    K       = VALUE(FLOAT, "Coulomb coefficient related to angle alpha") ; 
    FUNCID  = VALUE(FUNCT, "Friction coefficient vs angle") ;
    DIRECT  = VALUE(INT, "Direction of belt movement") ;
    DC      = VALUE(FLOAT, "Decay constant for transition between static and dynamic friction coefficients") ;
    LCNFFD  = VALUE(FUNCT,"Optional curve for normal-force-dependent Coulomb dynamic friction coefficient") ;
    LCNFFS  = VALUE(FUNCT,"Optional curve for normal-force-dependent Coulomb static friction coefficient") ;
}

DEFAULTS(COMMON)
{
}

CHECK(COMMON)
{
}

GUI(COMMON)
{
    //CARD 1
    RADIO(SBRNID_FLAG)
    {
        ADD(0,"Seatbelt elements and Node for definition of the slipring") ;
        ADD(1,"Shell sets and Node set for definition of the slipring") ;
    }
    mandatory:
    if (SBRNID_FLAG==FALSE)
    {
        DATA(SBID1);
        DATA(SBID2);
    }
    else
    {
        graphical SUPPORT("Retractor Shell Set1")
        {
            OBJECTS=(ELEMS);
            ADD(SBID1_SHELL);
        }
        graphical SUPPORT("Retractor Shell Set2")
        {
            OBJECTS=(ELEMS);
            ADD(SBID2_SHELL);
        }
    }

optional:
    FLAG(FC_FLAG) ;
    if (FC_FLAG!=TRUE)
    {
        SCALAR(FC){DIMENSION="DIMENSIONLESS";}
    }
    else
    {
        FUNCTION(FC_FUNC)
        {
            X_TITLE="Time";X_DIMENSION="t";
            Y_TITLE="Dynamic fricion coefficient";
        }
    }
mandatory:
    if (SBRNID_FLAG==FALSE)
    {
        DATA(SBRNID);
    }
    else
    {
        graphical SUPPORT("Retractor Node Set")
        {
            OBJECTS=(NODE);
            ADD(SBRNID_NODES);
        }
    }
optional:
    SCALAR(LTIME){ DIMENSION="t"; }
    if (FCS_FLAG!=TRUE)
    {
        SCALAR(FCS){DIMENSION="DIMENSIONLESS";}
    }
    else
    {
        FUNCTION(FCS_FUNC)
        {
            X_TITLE="Time";X_DIMENSION="t";
            Y_TITLE="Static fricion coefficient";
        }
    }

    DATA(ONID);
    if(ONID!=NONE)
    {
        SCALAR(K) ;
        FUNCTION(FUNCID)
        {
            X_TITLE="theta";X_DIMENSION="DIMENSIONLESS";
            Y_TITLE="Friction coefficient";
        }
        RADIO(DIRECT)
        {
            ADD(0,"belt can move along both directions") ;
            ADD(12,"belt only allowed to slip along the direction of 1st Seatbelt element to 2nd one") ;
            ADD(21,"belt only allowed to slip along the direction of 2nd Seatbelt element to 1st one") ;
        }
        SCALAR(DC);
        FUNCTION(LCNFFD)
        {
            X_TITLE="NormalForce";X_DIMENSION="f";
            Y_TITLE="Dynamic Friction coefficient";
        }
        FUNCTION(LCNFFS)
        {
            X_TITLE="NormalForce";X_DIMENSION="f";
            Y_TITLE="Static Friction coefficient";
        }
    }
}

//File format
FORMAT(Keyword971_R6.1)
{
    COMMENT("$   SBSRID     SBID1     SBID2        FC    SBRNID     LTIME       FCS      ONID");
    CARD_PREREAD("                                        %10d",SBRNID_FLAG) ;
    if (SBRNID_FLAG>=0)
    {
        ASSIGN(SBRNID_FLAG,0,IMPORT) ;
    }
    if (SBRNID_FLAG==FALSE)
    {
        CARD("%10d%10d%10d%10lg%10d%10lg%10lg%10d",_ID_,SBID1,SBID2,SCALAR_OR_OBJECT(FC_FLAG,FC,FC_FUNC),SBRNID,LTIME,SCALAR_OR_OBJECT(FCS_FLAG,FCS,FCS_FUNC),ONID);
    }
    else
    {
        CARD("%10d%10d%10d%10lg%10d%10lg%10lg%10d",_ID_,SBID1_SHELL,SBID2_SHELL,SCALAR_OR_OBJECT(FC_FLAG,FC,FC_FUNC),SCALAR_OR_OBJECT(SBRNID_FLAG,SBRNID_TEMP,SBRNID_NODES),LTIME,SCALAR_OR_OBJECT(FCS_FLAG,FCS,FCS_FUNC),ONID);
    }
    if (ONID!=NONE)
    {
        COMMENT("$        K    FUNCID    DIRECT        DC              LCNFFD    LCNFFS");
        CARD("%10lg%10d%10d%10lg          %10d%10d",K,FUNCID,DIRECT,DC,LCNFFD,LCNFFS);
    }
}
