//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// initial_stress_solid
//
// --- initial_stress_solid_subobj.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES
    //Card 1
    eid                                 = VALUE(MULTIOBJECT,  "Element ID or shell set ID", "EID") { SUBTYPES = (/ELEMS,/SETS); }
	ngaussianpoints                     = VALUE(INT,    "Number of in plane integration points being output","NPLANE");
    nintegrationpoints                  = VALUE(INT,    "Number of integration points through the thickness","NINT");
    nhisv                               = SIZE("Number of additional history variables","NHISV");
    large                               = SIZE("Format size","large");
    iveflag                             = VALUE(INT,    "Initial Volume/energy flag","IVEFLG");
    ialegp                              = VALUE(INT,    "The ALE multi-material group (AMMG) ID","IALEGP");
    nthint                              = SIZE("Number of thermal integration points","nthint");
    nthhsv                              = SIZE("Number of thermal history variables per thermal integration point","nthhsv");

    //Stress Card. Additional Card
    tot_nintegrationpoints                  = SIZE("nintegrationpoints");
    xx                                      = ARRAY[tot_nintegrationpoints](FLOAT, "Define the ij stress component", "SIGXX");
    yy                                      = ARRAY[tot_nintegrationpoints](FLOAT, "Define the ij stress component", "SIGYY");
    zz                                      = ARRAY[tot_nintegrationpoints](FLOAT, "Define the ij stress component", "SIGZZ");
    xy                                      = ARRAY[tot_nintegrationpoints](FLOAT, "Define the ij stress component", "SIGXY");
    yz                                      = ARRAY[tot_nintegrationpoints](FLOAT, "Define the ij stress component", "SIGYZ");
    zx                                      = ARRAY[tot_nintegrationpoints](FLOAT, "Define the ij stress component", "SIGZX");
    eps                                     = ARRAY[tot_nintegrationpoints](FLOAT, "Effective plastic strain", "EPS");

    //History Variable Cards. Additional Cards
    totalhisv                               = SIZE("total hisv");
    //totalhisv =nhisv + iveflag
    //No_addhist_var                        = SIZE("tot_nintegrationpoints � (nhisv + iveflag)");
    hisv                                    = ARRAY[tot_nintegrationpoints][totalhisv](FLOAT, "Number of additional history variables","HISV");

    //Thermal Time History Cards
    //No_hist_var                           = SIZE("nthint � nthhsv");    
    thhsv                                   = ARRAY[nthint][nthhsv](FLOAT, "nth history variable at the thermal integration point");

    //HM INTERNAL
    solverkeyword                           = VALUE(STRING, "Solver Keyword");
    IOFLAG                                  = VALUE(INT,    "IOFLAG");
    set_Option                              = VALUE(INT,    "Enable set keyword");
    option                                  = VALUE(STRING, "Option keyword in IMPORT");
}


DEFAULTS(COMMON)
{
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //INPUT ATTRIBUTES
    //Card 1
    IOFLAG                                  = -1;
    solverkeyword                           = -1;
}

GUI(COMMON)
{
    ASSIGN(solverkeyword, "*INITIAL_STRESS_SOLID");

    FLAG(set_Option, "set_Option");
    if(set_Option == 1)
    {
        ASSIGN(solverkeyword, "_SET");
    }

    DATA(eid);	
    SCALAR(nintegrationpoints);
    SCALAR(nhisv);
    SCALAR(iveflag);
    SCALAR(ialegp);
    SCALAR(large); 
    SCALAR(nthint);
    SCALAR(nthhsv);
    
    //ASSIGN(totalhisv,[nhisv + iveflag]);
    ASSIGN(totalhisv,_ADD(nhisv,iveflag));

    SIZE(tot_nintegrationpoints);
    ARRAY(tot_nintegrationpoints, "")
    {
        SCALAR(xx);         
        SCALAR(yy);         
        SCALAR(zz);         
        SCALAR(xy);         
        SCALAR(yz);         
        SCALAR(zx);         
        SCALAR(eps);
    }
    
    //SIZE(No_addhist_var);
    //ARRAY(No_addhist_var, "")
    //{
    //    SCALAR(hisv);
    //}
    
    //SIZE(No_hist_var);
    //ARRAY( No_hist_var, "")
    //{ 
    //   SCALAR(thhsv);
    //}
}

// File format
FORMAT(Keyword971)
{
   /* if(eid != NONE)
    {*/
        //Card 1
        // IVEFLG     IALEGP need to revisit for this
        COMMENT("$  EID/SID      NINT     NHISV     LARGE    IVEFLG    IALEGP    NTHINT    NTHHSV");
        CARD("%10d%10d%10d%10d%10d%10d%10d%10d", eid, nintegrationpoints, nhisv, large,iveflag,ialegp, nthint, nthhsv);

        ASSIGN(tot_nintegrationpoints,nintegrationpoints, IMPORT);
        //ASSIGN(No_addhist_var,_MUL(tot_nintegrationpoints,totalhisv), EXPORT);
        //ASSIGN(No_hist_var,_MUL(nthint,nthhsv),EXPORT);
    
        if(large == 0)
        {
            CARD_LIST(tot_nintegrationpoints)
            {
                COMMENT("$       SIGXX     SIGYY     SIGZZ     SIGXY     SIGYZ     SIGZX       EPS");
                //Stress Card
                CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg", xx, yy, zz, xy, yz, zx, eps);
            }
        }
        else
        {
            CARD_LIST(tot_nintegrationpoints)
            {
                //Stress Card           
                COMMENT("$        SIGXX           SIGYY           SIGZZ           SIGXY           SIGYZ");
                CARD("%16lg%16lg%16lg%16lg%16lg",xx, yy, zz, xy,yz);
                COMMENT("$           SIGZX             EPS          HISV1          HISV2          HISV3");
                CARD("%16lg%16lg%16lg", zx, eps,CELL_LIST(hisv));
            }
        
            if(nthint > 0)  //
            {
                //Thermal Time History Cards
                CARD_LIST(nthint)
                {
                    //COMMENT("$         THHISV          THHISV          THHISV          THHISV          THHISV");
                    CELL_LIST(nthhsv, "%16lg", thhsv,80);
                }
            }
        }
  /*  }*/
}

// File format
FORMAT(Keyword971_R13.0)
{
   /* if(eid != NONE)
    {*/
        //Card 1
        // IVEFLG     IALEGP need to revisit for this
        COMMENT("$  EID/SID      NINT     NHISV     LARGE    IVEFLG    IALEGP    NTHINT    NTHHSV");
        CARD("%10d%10d%10d%10d%10d%10d%10d%10d", eid, nintegrationpoints, nhisv, large,iveflag,ialegp, nthint, nthhsv);

        ASSIGN(tot_nintegrationpoints,nintegrationpoints, IMPORT);
        //ASSIGN(No_addhist_var,_MUL(tot_nintegrationpoints,totalhisv), EXPORT);
        //ASSIGN(No_hist_var,_MUL(nthint,nthhsv),EXPORT);
        ASSIGN(totalhisv,_ADD(nhisv,iveflag), IMPORT);
    
        if(large == 0)
        {
            CARD_LIST(tot_nintegrationpoints)
            {
                COMMENT("$    SIGXX     SIGYY     SIGZZ     SIGXY     SIGYZ     SIGZX       EPS");
                //Stress Card
                CARD("%10lg%10lg%10lg%10lg%10lg%10lg%10lg", xx, yy, zz, xy, yz, zx, eps);
            }
        }
        else
        {
            CARD_LIST(tot_nintegrationpoints)
            {
                //Stress Card           
                COMMENT("$          SIGXX           SIGYY           SIGZZ           SIGXY           SIGYZ");
                CARD("%16lg%16lg%16lg%16lg%16lg",xx, yy, zz, xy,yz);
                COMMENT("$          SIGZX             EPS           HISV1           HISV2           HISV3");
                CARD("%16lg%16lg%16lg", zx, eps,CELL_LIST(hisv));
            }
        
            if(nthint > 0)  //
            {
                //Thermal Time History Cards
                CARD_LIST(nthint)
                {
                    COMMENT("$         THHISV          THHISV          THHISV          THHISV          THHISV");
                    CELL_LIST(nthhsv, "%16lg", thhsv,80);
                }
            }
        }
  /*  }*/
}