# Compiler predefinition
# Simplify usage for target compilation
#########################################

# No shared libraries
set(BUILD_SHARED_LIBS FALSE)

# General machine flag setting
set ( cppmach "-DCPP_mach=CPP_p4win64" )


# MPI
# ---
set ( mpiver "${MPI}" )

  if ( mpiver STREQUAL "smp")

    #SMP Version
    ############

    set ( cpprel  "-DCPP_rel=00" )
    set (mpi_suf "" )

    # MKL
    set (MKL_flags "-Dmkl")
    set (MKL_libdir "")
    set (MKL_libraries "mkl_intel_lp64.lib mkl_intel_thread.lib mkl_core.lib")


  elseif ( mpiver STREQUAL "impi")

    # Intel MPI version
    ####################

    set (cpprel  "-DCPP_rel=20" )
    set (mpi_suf "_${mpiver}" )

    #MPI     
    set (I_MPI_ROOT "$ENV{I_MPI_ROOT}")
    set (mpi_inc "-I\"${I_MPI_ROOT}/include\" ")
    set (mpi_lib "impi.lib")
    set (mpi_flag "-DMPI ${mpi_inc}")
   
    #MKL
    set (MKL_flags "-Dmkl")
    set (MKL_libdir "")
    set (MKL_libraries "mkl_intel_lp64.lib mkl_intel_thread.lib mkl_core.lib mkl_blacs_intelmpi_lp64.lib mkl_scalapack_lp64.lib")


  else()
    message( FATAL_ERROR "\n ERROR : -mpi=${mpiver} not available for this platform\n\n" )
  endif()

set ( RELNAME ${arch}${mpi_suf})

# Third party libraries
# ---------------------

#H3D
set (h3d_inc "-I${source_directory}/../extlib/h3d/includes")

# Zlib
set (zlib_inc "-I${source_directory}/../extlib/zlib/win64_mt/include")
set (zlib_lib "  ${source_directory}/../extlib/zlib/win64_mt/zlib1.lib")

#
# compiler Flags
# --------------
set (CMAKE_Fortran_FLAGS " " )
set (CMAKE_C_FLAGS " " )
set (CMAKE_CPP_FLAGS " " )
set (CMAKE_CXX_FLAGS " " )

set (CMAKE_Fortran_FLAGS_DEBUG " " )
set (CMAKE_Fortran_FLAGS_RELEASE " " )

set (CMAKE_C_FLAGS_DEBUG " " )
set (CMAKE_C_FLAGS_RELEASE " " )

set (CMAKE_CPP_FLAGS_DEBUG " " )
set (CMAKE_CPP_FLAGS_RELEASE " " )

set (CMAKE_CXX_FLAGS_DEBUG " " )
set (CMAKE_CXX_FLAGS_RELEASE " " )

# Single / Double Precision
# -------------------------
if (precision STREQUAL "sp")
  set (precision_flag "-DMYREAL4")
else (precision STREQUAL "sp")
  set (precision_flag "-DMYREAL8")
endif (precision STREQUAL "sp")

# Modules directory
set(CMAKE_Fortran_MODULE_DIRECTORY ${CMAKE_BINARY_DIR}/CMakeFiles/${EXEC_NAME}/modules )
set(CMAKE_Fortran_MODDIR_FLAG "/MODULE:" )

message (STATUS "modules: ${CMAKE_Fortran_MODULE_DIRECTORY}")

#Generic Compilation flags
###########################

if ( NOT DEFINED WITH_LINEAR_ALGEBRA) 
set ( wo_linalg "-DWITHOUT_LINALG" )
endif()

if ( CMAKE_GENERATOR STREQUAL "Ninja" )
   # /fpp has issues with longer file path.
   # Ninja has already preprocessed the files and CMAKES hardcode /fpp in the beginning.
   # set /nofpp invalidates hardcoded /fpp
   set(FPP_FLAG "/nofpp")
else()
   set(FPP_FLAG "/fpp")
endif()

if ( CMAKE_GENERATOR STREQUAL "Ninja" )
   # /fpp has issues with longer file path.
   # Ninja has already preprocessed the files and CMAKES hardcode /fpp in the beginning.
   # set /nofpp invalidates hardcoded /fpp
   set(FPP_FLAG "/nofpp")
else()
   set(FPP_FLAG "/fpp")
endif()

set(Vect_opt "/nologo ${wo_linalg} /Qaxsse3,COMMON-AVX512 /Qfma- /Qimf-use-svml:true /align:array64byte")
set(Vect_opt_c "/nologo ${wo_linalg} /Qfma- /Qimf-use-svml:true")

set(Vect_precise "/Qopenmp /fp:precise /Qftz ")
set(Fortran "${FPP_FLAG}  /extend-source /assume:buffered_io")

if ( debug STREQUAL "1" )
# Fortran
set_source_files_properties( ${source_files}  PROPERTIES COMPILE_FLAGS "/nologo /Qopenmp /Od /debug:all /Qftz ${FPP_FLAG} /extend-source /assume:buffered_io ${precision_flag} ${Fortran} ${mpi_flag} ${MUMPS_flags} -DMETIS5 ${cppmach} ${cpprel}" )

# C source files

set_source_files_properties(${c_source_files} PROPERTIES COMPILE_FLAGS "/nologo /Qopenmp /Od /debug:all /Qftz ${precision_flag} -DMETIS5 ${h3d_inc} ${mpi_flag} ${MUMPS_flags} ${cppmach} ${cpprel} ${zlib_inc}" )

# CXX source files
set_source_files_properties(${cpp_source_files} PROPERTIES COMPILE_FLAGS "/nologo /Qopenmp /Od /debug:all /Qftz ${precision_flag} -DMETIS5 ${h3d_inc} ${mpi_flag} ${MUMPS_flags} ${cppmach} ${cpprel} ${zlib_inc} /Qstd=c++11" )


elseif ( debug STREQUAL "chkb" )
# Fortran
set_source_files_properties( ${source_files}  PROPERTIES COMPILE_FLAGS "/nologo /Qopenmp /Od /debug:all /check:bounds /check:uninit /Qftz /fpp /extend-source /assume:buffered_io ${precision_flag} ${Fortran} ${mpi_flag} ${MUMPS_flags} -DMETIS5 ${cppmach} ${cpprel}" )

# C source files
set_source_files_properties(${c_source_files} PROPERTIES COMPILE_FLAGS "/nologo /Qopenmp /Od /debug:all /Qftz ${precision_flag} -DMETIS5 ${h3d_inc} ${mpi_flag} ${MUMPS_flags} ${cppmach} ${cpprel} ${zlib_inc}" )

# CXX source files
set_source_files_properties(${cpp_source_files} PROPERTIES COMPILE_FLAGS "/nologo /Qopenmp /Od /debug:all /Qftz ${precision_flag} -DMETIS5 ${h3d_inc} ${mpi_flag} ${MUMPS_flags} ${cppmach} ${cpprel} ${zlib_inc} /Qstd=c++11" )


else ()

# Fortran
set_source_files_properties( ${source_files}  PROPERTIES COMPILE_FLAGS "/nologo /O3 ${Vect_opt} ${precision_flag} ${Vect_precise} ${Fortran} ${mpi_flag}  ${h3d_inc} ${MUMPS_flags} -DMETIS5 ${cppmach} ${cpprel}" )

# C source files
set_source_files_properties(${c_source_files} PROPERTIES COMPILE_FLAGS "/nologo /O2 ${Vect_opt_c} ${precision_flag} ${Vect_precise} ${mpi_flag} ${h3d_inc}  -DMETIS5  ${MUMPS_flags} ${cppmach} ${cpprel} ${zlib_inc}" )

# CXX source files
set_source_files_properties(${cpp_source_files} PROPERTIES COMPILE_FLAGS "/nologo /O2 ${Vect_opt_c} ${precision_flag} ${Vect_precise} ${mpi_flag} ${h3d_inc} -DMETIS5 ${MUMPS_flags} ${cppmach} ${cpprel} ${zlib_inc}" )


endif()

# Linking flags
set (CMAKE_EXE_LINKER_FLAGS " /F1500000000 /STACK:1500000000 ${MKL_libraries} ${mpi_lib} ${zlib_lib} libifport.lib svml_dispmt.lib libifcoremt.lib libmmt.lib Psapi.lib libvcruntime.lib" )

#Libraries
set (LINK "advapi32.lib"  )


# -------------------------------------------------------------------------------------------------------------------------------------------
# Specific set of compilation flag

set (F_O1_AXSSE3 "/nologo /Qaxsse3 /Qopenmp /O1 /fp:precise /Qftz /Qimf-use-svml:true /align:array64byte ${precision_flag} ${Fortran} -DMETIS5 ${mpi_flag} ${cppmach} ${cpprel}")
set (F_O2_AXSSE3 "/nologo /Qaxsse3 /Qopenmp /O2 /fp:precise /Qftz /Qimf-use-svml:true /align:array64byte ${precision_flag} ${Fortran} -DMETIS5 ${mpi_flag} ${cppmach} ${cpprel}")
set (F_O3_AXSSE3 "/nologo /Qaxsse3 /Qopenmp /O3 /fp:precise /Qftz /Qimf-use-svml:true /align:array64byte ${precision_flag} ${Fortran} -DMETIS5 ${mpi_flag} ${cppmach} ${cpprel}")

set (C_BASIC "${cppmach} ${cpprel}")

# ieee.cpp
set_source_files_properties( ${source_directory}/source/output/tools/ieee.cpp PROPERTIES COMPILE_FLAGS ${C_BASIC})
# rad2rad_c.c 
set_source_files_properties( ${source_directory}/source/coupling/rad2rad/rad2rad_c.c PROPERTIES COMPILE_FLAGS ${C_BASIC})

if( no_python STREQUAL "1" )
get_source_file_property( existing_flags ${source_directory}/../common_source/modules/cpp_python_funct.cpp COMPILE_FLAGS)
set_source_files_properties( ${source_directory}/../common_source/modules/cpp_python_funct.cpp PROPERTIES COMPILE_FLAGS  "${exsisting_flags} -DPYTHON_DISABLED" )
endif()

if ( debug STREQUAL "0" )


# forintp.F
set_source_files_properties( ${source_directory}/source/elements/forintp.F  PROPERTIES COMPILE_FLAGS ${F_O1_AXSSE3})

# resol_init.F
set_source_files_properties( ${source_directory}/source/engine/resol_init.F PROPERTIES COMPILE_FLAGS ${F_O1_AXSSE3})

# cbasumg3.F
set_source_files_properties( ${source_directory}/source/elements/shell/coqueba/cbasumg3.F PROPERTIES COMPILE_FLAGS ${F_O2_AXSSE3})

# i21mainf.F
set_source_files_properties( ${source_directory}/source/interfaces/int21/i21mainf.F PROPERTIES COMPILE_FLAGS ${F_O3_AXSSE3})

# redkey0.F
set_source_files_properties( ${source_directory}/source/input/redkey0.F PROPERTIES COMPILE_FLAGS ${F_O1_AXSSE3})

# resol.F
set_source_files_properties( ${source_directory}/source/engine/resol.F PROPERTIES COMPILE_FLAGS ${F_O2_AXSSE3})

# i3fri3 / compiler issue in routine after new interface buffer development 
set_source_files_properties( ${source_directory}/source/interfaces/inter3d/i3fri3.F PROPERTIES COMPILE_FLAGS ${F_O1_AXSSE3})

# arralloc / compiler issue (intel 2018.1.163)
set_source_files_properties( ${source_directory}/source/output/restart/arralloc.F PROPERTIES COMPILE_FLAGS ${F_O2_AXSSE3})

# spbuc3.F
set_source_files_properties( ${source_directory}/source/elements/sph/spbuc3.F PROPERTIES COMPILE_FLAGS ${F_O3_AXSSE3})

# spclasv.F
set_source_files_properties( ${source_directory}/source/elements/sph/spclasv.F PROPERTIES COMPILE_FLAGS ${F_O3_AXSSE3})

# i24cor3t.F
set_source_files_properties( ${source_directory}/source/interfaces/intsort/i24cor3t.F PROPERTIES COMPILE_FLAGS ${F_O3_AXSSE3})
 
# i25cor3t.F
set_source_files_properties( ${source_directory}/source/interfaces/intsort/i25cor3t.F PROPERTIES COMPILE_FLAGS ${F_O3_AXSSE3})

# i11cor3.F
set_source_files_properties( ${source_directory}/source/interfaces/int11/i11cor3.F PROPERTIES COMPILE_FLAGS ${F_O3_AXSSE3})

# i11pen3.F
set_source_files_properties( ${source_directory}/source/interfaces/intsort/i11pen3.F PROPERTIES COMPILE_FLAGS ${F_O3_AXSSE3})

# i7cor3t.F
set_source_files_properties( ${source_directory}/source/interfaces/int07/i7cor3t.F PROPERTIES COMPILE_FLAGS ${F_O3_AXSSE3})

# i20cor3t.F
set_source_files_properties( ${source_directory}/source/interfaces/int20/i20cor3t.F PROPERTIES COMPILE_FLAGS ${F_O3_AXSSE3})

# i23cor3t.F
set_source_files_properties( ${source_directory}/source/interfaces/int23/i23cor3t.F PROPERTIES COMPILE_FLAGS ${F_O3_AXSSE3})

# i20sto.F
set_source_files_properties( ${source_directory}/source/interfaces/intsort/i20sto.F PROPERTIES COMPILE_FLAGS ${F_O3_AXSSE3})

# sigeps44c.F
set_source_files_properties( ${source_directory}/source/materials/mat/mat044/sigeps44c.F PROPERTIES COMPILE_FLAGS ${F_O3_AXSSE3})

# i25pen3_e2s.F
set_source_files_properties( ${source_directory}/source/interfaces/intsort/i25pen3_e2s.F PROPERTIES COMPILE_FLAGS ${F_O3_AXSSE3})

# spmd_i7tool.F
set_source_files_properties( ${source_directory}/source/mpi/interfaces/spmd_i7tool.F PROPERTIES COMPILE_FLAGS ${F_O1_AXSSE3})

# admmap4.F / compiler issue
set_source_files_properties( ${source_directory}/source/model/remesh/admmap4.F PROPERTIES COMPILE_FLAGS ${F_O2_AXSSE3})


# fvm airbags           
set_source_files_properties( ${source_directory}/source/airbag/fv_up_switch.F PROPERTIES COMPILE_FLAGS ${F_O1_AXSSE3})
set_source_files_properties( ${source_directory}/source/airbag/fvbag.F PROPERTIES COMPILE_FLAGS ${F_O1_AXSSE3})
set_source_files_properties( ${source_directory}/source/airbag/fvbag0.F PROPERTIES COMPILE_FLAGS ${F_O1_AXSSE3})
set_source_files_properties( ${source_directory}/source/airbag/fvbag1.F PROPERTIES COMPILE_FLAGS ${F_O1_AXSSE3})
set_source_files_properties( ${source_directory}/source/airbag/fvbag2.F PROPERTIES COMPILE_FLAGS ${F_O1_AXSSE3})

endif()



