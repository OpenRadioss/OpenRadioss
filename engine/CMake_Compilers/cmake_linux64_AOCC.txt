# Compiler predefinition
# Simplify usage for target compilation
#########################################


# Executable name
# ---------------

# Note that AOCC compiler's advanced optimization flags such as march=zen3 (or zen4) can be passed 
# by using -addflag option with the build_script.sh


# General machine flag setting
set ( cppmach "-DCPP_mach=CPP_p4linux964" ) 
set ( cpprel  "-DCPP_rel=96" )


# MPI
# ---
if ( DEFINED MPI )
  set ( mpiver "${MPI}" )
  if ( mpiver STREQUAL "smp")
     set (mpi_suf "" )
  elseif ( mpiver STREQUAL "ompi")

      set (mpi_inc "-I/opt/openmpi/include/")
      set (mpi_lib "-L/opt/openmpi/lib -lmpi -lmpi_mpifh" )

    if (mpi_os STREQUAL "1")
      
      set (mpi_inc " ")
      set (mpi_lib "-lmpi -lmpi_mpifh" )
    else()
      if ( DEFINED mpi_root )
        set (mpi_inc "-I${mpi_root}/include/")
        set (mpi_lib "-L${mpi_root}/lib -lmpi -lmpi_mpifh" )        
      else()
        set (mpi_inc "-I/opt/openmpi/include/")
        set (mpi_lib "-L/opt/openmpi/lib -lmpi -lmpi_mpifh" )

        if ( DEFINED mpi_incdir )
            set (mpi_inc "-I${mpi_incdir}")
        endif()
        if ( DEFINED mpi_libdir )
            set (mpi_lib "-L${mpi_libdir} -lmpi -lmpi_mpifh")
        endif()

      endif()
    endif()

    set (mpi_suf "_${mpiver}" )
    set (mpi_flag "-DMPI ${mpi_inc}")
  else()
    message( FATAL_ERROR "\n ERROR : -mpi=${mpiver} not available for this platform\n\n" )
  endif()
endif ()

set ( RELNAME ${arch}${mpi_suf}  )

# Third party libraries
# ---------------------

#H3D
set (h3d_inc "-I${source_directory}/../extlib/h3d/includes")

#ZLIB
set (zlib_inc "-I${source_directory}/../extlib/zlib/linux64/include")
set (zlib_lib "${source_directory}/../extlib/zlib/linux64/lib/libz.a")

#Lapack
set (lapack_lib "${source_directory}/../extlib/lapack-3.10.0/lib_linux64_AOCC/liblapack.a ${source_directory}/../extlib/lapack-3.10.0/lib_linux64_AOCC/libblas.a  ${source_directory}/../extlib/lapack-3.10.0/lib_linux64_gf/libtmglib.a")

#
# compiler Flags
# --------------
set (CMAKE_Fortran_FLAGS_DEBUG " " )
set (CMAKE_Fortran_FLAGS_RELEASE " " )

# Single / Double Precision
# -------------------------
if (precision STREQUAL "sp")
  set (precision_flag "-DMYREAL4")
else (precision STREQUAL "sp")
  set (precision_flag "-DMYREAL8")
endif (precision STREQUAL "sp")

# Modules directory
set(CMAKE_Fortran_MODULE_DIRECTORY ${CMAKE_BINARY_DIR}/CMakeFiles/modules )
set(CMAKE_Fortran_MODDIR_FLAG "-J" )

message (STATUS "modules: ${CMAKE_Fortran_MODULE_DIRECTORY}")

#Generic Compilation flags
###########################

if ( NOT DEFINED WITH_LINEAR_ALGEBRA) 
set ( wo_linalg "-DWITHOUT_LINALG" )
endif()

set ( opt_flag "  ${wo_linalg} -DCOMP_AOCC -ffp-contract=off -frounding-math -fopenmp -fno-unsafe-math-optimizations -fno-fast-math -Wno-null-conversion" )

if ( sanitize STREQUAL "1" )
set( FSANITIZE "-fsanitize=address -DSANITIZE") 
endif()


if ( debug STREQUAL "1" )
# Fortran

set_source_files_properties(${source_files}  PROPERTIES COMPILE_FLAGS "${FSANITIZE} -O0 -g  -Wunused ${opt_flag} ${precision_flag} ${cppmach} ${cpprel} -DCPP_comp=f90 -Mextend  ${mpi_flag} ${ADF}  " )

# C source files
set_source_files_properties(${c_source_files} PROPERTIES COMPILE_FLAGS "${FSANITIZE} ${h3d_inc} ${zlib_inc} ${precision_flag}  ${cppmach} ${cpprel} -O0 -g  -fopenmp " )

# CXX source files
set_source_files_properties(${cpp_source_files} PROPERTIES COMPILE_FLAGS "${FSANITIZE} ${h3d_inc} ${zlib_inc} ${precision_flag} ${cppmach} ${cpprel}  -O0 -g -fopenmp -std=c++11  " )

else ()

# Fortran

set_source_files_properties( ${source_files}  PROPERTIES COMPILE_FLAGS " -O3  ${opt_flag} ${precision_flag} ${cppmach} ${cpprel} -DCPP_comp=f90 -Mextend ${mpi_flag} ${ADF} " )

# C source files
set_source_files_properties(${c_source_files} PROPERTIES COMPILE_FLAGS " -O3 ${h3d_inc} ${zlib_inc} ${opt_flag} ${precision_flag} ${cppmach} ${cpprel} " )

# CXX source files
set_source_files_properties(${cpp_source_files} PROPERTIES COMPILE_FLAGS " -O3  ${h3d_inc} ${zlib_inc} ${opt_flag} ${precision_flag} ${cppmach} ${cpprel} -std=c++11  " )

endif()

# Linking flags
set (CMAKE_EXE_LINKER_FLAGS "-rdynamic -fopenmp  -ldl -lrt ${zlib_lib} -lstdc++ ${FSANITIZE}  " )

#Libraries
if ( static_link STREQUAL "1" )
  set (LINK "rt ${mpi_lib} -ldl -static-libgfortran -static-libstdc++ -static-libgcc -Wunused-function"  )
else()
  set (LINK "rt ${mpi_lib} -ldl -Wunused-function"  )
endif()

# -------------------------------------------------------------------------------------------------------------------------------------------
# Specific set of compilation flag
if ( NOT debug STREQUAL "1" )

set (F_O0_compiler_flags " -O0 ${opt_flag} ${precision_flag} ${cppmach} ${cpprel} -DCPP_comp=f90 -Mextend  ${mpi_flag} ${ADF} ")
set (F_O1_compiler_flags " -O1 ${opt_flag} ${precision_flag} ${cppmach} ${cpprel} -DCPP_comp=f90 -Mextend  ${mpi_flag} ${ADF} ")
set (F_O2_compiler_flags " -O2 ${opt_flag} ${precision_flag} ${cppmach} ${cpprel} -DCPP_comp=f90 -Mextend  ${mpi_flag} ${ADF} ")
set (C_O1_compiler_flags " -O1 ${opt_flag} ${precision_flag} ${cppmach} ${cpprel} ${zlib_inc} ${mpi_flag} ${ADF} ")

# resol_init.F
set_source_files_properties( ${source_directory}/source/engine/resol_init.F PROPERTIES COMPILE_FLAGS ${F_O1_compiler_flags} )

# resol.F
set_source_files_properties( ${source_directory}/source/engine/resol.F PROPERTIES COMPILE_FLAGS ${F_O2_compiler_flags} )

# arralloc.F
set_source_files_properties( ${source_directory}/source/output/restart/arralloc.F PROPERTIES COMPILE_FLAGS ${F_O2_compiler_flags} )

# m1lawp.F
set_source_files_properties( ${source_directory}/source/materials/mat/mat001/m1lawp.F PROPERTIES COMPILE_FLAGS ${F_O1_compiler_flags} )

# cbasumg3.F
set_source_files_properties( ${source_directory}/source/elements/shell/coqueba/cbasumg3.F PROPERTIES COMPILE_FLAGS ${F_O2_compiler_flags} )

# redkey0.F
set_source_files_properties( ${source_directory}/source/input/redkey0.F PROPERTIES COMPILE_FLAGS ${F_O1_compiler_flags} )

# i3fri3.F
set_source_files_properties( ${source_directory}/source/interfaces/inter3d/i3fri3.F PROPERTIES COMPILE_FLAGS ${F_O1_compiler_flags} )

# dsgri7.F
set_source_files_properties( ${source_directory}/source/implicit/dsolve/dsgri7.F PROPERTIES COMPILE_FLAGS ${F_O2_compiler_flags} )

# i11cor3.F
set_source_files_properties( ${source_directory}/source/interfaces/int11/i11cor3.F PROPERTIES COMPILE_FLAGS ${F_O2_compiler_flags} )

# i11pen3.F
set_source_files_properties( ${source_directory}/source/interfaces/int11/i11pen3.F PROPERTIES COMPILE_FLAGS ${F_O2_compiler_flags} )

# i7cor3t.F
set_source_files_properties( ${source_directory}/source/interfaces/int07/i7cor3t.F PROPERTIES COMPILE_FLAGS ${F_O2_compiler_flags} )

# i20cor3t.F
set_source_files_properties( ${source_directory}/source/interfaces/int20/i20cor3.F PROPERTIES COMPILE_FLAGS ${F_O2_compiler_flags} )

# i20sto.F
set_source_files_properties( ${source_directory}/source/interfaces/intsort/i20sto.F PROPERTIES COMPILE_FLAGS ${F_O2_compiler_flags} )

# i23cor3t.F
set_source_files_properties( ${source_directory}/source/interfaces/int23/i23cort3.F PROPERTIES COMPILE_FLAGS ${F_O2_compiler_flags} )

# i24cor3t.F
set_source_files_properties( ${source_directory}/source/interfaces/int24/i24cort3.F PROPERTIES COMPILE_FLAGS ${F_O2_compiler_flags} )

# i25cor3t.F
set_source_files_properties( ${source_directory}/source/interfaces/int25/i25cort3.F PROPERTIES COMPILE_FLAGS ${F_O2_compiler_flags} )

# spbuc3.F
set_source_files_properties( ${source_directory}/source/elements/sph/spbuc3.F PROPERTIES COMPILE_FLAGS ${F_O2_compiler_flags} )

# spclasv.F
set_source_files_properties( ${source_directory}/source/elements/sph/spclasv.F PROPERTIES COMPILE_FLAGS ${F_O2_compiler_flags} )

# spclasv.F
set_source_files_properties( ${source_directory}/source/coupling/rad2rad/rad2rad_c.c PROPERTIES COMPILE_FLAGS ${C_O1_compiler_flags} )


endif()


