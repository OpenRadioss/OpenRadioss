Copyright>        OpenRadioss
Copyright>        Copyright (C) 1986-2024 Altair Engineering Inc.
Copyright>
Copyright>        This program is free software: you can redistribute it and/or modify
Copyright>        it under the terms of the GNU Affero General Public License as published by
Copyright>        the Free Software Foundation, either version 3 of the License, or
Copyright>        (at your option) any later version.
Copyright>
Copyright>        This program is distributed in the hope that it will be useful,
Copyright>        but WITHOUT ANY WARRANTY; without even the implied warranty of
Copyright>        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
Copyright>        GNU Affero General Public License for more details.
Copyright>
Copyright>        You should have received a copy of the GNU Affero General Public License
Copyright>        along with this program.  If not, see <https://www.gnu.org/licenses/>.
Copyright>
Copyright>
Copyright>        Commercial Alternative: Altair Radioss Software
Copyright>
Copyright>        As an alternative to this open-source version, Altair also offers Altair Radioss
Copyright>        software under a commercial license.  Contact Altair to discuss further if the
Copyright>        commercial version may interest you: https://www.altair.com/radioss/.
Chd|====================================================================
Chd|  INIT_JOINT                    source/constraints/general/cyl_joint/init_joint.F
Chd|-- called by -----------
Chd|        LECTUR                        source/starter/lectur.F       
Chd|-- calls ---------------
Chd|        JOINT_MOD                     share/modules1/joint_mod.F    
Chd|====================================================================
        SUBROUTINE INIT_JOINT(NJOINT)
!$COMMENT
!       SPLIT_JOINT description
!       initialization of CYL_JOIN structure
!       
!       SPLIT_JOINT organization :
!       loop over the joint & initialization
!$ENDCOMMENT
C-----------------------------------------------
C   M o d u l e s
C-----------------------------------------------
      USE JOINT_MOD
C-----------------------------------------------
C   I m p l i c i t   T y p e s
C-----------------------------------------------
#include      "implicit_f.inc"
C-----------------------------------------------
C   C o m m o n   B l o c k s
C-----------------------------------------------
#include      "com01_c.inc"
C-----------------------------------------------
C   D u m m y   A r g u m e n t s
C-----------------------------------------------
        INTEGER, INTENT(in) :: NJOINT
C-----------------------------------------------
C   L o c a l   V a r i a b l e s
C-----------------------------------------------
        INTEGER :: I
C-----------------------------------------------
C   E x t e r n a l   F u n c t i o n s
C-----------------------------------------------
C=======================================================================

        DO I=1,NJOINT
            CYL_JOIN(I)%PROC_MAIN = -1        !   proc main
            CYL_JOIN(I)%NUMBER_PROC = 0         !   number of proc 
            CYL_JOIN(I)%NB_SECONDARY_NODE = 0   !   number of secondary node
            ALLOCATE( CYL_JOIN(I)%NB_NODE(NSPMD) )
            CYL_JOIN(I)%NB_NODE(1:NSPMD) = 0    !   number of node per proc
        ENDDO

        RETURN
        END SUBROUTINE INIT_JOINT
