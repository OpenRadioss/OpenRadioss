# Compiler predefinition
# Simplify usage for target compilation
#########################################


# Executable name
# ---------------

# Note that AOCC compiler's advanced optimization flags such as march=zen3 (or zen4) can be passed 
# by using -addflag option with the build_script.sh


set ( RELNAME ${arch}  )


# General machine flag setting
set ( cppmach "-DCPP_mach=CPP_p4linux964 -DCOMP_AOCC" )
set ( cpprel  "-DCPP_rel=96" )


# Third party libraries
# ---------------------

#hm_reader
set ( reader_lib "-L${source_directory}/../extlib/hm_reader/linux64/ -lhm_reader_linux64 ${source_directory}/../extlib/hm_reader/linux64/libapr-1.so.0 "  )


#Lapack
set (lapack_lib "${source_directory}/../extlib/lapack-3.10.0/lib_linux64_AOCC/liblapack.a ${source_directory}/../extlib/lapack-3.10.0/lib_linux64_AOCC/libblas.a  ${source_directory}/../extlib/lapack-3.10.0/lib_linux64_gf/libtmglib.a")

#metis
set (metis_lib "${source_directory}/../extlib/metis/linux64/libmetis_linux64_gcc.a")

#ZLIB
set (zlib_inc "-I${source_directory}/../extlib/zlib/linux64/include")
set (zlib_lib "${source_directory}/../extlib/zlib/linux64/lib/libz.a")

#
# compiler Flags
# --------------
set (CMAKE_Fortran_FLAGS_DEBUG " " )
set (CMAKE_Fortran_FLAGS_RELEASE " " )

set (CMAKE_C_FLAGS_DEBUG " " )
set (CMAKE_C_FLAGS_RELEASE " " )

set (CMAKE_CPP_FLAGS_DEBUG " " )
set (CMAKE_CPP_FLAGS_RELEASE " " )

# Single / Double Precision
# -------------------------
if (precision STREQUAL "sp")
  set (precision_flag "-DMYREAL4")
else (precision STREQUAL "sp")
  set (precision_flag "-DMYREAL8")
endif (precision STREQUAL "sp")

# Modules directory
set(CMAKE_Fortran_MODULE_DIRECTORY ${CMAKE_BINARY_DIR}/CMakeFiles/modules )
set(CMAKE_Fortran_MODDIR_FLAG "-J" )

message (STATUS "modules: ${CMAKE_Fortran_MODULE_DIRECTORY}")

#Generic Compilation flags
###########################

if ( sanitize STREQUAL "1" )
set( FSANITIZE "-fsanitize=address -DSANITIZE") 
endif()

if ( debug STREQUAL "1" )

# Fortran
set_source_files_properties( ${source_files}  PROPERTIES COMPILE_FLAGS "${FSANITIZE} ${precision_flag} -DMETIS5 ${cppmach} ${cpprel} -DCPP_comp=f90 -DCOMP_AOCC=1  -g -O0 -ffp-contract=off -frounding-math -fopenmp -Mextend -Mbackslash ${ADF} " )

# C source files
set_source_files_properties(${c_source_files} PROPERTIES COMPILE_FLAGS "${FSANITIZE} ${precision_flag} -DMETIS5 ${cppmach} ${cpprel} ${zlib_inc} -O0 -g -fopenmp " )

# CXX source files
set_source_files_properties(${cpp_source_files} PROPERTIES COMPILE_FLAGS "${FSANITIZE} ${precision_flag} -DMETIS5 ${cppmach} ${cpprel} ${zlib_inc} -O0 -g  -fopenmp -std=c++11  " )

else ()

# Fortran
set_source_files_properties( ${source_files}  PROPERTIES COMPILE_FLAGS " -O3  ${precision_flag} -DMETIS5 ${cppmach} ${cpprel} -DCPP_comp=f90 -DCOMP_AOCC=1  -O3 -ffp-contract=off -frounding-math -fopenmp -Mextend  -Mbackslash ${ADF} " )

# C source files
set_source_files_properties(${c_source_files} PROPERTIES COMPILE_FLAGS "${precision_flag} -DMETIS5 ${cppmach} ${cpprel} ${zlib_inc} -O3 -fopenmp " )

# CXX source files
set_source_files_properties(${cpp_source_files} PROPERTIES COMPILE_FLAGS "${precision_flag} -DMETIS5 ${cppmach} ${cpprel} ${zlib_inc} -O3 -fopenmp -std=c++11  " )

endif()

# Linking flags
set (CMAKE_EXE_LINKER_FLAGS " -rdynamic -no-pie -O2 -fopenmp ${FSANITIZE}" )

#Libraries
if ( static_link STREQUAL "1" )
set (LINK "dl  ${flexpipe_lib} ${metis_lib} ${reader_lib}  ${lapack_lib} ${zlib_lib} -ldl -static-libgfortran -static-libstdc++ -static-libgcc -Wunused-function"  )
else()
set (LINK "dl  ${flexpipe_lib} ${metis_lib} ${reader_lib}  ${lapack_lib} ${zlib_lib} -ldl -Wunused-function"  )
endif()

# -------------------------------------------------------------------------------------------------------------------------------------------
# Specific set of compilation flag

set (F_O0_compiler_flags " -O0 ${precision_flag} -DMETIS5 ${cppmach} ${cpprel}  -Mextend -Mbackslash ${portability}")
if ( debug STREQUAL "0" )
#inimsg.F
set_source_files_properties( ${source_directory}/source/output/message/inimsg.F PROPERTIES COMPILE_FLAGS ${F_O0_compiler_flags} )
endif()
